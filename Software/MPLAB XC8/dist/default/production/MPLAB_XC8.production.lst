

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Jul 10 21:57:11 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.43
    34                           ; Generated 25/07/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC12F1822 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0117                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011D                     	;# 
   118  011D                     	;# 
   119  018C                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0391                     	;# 
   165  0392                     	;# 
   166  0393                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183                           
   184                           	psect	stringtext1
   185  0718                     __pstringtext1:	
   186  0718                     _ki:	
   187  0718  34D7               	retlw	215
   188  0719  3423               	retlw	35
   189  071A  343D               	retlw	61
   190  071B                     __end_of_ki:	
   191                           
   192                           	psect	stringtext2
   193  071B                     __pstringtext2:	
   194  071B                     _kd:	
   195  071B  34D7               	retlw	215
   196  071C  3423               	retlw	35
   197  071D  343C               	retlw	60
   198  071E                     __end_of_kd:	
   199                           
   200                           	psect	stringtext3
   201  071E                     __pstringtext3:	
   202  071E                     _kp:	
   203  071E  34CD               	retlw	205
   204  071F  34CC               	retlw	204
   205  0720  343D               	retlw	61
   206  0721                     __end_of_kp:	
   207                           
   208                           	psect	stringtext4
   209  0721                     __pstringtext4:	
   210  0721                     _gear:	
   211  0721  3496               	retlw	150
   212  0722  3400               	retlw	0
   213  0723                     __end_of_gear:	
   214  0018                     _T1CON	set	24
   215  000B                     _INTCON	set	11
   216  001C                     _T2CON	set	28
   217  001B                     _PR2	set	27
   218  0018                     _T1CONbits	set	24
   219  0011                     _PIR1bits	set	17
   220  000B                     _INTCONbits	set	11
   221  0091                     _PIE1bits	set	145
   222  0095                     _OPTION_REGbits	set	149
   223  008C                     _TRISA	set	140
   224  0099                     _OSCCON	set	153
   225  011D                     _APFCONbits	set	285
   226  010C                     _LATAbits	set	268
   227  018C                     _ANSELA	set	396
   228  020C                     _WPUA	set	524
   229  0291                     _CCPR1L	set	657
   230  0293                     _CCP1CON	set	659
   231  0392                     _IOCANbits	set	914
   232  0393                     _IOCAFbits	set	915
   233                           
   234                           ; #config settings
   235  0000                     
   236                           	psect	cinit
   237  004C                     start_initialization:	
   238  004C                     __initialization:	
   239                           
   240                           ; Clear objects allocated to BITBANK0
   241  004C  0020               	movlb	0	; select bank0
   242  004D  01EE               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   243                           
   244                           ; Clear objects allocated to BANK1
   245  004E  0021               	movlb	1	; select bank1
   246  004F  01A0               	clrf	__pbssBANK1& (0+127)
   247  0050  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   248  0051  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   249  0052  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   250  0053  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   251  0054  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   252  0055  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   253  0056  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   254  0057  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   255  0058  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   256  0059  01AA               	clrf	(__pbssBANK1+10)& (0+127)
   257  005A  01AB               	clrf	(__pbssBANK1+11)& (0+127)
   258  005B                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  005B                     __end_of__initialization:	
   262  005B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   263  005C  0020               	movlb	0
   264  005D  2CD1               	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bitbssBANK0
   267  0370                     __pbitbssBANK0:	
   268  0370                     _zero_cross:	
   269  0370                     	ds	1
   270                           
   271                           	psect	bssBANK1
   272  00A0                     __pbssBANK1:	
   273  00A0                     _lasterror:	
   274  00A0                     	ds	3
   275  00A3                     _accumulator:	
   276  00A3                     	ds	3
   277  00A6                     _lset:	
   278  00A6                     	ds	2
   279  00A8                     _counter:	
   280  00A8                     	ds	2
   281  00AA                     _rpm:	
   282  00AA                     	ds	2
   283                           
   284                           	psect	cstackBANK1
   285  00AC                     __pcstackBANK1:	
   286  00AC                     main@x:	
   287                           
   288                           ; 2 bytes @ 0x0
   289  00AC                     	ds	2
   290  00AE                     main@x_369:	
   291                           
   292                           ; 2 bytes @ 0x2
   293  00AE                     	ds	2
   294                           
   295                           	psect	cstackCOMMON
   296  0070                     __pcstackCOMMON:	
   297  0070                     ?_isr:	
   298  0070                     ?_PWM_Init:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?___wmul:	
   302                           ; 2 bytes @ 0x0
   303                           
   304  0070                     ___wmul@multiplier:	
   305                           ; 2 bytes @ 0x0
   306                           
   307                           
   308                           ; 2 bytes @ 0x0
   309  0070                     	ds	2
   310  0072                     ___wmul@multiplicand:	
   311                           
   312                           ; 2 bytes @ 0x2
   313  0072                     	ds	2
   314  0074                     ??___wmul:	
   315  0074                     ___wmul@product:	
   316                           ; 1 bytes @ 0x4
   317                           
   318                           
   319                           ; 2 bytes @ 0x4
   320  0074                     	ds	2
   321  0076                     ?___lwdiv:	
   322  0076                     ___lwdiv@divisor:	
   323                           ; 2 bytes @ 0x6
   324                           
   325                           
   326                           ; 2 bytes @ 0x6
   327  0076                     	ds	2
   328  0078                     ___lwdiv@dividend:	
   329                           
   330                           ; 2 bytes @ 0x8
   331  0078                     	ds	2
   332  007A                     ??___lwdiv:	
   333                           
   334                           ; 1 bytes @ 0xA
   335  007A                     	ds	1
   336  007B                     ___lwdiv@quotient:	
   337                           
   338                           ; 2 bytes @ 0xB
   339  007B                     	ds	2
   340  007D                     ___lwdiv@counter:	
   341                           
   342                           ; 1 bytes @ 0xD
   343  007D                     	ds	1
   344                           
   345                           	psect	cstackBANK0
   346  0020                     __pcstackBANK0:	
   347  0020                     ??_isr:	
   348                           
   349                           ; 1 bytes @ 0x0
   350  0020                     	ds	1
   351  0021                     ?___ftge:	
   352  0021                     ??_PWM_Init:	
   353                           ; 1 bit 
   354                           
   355  0021                     ?_PWM_set_duty:	
   356                           ; 1 bytes @ 0x1
   357                           
   358  0021                     ?___ftpack:	
   359                           ; 2 bytes @ 0x1
   360                           
   361  0021                     ?___ftneg:	
   362                           ; 3 bytes @ 0x1
   363                           
   364  0021                     ?___fttol:	
   365                           ; 3 bytes @ 0x1
   366                           
   367  0021                     PWM_set_duty@duty:	
   368                           ; 4 bytes @ 0x1
   369                           
   370  0021                     ___ftpack@arg:	
   371                           ; 2 bytes @ 0x1
   372                           
   373  0021                     ___ftge@ff1:	
   374                           ; 3 bytes @ 0x1
   375                           
   376  0021                     ___ftneg@f1:	
   377                           ; 3 bytes @ 0x1
   378                           
   379  0021                     ___fttol@f1:	
   380                           ; 3 bytes @ 0x1
   381                           
   382                           
   383                           ; 3 bytes @ 0x1
   384  0021                     	ds	2
   385  0023                     ??_PWM_set_duty:	
   386                           
   387                           ; 1 bytes @ 0x3
   388  0023                     	ds	1
   389  0024                     ??___ftneg:	
   390  0024                     ___ftpack@exp:	
   391                           ; 1 bytes @ 0x4
   392                           
   393  0024                     ___ftge@ff2:	
   394                           ; 1 bytes @ 0x4
   395                           
   396                           
   397                           ; 3 bytes @ 0x4
   398  0024                     	ds	1
   399  0025                     ??___fttol:	
   400  0025                     ___ftpack@sign:	
   401                           ; 1 bytes @ 0x5
   402                           
   403                           
   404                           ; 1 bytes @ 0x5
   405  0025                     	ds	1
   406  0026                     ??___ftpack:	
   407                           
   408                           ; 1 bytes @ 0x6
   409  0026                     	ds	1
   410  0027                     ??___ftge:	
   411                           
   412                           ; 1 bytes @ 0x7
   413  0027                     	ds	2
   414  0029                     ?___awtoft:	
   415  0029                     ?___ftdiv:	
   416                           ; 3 bytes @ 0x9
   417                           
   418  0029                     ___fttol@sign1:	
   419                           ; 3 bytes @ 0x9
   420                           
   421  0029                     ___awtoft@c:	
   422                           ; 1 bytes @ 0x9
   423                           
   424  0029                     ___ftdiv@f2:	
   425                           ; 2 bytes @ 0x9
   426                           
   427                           
   428                           ; 3 bytes @ 0x9
   429  0029                     	ds	1
   430  002A                     ___fttol@lval:	
   431                           
   432                           ; 4 bytes @ 0xA
   433  002A                     	ds	2
   434  002C                     ??___awtoft:	
   435  002C                     ___ftdiv@f1:	
   436                           ; 1 bytes @ 0xC
   437                           
   438                           
   439                           ; 3 bytes @ 0xC
   440  002C                     	ds	2
   441  002E                     ___awtoft@sign:	
   442  002E                     ___fttol@exp1:	
   443                           ; 1 bytes @ 0xE
   444                           
   445                           
   446                           ; 1 bytes @ 0xE
   447  002E                     	ds	1
   448  002F                     ?_M_control:	
   449  002F                     ??___ftdiv:	
   450                           ; 1 bytes @ 0xF
   451                           
   452  002F                     M_control@ctr:	
   453                           ; 1 bytes @ 0xF
   454                           
   455                           
   456                           ; 2 bytes @ 0xF
   457  002F                     	ds	2
   458  0031                     ??_M_control:	
   459                           
   460                           ; 1 bytes @ 0x11
   461  0031                     	ds	2
   462  0033                     ___ftdiv@cntr:	
   463                           
   464                           ; 1 bytes @ 0x13
   465  0033                     	ds	1
   466  0034                     ___ftdiv@f3:	
   467                           
   468                           ; 3 bytes @ 0x14
   469  0034                     	ds	3
   470  0037                     ___ftdiv@exp:	
   471                           
   472                           ; 1 bytes @ 0x17
   473  0037                     	ds	1
   474  0038                     ___ftdiv@sign:	
   475                           
   476                           ; 1 bytes @ 0x18
   477  0038                     	ds	1
   478  0039                     ?___ftmul:	
   479  0039                     ___ftmul@f1:	
   480                           ; 3 bytes @ 0x19
   481                           
   482                           
   483                           ; 3 bytes @ 0x19
   484  0039                     	ds	3
   485  003C                     ___ftmul@f2:	
   486                           
   487                           ; 3 bytes @ 0x1C
   488  003C                     	ds	3
   489  003F                     ??___ftmul:	
   490                           
   491                           ; 1 bytes @ 0x1F
   492  003F                     	ds	4
   493  0043                     ___ftmul@exp:	
   494                           
   495                           ; 1 bytes @ 0x23
   496  0043                     	ds	1
   497  0044                     ___ftmul@f3_as_product:	
   498                           
   499                           ; 3 bytes @ 0x24
   500  0044                     	ds	3
   501  0047                     ___ftmul@cntr:	
   502                           
   503                           ; 1 bytes @ 0x27
   504  0047                     	ds	1
   505  0048                     ___ftmul@sign:	
   506                           
   507                           ; 1 bytes @ 0x28
   508  0048                     	ds	1
   509  0049                     ?___ftadd:	
   510  0049                     ___ftadd@f1:	
   511                           ; 3 bytes @ 0x29
   512                           
   513                           
   514                           ; 3 bytes @ 0x29
   515  0049                     	ds	3
   516  004C                     ___ftadd@f2:	
   517                           
   518                           ; 3 bytes @ 0x2C
   519  004C                     	ds	3
   520  004F                     ??___ftadd:	
   521                           
   522                           ; 1 bytes @ 0x2F
   523  004F                     	ds	4
   524  0053                     ___ftadd@sign:	
   525                           
   526                           ; 1 bytes @ 0x33
   527  0053                     	ds	1
   528  0054                     ___ftadd@exp2:	
   529                           
   530                           ; 1 bytes @ 0x34
   531  0054                     	ds	1
   532  0055                     ___ftadd@exp1:	
   533                           
   534                           ; 1 bytes @ 0x35
   535  0055                     	ds	1
   536  0056                     ?_calculate_pid:	
   537  0056                     calculate_pid@set:	
   538                           ; 1 bytes @ 0x36
   539                           
   540                           
   541                           ; 2 bytes @ 0x36
   542  0056                     	ds	2
   543  0058                     ??_calculate_pid:	
   544                           
   545                           ; 1 bytes @ 0x38
   546  0058                     	ds	2
   547  005A                     _calculate_pid$763:	
   548                           
   549                           ; 3 bytes @ 0x3A
   550  005A                     	ds	3
   551  005D                     calculate_pid@rpm2:	
   552                           
   553                           ; 2 bytes @ 0x3D
   554  005D                     	ds	2
   555  005F                     calculate_pid@error:	
   556                           
   557                           ; 3 bytes @ 0x3F
   558  005F                     	ds	3
   559  0062                     calculate_pid@pid:	
   560                           
   561                           ; 3 bytes @ 0x42
   562  0062                     	ds	3
   563  0065                     ?_PID:	
   564  0065                     PID@set:	
   565                           ; 1 bytes @ 0x45
   566                           
   567                           
   568                           ; 2 bytes @ 0x45
   569  0065                     	ds	2
   570  0067                     ??_PID:	
   571                           
   572                           ; 1 bytes @ 0x47
   573  0067                     	ds	2
   574  0069                     ?_main:	
   575  0069                     main@argc:	
   576                           ; 2 bytes @ 0x49
   577                           
   578                           
   579                           ; 2 bytes @ 0x49
   580  0069                     	ds	2
   581  006B                     main@argv:	
   582                           
   583                           ; 2 bytes @ 0x4B
   584  006B                     	ds	2
   585  006D                     ??_main:	
   586                           
   587                           ; 1 bytes @ 0x4D
   588  006D                     	ds	1
   589                           
   590                           	psect	maintext
   591  04D1                     __pmaintext:	
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 203 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  argc            2   73[BANK0 ] int 
   600 ;;  argv            2   75[BANK0 ] PTR PTR unsigned char 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  x               2    2[BANK1 ] int 
   603 ;;  x               2    0[BANK1 ] int 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  2   73[BANK0 ] int 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : B1F/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1
   613 ;;      Params:         0       4       0
   614 ;;      Locals:         0       0       4
   615 ;;      Temps:          0       1       0
   616 ;;      Totals:         0       5       4
   617 ;;Total ram usage:        9 bytes
   618 ;; Hardware stack levels required when called:    6
   619 ;; This function calls:
   620 ;;		_PID
   621 ;;		_PWM_Init
   622 ;;		_PWM_set_duty
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _main
   630  04D1                     _main:	
   631                           
   632                           ;main.c: 204: OSCCON = 0b11110000;
   633                           
   634                           ;incstack = 0
   635                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   636  04D1  30F0               	movlw	240
   637  04D2  0021               	movlb	1	; select bank1
   638  04D3  0099               	movwf	25	;volatile
   639                           
   640                           ;main.c: 205: TRISA = 0b00011000;
   641  04D4  3018               	movlw	24
   642  04D5  008C               	movwf	12	;volatile
   643                           
   644                           ;main.c: 206: ANSELA = 0b00000000;
   645  04D6  0023               	movlb	3	; select bank3
   646  04D7  018C               	clrf	12	;volatile
   647                           
   648                           ;main.c: 207: WPUA = 0b00011110;
   649  04D8  301E               	movlw	30
   650  04D9  0024               	movlb	4	; select bank4
   651  04DA  008C               	movwf	12	;volatile
   652                           
   653                           ;main.c: 208: OPTION_REGbits.nWPUEN = 0;
   654  04DB  0021               	movlb	1	; select bank1
   655  04DC  1395               	bcf	21,7	;volatile
   656                           
   657                           ;main.c: 209: APFCONbits.CCP1SEL = 1;
   658  04DD  0022               	movlb	2	; select bank2
   659  04DE  141D               	bsf	29,0	;volatile
   660                           
   661                           ;main.c: 210: LATAbits.LATA0 = 0;
   662  04DF  100C               	bcf	12,0	;volatile
   663                           
   664                           ;main.c: 211: PWM_Init();
   665  04E0  2703               	fcall	_PWM_Init
   666                           
   667                           ;main.c: 212: PWM_set_duty(0);
   668  04E1  3000               	movlw	0
   669  04E2  0020               	movlb	0	; select bank0
   670  04E3  00A1               	movwf	PWM_set_duty@duty
   671  04E4  00A2               	movwf	PWM_set_duty@duty+1
   672  04E5  26A1               	fcall	_PWM_set_duty
   673                           
   674                           ;main.c: 213: IOCANbits.IOCAN4 = 1;
   675  04E6  0027               	movlb	7	; select bank7
   676  04E7  1612               	bsf	18,4	;volatile
   677                           
   678                           ;main.c: 214: INTCON = 0b01001000;
   679  04E8  3048               	movlw	72
   680  04E9  008B               	movwf	11	;volatile
   681                           
   682                           ;main.c: 215: T1CON = 0b00110100;
   683  04EA  3034               	movlw	52
   684  04EB  0020               	movlb	0	; select bank0
   685  04EC  0098               	movwf	24	;volatile
   686                           
   687                           ;main.c: 216: PIE1bits.TMR1IE = 1;
   688  04ED  0021               	movlb	1	; select bank1
   689  04EE  1411               	bsf	17,0	;volatile
   690                           
   691                           ;main.c: 217: T1CONbits.TMR1ON = 1;
   692  04EF  0020               	movlb	0	; select bank0
   693  04F0  1418               	bsf	24,0	;volatile
   694                           
   695                           ;main.c: 218: INTCONbits.GIE = 1;
   696  04F1  178B               	bsf	11,7	;volatile
   697  04F2                     l102:	
   698                           ;main.c: 220: while (1)
   699                           
   700                           
   701                           ;main.c: 221: {
   702                           ;main.c: 222: for (int x = 0; x < 1000; x++)
   703  04F2  0021               	movlb	1	; select bank1
   704  04F3  01AC               	clrf	main@x^(0+128)
   705  04F4  01AD               	clrf	(main@x+1)^(0+128)
   706  04F5  082D               	movf	(main@x+1)^(0+128),w
   707  04F6  3A80               	xorlw	128
   708  04F7  0020               	movlb	0	; select bank0
   709  04F8  00ED               	movwf	??_main
   710  04F9  3083               	movlw	131
   711  04FA  026D               	subwf	??_main,w
   712  04FB  1D03               	skipz
   713  04FC  2D00               	goto	u2115
   714  04FD  30E8               	movlw	232
   715  04FE  0021               	movlb	1	; select bank1
   716  04FF  022C               	subwf	main@x^(0+128),w
   717  0500                     u2115:	
   718  0500  1803               	btfsc	3,0
   719  0501  2D23               	goto	l1551
   720  0502                     l1543:	
   721                           
   722                           ;main.c: 223: {
   723                           ;main.c: 224: PID(150);
   724  0502  3096               	movlw	150
   725  0503  0020               	movlb	0	; select bank0
   726  0504  00E5               	movwf	PID@set
   727  0505  3000               	movlw	0
   728  0506  00E6               	movwf	PID@set+1
   729  0507  25AD               	fcall	_PID
   730                           
   731                           ;main.c: 225: _delay((unsigned long)((10)*(32000000/4000.0)));
   732  0508  3068               	movlw	104
   733  0509  0020               	movlb	0	; select bank0
   734  050A  00ED               	movwf	??_main
   735  050B  30E4               	movlw	228
   736  050C                     u2157:	
   737  050C  0B89               	decfsz	9,f
   738  050D  2D0C               	goto	u2157
   739  050E  0BED               	decfsz	??_main,f
   740  050F  2D0C               	goto	u2157
   741  0510  0000               	nop
   742  0511  3001               	movlw	1
   743  0512  0021               	movlb	1	; select bank1
   744  0513  07AC               	addwf	main@x^(0+128),f
   745  0514  3000               	movlw	0
   746  0515  3DAD               	addwfc	(main@x+1)^(0+128),f
   747  0516  082D               	movf	(main@x+1)^(0+128),w
   748  0517  3A80               	xorlw	128
   749  0518  0020               	movlb	0	; select bank0
   750  0519  00ED               	movwf	??_main
   751  051A  3083               	movlw	131
   752  051B  026D               	subwf	??_main,w
   753  051C  1D03               	skipz
   754  051D  2D21               	goto	u2125
   755  051E  30E8               	movlw	232
   756  051F  0021               	movlb	1	; select bank1
   757  0520  022C               	subwf	main@x^(0+128),w
   758  0521                     u2125:	
   759  0521  1C03               	skipc
   760  0522  2D02               	goto	l1543
   761  0523                     l1551:	
   762                           
   763                           ;main.c: 226: }
   764                           ;main.c: 227: for (int x = 0; x < 1000; x++)
   765  0523  0021               	movlb	1	; select bank1
   766  0524  01AE               	clrf	main@x_369^(0+128)
   767  0525  01AF               	clrf	(main@x_369+1)^(0+128)
   768  0526                     L1:	
   769  0526  082F               	movf	(main@x_369+1)^(0+128),w
   770  0527  3A80               	xorlw	128
   771  0528  0020               	movlb	0	; select bank0
   772  0529  00ED               	movwf	??_main
   773  052A  3083               	movlw	131
   774  052B  026D               	subwf	??_main,w
   775  052C  1D03               	skipz
   776  052D  2D31               	goto	u2135
   777  052E  30E8               	movlw	232
   778  052F  0021               	movlb	1	; select bank1
   779  0530  022E               	subwf	main@x_369^(0+128),w
   780  0531                     u2135:	
   781  0531  1803               	btfsc	3,0
   782  0532  2CF2               	goto	l102
   783                           
   784                           ;main.c: 228: {
   785                           ;main.c: 229: PID(-150);
   786  0533  306A               	movlw	106
   787  0534  0020               	movlb	0	; select bank0
   788  0535  00E5               	movwf	PID@set
   789  0536  30FF               	movlw	255
   790  0537  00E6               	movwf	PID@set+1
   791  0538  25AD               	fcall	_PID
   792                           
   793                           ;main.c: 230: _delay((unsigned long)((10)*(32000000/4000.0)));
   794  0539  3068               	movlw	104
   795  053A  0020               	movlb	0	; select bank0
   796  053B  00ED               	movwf	??_main
   797  053C  30E4               	movlw	228
   798  053D                     u2167:	
   799  053D  0B89               	decfsz	9,f
   800  053E  2D3D               	goto	u2167
   801  053F  0BED               	decfsz	??_main,f
   802  0540  2D3D               	goto	u2167
   803  0541  0000               	nop
   804  0542  3001               	movlw	1
   805  0543  0021               	movlb	1	; select bank1
   806  0544  07AE               	addwf	main@x_369^(0+128),f
   807  0545  3000               	movlw	0
   808  0546  3DAF               	addwfc	(main@x_369+1)^(0+128),f
   809  0547  2D26               	goto	L1
   810  0548                     __end_of_main:	
   811                           ;main.c: 231: }
   812                           ;main.c: 232: }
   813                           ;main.c: 234: return (0);
   814                           ;	Return value of _main is never used
   815                           
   816                           
   817                           	psect	text1
   818  0703                     __ptext1:	
   819 ;; *************** function _PWM_Init *****************
   820 ;; Defined at:
   821 ;;		line 78 in file "main.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  2   70[None  ] int 
   828 ;; Registers used:
   829 ;;		wreg, status,2
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1
   835 ;;      Params:         0       0       0
   836 ;;      Locals:         0       0       0
   837 ;;      Temps:          0       0       0
   838 ;;      Totals:         0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    2
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _PWM_Init
   851  0703                     _PWM_Init:	
   852                           
   853                           ;main.c: 99: PR2 = 0xFF;
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _PWM_Init: [wreg+status,2]
   857  0703  30FF               	movlw	255
   858  0704  0020               	movlb	0	; select bank0
   859  0705  009B               	movwf	27	;volatile
   860                           
   861                           ;main.c: 100: CCP1CON = 0b00001100;
   862  0706  300C               	movlw	12
   863  0707  0025               	movlb	5	; select bank5
   864  0708  0093               	movwf	19	;volatile
   865                           
   866                           ;main.c: 101: CCPR1L = 0b00000000;
   867  0709  0191               	clrf	17	;volatile
   868                           
   869                           ;main.c: 102: PIR1bits.TMR2IF = 0;
   870  070A  0020               	movlb	0	; select bank0
   871  070B  1091               	bcf	17,1	;volatile
   872                           
   873                           ;main.c: 103: T2CON = 0b00000100;
   874  070C  3004               	movlw	4
   875  070D  009C               	movwf	28	;volatile
   876  070E  0008               	return
   877  070F                     __end_of_PWM_Init:	
   878                           
   879                           	psect	text2
   880  05AD                     __ptext2:	
   881 ;; *************** function _PID *****************
   882 ;; Defined at:
   883 ;;		line 181 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  set             2   69[BANK0 ] int 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1
   897 ;;      Params:         0       2       0
   898 ;;      Locals:         0       0       0
   899 ;;      Temps:          0       2       0
   900 ;;      Totals:         0       4       0
   901 ;;Total ram usage:        4 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    5
   904 ;; This function calls:
   905 ;;		_calculate_pid
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _PID
   913  05AD                     _PID:	
   914                           
   915                           ;main.c: 183: zero_cross = ((lset^set) < 0);
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in _PID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   919  05AD  0020               	movlb	0	; select bank0
   920  05AE  0865               	movf	PID@set,w
   921  05AF  0021               	movlb	1	; select bank1
   922  05B0  0626               	xorwf	_lset^(0+128),w
   923  05B1  0020               	movlb	0	; select bank0
   924  05B2  00E7               	movwf	??_PID
   925  05B3  0866               	movf	PID@set+1,w
   926  05B4  0021               	movlb	1	; select bank1
   927  05B5  0627               	xorwf	(_lset+1)^(0+128),w
   928  05B6  0020               	movlb	0	; select bank0
   929  05B7  00E8               	movwf	??_PID+1
   930  05B8  1FE8               	btfss	??_PID+1,7
   931  05B9  2DBD               	goto	u1890
   932  05BA  0020               	movlb	0	; select bank0
   933  05BB  146E               	bsf	_zero_cross/(0+8),_zero_cross& (0+7)
   934  05BC  2DBF               	goto	u1904
   935  05BD                     u1890:	
   936  05BD  0020               	movlb	0	; select bank0
   937  05BE  106E               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
   938  05BF                     u1904:	
   939                           
   940                           ;main.c: 184: if (((zero_cross == 1) &(set <= 0) & (lset <= 0)))
   941  05BF  0866               	movf	PID@set+1,w
   942  05C0  3A80               	xorlw	128
   943  05C1  00E7               	movwf	??_PID
   944  05C2  3080               	movlw	128
   945  05C3  0267               	subwf	??_PID,w
   946  05C4  1D03               	skipz
   947  05C5  2DC8               	goto	u1915
   948  05C6  3001               	movlw	1
   949  05C7  0265               	subwf	PID@set,w
   950  05C8                     u1915:	
   951  05C8  1803               	skipnc
   952  05C9  2DDD               	goto	l93
   953  05CA  0020               	movlb	0	; select bank0
   954  05CB  1C6E               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
   955  05CC  2DDD               	goto	l93
   956  05CD  0021               	movlb	1	; select bank1
   957  05CE  0827               	movf	(_lset+1)^(0+128),w
   958  05CF  3A80               	xorlw	128
   959  05D0  0020               	movlb	0	; select bank0
   960  05D1  00E7               	movwf	??_PID
   961  05D2  3080               	movlw	128
   962  05D3  0267               	subwf	??_PID,w
   963  05D4  1D03               	skipz
   964  05D5  2DD9               	goto	u1935
   965  05D6  3001               	movlw	1
   966  05D7  0021               	movlb	1	; select bank1
   967  05D8  0226               	subwf	_lset^(0+128),w
   968  05D9                     u1935:	
   969  05D9  1803               	skipnc
   970  05DA  2DDD               	goto	l93
   971                           
   972                           ;main.c: 185: {
   973                           ;main.c: 186: zero_cross = 0;
   974  05DB  0020               	movlb	0	; select bank0
   975  05DC  106E               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
   976  05DD                     l93:	
   977                           
   978                           ;main.c: 187: }
   979                           ;main.c: 188: if (zero_cross == 1)
   980  05DD  0020               	movlb	0	; select bank0
   981  05DE  1C6E               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
   982  05DF  2DF3               	goto	l1437
   983  05E0                     l1431:	
   984                           ;main.c: 189: {
   985                           ;main.c: 190: do
   986                           
   987                           
   988                           ;main.c: 191: {
   989                           ;main.c: 192: calculate_pid(0);
   990  05E0  3000               	movlw	0
   991  05E1  0020               	movlb	0	; select bank0
   992  05E2  00D6               	movwf	calculate_pid@set
   993  05E3  00D7               	movwf	calculate_pid@set+1
   994  05E4  205E               	fcall	_calculate_pid
   995                           
   996                           ;main.c: 193: _delay((unsigned long)((10)*(32000000/4000.0)));
   997  05E5  3068               	movlw	104
   998  05E6  0020               	movlb	0	; select bank0
   999  05E7  00E7               	movwf	??_PID
  1000  05E8  30E4               	movlw	228
  1001  05E9                     u2177:	
  1002  05E9  0B89               	decfsz	9,f
  1003  05EA  2DE9               	goto	u2177
  1004  05EB  0BE7               	decfsz	??_PID,f
  1005  05EC  2DE9               	goto	u2177
  1006  05ED  0000               	nop
  1007                           
  1008                           ;main.c: 194: }
  1009                           ;main.c: 195: while ((rpm != 0));
  1010  05EE  0021               	movlb	1	; select bank1
  1011  05EF  082A               	movf	_rpm^(0+128),w
  1012  05F0  042B               	iorwf	(_rpm+1)^(0+128),w
  1013  05F1  1D03               	btfss	3,2
  1014  05F2  2DE0               	goto	l1431
  1015  05F3                     l1437:	
  1016                           
  1017                           ;main.c: 196: }
  1018                           ;main.c: 197: lset = set;
  1019  05F3  0020               	movlb	0	; select bank0
  1020  05F4  0866               	movf	PID@set+1,w
  1021  05F5  0021               	movlb	1	; select bank1
  1022  05F6  00A7               	movwf	(_lset+1)^(0+128)
  1023  05F7  0020               	movlb	0	; select bank0
  1024  05F8  0865               	movf	PID@set,w
  1025  05F9  0021               	movlb	1	; select bank1
  1026  05FA  00A6               	movwf	_lset^(0+128)
  1027                           
  1028                           ;main.c: 198: calculate_pid(set);
  1029  05FB  0020               	movlb	0	; select bank0
  1030  05FC  0866               	movf	PID@set+1,w
  1031  05FD  00D7               	movwf	calculate_pid@set+1
  1032  05FE  0865               	movf	PID@set,w
  1033  05FF  00D6               	movwf	calculate_pid@set
  1034  0600  205E               	fcall	_calculate_pid
  1035  0601  0008               	return
  1036  0602                     __end_of_PID:	
  1037                           
  1038                           	psect	text3
  1039  005E                     __ptext3:	
  1040 ;; *************** function _calculate_pid *****************
  1041 ;; Defined at:
  1042 ;;		line 143 in file "main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  set             2   54[BANK0 ] int 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  pid             3   66[BANK0 ] float 
  1047 ;;  error           3   63[BANK0 ] float 
  1048 ;;  rpm2            2   61[BANK0 ] int 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1
  1058 ;;      Params:         0       2       0
  1059 ;;      Locals:         0      11       0
  1060 ;;      Temps:          0       2       0
  1061 ;;      Totals:         0      15       0
  1062 ;;Total ram usage:       15 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    4
  1065 ;; This function calls:
  1066 ;;		_M_control
  1067 ;;		___awtoft
  1068 ;;		___ftadd
  1069 ;;		___ftdiv
  1070 ;;		___ftge
  1071 ;;		___ftmul
  1072 ;;		___ftneg
  1073 ;;		___fttol
  1074 ;; This function is called by:
  1075 ;;		_PID
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _calculate_pid
  1081  005E                     _calculate_pid:	
  1082                           
  1083                           ;main.c: 145: float error = 0;
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _calculate_pid: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1087  005E  3000               	movlw	0
  1088  005F  0020               	movlb	0	; select bank0
  1089  0060  00DF               	movwf	calculate_pid@error
  1090  0061  3000               	movlw	0
  1091  0062  00E0               	movwf	calculate_pid@error+1
  1092  0063  3000               	movlw	0
  1093  0064  00E1               	movwf	calculate_pid@error+2
  1094                           
  1095                           ;main.c: 146: float pid = 0;
  1096  0065  3000               	movlw	0
  1097  0066  00E2               	movwf	calculate_pid@pid
  1098  0067  3000               	movlw	0
  1099  0068  00E3               	movwf	calculate_pid@pid+1
  1100  0069  3000               	movlw	0
  1101  006A  00E4               	movwf	calculate_pid@pid+2
  1102                           
  1103                           ;main.c: 147: int rpm2 = rpm + 600;
  1104  006B  0021               	movlb	1	; select bank1
  1105  006C  082A               	movf	_rpm^(0+128),w
  1106  006D  3E58               	addlw	88
  1107  006E  0020               	movlb	0	; select bank0
  1108  006F  00DD               	movwf	calculate_pid@rpm2
  1109  0070  3002               	movlw	2
  1110  0071  0021               	movlb	1	; select bank1
  1111  0072  3D2B               	addwfc	(_rpm+1)^(0+128),w
  1112  0073  0020               	movlb	0	; select bank0
  1113  0074  00DE               	movwf	calculate_pid@rpm2+1
  1114                           
  1115                           ;main.c: 148: set = set + 600;
  1116  0075  0856               	movf	calculate_pid@set,w
  1117  0076  3E58               	addlw	88
  1118  0077  00D6               	movwf	calculate_pid@set
  1119  0078  3002               	movlw	2
  1120  0079  3D57               	addwfc	calculate_pid@set+1,w
  1121  007A  00D7               	movwf	calculate_pid@set+1
  1122                           
  1123                           ;main.c: 149: error = set - rpm2;
  1124  007B  095D               	comf	calculate_pid@rpm2,w
  1125  007C  00D8               	movwf	??_calculate_pid
  1126  007D  095E               	comf	calculate_pid@rpm2+1,w
  1127  007E  00D9               	movwf	??_calculate_pid+1
  1128  007F  0AD8               	incf	??_calculate_pid,f
  1129  0080  1903               	skipnz
  1130  0081  0AD9               	incf	??_calculate_pid+1,f
  1131  0082  0856               	movf	calculate_pid@set,w
  1132  0083  0758               	addwf	??_calculate_pid,w
  1133  0084  00A9               	movwf	___awtoft@c
  1134  0085  0857               	movf	calculate_pid@set+1,w
  1135  0086  3D59               	addwfc	??_calculate_pid+1,w
  1136  0087  00AA               	movwf	___awtoft@c+1
  1137  0088  26C7               	fcall	___awtoft
  1138  0089  0020               	movlb	0	; select bank0
  1139  008A  0829               	movf	?___awtoft,w
  1140  008B  00DF               	movwf	calculate_pid@error
  1141  008C  082A               	movf	?___awtoft+1,w
  1142  008D  00E0               	movwf	calculate_pid@error+1
  1143  008E  082B               	movf	?___awtoft+2,w
  1144  008F  00E1               	movwf	calculate_pid@error+2
  1145                           
  1146                           ;main.c: 150: pid = error*kp;
  1147  0090  301E               	movlw	low (_kp| (0+32768))
  1148  0091  0084               	movwf	4
  1149  0092  3087               	movlw	high (_kp| (0+32768))
  1150  0093  0085               	movwf	5
  1151  0094  3F00               	moviw [0]fsr0
  1152  0095  00B9               	movwf	___ftmul@f1
  1153  0096  3F01               	moviw [1]fsr0
  1154  0097  00BA               	movwf	___ftmul@f1+1
  1155  0098  3F02               	moviw [2]fsr0
  1156  0099  00BB               	movwf	___ftmul@f1+2
  1157  009A  085F               	movf	calculate_pid@error,w
  1158  009B  00BC               	movwf	___ftmul@f2
  1159  009C  0860               	movf	calculate_pid@error+1,w
  1160  009D  00BD               	movwf	___ftmul@f2+1
  1161  009E  0861               	movf	calculate_pid@error+2,w
  1162  009F  00BE               	movwf	___ftmul@f2+2
  1163  00A0  22EF               	fcall	___ftmul
  1164  00A1  0020               	movlb	0	; select bank0
  1165  00A2  0839               	movf	?___ftmul,w
  1166  00A3  00E2               	movwf	calculate_pid@pid
  1167  00A4  083A               	movf	?___ftmul+1,w
  1168  00A5  00E3               	movwf	calculate_pid@pid+1
  1169  00A6  083B               	movf	?___ftmul+2,w
  1170  00A7  00E4               	movwf	calculate_pid@pid+2
  1171                           
  1172                           ;main.c: 151: accumulator += error;
  1173  00A8  085F               	movf	calculate_pid@error,w
  1174  00A9  00C9               	movwf	___ftadd@f1
  1175  00AA  0860               	movf	calculate_pid@error+1,w
  1176  00AB  00CA               	movwf	___ftadd@f1+1
  1177  00AC  0861               	movf	calculate_pid@error+2,w
  1178  00AD  00CB               	movwf	___ftadd@f1+2
  1179  00AE  0021               	movlb	1	; select bank1
  1180  00AF  0823               	movf	_accumulator^(0+128),w
  1181  00B0  0020               	movlb	0	; select bank0
  1182  00B1  00CC               	movwf	___ftadd@f2
  1183  00B2  0021               	movlb	1	; select bank1
  1184  00B3  0824               	movf	(_accumulator+1)^(0+128),w
  1185  00B4  0020               	movlb	0	; select bank0
  1186  00B5  00CD               	movwf	___ftadd@f2+1
  1187  00B6  0021               	movlb	1	; select bank1
  1188  00B7  0825               	movf	(_accumulator+2)^(0+128),w
  1189  00B8  0020               	movlb	0	; select bank0
  1190  00B9  00CE               	movwf	___ftadd@f2+2
  1191  00BA  21FA               	fcall	___ftadd
  1192  00BB  0020               	movlb	0	; select bank0
  1193  00BC  0849               	movf	?___ftadd,w
  1194  00BD  0021               	movlb	1	; select bank1
  1195  00BE  00A3               	movwf	_accumulator^(0+128)
  1196  00BF  0020               	movlb	0	; select bank0
  1197  00C0  084A               	movf	?___ftadd+1,w
  1198  00C1  0021               	movlb	1	; select bank1
  1199  00C2  00A4               	movwf	(_accumulator+1)^(0+128)
  1200  00C3  0020               	movlb	0	; select bank0
  1201  00C4  084B               	movf	?___ftadd+2,w
  1202  00C5  0021               	movlb	1	; select bank1
  1203  00C6  00A5               	movwf	(_accumulator+2)^(0+128)
  1204                           
  1205                           ;main.c: 152: pid += ki*accumulator;
  1206  00C7  3018               	movlw	low (_ki| (0+32768))
  1207  00C8  0084               	movwf	4
  1208  00C9  3087               	movlw	high (_ki| (0+32768))
  1209  00CA  0085               	movwf	5
  1210  00CB  3F00               	moviw [0]fsr0
  1211  00CC  0020               	movlb	0	; select bank0
  1212  00CD  00BC               	movwf	___ftmul@f2
  1213  00CE  3F01               	moviw [1]fsr0
  1214  00CF  00BD               	movwf	___ftmul@f2+1
  1215  00D0  3F02               	moviw [2]fsr0
  1216  00D1  00BE               	movwf	___ftmul@f2+2
  1217  00D2  0021               	movlb	1	; select bank1
  1218  00D3  0823               	movf	_accumulator^(0+128),w
  1219  00D4  0020               	movlb	0	; select bank0
  1220  00D5  00B9               	movwf	___ftmul@f1
  1221  00D6  0021               	movlb	1	; select bank1
  1222  00D7  0824               	movf	(_accumulator+1)^(0+128),w
  1223  00D8  0020               	movlb	0	; select bank0
  1224  00D9  00BA               	movwf	___ftmul@f1+1
  1225  00DA  0021               	movlb	1	; select bank1
  1226  00DB  0825               	movf	(_accumulator+2)^(0+128),w
  1227  00DC  0020               	movlb	0	; select bank0
  1228  00DD  00BB               	movwf	___ftmul@f1+2
  1229  00DE  22EF               	fcall	___ftmul
  1230  00DF  0020               	movlb	0	; select bank0
  1231  00E0  0839               	movf	?___ftmul,w
  1232  00E1  00C9               	movwf	___ftadd@f1
  1233  00E2  083A               	movf	?___ftmul+1,w
  1234  00E3  00CA               	movwf	___ftadd@f1+1
  1235  00E4  083B               	movf	?___ftmul+2,w
  1236  00E5  00CB               	movwf	___ftadd@f1+2
  1237  00E6  0862               	movf	calculate_pid@pid,w
  1238  00E7  00CC               	movwf	___ftadd@f2
  1239  00E8  0863               	movf	calculate_pid@pid+1,w
  1240  00E9  00CD               	movwf	___ftadd@f2+1
  1241  00EA  0864               	movf	calculate_pid@pid+2,w
  1242  00EB  00CE               	movwf	___ftadd@f2+2
  1243  00EC  21FA               	fcall	___ftadd
  1244  00ED  0020               	movlb	0	; select bank0
  1245  00EE  0849               	movf	?___ftadd,w
  1246  00EF  00E2               	movwf	calculate_pid@pid
  1247  00F0  084A               	movf	?___ftadd+1,w
  1248  00F1  00E3               	movwf	calculate_pid@pid+1
  1249  00F2  084B               	movf	?___ftadd+2,w
  1250  00F3  00E4               	movwf	calculate_pid@pid+2
  1251                           
  1252                           ;main.c: 153: pid += kd * (error - lasterror);
  1253  00F4  0021               	movlb	1	; select bank1
  1254  00F5  0820               	movf	_lasterror^(0+128),w
  1255  00F6  0020               	movlb	0	; select bank0
  1256  00F7  00A1               	movwf	___ftneg@f1
  1257  00F8  0021               	movlb	1	; select bank1
  1258  00F9  0821               	movf	(_lasterror+1)^(0+128),w
  1259  00FA  0020               	movlb	0	; select bank0
  1260  00FB  00A2               	movwf	___ftneg@f1+1
  1261  00FC  0021               	movlb	1	; select bank1
  1262  00FD  0822               	movf	(_lasterror+2)^(0+128),w
  1263  00FE  0020               	movlb	0	; select bank0
  1264  00FF  00A3               	movwf	___ftneg@f1+2
  1265  0100  270F               	fcall	___ftneg
  1266  0101  0020               	movlb	0	; select bank0
  1267  0102  0821               	movf	?___ftneg,w
  1268  0103  00CC               	movwf	___ftadd@f2
  1269  0104  0822               	movf	?___ftneg+1,w
  1270  0105  00CD               	movwf	___ftadd@f2+1
  1271  0106  0823               	movf	?___ftneg+2,w
  1272  0107  00CE               	movwf	___ftadd@f2+2
  1273  0108  085F               	movf	calculate_pid@error,w
  1274  0109  00C9               	movwf	___ftadd@f1
  1275  010A  0860               	movf	calculate_pid@error+1,w
  1276  010B  00CA               	movwf	___ftadd@f1+1
  1277  010C  0861               	movf	calculate_pid@error+2,w
  1278  010D  00CB               	movwf	___ftadd@f1+2
  1279  010E  21FA               	fcall	___ftadd
  1280  010F  0020               	movlb	0	; select bank0
  1281  0110  0849               	movf	?___ftadd,w
  1282  0111  00BC               	movwf	___ftmul@f2
  1283  0112  084A               	movf	?___ftadd+1,w
  1284  0113  00BD               	movwf	___ftmul@f2+1
  1285  0114  084B               	movf	?___ftadd+2,w
  1286  0115  00BE               	movwf	___ftmul@f2+2
  1287  0116  301B               	movlw	low (_kd| (0+32768))
  1288  0117  0084               	movwf	4
  1289  0118  3087               	movlw	high (_kd| (0+32768))
  1290  0119  0085               	movwf	5
  1291  011A  3F00               	moviw [0]fsr0
  1292  011B  00B9               	movwf	___ftmul@f1
  1293  011C  3F01               	moviw [1]fsr0
  1294  011D  00BA               	movwf	___ftmul@f1+1
  1295  011E  3F02               	moviw [2]fsr0
  1296  011F  00BB               	movwf	___ftmul@f1+2
  1297  0120  22EF               	fcall	___ftmul
  1298  0121  0020               	movlb	0	; select bank0
  1299  0122  0839               	movf	?___ftmul,w
  1300  0123  00DA               	movwf	_calculate_pid$763
  1301  0124  083A               	movf	?___ftmul+1,w
  1302  0125  00DB               	movwf	_calculate_pid$763+1
  1303  0126  083B               	movf	?___ftmul+2,w
  1304  0127  00DC               	movwf	_calculate_pid$763+2
  1305                           
  1306                           ;main.c: 153: pid += kd * (error - lasterror);
  1307  0128  085A               	movf	_calculate_pid$763,w
  1308  0129  00C9               	movwf	___ftadd@f1
  1309  012A  085B               	movf	_calculate_pid$763+1,w
  1310  012B  00CA               	movwf	___ftadd@f1+1
  1311  012C  085C               	movf	_calculate_pid$763+2,w
  1312  012D  00CB               	movwf	___ftadd@f1+2
  1313  012E  0862               	movf	calculate_pid@pid,w
  1314  012F  00CC               	movwf	___ftadd@f2
  1315  0130  0863               	movf	calculate_pid@pid+1,w
  1316  0131  00CD               	movwf	___ftadd@f2+1
  1317  0132  0864               	movf	calculate_pid@pid+2,w
  1318  0133  00CE               	movwf	___ftadd@f2+2
  1319  0134  21FA               	fcall	___ftadd
  1320  0135  0020               	movlb	0	; select bank0
  1321  0136  0849               	movf	?___ftadd,w
  1322  0137  00E2               	movwf	calculate_pid@pid
  1323  0138  084A               	movf	?___ftadd+1,w
  1324  0139  00E3               	movwf	calculate_pid@pid+1
  1325  013A  084B               	movf	?___ftadd+2,w
  1326  013B  00E4               	movwf	calculate_pid@pid+2
  1327                           
  1328                           ;main.c: 154: lasterror = error;
  1329  013C  085F               	movf	calculate_pid@error,w
  1330  013D  0021               	movlb	1	; select bank1
  1331  013E  00A0               	movwf	_lasterror^(0+128)
  1332  013F  0020               	movlb	0	; select bank0
  1333  0140  0860               	movf	calculate_pid@error+1,w
  1334  0141  0021               	movlb	1	; select bank1
  1335  0142  00A1               	movwf	(_lasterror+1)^(0+128)
  1336  0143  0020               	movlb	0	; select bank0
  1337  0144  0861               	movf	calculate_pid@error+2,w
  1338  0145  0021               	movlb	1	; select bank1
  1339  0146  00A2               	movwf	(_lasterror+2)^(0+128)
  1340                           
  1341                           ;main.c: 155: if (pid >= 2047)
  1342  0147  0020               	movlb	0	; select bank0
  1343  0148  0862               	movf	calculate_pid@pid,w
  1344  0149  00A1               	movwf	___ftge@ff1
  1345  014A  0863               	movf	calculate_pid@pid+1,w
  1346  014B  00A2               	movwf	___ftge@ff1+1
  1347  014C  0864               	movf	calculate_pid@pid+2,w
  1348  014D  00A3               	movwf	___ftge@ff1+2
  1349  014E  30E0               	movlw	224
  1350  014F  00A4               	movwf	___ftge@ff2
  1351  0150  30FF               	movlw	255
  1352  0151  00A5               	movwf	___ftge@ff2+1
  1353  0152  3044               	movlw	68
  1354  0153  00A6               	movwf	___ftge@ff2+2
  1355  0154  2602               	fcall	___ftge
  1356  0155  1C03               	btfss	3,0
  1357  0156  295E               	goto	l1397
  1358                           
  1359                           ;main.c: 156: {
  1360                           ;main.c: 157: pid = 2047;
  1361  0157  30E0               	movlw	224
  1362  0158  0020               	movlb	0	; select bank0
  1363  0159  00E2               	movwf	calculate_pid@pid
  1364  015A  30FF               	movlw	255
  1365  015B  00E3               	movwf	calculate_pid@pid+1
  1366  015C  3044               	movlw	68
  1367  015D  00E4               	movwf	calculate_pid@pid+2
  1368  015E                     l1397:	
  1369                           
  1370                           ;main.c: 158: }
  1371                           ;main.c: 159: if (pid <= 0)
  1372  015E  3000               	movlw	0
  1373  015F  0020               	movlb	0	; select bank0
  1374  0160  00A1               	movwf	___ftge@ff1
  1375  0161  3000               	movlw	0
  1376  0162  00A2               	movwf	___ftge@ff1+1
  1377  0163  3000               	movlw	0
  1378  0164  00A3               	movwf	___ftge@ff1+2
  1379  0165  0862               	movf	calculate_pid@pid,w
  1380  0166  00A4               	movwf	___ftge@ff2
  1381  0167  0863               	movf	calculate_pid@pid+1,w
  1382  0168  00A5               	movwf	___ftge@ff2+1
  1383  0169  0864               	movf	calculate_pid@pid+2,w
  1384  016A  00A6               	movwf	___ftge@ff2+2
  1385  016B  2602               	fcall	___ftge
  1386  016C  1C03               	btfss	3,0
  1387  016D  2975               	goto	l1401
  1388                           
  1389                           ;main.c: 160: {
  1390                           ;main.c: 161: pid = 0;
  1391  016E  3000               	movlw	0
  1392  016F  0020               	movlb	0	; select bank0
  1393  0170  00E2               	movwf	calculate_pid@pid
  1394  0171  3000               	movlw	0
  1395  0172  00E3               	movwf	calculate_pid@pid+1
  1396  0173  3000               	movlw	0
  1397  0174  00E4               	movwf	calculate_pid@pid+2
  1398  0175                     l1401:	
  1399                           
  1400                           ;main.c: 162: }
  1401                           ;main.c: 163: pid = (-1023 + ((2046)*((pid) / (2047))));
  1402  0175  30C0               	movlw	192
  1403  0176  0020               	movlb	0	; select bank0
  1404  0177  00C9               	movwf	___ftadd@f1
  1405  0178  307F               	movlw	127
  1406  0179  00CA               	movwf	___ftadd@f1+1
  1407  017A  30C4               	movlw	196
  1408  017B  00CB               	movwf	___ftadd@f1+2
  1409  017C  30C0               	movlw	192
  1410  017D  00B9               	movwf	___ftmul@f1
  1411  017E  30FF               	movlw	255
  1412  017F  00BA               	movwf	___ftmul@f1+1
  1413  0180  3044               	movlw	68
  1414  0181  00BB               	movwf	___ftmul@f1+2
  1415  0182  30E0               	movlw	224
  1416  0183  00A9               	movwf	___ftdiv@f2
  1417  0184  30FF               	movlw	255
  1418  0185  00AA               	movwf	___ftdiv@f2+1
  1419  0186  3044               	movlw	68
  1420  0187  00AB               	movwf	___ftdiv@f2+2
  1421  0188  0862               	movf	calculate_pid@pid,w
  1422  0189  00AC               	movwf	___ftdiv@f1
  1423  018A  0863               	movf	calculate_pid@pid+1,w
  1424  018B  00AD               	movwf	___ftdiv@f1+1
  1425  018C  0864               	movf	calculate_pid@pid+2,w
  1426  018D  00AE               	movwf	___ftdiv@f1+2
  1427  018E  23A2               	fcall	___ftdiv
  1428  018F  0020               	movlb	0	; select bank0
  1429  0190  0829               	movf	?___ftdiv,w
  1430  0191  00BC               	movwf	___ftmul@f2
  1431  0192  082A               	movf	?___ftdiv+1,w
  1432  0193  00BD               	movwf	___ftmul@f2+1
  1433  0194  082B               	movf	?___ftdiv+2,w
  1434  0195  00BE               	movwf	___ftmul@f2+2
  1435  0196  22EF               	fcall	___ftmul
  1436  0197  0020               	movlb	0	; select bank0
  1437  0198  0839               	movf	?___ftmul,w
  1438  0199  00CC               	movwf	___ftadd@f2
  1439  019A  083A               	movf	?___ftmul+1,w
  1440  019B  00CD               	movwf	___ftadd@f2+1
  1441  019C  083B               	movf	?___ftmul+2,w
  1442  019D  00CE               	movwf	___ftadd@f2+2
  1443  019E  21FA               	fcall	___ftadd
  1444  019F  0020               	movlb	0	; select bank0
  1445  01A0  0849               	movf	?___ftadd,w
  1446  01A1  00E2               	movwf	calculate_pid@pid
  1447  01A2  084A               	movf	?___ftadd+1,w
  1448  01A3  00E3               	movwf	calculate_pid@pid+1
  1449  01A4  084B               	movf	?___ftadd+2,w
  1450  01A5  00E4               	movwf	calculate_pid@pid+2
  1451                           
  1452                           ;main.c: 164: if (set < 600)
  1453  01A6  0857               	movf	calculate_pid@set+1,w
  1454  01A7  3A80               	xorlw	128
  1455  01A8  00D8               	movwf	??_calculate_pid
  1456  01A9  3082               	movlw	130
  1457  01AA  0258               	subwf	??_calculate_pid,w
  1458  01AB  1D03               	skipz
  1459  01AC  29AF               	goto	u1855
  1460  01AD  3058               	movlw	88
  1461  01AE  0256               	subwf	calculate_pid@set,w
  1462  01AF                     u1855:	
  1463  01AF  1803               	skipnc
  1464  01B0  29C8               	goto	l86
  1465                           
  1466                           ;main.c: 165: {
  1467                           ;main.c: 166: if (pid > 0)
  1468  01B1  3000               	movlw	0
  1469  01B2  0020               	movlb	0	; select bank0
  1470  01B3  00A1               	movwf	___ftge@ff1
  1471  01B4  3000               	movlw	0
  1472  01B5  00A2               	movwf	___ftge@ff1+1
  1473  01B6  3000               	movlw	0
  1474  01B7  00A3               	movwf	___ftge@ff1+2
  1475  01B8  0862               	movf	calculate_pid@pid,w
  1476  01B9  00A4               	movwf	___ftge@ff2
  1477  01BA  0863               	movf	calculate_pid@pid+1,w
  1478  01BB  00A5               	movwf	___ftge@ff2+1
  1479  01BC  0864               	movf	calculate_pid@pid+2,w
  1480  01BD  00A6               	movwf	___ftge@ff2+2
  1481  01BE  2602               	fcall	___ftge
  1482  01BF  1803               	btfsc	3,0
  1483  01C0  29C8               	goto	l86
  1484                           
  1485                           ;main.c: 167: {
  1486                           ;main.c: 168: pid = 0;
  1487  01C1  3000               	movlw	0
  1488  01C2  0020               	movlb	0	; select bank0
  1489  01C3  00E2               	movwf	calculate_pid@pid
  1490  01C4  3000               	movlw	0
  1491  01C5  00E3               	movwf	calculate_pid@pid+1
  1492  01C6  3000               	movlw	0
  1493  01C7  00E4               	movwf	calculate_pid@pid+2
  1494  01C8                     l86:	
  1495                           
  1496                           ;main.c: 169: }
  1497                           ;main.c: 170: }
  1498                           ;main.c: 171: if (set > 600)
  1499  01C8  0020               	movlb	0	; select bank0
  1500  01C9  0857               	movf	calculate_pid@set+1,w
  1501  01CA  3A80               	xorlw	128
  1502  01CB  00D8               	movwf	??_calculate_pid
  1503  01CC  3082               	movlw	130
  1504  01CD  0258               	subwf	??_calculate_pid,w
  1505  01CE  1D03               	skipz
  1506  01CF  29D2               	goto	u1875
  1507  01D0  3059               	movlw	89
  1508  01D1  0256               	subwf	calculate_pid@set,w
  1509  01D2                     u1875:	
  1510  01D2  1C03               	skipc
  1511  01D3  29EB               	goto	l1413
  1512                           
  1513                           ;main.c: 172: {
  1514                           ;main.c: 173: if (pid < 0)
  1515  01D4  0020               	movlb	0	; select bank0
  1516  01D5  0862               	movf	calculate_pid@pid,w
  1517  01D6  00A1               	movwf	___ftge@ff1
  1518  01D7  0863               	movf	calculate_pid@pid+1,w
  1519  01D8  00A2               	movwf	___ftge@ff1+1
  1520  01D9  0864               	movf	calculate_pid@pid+2,w
  1521  01DA  00A3               	movwf	___ftge@ff1+2
  1522  01DB  3000               	movlw	0
  1523  01DC  00A4               	movwf	___ftge@ff2
  1524  01DD  3000               	movlw	0
  1525  01DE  00A5               	movwf	___ftge@ff2+1
  1526  01DF  3000               	movlw	0
  1527  01E0  00A6               	movwf	___ftge@ff2+2
  1528  01E1  2602               	fcall	___ftge
  1529  01E2  1803               	btfsc	3,0
  1530  01E3  29EB               	goto	l1413
  1531                           
  1532                           ;main.c: 174: {
  1533                           ;main.c: 175: pid = 0;
  1534  01E4  3000               	movlw	0
  1535  01E5  0020               	movlb	0	; select bank0
  1536  01E6  00E2               	movwf	calculate_pid@pid
  1537  01E7  3000               	movlw	0
  1538  01E8  00E3               	movwf	calculate_pid@pid+1
  1539  01E9  3000               	movlw	0
  1540  01EA  00E4               	movwf	calculate_pid@pid+2
  1541  01EB                     l1413:	
  1542                           
  1543                           ;main.c: 176: }
  1544                           ;main.c: 177: }
  1545                           ;main.c: 178: M_control((int) pid);
  1546  01EB  0020               	movlb	0	; select bank0
  1547  01EC  0862               	movf	calculate_pid@pid,w
  1548  01ED  00A1               	movwf	___fttol@f1
  1549  01EE  0863               	movf	calculate_pid@pid+1,w
  1550  01EF  00A2               	movwf	___fttol@f1+1
  1551  01F0  0864               	movf	calculate_pid@pid+2,w
  1552  01F1  00A3               	movwf	___fttol@f1+2
  1553  01F2  244A               	fcall	___fttol
  1554  01F3  0020               	movlb	0	; select bank0
  1555  01F4  0822               	movf	?___fttol+1,w
  1556  01F5  00B0               	movwf	M_control@ctr+1
  1557  01F6  0821               	movf	?___fttol,w
  1558  01F7  00AF               	movwf	M_control@ctr
  1559  01F8  2672               	fcall	_M_control
  1560  01F9  0008               	return
  1561  01FA                     __end_of_calculate_pid:	
  1562                           
  1563                           	psect	text4
  1564  044A                     __ptext4:	
  1565 ;; *************** function ___fttol *****************
  1566 ;; Defined at:
  1567 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  f1              3    1[BANK0 ] float 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  lval            4   10[BANK0 ] unsigned long 
  1572 ;;  exp1            1   14[BANK0 ] unsigned char 
  1573 ;;  sign1           1    9[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  4    1[BANK0 ] long 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1
  1583 ;;      Params:         0       4       0
  1584 ;;      Locals:         0       6       0
  1585 ;;      Temps:          0       4       0
  1586 ;;      Totals:         0      14       0
  1587 ;;Total ram usage:       14 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    2
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_calculate_pid
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function ___fttol
  1599  044A                     ___fttol:	
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1603  044A  0020               	movlb	0	; select bank0
  1604  044B  0821               	movf	___fttol@f1,w
  1605  044C  00A5               	movwf	??___fttol
  1606  044D  0822               	movf	___fttol@f1+1,w
  1607  044E  00A6               	movwf	??___fttol+1
  1608  044F  0823               	movf	___fttol@f1+2,w
  1609  0450  00A7               	movwf	??___fttol+2
  1610  0451  1003               	clrc
  1611  0452  0D26               	rlf	??___fttol+1,w
  1612  0453  0D27               	rlf	??___fttol+2,w
  1613  0454  00A8               	movwf	??___fttol+3
  1614  0455  0828               	movf	??___fttol+3,w
  1615  0456  00AE               	movwf	___fttol@exp1
  1616  0457  082E               	movf	___fttol@exp1,w
  1617  0458  1D03               	btfss	3,2
  1618  0459  2C63               	goto	l1337
  1619  045A  3000               	movlw	0
  1620  045B  00A4               	movwf	?___fttol+3
  1621  045C  3000               	movlw	0
  1622  045D  00A3               	movwf	?___fttol+2
  1623  045E  3000               	movlw	0
  1624  045F  00A2               	movwf	?___fttol+1
  1625  0460  3000               	movlw	0
  1626  0461  00A1               	movwf	?___fttol
  1627  0462  0008               	return
  1628  0463                     l1337:	
  1629  0463  0821               	movf	___fttol@f1,w
  1630  0464  00A5               	movwf	??___fttol
  1631  0465  0822               	movf	___fttol@f1+1,w
  1632  0466  00A6               	movwf	??___fttol+1
  1633  0467  0823               	movf	___fttol@f1+2,w
  1634  0468  00A7               	movwf	??___fttol+2
  1635  0469  3017               	movlw	23
  1636  046A                     u1745:	
  1637  046A  36A7               	lsrf	??___fttol+2,f
  1638  046B  0CA6               	rrf	??___fttol+1,f
  1639  046C  0CA5               	rrf	??___fttol,f
  1640  046D  0B89               	decfsz	9,f
  1641  046E  2C6A               	goto	u1745
  1642  046F  0825               	movf	??___fttol,w
  1643  0470  00A8               	movwf	??___fttol+3
  1644  0471  0828               	movf	??___fttol+3,w
  1645  0472  00A9               	movwf	___fttol@sign1
  1646  0473  17A2               	bsf	___fttol@f1+1,7
  1647  0474  30FF               	movlw	255
  1648  0475  05A1               	andwf	___fttol@f1,f
  1649  0476  30FF               	movlw	255
  1650  0477  05A2               	andwf	___fttol@f1+1,f
  1651  0478  3000               	movlw	0
  1652  0479  05A3               	andwf	___fttol@f1+2,f
  1653  047A  0821               	movf	___fttol@f1,w
  1654  047B  00AA               	movwf	___fttol@lval
  1655  047C  0822               	movf	___fttol@f1+1,w
  1656  047D  00AB               	movwf	___fttol@lval+1
  1657  047E  0823               	movf	___fttol@f1+2,w
  1658  047F  00AC               	movwf	___fttol@lval+2
  1659  0480  01AD               	clrf	___fttol@lval+3
  1660  0481  308E               	movlw	142
  1661  0482  02AE               	subwf	___fttol@exp1,f
  1662  0483  1FAE               	btfss	___fttol@exp1,7
  1663  0484  2CA1               	goto	l1357
  1664  0485  082E               	movf	___fttol@exp1,w
  1665  0486  3A80               	xorlw	128
  1666  0487  3E8F               	addlw	143
  1667  0488  1803               	skipnc
  1668  0489  2C93               	goto	l1355
  1669  048A  3000               	movlw	0
  1670  048B  00A4               	movwf	?___fttol+3
  1671  048C  3000               	movlw	0
  1672  048D  00A3               	movwf	?___fttol+2
  1673  048E  3000               	movlw	0
  1674  048F  00A2               	movwf	?___fttol+1
  1675  0490  3000               	movlw	0
  1676  0491  00A1               	movwf	?___fttol
  1677  0492  0008               	return
  1678  0493                     l1355:	
  1679  0493  3001               	movlw	1
  1680  0494                     u1775:	
  1681  0494  36AD               	lsrf	___fttol@lval+3,f
  1682  0495  0CAC               	rrf	___fttol@lval+2,f
  1683  0496  0CAB               	rrf	___fttol@lval+1,f
  1684  0497  0CAA               	rrf	___fttol@lval,f
  1685  0498  0B89               	decfsz	9,f
  1686  0499  2C94               	goto	u1775
  1687  049A  3001               	movlw	1
  1688  049B  00A5               	movwf	??___fttol
  1689  049C  0825               	movf	??___fttol,w
  1690  049D  07AE               	addwf	___fttol@exp1,f
  1691  049E  1903               	btfsc	3,2
  1692  049F  2CBA               	goto	l1365
  1693  04A0  2C93               	goto	l1355
  1694  04A1                     l1357:	
  1695  04A1  3018               	movlw	24
  1696  04A2  022E               	subwf	___fttol@exp1,w
  1697  04A3  1C03               	skipc
  1698  04A4  2CB7               	goto	l445
  1699  04A5  3000               	movlw	0
  1700  04A6  00A4               	movwf	?___fttol+3
  1701  04A7  3000               	movlw	0
  1702  04A8  00A3               	movwf	?___fttol+2
  1703  04A9  3000               	movlw	0
  1704  04AA  00A2               	movwf	?___fttol+1
  1705  04AB  3000               	movlw	0
  1706  04AC  00A1               	movwf	?___fttol
  1707  04AD  0008               	return
  1708  04AE                     l1363:	
  1709  04AE  3001               	movlw	1
  1710  04AF                     u1805:	
  1711  04AF  35AA               	lslf	___fttol@lval,f
  1712  04B0  0DAB               	rlf	___fttol@lval+1,f
  1713  04B1  0DAC               	rlf	___fttol@lval+2,f
  1714  04B2  0DAD               	rlf	___fttol@lval+3,f
  1715  04B3  0B89               	decfsz	9,f
  1716  04B4  2CAF               	goto	u1805
  1717  04B5  3001               	movlw	1
  1718  04B6  02AE               	subwf	___fttol@exp1,f
  1719  04B7                     l445:	
  1720  04B7  082E               	movf	___fttol@exp1,w
  1721  04B8  1D03               	btfss	3,2
  1722  04B9  2CAE               	goto	l1363
  1723  04BA                     l1365:	
  1724  04BA  0829               	movf	___fttol@sign1,w
  1725  04BB  1903               	btfsc	3,2
  1726  04BC  2CC8               	goto	l1369
  1727  04BD  09AA               	comf	___fttol@lval,f
  1728  04BE  09AB               	comf	___fttol@lval+1,f
  1729  04BF  09AC               	comf	___fttol@lval+2,f
  1730  04C0  09AD               	comf	___fttol@lval+3,f
  1731  04C1  0AAA               	incf	___fttol@lval,f
  1732  04C2  1903               	skipnz
  1733  04C3  0AAB               	incf	___fttol@lval+1,f
  1734  04C4  1903               	skipnz
  1735  04C5  0AAC               	incf	___fttol@lval+2,f
  1736  04C6  1903               	skipnz
  1737  04C7  0AAD               	incf	___fttol@lval+3,f
  1738  04C8                     l1369:	
  1739  04C8  082D               	movf	___fttol@lval+3,w
  1740  04C9  00A4               	movwf	?___fttol+3
  1741  04CA  082C               	movf	___fttol@lval+2,w
  1742  04CB  00A3               	movwf	?___fttol+2
  1743  04CC  082B               	movf	___fttol@lval+1,w
  1744  04CD  00A2               	movwf	?___fttol+1
  1745  04CE  082A               	movf	___fttol@lval,w
  1746  04CF  00A1               	movwf	?___fttol
  1747  04D0  0008               	return
  1748  04D1                     __end_of___fttol:	
  1749                           
  1750                           	psect	text5
  1751  070F                     __ptext5:	
  1752 ;; *************** function ___ftneg *****************
  1753 ;; Defined at:
  1754 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  f1              3    1[BANK0 ] float 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  3    1[BANK0 ] float 
  1761 ;; Registers used:
  1762 ;;		wreg
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1
  1768 ;;      Params:         0       3       0
  1769 ;;      Locals:         0       0       0
  1770 ;;      Temps:          0       0       0
  1771 ;;      Totals:         0       3       0
  1772 ;;Total ram usage:        3 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    2
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_calculate_pid
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function ___ftneg
  1784  070F                     ___ftneg:	
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in ___ftneg: [wreg]
  1788  070F  0020               	movlb	0	; select bank0
  1789  0710  0823               	movf	___ftneg@f1+2,w
  1790  0711  0422               	iorwf	___ftneg@f1+1,w
  1791  0712  0421               	iorwf	___ftneg@f1,w
  1792  0713  1903               	skipnz
  1793  0714  0008               	return
  1794  0715  3080               	movlw	128
  1795  0716  06A3               	xorwf	___ftneg@f1+2,f
  1796  0717  0008               	return
  1797  0718                     __end_of___ftneg:	
  1798                           
  1799                           	psect	text6
  1800  02EF                     __ptext6:	
  1801 ;; *************** function ___ftmul *****************
  1802 ;; Defined at:
  1803 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  f1              3   25[BANK0 ] float 
  1806 ;;  f2              3   28[BANK0 ] float 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  1809 ;;  sign            1   40[BANK0 ] unsigned char 
  1810 ;;  cntr            1   39[BANK0 ] unsigned char 
  1811 ;;  exp             1   35[BANK0 ] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  3   25[BANK0 ] float 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1
  1821 ;;      Params:         0       6       0
  1822 ;;      Locals:         0       6       0
  1823 ;;      Temps:          0       4       0
  1824 ;;      Totals:         0      16       0
  1825 ;;Total ram usage:       16 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    3
  1828 ;; This function calls:
  1829 ;;		___ftpack
  1830 ;; This function is called by:
  1831 ;;		_calculate_pid
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function ___ftmul
  1837  02EF                     ___ftmul:	
  1838                           
  1839                           ;incstack = 0
  1840                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1841  02EF  0020               	movlb	0	; select bank0
  1842  02F0  0839               	movf	___ftmul@f1,w
  1843  02F1  00BF               	movwf	??___ftmul
  1844  02F2  083A               	movf	___ftmul@f1+1,w
  1845  02F3  00C0               	movwf	??___ftmul+1
  1846  02F4  083B               	movf	___ftmul@f1+2,w
  1847  02F5  00C1               	movwf	??___ftmul+2
  1848  02F6  1003               	clrc
  1849  02F7  0D40               	rlf	??___ftmul+1,w
  1850  02F8  0D41               	rlf	??___ftmul+2,w
  1851  02F9  00C2               	movwf	??___ftmul+3
  1852  02FA  0842               	movf	??___ftmul+3,w
  1853  02FB  00C3               	movwf	___ftmul@exp
  1854  02FC  0843               	movf	___ftmul@exp,w
  1855  02FD  1D03               	btfss	3,2
  1856  02FE  2B06               	goto	l1279
  1857  02FF  3000               	movlw	0
  1858  0300  00B9               	movwf	?___ftmul
  1859  0301  3000               	movlw	0
  1860  0302  00BA               	movwf	?___ftmul+1
  1861  0303  3000               	movlw	0
  1862  0304  00BB               	movwf	?___ftmul+2
  1863  0305  0008               	return
  1864  0306                     l1279:	
  1865  0306  083C               	movf	___ftmul@f2,w
  1866  0307  00BF               	movwf	??___ftmul
  1867  0308  083D               	movf	___ftmul@f2+1,w
  1868  0309  00C0               	movwf	??___ftmul+1
  1869  030A  083E               	movf	___ftmul@f2+2,w
  1870  030B  00C1               	movwf	??___ftmul+2
  1871  030C  1003               	clrc
  1872  030D  0D40               	rlf	??___ftmul+1,w
  1873  030E  0D41               	rlf	??___ftmul+2,w
  1874  030F  00C2               	movwf	??___ftmul+3
  1875  0310  0842               	movf	??___ftmul+3,w
  1876  0311  00C8               	movwf	___ftmul@sign
  1877  0312  0848               	movf	___ftmul@sign,w
  1878  0313  1D03               	btfss	3,2
  1879  0314  2B1C               	goto	l1285
  1880  0315  3000               	movlw	0
  1881  0316  00B9               	movwf	?___ftmul
  1882  0317  3000               	movlw	0
  1883  0318  00BA               	movwf	?___ftmul+1
  1884  0319  3000               	movlw	0
  1885  031A  00BB               	movwf	?___ftmul+2
  1886  031B  0008               	return
  1887  031C                     l1285:	
  1888  031C  0848               	movf	___ftmul@sign,w
  1889  031D  3E7B               	addlw	123
  1890  031E  00BF               	movwf	??___ftmul
  1891  031F  083F               	movf	??___ftmul,w
  1892  0320  07C3               	addwf	___ftmul@exp,f
  1893  0321  0839               	movf	___ftmul@f1,w
  1894  0322  00BF               	movwf	??___ftmul
  1895  0323  083A               	movf	___ftmul@f1+1,w
  1896  0324  00C0               	movwf	??___ftmul+1
  1897  0325  083B               	movf	___ftmul@f1+2,w
  1898  0326  00C1               	movwf	??___ftmul+2
  1899  0327  3010               	movlw	16
  1900  0328                     u1625:	
  1901  0328  36C1               	lsrf	??___ftmul+2,f
  1902  0329  0CC0               	rrf	??___ftmul+1,f
  1903  032A  0CBF               	rrf	??___ftmul,f
  1904  032B  0B89               	decfsz	9,f
  1905  032C  2B28               	goto	u1625
  1906  032D  083F               	movf	??___ftmul,w
  1907  032E  00C2               	movwf	??___ftmul+3
  1908  032F  0842               	movf	??___ftmul+3,w
  1909  0330  00C8               	movwf	___ftmul@sign
  1910  0331  083C               	movf	___ftmul@f2,w
  1911  0332  00BF               	movwf	??___ftmul
  1912  0333  083D               	movf	___ftmul@f2+1,w
  1913  0334  00C0               	movwf	??___ftmul+1
  1914  0335  083E               	movf	___ftmul@f2+2,w
  1915  0336  00C1               	movwf	??___ftmul+2
  1916  0337  3010               	movlw	16
  1917  0338                     u1635:	
  1918  0338  36C1               	lsrf	??___ftmul+2,f
  1919  0339  0CC0               	rrf	??___ftmul+1,f
  1920  033A  0CBF               	rrf	??___ftmul,f
  1921  033B  0B89               	decfsz	9,f
  1922  033C  2B38               	goto	u1635
  1923  033D  083F               	movf	??___ftmul,w
  1924  033E  00C2               	movwf	??___ftmul+3
  1925  033F  0842               	movf	??___ftmul+3,w
  1926  0340  06C8               	xorwf	___ftmul@sign,f
  1927  0341  3080               	movlw	128
  1928  0342  00BF               	movwf	??___ftmul
  1929  0343  083F               	movf	??___ftmul,w
  1930  0344  05C8               	andwf	___ftmul@sign,f
  1931  0345  17BA               	bsf	___ftmul@f1+1,7
  1932  0346  17BD               	bsf	___ftmul@f2+1,7
  1933  0347  30FF               	movlw	255
  1934  0348  05BC               	andwf	___ftmul@f2,f
  1935  0349  30FF               	movlw	255
  1936  034A  05BD               	andwf	___ftmul@f2+1,f
  1937  034B  3000               	movlw	0
  1938  034C  05BE               	andwf	___ftmul@f2+2,f
  1939  034D  3000               	movlw	0
  1940  034E  00C4               	movwf	___ftmul@f3_as_product
  1941  034F  3000               	movlw	0
  1942  0350  00C5               	movwf	___ftmul@f3_as_product+1
  1943  0351  3000               	movlw	0
  1944  0352  00C6               	movwf	___ftmul@f3_as_product+2
  1945  0353  3007               	movlw	7
  1946  0354  00BF               	movwf	??___ftmul
  1947  0355  083F               	movf	??___ftmul,w
  1948  0356  00C7               	movwf	___ftmul@cntr
  1949  0357                     l1297:	
  1950  0357  1C39               	btfss	___ftmul@f1,0
  1951  0358  2B5F               	goto	l1301
  1952  0359  083C               	movf	___ftmul@f2,w
  1953  035A  07C4               	addwf	___ftmul@f3_as_product,f
  1954  035B  083D               	movf	___ftmul@f2+1,w
  1955  035C  3DC5               	addwfc	___ftmul@f3_as_product+1,f
  1956  035D  083E               	movf	___ftmul@f2+2,w
  1957  035E  3DC6               	addwfc	___ftmul@f3_as_product+2,f
  1958  035F                     l1301:	
  1959  035F  3001               	movlw	1
  1960  0360                     u1655:	
  1961  0360  36BB               	lsrf	___ftmul@f1+2,f
  1962  0361  0CBA               	rrf	___ftmul@f1+1,f
  1963  0362  0CB9               	rrf	___ftmul@f1,f
  1964  0363  0B89               	decfsz	9,f
  1965  0364  2B60               	goto	u1655
  1966  0365  3001               	movlw	1
  1967  0366                     u1665:	
  1968  0366  35BC               	lslf	___ftmul@f2,f
  1969  0367  0DBD               	rlf	___ftmul@f2+1,f
  1970  0368  0DBE               	rlf	___ftmul@f2+2,f
  1971  0369  0B89               	decfsz	9,f
  1972  036A  2B66               	goto	u1665
  1973  036B  3001               	movlw	1
  1974  036C  02C7               	subwf	___ftmul@cntr,f
  1975  036D  1D03               	btfss	3,2
  1976  036E  2B57               	goto	l1297
  1977  036F  3009               	movlw	9
  1978  0370  00BF               	movwf	??___ftmul
  1979  0371  083F               	movf	??___ftmul,w
  1980  0372  00C7               	movwf	___ftmul@cntr
  1981  0373                     l1309:	
  1982  0373  1C39               	btfss	___ftmul@f1,0
  1983  0374  2B7B               	goto	l1313
  1984  0375  083C               	movf	___ftmul@f2,w
  1985  0376  07C4               	addwf	___ftmul@f3_as_product,f
  1986  0377  083D               	movf	___ftmul@f2+1,w
  1987  0378  3DC5               	addwfc	___ftmul@f3_as_product+1,f
  1988  0379  083E               	movf	___ftmul@f2+2,w
  1989  037A  3DC6               	addwfc	___ftmul@f3_as_product+2,f
  1990  037B                     l1313:	
  1991  037B  3001               	movlw	1
  1992  037C                     u1695:	
  1993  037C  36BB               	lsrf	___ftmul@f1+2,f
  1994  037D  0CBA               	rrf	___ftmul@f1+1,f
  1995  037E  0CB9               	rrf	___ftmul@f1,f
  1996  037F  0B89               	decfsz	9,f
  1997  0380  2B7C               	goto	u1695
  1998  0381  3001               	movlw	1
  1999  0382                     u1705:	
  2000  0382  36C6               	lsrf	___ftmul@f3_as_product+2,f
  2001  0383  0CC5               	rrf	___ftmul@f3_as_product+1,f
  2002  0384  0CC4               	rrf	___ftmul@f3_as_product,f
  2003  0385  0B89               	decfsz	9,f
  2004  0386  2B82               	goto	u1705
  2005  0387  3001               	movlw	1
  2006  0388  02C7               	subwf	___ftmul@cntr,f
  2007  0389  1D03               	btfss	3,2
  2008  038A  2B73               	goto	l1309
  2009  038B  0844               	movf	___ftmul@f3_as_product,w
  2010  038C  00A1               	movwf	___ftpack@arg
  2011  038D  0845               	movf	___ftmul@f3_as_product+1,w
  2012  038E  00A2               	movwf	___ftpack@arg+1
  2013  038F  0846               	movf	___ftmul@f3_as_product+2,w
  2014  0390  00A3               	movwf	___ftpack@arg+2
  2015  0391  0843               	movf	___ftmul@exp,w
  2016  0392  00BF               	movwf	??___ftmul
  2017  0393  083F               	movf	??___ftmul,w
  2018  0394  00A4               	movwf	___ftpack@exp
  2019  0395  0848               	movf	___ftmul@sign,w
  2020  0396  00C0               	movwf	??___ftmul+1
  2021  0397  0840               	movf	??___ftmul+1,w
  2022  0398  00A5               	movwf	___ftpack@sign
  2023  0399  2548               	fcall	___ftpack
  2024  039A  0020               	movlb	0	; select bank0
  2025  039B  0821               	movf	?___ftpack,w
  2026  039C  00B9               	movwf	?___ftmul
  2027  039D  0822               	movf	?___ftpack+1,w
  2028  039E  00BA               	movwf	?___ftmul+1
  2029  039F  0823               	movf	?___ftpack+2,w
  2030  03A0  00BB               	movwf	?___ftmul+2
  2031  03A1  0008               	return
  2032  03A2                     __end_of___ftmul:	
  2033                           
  2034                           	psect	text7
  2035  0602                     __ptext7:	
  2036 ;; *************** function ___ftge *****************
  2037 ;; Defined at:
  2038 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  ff1             3    1[BANK0 ] float 
  2041 ;;  ff2             3    4[BANK0 ] float 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;		None               void
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1
  2053 ;;      Params:         0       6       0
  2054 ;;      Locals:         0       0       0
  2055 ;;      Temps:          0       3       0
  2056 ;;      Totals:         0       9       0
  2057 ;;Total ram usage:        9 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    2
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_calculate_pid
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function ___ftge
  2069  0602                     ___ftge:	
  2070                           
  2071                           ;incstack = 0
  2072                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2073  0602  0020               	movlb	0	; select bank0
  2074  0603  1FA3               	btfss	___ftge@ff1+2,7
  2075  0604  2E19               	goto	l1257
  2076  0605  0921               	comf	___ftge@ff1,w
  2077  0606  00A7               	movwf	??___ftge
  2078  0607  0922               	comf	___ftge@ff1+1,w
  2079  0608  00A8               	movwf	??___ftge+1
  2080  0609  0923               	comf	___ftge@ff1+2,w
  2081  060A  00A9               	movwf	??___ftge+2
  2082  060B  0AA7               	incf	??___ftge,f
  2083  060C  1903               	skipnz
  2084  060D  0AA8               	incf	??___ftge+1,f
  2085  060E  1903               	skipnz
  2086  060F  0AA9               	incf	??___ftge+2,f
  2087  0610  3000               	movlw	0
  2088  0611  0727               	addwf	??___ftge,w
  2089  0612  00A1               	movwf	___ftge@ff1
  2090  0613  3000               	movlw	0
  2091  0614  3D28               	addwfc	??___ftge+1,w
  2092  0615  00A2               	movwf	___ftge@ff1+1
  2093  0616  3080               	movlw	128
  2094  0617  3D29               	addwfc	??___ftge+2,w
  2095  0618  00A3               	movwf	___ftge@ff1+2
  2096  0619                     l1257:	
  2097  0619  1FA6               	btfss	___ftge@ff2+2,7
  2098  061A  2E2F               	goto	l1261
  2099  061B  0924               	comf	___ftge@ff2,w
  2100  061C  00A7               	movwf	??___ftge
  2101  061D  0925               	comf	___ftge@ff2+1,w
  2102  061E  00A8               	movwf	??___ftge+1
  2103  061F  0926               	comf	___ftge@ff2+2,w
  2104  0620  00A9               	movwf	??___ftge+2
  2105  0621  0AA7               	incf	??___ftge,f
  2106  0622  1903               	skipnz
  2107  0623  0AA8               	incf	??___ftge+1,f
  2108  0624  1903               	skipnz
  2109  0625  0AA9               	incf	??___ftge+2,f
  2110  0626  3000               	movlw	0
  2111  0627  0727               	addwf	??___ftge,w
  2112  0628  00A4               	movwf	___ftge@ff2
  2113  0629  3000               	movlw	0
  2114  062A  3D28               	addwfc	??___ftge+1,w
  2115  062B  00A5               	movwf	___ftge@ff2+1
  2116  062C  3080               	movlw	128
  2117  062D  3D29               	addwfc	??___ftge+2,w
  2118  062E  00A6               	movwf	___ftge@ff2+2
  2119  062F                     l1261:	
  2120  062F  3080               	movlw	128
  2121  0630  06A3               	xorwf	___ftge@ff1+2,f
  2122  0631  3080               	movlw	128
  2123  0632  06A6               	xorwf	___ftge@ff2+2,f
  2124  0633  0826               	movf	___ftge@ff2+2,w
  2125  0634  0223               	subwf	___ftge@ff1+2,w
  2126  0635  1D03               	skipz
  2127  0636  0008               	return
  2128  0637  0825               	movf	___ftge@ff2+1,w
  2129  0638  0222               	subwf	___ftge@ff1+1,w
  2130  0639  1D03               	skipz
  2131  063A  0008               	return
  2132  063B  0824               	movf	___ftge@ff2,w
  2133  063C  0221               	subwf	___ftge@ff1,w
  2134  063D  0008               	return
  2135  063E                     __end_of___ftge:	
  2136                           
  2137                           	psect	text8
  2138  03A2                     __ptext8:	
  2139 ;; *************** function ___ftdiv *****************
  2140 ;; Defined at:
  2141 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  f2              3    9[BANK0 ] float 
  2144 ;;  f1              3   12[BANK0 ] float 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  f3              3   20[BANK0 ] float 
  2147 ;;  sign            1   24[BANK0 ] unsigned char 
  2148 ;;  exp             1   23[BANK0 ] unsigned char 
  2149 ;;  cntr            1   19[BANK0 ] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  3    9[BANK0 ] float 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, pclath, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1
  2159 ;;      Params:         0       6       0
  2160 ;;      Locals:         0       6       0
  2161 ;;      Temps:          0       4       0
  2162 ;;      Totals:         0      16       0
  2163 ;;Total ram usage:       16 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    3
  2166 ;; This function calls:
  2167 ;;		___ftpack
  2168 ;; This function is called by:
  2169 ;;		_calculate_pid
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function ___ftdiv
  2175  03A2                     ___ftdiv:	
  2176                           
  2177                           ;incstack = 0
  2178                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2179  03A2  0020               	movlb	0	; select bank0
  2180  03A3  082C               	movf	___ftdiv@f1,w
  2181  03A4  00AF               	movwf	??___ftdiv
  2182  03A5  082D               	movf	___ftdiv@f1+1,w
  2183  03A6  00B0               	movwf	??___ftdiv+1
  2184  03A7  082E               	movf	___ftdiv@f1+2,w
  2185  03A8  00B1               	movwf	??___ftdiv+2
  2186  03A9  1003               	clrc
  2187  03AA  0D30               	rlf	??___ftdiv+1,w
  2188  03AB  0D31               	rlf	??___ftdiv+2,w
  2189  03AC  00B2               	movwf	??___ftdiv+3
  2190  03AD  0832               	movf	??___ftdiv+3,w
  2191  03AE  00B7               	movwf	___ftdiv@exp
  2192  03AF  0837               	movf	___ftdiv@exp,w
  2193  03B0  1D03               	btfss	3,2
  2194  03B1  2BB9               	goto	l1217
  2195  03B2  3000               	movlw	0
  2196  03B3  00A9               	movwf	?___ftdiv
  2197  03B4  3000               	movlw	0
  2198  03B5  00AA               	movwf	?___ftdiv+1
  2199  03B6  3000               	movlw	0
  2200  03B7  00AB               	movwf	?___ftdiv+2
  2201  03B8  0008               	return
  2202  03B9                     l1217:	
  2203  03B9  0829               	movf	___ftdiv@f2,w
  2204  03BA  00AF               	movwf	??___ftdiv
  2205  03BB  082A               	movf	___ftdiv@f2+1,w
  2206  03BC  00B0               	movwf	??___ftdiv+1
  2207  03BD  082B               	movf	___ftdiv@f2+2,w
  2208  03BE  00B1               	movwf	??___ftdiv+2
  2209  03BF  1003               	clrc
  2210  03C0  0D30               	rlf	??___ftdiv+1,w
  2211  03C1  0D31               	rlf	??___ftdiv+2,w
  2212  03C2  00B2               	movwf	??___ftdiv+3
  2213  03C3  0832               	movf	??___ftdiv+3,w
  2214  03C4  00B8               	movwf	___ftdiv@sign
  2215  03C5  0838               	movf	___ftdiv@sign,w
  2216  03C6  1D03               	btfss	3,2
  2217  03C7  2BCF               	goto	l1223
  2218  03C8  3000               	movlw	0
  2219  03C9  00A9               	movwf	?___ftdiv
  2220  03CA  3000               	movlw	0
  2221  03CB  00AA               	movwf	?___ftdiv+1
  2222  03CC  3000               	movlw	0
  2223  03CD  00AB               	movwf	?___ftdiv+2
  2224  03CE  0008               	return
  2225  03CF                     l1223:	
  2226  03CF  3000               	movlw	0
  2227  03D0  00B4               	movwf	___ftdiv@f3
  2228  03D1  3000               	movlw	0
  2229  03D2  00B5               	movwf	___ftdiv@f3+1
  2230  03D3  3000               	movlw	0
  2231  03D4  00B6               	movwf	___ftdiv@f3+2
  2232  03D5  3089               	movlw	137
  2233  03D6  0738               	addwf	___ftdiv@sign,w
  2234  03D7  00AF               	movwf	??___ftdiv
  2235  03D8  082F               	movf	??___ftdiv,w
  2236  03D9  02B7               	subwf	___ftdiv@exp,f
  2237  03DA  082C               	movf	___ftdiv@f1,w
  2238  03DB  00AF               	movwf	??___ftdiv
  2239  03DC  082D               	movf	___ftdiv@f1+1,w
  2240  03DD  00B0               	movwf	??___ftdiv+1
  2241  03DE  082E               	movf	___ftdiv@f1+2,w
  2242  03DF  00B1               	movwf	??___ftdiv+2
  2243  03E0  3010               	movlw	16
  2244  03E1                     u1515:	
  2245  03E1  36B1               	lsrf	??___ftdiv+2,f
  2246  03E2  0CB0               	rrf	??___ftdiv+1,f
  2247  03E3  0CAF               	rrf	??___ftdiv,f
  2248  03E4  0B89               	decfsz	9,f
  2249  03E5  2BE1               	goto	u1515
  2250  03E6  082F               	movf	??___ftdiv,w
  2251  03E7  00B2               	movwf	??___ftdiv+3
  2252  03E8  0832               	movf	??___ftdiv+3,w
  2253  03E9  00B8               	movwf	___ftdiv@sign
  2254  03EA  0829               	movf	___ftdiv@f2,w
  2255  03EB  00AF               	movwf	??___ftdiv
  2256  03EC  082A               	movf	___ftdiv@f2+1,w
  2257  03ED  00B0               	movwf	??___ftdiv+1
  2258  03EE  082B               	movf	___ftdiv@f2+2,w
  2259  03EF  00B1               	movwf	??___ftdiv+2
  2260  03F0  3010               	movlw	16
  2261  03F1                     u1525:	
  2262  03F1  36B1               	lsrf	??___ftdiv+2,f
  2263  03F2  0CB0               	rrf	??___ftdiv+1,f
  2264  03F3  0CAF               	rrf	??___ftdiv,f
  2265  03F4  0B89               	decfsz	9,f
  2266  03F5  2BF1               	goto	u1525
  2267  03F6  082F               	movf	??___ftdiv,w
  2268  03F7  00B2               	movwf	??___ftdiv+3
  2269  03F8  0832               	movf	??___ftdiv+3,w
  2270  03F9  06B8               	xorwf	___ftdiv@sign,f
  2271  03FA  3080               	movlw	128
  2272  03FB  00AF               	movwf	??___ftdiv
  2273  03FC  082F               	movf	??___ftdiv,w
  2274  03FD  05B8               	andwf	___ftdiv@sign,f
  2275  03FE  17AD               	bsf	___ftdiv@f1+1,7
  2276  03FF  30FF               	movlw	255
  2277  0400  05AC               	andwf	___ftdiv@f1,f
  2278  0401  30FF               	movlw	255
  2279  0402  05AD               	andwf	___ftdiv@f1+1,f
  2280  0403  3000               	movlw	0
  2281  0404  05AE               	andwf	___ftdiv@f1+2,f
  2282  0405  17AA               	bsf	___ftdiv@f2+1,7
  2283  0406  30FF               	movlw	255
  2284  0407  05A9               	andwf	___ftdiv@f2,f
  2285  0408  30FF               	movlw	255
  2286  0409  05AA               	andwf	___ftdiv@f2+1,f
  2287  040A  3000               	movlw	0
  2288  040B  05AB               	andwf	___ftdiv@f2+2,f
  2289  040C  3018               	movlw	24
  2290  040D  00AF               	movwf	??___ftdiv
  2291  040E  082F               	movf	??___ftdiv,w
  2292  040F  00B3               	movwf	___ftdiv@cntr
  2293  0410                     l1237:	
  2294  0410  3001               	movlw	1
  2295  0411                     u1535:	
  2296  0411  35B4               	lslf	___ftdiv@f3,f
  2297  0412  0DB5               	rlf	___ftdiv@f3+1,f
  2298  0413  0DB6               	rlf	___ftdiv@f3+2,f
  2299  0414  0B89               	decfsz	9,f
  2300  0415  2C11               	goto	u1535
  2301  0416  082B               	movf	___ftdiv@f2+2,w
  2302  0417  022E               	subwf	___ftdiv@f1+2,w
  2303  0418  1D03               	skipz
  2304  0419  2C20               	goto	u1545
  2305  041A  082A               	movf	___ftdiv@f2+1,w
  2306  041B  022D               	subwf	___ftdiv@f1+1,w
  2307  041C  1D03               	skipz
  2308  041D  2C20               	goto	u1545
  2309  041E  0829               	movf	___ftdiv@f2,w
  2310  041F  022C               	subwf	___ftdiv@f1,w
  2311  0420                     u1545:	
  2312  0420  1C03               	skipc
  2313  0421  2C29               	goto	l1245
  2314  0422  0829               	movf	___ftdiv@f2,w
  2315  0423  02AC               	subwf	___ftdiv@f1,f
  2316  0424  082A               	movf	___ftdiv@f2+1,w
  2317  0425  3BAD               	subwfb	___ftdiv@f1+1,f
  2318  0426  082B               	movf	___ftdiv@f2+2,w
  2319  0427  3BAE               	subwfb	___ftdiv@f1+2,f
  2320  0428  1434               	bsf	___ftdiv@f3,0
  2321  0429                     l1245:	
  2322  0429  3001               	movlw	1
  2323  042A                     u1555:	
  2324  042A  35AC               	lslf	___ftdiv@f1,f
  2325  042B  0DAD               	rlf	___ftdiv@f1+1,f
  2326  042C  0DAE               	rlf	___ftdiv@f1+2,f
  2327  042D  0B89               	decfsz	9,f
  2328  042E  2C2A               	goto	u1555
  2329  042F  3001               	movlw	1
  2330  0430  02B3               	subwf	___ftdiv@cntr,f
  2331  0431  1D03               	btfss	3,2
  2332  0432  2C10               	goto	l1237
  2333  0433  0834               	movf	___ftdiv@f3,w
  2334  0434  00A1               	movwf	___ftpack@arg
  2335  0435  0835               	movf	___ftdiv@f3+1,w
  2336  0436  00A2               	movwf	___ftpack@arg+1
  2337  0437  0836               	movf	___ftdiv@f3+2,w
  2338  0438  00A3               	movwf	___ftpack@arg+2
  2339  0439  0837               	movf	___ftdiv@exp,w
  2340  043A  00AF               	movwf	??___ftdiv
  2341  043B  082F               	movf	??___ftdiv,w
  2342  043C  00A4               	movwf	___ftpack@exp
  2343  043D  0838               	movf	___ftdiv@sign,w
  2344  043E  00B0               	movwf	??___ftdiv+1
  2345  043F  0830               	movf	??___ftdiv+1,w
  2346  0440  00A5               	movwf	___ftpack@sign
  2347  0441  2548               	fcall	___ftpack
  2348  0442  0020               	movlb	0	; select bank0
  2349  0443  0821               	movf	?___ftpack,w
  2350  0444  00A9               	movwf	?___ftdiv
  2351  0445  0822               	movf	?___ftpack+1,w
  2352  0446  00AA               	movwf	?___ftdiv+1
  2353  0447  0823               	movf	?___ftpack+2,w
  2354  0448  00AB               	movwf	?___ftdiv+2
  2355  0449  0008               	return
  2356  044A                     __end_of___ftdiv:	
  2357                           
  2358                           	psect	text9
  2359  01FA                     __ptext9:	
  2360 ;; *************** function ___ftadd *****************
  2361 ;; Defined at:
  2362 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  f1              3   41[BANK0 ] float 
  2365 ;;  f2              3   44[BANK0 ] float 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  exp1            1   53[BANK0 ] unsigned char 
  2368 ;;  exp2            1   52[BANK0 ] unsigned char 
  2369 ;;  sign            1   51[BANK0 ] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  3   41[BANK0 ] float 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1
  2379 ;;      Params:         0       6       0
  2380 ;;      Locals:         0       3       0
  2381 ;;      Temps:          0       4       0
  2382 ;;      Totals:         0      13       0
  2383 ;;Total ram usage:       13 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    3
  2386 ;; This function calls:
  2387 ;;		___ftpack
  2388 ;; This function is called by:
  2389 ;;		_calculate_pid
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           
  2394                           ;psect for function ___ftadd
  2395  01FA                     ___ftadd:	
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2399  01FA  0020               	movlb	0	; select bank0
  2400  01FB  0849               	movf	___ftadd@f1,w
  2401  01FC  00CF               	movwf	??___ftadd
  2402  01FD  084A               	movf	___ftadd@f1+1,w
  2403  01FE  00D0               	movwf	??___ftadd+1
  2404  01FF  084B               	movf	___ftadd@f1+2,w
  2405  0200  00D1               	movwf	??___ftadd+2
  2406  0201  1003               	clrc
  2407  0202  0D50               	rlf	??___ftadd+1,w
  2408  0203  0D51               	rlf	??___ftadd+2,w
  2409  0204  00D2               	movwf	??___ftadd+3
  2410  0205  0852               	movf	??___ftadd+3,w
  2411  0206  00D5               	movwf	___ftadd@exp1
  2412  0207  084C               	movf	___ftadd@f2,w
  2413  0208  00CF               	movwf	??___ftadd
  2414  0209  084D               	movf	___ftadd@f2+1,w
  2415  020A  00D0               	movwf	??___ftadd+1
  2416  020B  084E               	movf	___ftadd@f2+2,w
  2417  020C  00D1               	movwf	??___ftadd+2
  2418  020D  1003               	clrc
  2419  020E  0D50               	rlf	??___ftadd+1,w
  2420  020F  0D51               	rlf	??___ftadd+2,w
  2421  0210  00D2               	movwf	??___ftadd+3
  2422  0211  0852               	movf	??___ftadd+3,w
  2423  0212  00D4               	movwf	___ftadd@exp2
  2424  0213  0855               	movf	___ftadd@exp1,w
  2425  0214  1903               	btfsc	3,2
  2426  0215  2A22               	goto	l1147
  2427  0216  0854               	movf	___ftadd@exp2,w
  2428  0217  0255               	subwf	___ftadd@exp1,w
  2429  0218  1803               	skipnc
  2430  0219  2A29               	goto	l1151
  2431  021A  0355               	decf	___ftadd@exp1,w
  2432  021B  3AFF               	xorlw	255
  2433  021C  0754               	addwf	___ftadd@exp2,w
  2434  021D  00CF               	movwf	??___ftadd
  2435  021E  3019               	movlw	25
  2436  021F  024F               	subwf	??___ftadd,w
  2437  0220  1C03               	skipc
  2438  0221  2A29               	goto	l1151
  2439  0222                     l1147:	
  2440  0222  084C               	movf	___ftadd@f2,w
  2441  0223  00C9               	movwf	?___ftadd
  2442  0224  084D               	movf	___ftadd@f2+1,w
  2443  0225  00CA               	movwf	?___ftadd+1
  2444  0226  084E               	movf	___ftadd@f2+2,w
  2445  0227  00CB               	movwf	?___ftadd+2
  2446  0228  0008               	return
  2447  0229                     l1151:	
  2448  0229  0854               	movf	___ftadd@exp2,w
  2449  022A  1903               	btfsc	3,2
  2450  022B  0008               	return
  2451  022C  0855               	movf	___ftadd@exp1,w
  2452  022D  0254               	subwf	___ftadd@exp2,w
  2453  022E  1803               	skipnc
  2454  022F  2A38               	goto	l1157
  2455  0230  0354               	decf	___ftadd@exp2,w
  2456  0231  3AFF               	xorlw	255
  2457  0232  0755               	addwf	___ftadd@exp1,w
  2458  0233  00CF               	movwf	??___ftadd
  2459  0234  3019               	movlw	25
  2460  0235  024F               	subwf	??___ftadd,w
  2461  0236  1803               	btfsc	3,0
  2462  0237  0008               	return
  2463  0238                     l1157:	
  2464  0238  3006               	movlw	6
  2465  0239  00CF               	movwf	??___ftadd
  2466  023A  084F               	movf	??___ftadd,w
  2467  023B  00D3               	movwf	___ftadd@sign
  2468  023C  1BCB               	btfsc	___ftadd@f1+2,7
  2469  023D  17D3               	bsf	___ftadd@sign,7
  2470  023E  1BCE               	btfsc	___ftadd@f2+2,7
  2471  023F  1753               	bsf	___ftadd@sign,6
  2472  0240  17CA               	bsf	___ftadd@f1+1,7
  2473  0241  30FF               	movlw	255
  2474  0242  05C9               	andwf	___ftadd@f1,f
  2475  0243  30FF               	movlw	255
  2476  0244  05CA               	andwf	___ftadd@f1+1,f
  2477  0245  3000               	movlw	0
  2478  0246  05CB               	andwf	___ftadd@f1+2,f
  2479  0247  17CD               	bsf	___ftadd@f2+1,7
  2480  0248  30FF               	movlw	255
  2481  0249  05CC               	andwf	___ftadd@f2,f
  2482  024A  30FF               	movlw	255
  2483  024B  05CD               	andwf	___ftadd@f2+1,f
  2484  024C  3000               	movlw	0
  2485  024D  05CE               	andwf	___ftadd@f2+2,f
  2486  024E  0854               	movf	___ftadd@exp2,w
  2487  024F  0255               	subwf	___ftadd@exp1,w
  2488  0250  1803               	skipnc
  2489  0251  2A74               	goto	l1179
  2490  0252                     l1169:	
  2491  0252  3001               	movlw	1
  2492  0253                     u1355:	
  2493  0253  35CC               	lslf	___ftadd@f2,f
  2494  0254  0DCD               	rlf	___ftadd@f2+1,f
  2495  0255  0DCE               	rlf	___ftadd@f2+2,f
  2496  0256  0B89               	decfsz	9,f
  2497  0257  2A53               	goto	u1355
  2498  0258  3001               	movlw	1
  2499  0259  02D4               	subwf	___ftadd@exp2,f
  2500  025A  0854               	movf	___ftadd@exp2,w
  2501  025B  0655               	xorwf	___ftadd@exp1,w
  2502  025C  1903               	skipnz
  2503  025D  2A6F               	goto	l1177
  2504  025E  3001               	movlw	1
  2505  025F  02D3               	subwf	___ftadd@sign,f
  2506  0260  0853               	movf	___ftadd@sign,w
  2507  0261  3907               	andlw	7
  2508  0262  1903               	btfsc	3,2
  2509  0263  2A6F               	goto	l1177
  2510  0264  2A52               	goto	l1169
  2511  0265                     l1175:	
  2512  0265  3001               	movlw	1
  2513  0266                     u1385:	
  2514  0266  36CB               	lsrf	___ftadd@f1+2,f
  2515  0267  0CCA               	rrf	___ftadd@f1+1,f
  2516  0268  0CC9               	rrf	___ftadd@f1,f
  2517  0269  0B89               	decfsz	9,f
  2518  026A  2A66               	goto	u1385
  2519  026B  3001               	movlw	1
  2520  026C  00CF               	movwf	??___ftadd
  2521  026D  084F               	movf	??___ftadd,w
  2522  026E  07D5               	addwf	___ftadd@exp1,f
  2523  026F                     l1177:	
  2524  026F  0855               	movf	___ftadd@exp1,w
  2525  0270  0654               	xorwf	___ftadd@exp2,w
  2526  0271  1903               	btfsc	3,2
  2527  0272  2A99               	goto	l385
  2528  0273  2A65               	goto	l1175
  2529  0274                     l1179:	
  2530  0274  0855               	movf	___ftadd@exp1,w
  2531  0275  0254               	subwf	___ftadd@exp2,w
  2532  0276  1803               	skipnc
  2533  0277  2A99               	goto	l385
  2534  0278                     l1181:	
  2535  0278  3001               	movlw	1
  2536  0279                     u1415:	
  2537  0279  35C9               	lslf	___ftadd@f1,f
  2538  027A  0DCA               	rlf	___ftadd@f1+1,f
  2539  027B  0DCB               	rlf	___ftadd@f1+2,f
  2540  027C  0B89               	decfsz	9,f
  2541  027D  2A79               	goto	u1415
  2542  027E  3001               	movlw	1
  2543  027F  02D5               	subwf	___ftadd@exp1,f
  2544  0280  0854               	movf	___ftadd@exp2,w
  2545  0281  0655               	xorwf	___ftadd@exp1,w
  2546  0282  1903               	skipnz
  2547  0283  2A95               	goto	l1189
  2548  0284  3001               	movlw	1
  2549  0285  02D3               	subwf	___ftadd@sign,f
  2550  0286  0853               	movf	___ftadd@sign,w
  2551  0287  3907               	andlw	7
  2552  0288  1903               	btfsc	3,2
  2553  0289  2A95               	goto	l1189
  2554  028A  2A78               	goto	l1181
  2555  028B                     l1187:	
  2556  028B  3001               	movlw	1
  2557  028C                     u1445:	
  2558  028C  36CE               	lsrf	___ftadd@f2+2,f
  2559  028D  0CCD               	rrf	___ftadd@f2+1,f
  2560  028E  0CCC               	rrf	___ftadd@f2,f
  2561  028F  0B89               	decfsz	9,f
  2562  0290  2A8C               	goto	u1445
  2563  0291  3001               	movlw	1
  2564  0292  00CF               	movwf	??___ftadd
  2565  0293  084F               	movf	??___ftadd,w
  2566  0294  07D4               	addwf	___ftadd@exp2,f
  2567  0295                     l1189:	
  2568  0295  0855               	movf	___ftadd@exp1,w
  2569  0296  0654               	xorwf	___ftadd@exp2,w
  2570  0297  1D03               	skipz
  2571  0298  2A8B               	goto	l1187
  2572  0299                     l385:	
  2573  0299  1FD3               	btfss	___ftadd@sign,7
  2574  029A  2AAB               	goto	l1193
  2575  029B  30FF               	movlw	255
  2576  029C  06C9               	xorwf	___ftadd@f1,f
  2577  029D  30FF               	movlw	255
  2578  029E  06CA               	xorwf	___ftadd@f1+1,f
  2579  029F  30FF               	movlw	255
  2580  02A0  06CB               	xorwf	___ftadd@f1+2,f
  2581  02A1  3001               	movlw	1
  2582  02A2  07C9               	addwf	___ftadd@f1,f
  2583  02A3  3000               	movlw	0
  2584  02A4  1803               	skipnc
  2585  02A5  3001               	movlw	1
  2586  02A6  07CA               	addwf	___ftadd@f1+1,f
  2587  02A7  3000               	movlw	0
  2588  02A8  1803               	skipnc
  2589  02A9  3001               	movlw	1
  2590  02AA  07CB               	addwf	___ftadd@f1+2,f
  2591  02AB                     l1193:	
  2592  02AB  1F53               	btfss	___ftadd@sign,6
  2593  02AC  2ABD               	goto	l1197
  2594  02AD  30FF               	movlw	255
  2595  02AE  06CC               	xorwf	___ftadd@f2,f
  2596  02AF  30FF               	movlw	255
  2597  02B0  06CD               	xorwf	___ftadd@f2+1,f
  2598  02B1  30FF               	movlw	255
  2599  02B2  06CE               	xorwf	___ftadd@f2+2,f
  2600  02B3  3001               	movlw	1
  2601  02B4  07CC               	addwf	___ftadd@f2,f
  2602  02B5  3000               	movlw	0
  2603  02B6  1803               	skipnc
  2604  02B7  3001               	movlw	1
  2605  02B8  07CD               	addwf	___ftadd@f2+1,f
  2606  02B9  3000               	movlw	0
  2607  02BA  1803               	skipnc
  2608  02BB  3001               	movlw	1
  2609  02BC  07CE               	addwf	___ftadd@f2+2,f
  2610  02BD                     l1197:	
  2611  02BD  01D3               	clrf	___ftadd@sign
  2612  02BE  0849               	movf	___ftadd@f1,w
  2613  02BF  07CC               	addwf	___ftadd@f2,f
  2614  02C0  084A               	movf	___ftadd@f1+1,w
  2615  02C1  3DCD               	addwfc	___ftadd@f2+1,f
  2616  02C2  084B               	movf	___ftadd@f1+2,w
  2617  02C3  3DCE               	addwfc	___ftadd@f2+2,f
  2618  02C4  1FCE               	btfss	___ftadd@f2+2,7
  2619  02C5  2AD8               	goto	l1207
  2620  02C6  30FF               	movlw	255
  2621  02C7  06CC               	xorwf	___ftadd@f2,f
  2622  02C8  30FF               	movlw	255
  2623  02C9  06CD               	xorwf	___ftadd@f2+1,f
  2624  02CA  30FF               	movlw	255
  2625  02CB  06CE               	xorwf	___ftadd@f2+2,f
  2626  02CC  3001               	movlw	1
  2627  02CD  07CC               	addwf	___ftadd@f2,f
  2628  02CE  3000               	movlw	0
  2629  02CF  1803               	skipnc
  2630  02D0  3001               	movlw	1
  2631  02D1  07CD               	addwf	___ftadd@f2+1,f
  2632  02D2  3000               	movlw	0
  2633  02D3  1803               	skipnc
  2634  02D4  3001               	movlw	1
  2635  02D5  07CE               	addwf	___ftadd@f2+2,f
  2636  02D6  01D3               	clrf	___ftadd@sign
  2637  02D7  0AD3               	incf	___ftadd@sign,f
  2638  02D8                     l1207:	
  2639  02D8  084C               	movf	___ftadd@f2,w
  2640  02D9  00A1               	movwf	___ftpack@arg
  2641  02DA  084D               	movf	___ftadd@f2+1,w
  2642  02DB  00A2               	movwf	___ftpack@arg+1
  2643  02DC  084E               	movf	___ftadd@f2+2,w
  2644  02DD  00A3               	movwf	___ftpack@arg+2
  2645  02DE  0855               	movf	___ftadd@exp1,w
  2646  02DF  00CF               	movwf	??___ftadd
  2647  02E0  084F               	movf	??___ftadd,w
  2648  02E1  00A4               	movwf	___ftpack@exp
  2649  02E2  0853               	movf	___ftadd@sign,w
  2650  02E3  00D0               	movwf	??___ftadd+1
  2651  02E4  0850               	movf	??___ftadd+1,w
  2652  02E5  00A5               	movwf	___ftpack@sign
  2653  02E6  2548               	fcall	___ftpack
  2654  02E7  0020               	movlb	0	; select bank0
  2655  02E8  0821               	movf	?___ftpack,w
  2656  02E9  00C9               	movwf	?___ftadd
  2657  02EA  0822               	movf	?___ftpack+1,w
  2658  02EB  00CA               	movwf	?___ftadd+1
  2659  02EC  0823               	movf	?___ftpack+2,w
  2660  02ED  00CB               	movwf	?___ftadd+2
  2661  02EE  0008               	return
  2662  02EF                     __end_of___ftadd:	
  2663                           
  2664                           	psect	text10
  2665  06C7                     __ptext10:	
  2666 ;; *************** function ___awtoft *****************
  2667 ;; Defined at:
  2668 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  c               2    9[BANK0 ] int 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  sign            1   14[BANK0 ] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  3    9[BANK0 ] float 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, pclath, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1
  2682 ;;      Params:         0       3       0
  2683 ;;      Locals:         0       1       0
  2684 ;;      Temps:          0       2       0
  2685 ;;      Totals:         0       6       0
  2686 ;;Total ram usage:        6 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    3
  2689 ;; This function calls:
  2690 ;;		___ftpack
  2691 ;; This function is called by:
  2692 ;;		_calculate_pid
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           
  2697                           ;psect for function ___awtoft
  2698  06C7                     ___awtoft:	
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2702  06C7  0020               	movlb	0	; select bank0
  2703  06C8  01AE               	clrf	___awtoft@sign
  2704  06C9  1FAA               	btfss	___awtoft@c+1,7
  2705  06CA  2ED2               	goto	l1137
  2706  06CB  09A9               	comf	___awtoft@c,f
  2707  06CC  09AA               	comf	___awtoft@c+1,f
  2708  06CD  0AA9               	incf	___awtoft@c,f
  2709  06CE  1903               	skipnz
  2710  06CF  0AAA               	incf	___awtoft@c+1,f
  2711  06D0  01AE               	clrf	___awtoft@sign
  2712  06D1  0AAE               	incf	___awtoft@sign,f
  2713  06D2                     l1137:	
  2714  06D2  0829               	movf	___awtoft@c,w
  2715  06D3  00A1               	movwf	___ftpack@arg
  2716  06D4  082A               	movf	___awtoft@c+1,w
  2717  06D5  00A2               	movwf	___ftpack@arg+1
  2718  06D6  01A3               	clrf	___ftpack@arg+2
  2719  06D7  308E               	movlw	142
  2720  06D8  00AC               	movwf	??___awtoft
  2721  06D9  082C               	movf	??___awtoft,w
  2722  06DA  00A4               	movwf	___ftpack@exp
  2723  06DB  082E               	movf	___awtoft@sign,w
  2724  06DC  00AD               	movwf	??___awtoft+1
  2725  06DD  082D               	movf	??___awtoft+1,w
  2726  06DE  00A5               	movwf	___ftpack@sign
  2727  06DF  2548               	fcall	___ftpack
  2728  06E0  0020               	movlb	0	; select bank0
  2729  06E1  0821               	movf	?___ftpack,w
  2730  06E2  00A9               	movwf	?___awtoft
  2731  06E3  0822               	movf	?___ftpack+1,w
  2732  06E4  00AA               	movwf	?___awtoft+1
  2733  06E5  0823               	movf	?___ftpack+2,w
  2734  06E6  00AB               	movwf	?___awtoft+2
  2735  06E7  0008               	return
  2736  06E8                     __end_of___awtoft:	
  2737                           
  2738                           	psect	text11
  2739  0548                     __ptext11:	
  2740 ;; *************** function ___ftpack *****************
  2741 ;; Defined at:
  2742 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  arg             3    1[BANK0 ] unsigned um
  2745 ;;  exp             1    4[BANK0 ] unsigned char 
  2746 ;;  sign            1    5[BANK0 ] unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  3    1[BANK0 ] float 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1
  2758 ;;      Params:         0       5       0
  2759 ;;      Locals:         0       0       0
  2760 ;;      Temps:          0       3       0
  2761 ;;      Totals:         0       8       0
  2762 ;;Total ram usage:        8 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    2
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		___awtoft
  2769 ;;		___ftadd
  2770 ;;		___ftdiv
  2771 ;;		___ftmul
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function ___ftpack
  2777  0548                     ___ftpack:	
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2781  0548  0020               	movlb	0	; select bank0
  2782  0549  0824               	movf	___ftpack@exp,w
  2783  054A  1903               	btfsc	3,2
  2784  054B  2D51               	goto	l1083
  2785  054C  0823               	movf	___ftpack@arg+2,w
  2786  054D  0422               	iorwf	___ftpack@arg+1,w
  2787  054E  0421               	iorwf	___ftpack@arg,w
  2788  054F  1D03               	skipz
  2789  0550  2D62               	goto	l1089
  2790  0551                     l1083:	
  2791  0551  3000               	movlw	0
  2792  0552  00A1               	movwf	?___ftpack
  2793  0553  3000               	movlw	0
  2794  0554  00A2               	movwf	?___ftpack+1
  2795  0555  3000               	movlw	0
  2796  0556  00A3               	movwf	?___ftpack+2
  2797  0557  0008               	return
  2798  0558                     l1087:	
  2799  0558  3001               	movlw	1
  2800  0559  00A6               	movwf	??___ftpack
  2801  055A  0826               	movf	??___ftpack,w
  2802  055B  07A4               	addwf	___ftpack@exp,f
  2803  055C  3001               	movlw	1
  2804  055D                     u1125:	
  2805  055D  36A3               	lsrf	___ftpack@arg+2,f
  2806  055E  0CA2               	rrf	___ftpack@arg+1,f
  2807  055F  0CA1               	rrf	___ftpack@arg,f
  2808  0560  0B89               	decfsz	9,f
  2809  0561  2D5D               	goto	u1125
  2810  0562                     l1089:	
  2811  0562  30FE               	movlw	254
  2812  0563  0523               	andwf	___ftpack@arg+2,w
  2813  0564  1903               	btfsc	3,2
  2814  0565  2D7B               	goto	l354
  2815  0566  2D58               	goto	l1087
  2816  0567                     l1091:	
  2817  0567  3001               	movlw	1
  2818  0568  00A6               	movwf	??___ftpack
  2819  0569  0826               	movf	??___ftpack,w
  2820  056A  07A4               	addwf	___ftpack@exp,f
  2821  056B  3001               	movlw	1
  2822  056C  07A1               	addwf	___ftpack@arg,f
  2823  056D  3000               	movlw	0
  2824  056E  1803               	skipnc
  2825  056F  3001               	movlw	1
  2826  0570  07A2               	addwf	___ftpack@arg+1,f
  2827  0571  3000               	movlw	0
  2828  0572  1803               	skipnc
  2829  0573  3001               	movlw	1
  2830  0574  07A3               	addwf	___ftpack@arg+2,f
  2831  0575  3001               	movlw	1
  2832  0576                     u1145:	
  2833  0576  36A3               	lsrf	___ftpack@arg+2,f
  2834  0577  0CA2               	rrf	___ftpack@arg+1,f
  2835  0578  0CA1               	rrf	___ftpack@arg,f
  2836  0579  0B89               	decfsz	9,f
  2837  057A  2D76               	goto	u1145
  2838  057B                     l354:	
  2839  057B  30FF               	movlw	255
  2840  057C  0523               	andwf	___ftpack@arg+2,w
  2841  057D  1903               	btfsc	3,2
  2842  057E  2D88               	goto	l1099
  2843  057F  2D67               	goto	l1091
  2844  0580                     l1097:	
  2845  0580  3001               	movlw	1
  2846  0581  02A4               	subwf	___ftpack@exp,f
  2847  0582  3001               	movlw	1
  2848  0583                     u1165:	
  2849  0583  35A1               	lslf	___ftpack@arg,f
  2850  0584  0DA2               	rlf	___ftpack@arg+1,f
  2851  0585  0DA3               	rlf	___ftpack@arg+2,f
  2852  0586  0B89               	decfsz	9,f
  2853  0587  2D83               	goto	u1165
  2854  0588                     l1099:	
  2855  0588  1BA2               	btfsc	___ftpack@arg+1,7
  2856  0589  2D8E               	goto	l361
  2857  058A  3002               	movlw	2
  2858  058B  0224               	subwf	___ftpack@exp,w
  2859  058C  1803               	skipnc
  2860  058D  2D80               	goto	l1097
  2861  058E                     l361:	
  2862  058E  1824               	btfsc	___ftpack@exp,0
  2863  058F  2D96               	goto	l362
  2864  0590  30FF               	movlw	255
  2865  0591  05A1               	andwf	___ftpack@arg,f
  2866  0592  307F               	movlw	127
  2867  0593  05A2               	andwf	___ftpack@arg+1,f
  2868  0594  30FF               	movlw	255
  2869  0595  05A3               	andwf	___ftpack@arg+2,f
  2870  0596                     l362:	
  2871  0596  1003               	clrc
  2872  0597  0CA4               	rrf	___ftpack@exp,f
  2873  0598  0824               	movf	___ftpack@exp,w
  2874  0599  00A6               	movwf	??___ftpack
  2875  059A  01A7               	clrf	??___ftpack+1
  2876  059B  01A8               	clrf	??___ftpack+2
  2877  059C  3010               	movlw	16
  2878  059D                     u1205:	
  2879  059D  35A6               	lslf	??___ftpack,f
  2880  059E  0DA7               	rlf	??___ftpack+1,f
  2881  059F  0DA8               	rlf	??___ftpack+2,f
  2882  05A0  0B89               	decfsz	9,f
  2883  05A1  2D9D               	goto	u1205
  2884  05A2  0826               	movf	??___ftpack,w
  2885  05A3  04A1               	iorwf	___ftpack@arg,f
  2886  05A4  0827               	movf	??___ftpack+1,w
  2887  05A5  04A2               	iorwf	___ftpack@arg+1,f
  2888  05A6  0828               	movf	??___ftpack+2,w
  2889  05A7  04A3               	iorwf	___ftpack@arg+2,f
  2890  05A8  0825               	movf	___ftpack@sign,w
  2891  05A9  1903               	btfsc	3,2
  2892  05AA  0008               	return
  2893  05AB  17A3               	bsf	___ftpack@arg+2,7
  2894  05AC  0008               	return
  2895  05AD                     __end_of___ftpack:	
  2896                           
  2897                           	psect	text12
  2898  0672                     __ptext12:	
  2899 ;; *************** function _M_control *****************
  2900 ;; Defined at:
  2901 ;;		line 124 in file "main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  ctr             2   15[BANK0 ] int 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1
  2915 ;;      Params:         0       2       0
  2916 ;;      Locals:         0       0       0
  2917 ;;      Temps:          0       1       0
  2918 ;;      Totals:         0       3       0
  2919 ;;Total ram usage:        3 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    3
  2922 ;; This function calls:
  2923 ;;		_PWM_set_duty
  2924 ;; This function is called by:
  2925 ;;		_calculate_pid
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function _M_control
  2931  0672                     _M_control:	
  2932                           
  2933                           ;main.c: 126: if (ctr == 0)
  2934                           
  2935                           ;incstack = 0
  2936                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
  2937  0672  0020               	movlb	0	; select bank0
  2938  0673  082F               	movf	M_control@ctr,w
  2939  0674  0430               	iorwf	M_control@ctr+1,w
  2940  0675  1D03               	btfss	3,2
  2941  0676  2E7C               	goto	l1115
  2942                           
  2943                           ;main.c: 127: {
  2944                           ;main.c: 128: PWM_set_duty(ctr);
  2945  0677  0830               	movf	M_control@ctr+1,w
  2946  0678  00A2               	movwf	PWM_set_duty@duty+1
  2947  0679  082F               	movf	M_control@ctr,w
  2948  067A  00A1               	movwf	PWM_set_duty@duty
  2949  067B  26A1               	fcall	_PWM_set_duty
  2950  067C                     l1115:	
  2951                           
  2952                           ;main.c: 129: }
  2953                           ;main.c: 130: if (ctr > 0)
  2954  067C  0020               	movlb	0	; select bank0
  2955  067D  0830               	movf	M_control@ctr+1,w
  2956  067E  3A80               	xorlw	128
  2957  067F  00B1               	movwf	??_M_control
  2958  0680  3080               	movlw	128
  2959  0681  0231               	subwf	??_M_control,w
  2960  0682  1D03               	skipz
  2961  0683  2E86               	goto	u1235
  2962  0684  3001               	movlw	1
  2963  0685  022F               	subwf	M_control@ctr,w
  2964  0686                     u1235:	
  2965  0686  1C03               	skipc
  2966  0687  2E90               	goto	l1121
  2967                           
  2968                           ;main.c: 131: {
  2969                           ;main.c: 132: LATAbits.LATA0 = 1;
  2970  0688  0022               	movlb	2	; select bank2
  2971  0689  140C               	bsf	12,0	;volatile
  2972                           
  2973                           ;main.c: 133: PWM_set_duty(ctr);
  2974  068A  0020               	movlb	0	; select bank0
  2975  068B  0830               	movf	M_control@ctr+1,w
  2976  068C  00A2               	movwf	PWM_set_duty@duty+1
  2977  068D  082F               	movf	M_control@ctr,w
  2978  068E  00A1               	movwf	PWM_set_duty@duty
  2979  068F  26A1               	fcall	_PWM_set_duty
  2980  0690                     l1121:	
  2981                           
  2982                           ;main.c: 134: }
  2983                           ;main.c: 135: if (ctr < 0)
  2984  0690  0020               	movlb	0	; select bank0
  2985  0691  1FB0               	btfss	M_control@ctr+1,7
  2986  0692  0008               	return
  2987                           
  2988                           ;main.c: 136: {
  2989                           ;main.c: 137: LATAbits.LATA0 = 0;
  2990  0693  0022               	movlb	2	; select bank2
  2991  0694  100C               	bcf	12,0	;volatile
  2992                           
  2993                           ;main.c: 138: ctr = ctr * -1;
  2994  0695  0020               	movlb	0	; select bank0
  2995  0696  09AF               	comf	M_control@ctr,f
  2996  0697  09B0               	comf	M_control@ctr+1,f
  2997  0698  0AAF               	incf	M_control@ctr,f
  2998  0699  1903               	skipnz
  2999  069A  0AB0               	incf	M_control@ctr+1,f
  3000                           
  3001                           ;main.c: 139: PWM_set_duty(ctr);
  3002  069B  0830               	movf	M_control@ctr+1,w
  3003  069C  00A2               	movwf	PWM_set_duty@duty+1
  3004  069D  082F               	movf	M_control@ctr,w
  3005  069E  00A1               	movwf	PWM_set_duty@duty
  3006  069F  26A1               	fcall	_PWM_set_duty
  3007  06A0  0008               	return
  3008  06A1                     __end_of_M_control:	
  3009                           
  3010                           	psect	text13
  3011  06A1                     __ptext13:	
  3012 ;; *************** function _PWM_set_duty *****************
  3013 ;; Defined at:
  3014 ;;		line 115 in file "main.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  duty            2    1[BANK0 ] int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  2    1[BANK0 ] int 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1
  3028 ;;      Params:         0       2       0
  3029 ;;      Locals:         0       0       0
  3030 ;;      Temps:          0       2       0
  3031 ;;      Totals:         0       4       0
  3032 ;;Total ram usage:        4 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    2
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_M_control
  3039 ;;		_main
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           
  3044                           ;psect for function _PWM_set_duty
  3045  06A1                     _PWM_set_duty:	
  3046                           
  3047                           ;main.c: 117: if (duty < 1024) {
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
  3051  06A1  0020               	movlb	0	; select bank0
  3052  06A2  0822               	movf	PWM_set_duty@duty+1,w
  3053  06A3  3A80               	xorlw	128
  3054  06A4  00A3               	movwf	??_PWM_set_duty
  3055  06A5  3084               	movlw	132
  3056  06A6  0223               	subwf	??_PWM_set_duty,w
  3057  06A7  1D03               	skipz
  3058  06A8  2EAB               	goto	u1085
  3059  06A9  3000               	movlw	0
  3060  06AA  0221               	subwf	PWM_set_duty@duty,w
  3061  06AB                     u1085:	
  3062  06AB  1803               	skipnc
  3063  06AC  0008               	return
  3064                           
  3065                           ;main.c: 118: CCPR1L = (0xFF & ((unsigned int) duty >> 2));
  3066  06AD  0020               	movlb	0	; select bank0
  3067  06AE  0822               	movf	PWM_set_duty@duty+1,w
  3068  06AF  00A4               	movwf	??_PWM_set_duty+1
  3069  06B0  0821               	movf	PWM_set_duty@duty,w
  3070  06B1  00A3               	movwf	??_PWM_set_duty
  3071  06B2  36A4               	lsrf	??_PWM_set_duty+1,f
  3072  06B3  0CA3               	rrf	??_PWM_set_duty,f
  3073  06B4  36A4               	lsrf	??_PWM_set_duty+1,f
  3074  06B5  0CA3               	rrf	??_PWM_set_duty,f
  3075  06B6  0823               	movf	??_PWM_set_duty,w
  3076  06B7  0025               	movlb	5	; select bank5
  3077  06B8  0091               	movwf	17	;volatile
  3078                           
  3079                           ;main.c: 119: CCP1CON = (0x0C | (0x30 & ((unsigned int) duty << 4)));
  3080  06B9  0020               	movlb	0	; select bank0
  3081  06BA  0821               	movf	PWM_set_duty@duty,w
  3082  06BB  00A3               	movwf	??_PWM_set_duty
  3083  06BC  3003               	movlw	3
  3084  06BD                     u1095:	
  3085  06BD  35A3               	lslf	??_PWM_set_duty,f
  3086  06BE  3EFF               	addlw	-1
  3087  06BF  1D03               	skipz
  3088  06C0  2EBD               	goto	u1095
  3089  06C1  3523               	lslf	??_PWM_set_duty,w
  3090  06C2  3930               	andlw	48
  3091  06C3  380C               	iorlw	12
  3092  06C4  0025               	movlb	5	; select bank5
  3093  06C5  0093               	movwf	19	;volatile
  3094  06C6  0008               	return
  3095  06C7                     __end_of_PWM_set_duty:	
  3096                           
  3097                           	psect	intentry
  3098  0004                     __pintentry:	
  3099 ;; *************** function _isr *****************
  3100 ;; Defined at:
  3101 ;;		line 51 in file "main.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1
  3115 ;;      Params:         0       0       0
  3116 ;;      Locals:         0       0       0
  3117 ;;      Temps:          0       1       0
  3118 ;;      Totals:         0       1       0
  3119 ;;Total ram usage:        1 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    1
  3122 ;; This function calls:
  3123 ;;		___lwdiv
  3124 ;;		___wmul
  3125 ;; This function is called by:
  3126 ;;		Interrupt level 1
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130  0004                     _isr:	
  3131                           
  3132                           ;incstack = 0
  3133  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3134                           
  3135                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3136  0005  3180               	pagesel	$
  3137  0006  0020               	movlb	0	; select bank0
  3138  0007  087F               	movf	127,w
  3139  0008  00A0               	movwf	??_isr
  3140                           
  3141                           ;main.c: 53: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  3142  0009  1C0B               	btfss	11,0	;volatile
  3143  000A  2817               	goto	i1l1493
  3144  000B  0027               	movlb	7	; select bank7
  3145  000C  1E13               	btfss	19,4	;volatile
  3146  000D  2817               	goto	i1l1493
  3147                           
  3148                           ;main.c: 54: {
  3149                           ;main.c: 55: INTCONbits.IOCIE = 0;
  3150  000E  118B               	bcf	11,3	;volatile
  3151                           
  3152                           ;main.c: 56: counter++;
  3153  000F  3001               	movlw	1
  3154  0010  0021               	movlb	1	; select bank1
  3155  0011  07A8               	addwf	_counter^(0+128),f
  3156  0012  3000               	movlw	0
  3157  0013  3DA9               	addwfc	(_counter+1)^(0+128),f
  3158                           
  3159                           ;main.c: 57: IOCAFbits.IOCAF4 = 0;
  3160  0014  0027               	movlb	7	; select bank7
  3161  0015  1213               	bcf	19,4	;volatile
  3162                           
  3163                           ;main.c: 58: INTCONbits.IOCIE = 1;
  3164  0016  158B               	bsf	11,3	;volatile
  3165  0017                     i1l1493:	
  3166                           
  3167                           ;main.c: 59: }
  3168                           ;main.c: 60: if (PIR1bits.TMR1IF == 1)
  3169  0017  0020               	movlb	0	; select bank0
  3170  0018  1C11               	btfss	17,0	;volatile
  3171  0019  2847               	goto	i1l68
  3172                           
  3173                           ;main.c: 61: {
  3174                           ;main.c: 62: INTCONbits.IOCIE = 0;
  3175  001A  118B               	bcf	11,3	;volatile
  3176                           
  3177                           ;main.c: 63: T1CONbits.TMR1ON = 0;
  3178  001B  1018               	bcf	24,0	;volatile
  3179                           
  3180                           ;main.c: 64: rpm = (counter * 300) / gear;
  3181  001C  3021               	movlw	low (_gear| (0+32768))
  3182  001D  0084               	movwf	4
  3183  001E  3087               	movlw	high (_gear| (0+32768))
  3184  001F  0085               	movwf	5
  3185  0020  3F00               	moviw [0]fsr0
  3186  0021  00F6               	movwf	___lwdiv@divisor
  3187  0022  3F01               	moviw [1]fsr0
  3188  0023  00F7               	movwf	___lwdiv@divisor+1
  3189  0024  0021               	movlb	1	; select bank1
  3190  0025  0829               	movf	(_counter+1)^(0+128),w
  3191  0026  00F1               	movwf	___wmul@multiplier+1
  3192  0027  0828               	movf	_counter^(0+128),w
  3193  0028  00F0               	movwf	___wmul@multiplier
  3194  0029  302C               	movlw	44
  3195  002A  00F2               	movwf	___wmul@multiplicand
  3196  002B  3001               	movlw	1
  3197  002C  00F3               	movwf	___wmul@multiplicand+1
  3198  002D  26E8               	fcall	___wmul
  3199  002E  0871               	movf	?___wmul+1,w
  3200  002F  00F9               	movwf	___lwdiv@dividend+1
  3201  0030  0870               	movf	?___wmul,w
  3202  0031  00F8               	movwf	___lwdiv@dividend
  3203  0032  263E               	fcall	___lwdiv
  3204  0033  0877               	movf	?___lwdiv+1,w
  3205  0034  0021               	movlb	1	; select bank1
  3206  0035  00AB               	movwf	(_rpm+1)^(0+128)
  3207  0036  0876               	movf	?___lwdiv,w
  3208  0037  00AA               	movwf	_rpm^(0+128)
  3209                           
  3210                           ;main.c: 65: counter = 0;
  3211  0038  01A8               	clrf	_counter^(0+128)
  3212  0039  01A9               	clrf	(_counter+1)^(0+128)
  3213                           
  3214                           ;main.c: 66: if (LATAbits.LATA0 == 0)
  3215  003A  0022               	movlb	2	; select bank2
  3216  003B  180C               	btfsc	12,0	;volatile
  3217  003C  2843               	goto	i1l1505
  3218                           
  3219                           ;main.c: 67: {
  3220                           ;main.c: 68: rpm = rpm *-1;
  3221  003D  0021               	movlb	1	; select bank1
  3222  003E  09AA               	comf	_rpm^(0+128),f
  3223  003F  09AB               	comf	(_rpm+1)^(0+128),f
  3224  0040  0AAA               	incf	_rpm^(0+128),f
  3225  0041  1903               	skipnz
  3226  0042  0AAB               	incf	(_rpm+1)^(0+128),f
  3227  0043                     i1l1505:	
  3228                           
  3229                           ;main.c: 69: }
  3230                           ;main.c: 70: INTCONbits.IOCIE = 1;
  3231  0043  158B               	bsf	11,3	;volatile
  3232                           
  3233                           ;main.c: 71: PIR1bits.TMR1IF = 0;
  3234  0044  0020               	movlb	0	; select bank0
  3235  0045  1011               	bcf	17,0	;volatile
  3236                           
  3237                           ;main.c: 72: T1CONbits.TMR1ON = 1;
  3238  0046  1418               	bsf	24,0	;volatile
  3239  0047                     i1l68:	
  3240  0047  0820               	movf	??_isr,w
  3241  0048  00FF               	movwf	127
  3242  0049  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3243  004A  0009               	retfie
  3244  004B                     __end_of_isr:	
  3245                           
  3246                           	psect	text15
  3247  06E8                     __ptext15:	
  3248 ;; *************** function ___wmul *****************
  3249 ;; Defined at:
  3250 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  multiplier      2    0[COMMON] unsigned int 
  3253 ;;  multiplicand    2    2[COMMON] unsigned int 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  product         2    4[COMMON] unsigned int 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  2    0[COMMON] unsigned int 
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1
  3265 ;;      Params:         4       0       0
  3266 ;;      Locals:         2       0       0
  3267 ;;      Temps:          0       0       0
  3268 ;;      Totals:         6       0       0
  3269 ;;Total ram usage:        6 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_isr
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           
  3279                           ;psect for function ___wmul
  3280  06E8                     ___wmul:	
  3281                           
  3282                           ;incstack = 0
  3283                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3284  06E8  01F4               	clrf	___wmul@product
  3285  06E9  01F5               	clrf	___wmul@product+1
  3286  06EA                     i1l1443:	
  3287  06EA  1C70               	btfss	___wmul@multiplier,0
  3288  06EB  2EF0               	goto	i1l193
  3289  06EC  0872               	movf	___wmul@multiplicand,w
  3290  06ED  07F4               	addwf	___wmul@product,f
  3291  06EE  0873               	movf	___wmul@multiplicand+1,w
  3292  06EF  3DF5               	addwfc	___wmul@product+1,f
  3293  06F0                     i1l193:	
  3294  06F0  3001               	movlw	1
  3295  06F1                     u197_25:	
  3296  06F1  35F2               	lslf	___wmul@multiplicand,f
  3297  06F2  0DF3               	rlf	___wmul@multiplicand+1,f
  3298  06F3  0B89               	decfsz	9,f
  3299  06F4  2EF1               	goto	u197_25
  3300  06F5  3001               	movlw	1
  3301  06F6                     u198_25:	
  3302  06F6  36F1               	lsrf	___wmul@multiplier+1,f
  3303  06F7  0CF0               	rrf	___wmul@multiplier,f
  3304  06F8  0B89               	decfsz	9,f
  3305  06F9  2EF6               	goto	u198_25
  3306  06FA  0870               	movf	___wmul@multiplier,w
  3307  06FB  0471               	iorwf	___wmul@multiplier+1,w
  3308  06FC  1D03               	btfss	3,2
  3309  06FD  2EEA               	goto	i1l1443
  3310  06FE  0875               	movf	___wmul@product+1,w
  3311  06FF  00F1               	movwf	?___wmul+1
  3312  0700  0874               	movf	___wmul@product,w
  3313  0701  00F0               	movwf	?___wmul
  3314  0702  0008               	return
  3315  0703                     __end_of___wmul:	
  3316                           
  3317                           	psect	text16
  3318  063E                     __ptext16:	
  3319 ;; *************** function ___lwdiv *****************
  3320 ;; Defined at:
  3321 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  divisor         2    6[COMMON] unsigned int 
  3324 ;;  dividend        2    8[COMMON] unsigned int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  quotient        2   11[COMMON] unsigned int 
  3327 ;;  counter         1   13[COMMON] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  2    6[COMMON] unsigned int 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1
  3337 ;;      Params:         4       0       0
  3338 ;;      Locals:         3       0       0
  3339 ;;      Temps:          1       0       0
  3340 ;;      Totals:         8       0       0
  3341 ;;Total ram usage:        8 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_isr
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           
  3351                           ;psect for function ___lwdiv
  3352  063E                     ___lwdiv:	
  3353                           
  3354                           ;incstack = 0
  3355                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3356  063E  01FB               	clrf	___lwdiv@quotient
  3357  063F  01FC               	clrf	___lwdiv@quotient+1
  3358  0640  0876               	movf	___lwdiv@divisor,w
  3359  0641  0477               	iorwf	___lwdiv@divisor+1,w
  3360  0642  1903               	btfsc	3,2
  3361  0643  2E6D               	goto	i1l1477
  3362  0644  01FD               	clrf	___lwdiv@counter
  3363  0645  0AFD               	incf	___lwdiv@counter,f
  3364  0646                     i1l1465:	
  3365  0646  1BF7               	btfsc	___lwdiv@divisor+1,7
  3366  0647  2E52               	goto	i1l1467
  3367  0648  3001               	movlw	1
  3368  0649                     u201_25:	
  3369  0649  35F6               	lslf	___lwdiv@divisor,f
  3370  064A  0DF7               	rlf	___lwdiv@divisor+1,f
  3371  064B  0B89               	decfsz	9,f
  3372  064C  2E49               	goto	u201_25
  3373  064D  3001               	movlw	1
  3374  064E  00FA               	movwf	??___lwdiv
  3375  064F  087A               	movf	??___lwdiv,w
  3376  0650  07FD               	addwf	___lwdiv@counter,f
  3377  0651  2E46               	goto	i1l1465
  3378  0652                     i1l1467:	
  3379  0652  3001               	movlw	1
  3380  0653                     u203_25:	
  3381  0653  35FB               	lslf	___lwdiv@quotient,f
  3382  0654  0DFC               	rlf	___lwdiv@quotient+1,f
  3383  0655  0B89               	decfsz	9,f
  3384  0656  2E53               	goto	u203_25
  3385  0657  0877               	movf	___lwdiv@divisor+1,w
  3386  0658  0279               	subwf	___lwdiv@dividend+1,w
  3387  0659  1D03               	skipz
  3388  065A  2E5D               	goto	u204_25
  3389  065B  0876               	movf	___lwdiv@divisor,w
  3390  065C  0278               	subwf	___lwdiv@dividend,w
  3391  065D                     u204_25:	
  3392  065D  1C03               	skipc
  3393  065E  2E64               	goto	i1l1473
  3394  065F  0876               	movf	___lwdiv@divisor,w
  3395  0660  02F8               	subwf	___lwdiv@dividend,f
  3396  0661  0877               	movf	___lwdiv@divisor+1,w
  3397  0662  3BF9               	subwfb	___lwdiv@dividend+1,f
  3398  0663  147B               	bsf	___lwdiv@quotient,0
  3399  0664                     i1l1473:	
  3400  0664  3001               	movlw	1
  3401  0665                     u205_25:	
  3402  0665  36F7               	lsrf	___lwdiv@divisor+1,f
  3403  0666  0CF6               	rrf	___lwdiv@divisor,f
  3404  0667  0B89               	decfsz	9,f
  3405  0668  2E65               	goto	u205_25
  3406  0669  3001               	movlw	1
  3407  066A  02FD               	subwf	___lwdiv@counter,f
  3408  066B  1D03               	btfss	3,2
  3409  066C  2E52               	goto	i1l1467
  3410  066D                     i1l1477:	
  3411  066D  087C               	movf	___lwdiv@quotient+1,w
  3412  066E  00F7               	movwf	?___lwdiv+1
  3413  066F  087B               	movf	___lwdiv@quotient,w
  3414  0670  00F6               	movwf	?___lwdiv
  3415  0671  0008               	return
  3416  0672                     __end_of___lwdiv:	
  3417  007E                     btemp	set	126	;btemp
  3418  007E                     int$flags	set	126
  3419  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    11
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            32      4      16

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_PID
    _PID->_calculate_pid
    _calculate_pid->___ftadd
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _M_control->___fttol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4   12087
                                             73 BANK0      5     1      4
                                              0 BANK1      4     4      0
                                _PID
                           _PWM_Init
                       _PWM_set_duty
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                  4     2      2   11717
                                             69 BANK0      4     2      2
                      _calculate_pid
 ---------------------------------------------------------------------------------
 (2) _calculate_pid                                       15    13      2   11523
                                             54 BANK0     15    13      2
                          _M_control
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     305
                                              1 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              1 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2457
                                             25 BANK0     16    10      6
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     560
                                              1 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2093
                                              9 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3157
                                             41 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1851
                                              9 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1707
                                              1 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _M_control                                            3     1      2     486
                                             15 BANK0      3     1      2
                       _PWM_set_duty
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_set_duty                                         4     2      2     278
                                              1 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0     466
                                              0 BANK0      1     1      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID
     _calculate_pid
       _M_control
         _PWM_set_duty
         ___fttol (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftdiv (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftpack
       ___ftge
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg
       ___fttol
   _PWM_Init
   _PWM_set_duty

 _isr (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6D       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      4      10       8       50.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      6D       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Jul 10 21:57:11 2018

            __CFG_CP$OFF 0000                       l93 05DD                       l86 01C8  
                     _kd 071B                       _ki 0718                       _kp 071E  
    ___wmul@multiplicand 0072        calculate_pid@rpm2 005D             ___ftadd@exp1 0055  
           ___ftadd@exp2 0054             ___ftadd@sign 0053                      l102 04F2  
                    l361 058E                      l362 0596                      l354 057B  
                    l445 04B7                      l385 0299                      _PR2 001B  
                    _PID 05AD             __CFG_CPD$OFF 0000                      _isr 0004  
                    _rpm 00AA             __CFG_BORV$LO 0000                      wreg 0009  
     calculate_pid@error 005F             __CFG_LVP$OFF 0000                     ?_PID 0065  
           ___ftdiv@cntr 0033             ___ftdiv@sign 0038                     l1121 0690  
                   l1115 067C                     l1301 035F                     l1207 02D8  
                   l1151 0229                     l1223 03CF                     l1137 06D2  
                   l1217 03B9                     l1313 037B                     l1401 0175  
                   l1091 0567                     l1083 0551                     l1147 0222  
                   l1181 0278                     l1157 0238                     l1245 0429  
                   l1237 0410                     l1261 062F                     l1309 0373  
                   l1413 01EB                     l1087 0558                     l1175 0265  
                   l1431 05E0                     l1097 0580                     l1089 0562  
                   l1193 02AB                     l1177 026F                     l1169 0252  
                   l1257 0619                     l1337 0463                     l1099 0588  
                   l1187 028B                     l1179 0274                     l1363 04AE  
                   l1355 0493                     l1197 02BD                     l1189 0295  
                   l1285 031C                     l1365 04BA                     l1357 04A1  
                   l1437 05F3                     l1279 0306                     l1551 0523  
                   l1543 0502                     l1297 0357                     l1369 04C8  
                   l1397 015E                     ?_isr 0070                     u1205 059D  
                   u1125 055D                     u1145 0576                     u1235 0686  
                   u2115 0500                     u1085 06AB                     u1165 0583  
                   u2125 0521                     u1095 06BD                     u1415 0279  
                   u2135 0531                     u1355 0253                     u1515 03E1  
                   u1445 028C                     u1525 03F1                     u2157 050C  
                   u1535 0411                     u2167 053D                     u1385 0266  
                   u1545 0420                     u1705 0382                     u1625 0328  
                   u2177 05E9                     u1555 042A                     u1635 0338  
                   u1805 04AF                     u1655 0360                     u1904 05BF  
                   u1665 0366                     u1745 046A                     u1915 05C8  
                   u1695 037C                     u1775 0494                     u1855 01AF  
                   u1935 05D9                     u1890 05BD                     u1875 01D2  
                   i1l68 0047                     _WPUA 020C             __CFG_WRT$OFF 0000  
                   _gear 0721                     _main 04D1             ___ftpack@arg 0021  
                   _lset 00A6             ___ftpack@exp 0024                     fsr0h 0005  
                   fsr0l 0004                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 004B            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0047             ___ftmul@sign 0048                    ??_PID 0067  
           ___fttol@exp1 002E             ___fttol@lval 002A                    ??_isr 0020  
          __CFG_PLLEN$ON 0000    __size_of_PWM_set_duty 0026                    ?_main 0069  
        __end_of___ftadd 02EF            __CFG_WDTE$OFF 0000          __end_of___ftdiv 044A  
        __end_of___ftneg 0718          __end_of___ftmul 03A2                    _T1CON 0018  
        __end_of___fttol 04D1                    _T2CON 001C          __end_of___lwdiv 0672  
                  i1l193 06F0                    _TRISA 008C            __CFG_PWRTE$ON 0000  
         __CFG_FCMEN$OFF 0000            ___awtoft@sign 002E            ___ftpack@sign 0025  
                  main@x 00AC         __end_of_PWM_Init 070F                    status 0003  
                  wtemp0 007E             _PWM_set_duty 06A1          __initialization 004C  
           __end_of_gear 0723             __end_of_main 0548                   ??_main 006D  
          ___fttol@sign1 0029                   PID@set 0065       __size_of_M_control 002F  
                 _CCPR1L 0291         __end_of___awtoft 06E8                   _ANSELA 018C  
       __end_of___ftpack 05AD                   i1l1505 0043                   i1l1443 06EA  
                 i1l1473 0664                   i1l1465 0646                   i1l1467 0652  
                 u201_25 0649                   i1l1477 066D                   i1l1493 0017  
                 u203_25 0653                   u204_25 065D                   u205_25 0665  
                 _INTCON 000B                   u197_25 06F1                   u198_25 06F6  
                 _OSCCON 0099                   ___ftge 0602                   ___wmul 06E8  
              ??___ftadd 004F           __CFG_STVREN$ON 0000                ??___ftdiv 002F  
              ??___ftneg 0024                ??___ftmul 003F                ??___fttol 0025  
              ??___lwdiv 007A    ___ftmul@f3_as_product 0044  __end_of__initialization 005B  
             ___ftadd@f1 0049               ___ftadd@f2 004C               ___ftge@ff1 0021  
             ___ftge@ff2 0024               ___ftdiv@f1 002C               ___ftdiv@f2 0029  
             ___ftdiv@f3 0034               ___ftneg@f1 0021               ___awtoft@c 0029  
             ___ftmul@f1 0039               ___ftmul@f2 003C               ___fttol@f1 0021  
         __pcstackCOMMON 0070        __end_of_M_control 06A1               __end_of_kd 071E  
             __end_of_ki 071B               __end_of_kp 0721                ?_PWM_Init 0070  
         _OPTION_REGbits 0095               __pbssBANK1 00A0               __pmaintext 04D1  
      _calculate_pid$763 005A                  ?___ftge 0021                  ?___wmul 0070  
             __pintentry 0004                  _CCP1CON 0293                ?___awtoft 0029  
              ?___ftpack 0021               ??_PWM_Init 0021   __size_of_calculate_pid 019C  
       PWM_set_duty@duty 0021          __size_of___ftge 003C                  ___ftadd 01FA  
                ___ftdiv 03A2                  ___ftneg 070F          __size_of___wmul 001B  
                ___ftmul 02EF                  ___fttol 044A                  ___lwdiv 063E  
             ??___awtoft 002C               ??___ftpack 0026                  __ptext1 0703  
                __ptext2 05AD                  __ptext3 005E                  __ptext4 044A  
                __ptext5 070F                  __ptext6 02EF                  __ptext7 0602  
                __ptext8 03A2                  __ptext9 01FA             __size_of_PID 0055  
              _T1CONbits 0018                  _counter 00A8             __size_of_isr 0047  
              _IOCAFbits 0393                _IOCANbits 0392     end_of_initialization 005B  
          _calculate_pid 005E         __CFG_FOSC$INTOSC 0000         calculate_pid@pid 0062  
       calculate_pid@set 0056              ___ftdiv@exp 0037           ?_calculate_pid 0056  
             _zero_cross 0370              ___ftmul@exp 0043           __end_of___ftge 063E  
         __end_of___wmul 0703                _M_control 0672            __pbitbssBANK0 0370  
      __size_of_PWM_Init 000C      start_initialization 004C              __end_of_PID 0602  
            __end_of_isr 004B              _accumulator 00A3                 ??___ftge 0027  
               ??___wmul 0074               ?_M_control 002F        __size_of___awtoft 0021  
      __size_of___ftpack 0065                ___latbits 0000            __pcstackBANK0 0020  
          __pcstackBANK1 00AC          ??_calculate_pid 0058            ?_PWM_set_duty 0021  
       ___lwdiv@dividend 0078                 ?___ftadd 0049                 ?___ftdiv 0029  
               ?___ftneg 0021                 ?___ftmul 0039                 ?___fttol 0021  
               ?___lwdiv 0076         ___lwdiv@quotient 007B                _lasterror 00A0  
         ___wmul@product 0074                 _LATAbits 010C                 _PIE1bits 0091  
         ??_PWM_set_duty 0023                 _PIR1bits 0011              ??_M_control 0031  
               _PWM_Init 0703        ___wmul@multiplier 0070                main@x_369 00AE  
             _APFCONbits 011D         __size_of___ftadd 00F5         __size_of___ftdiv 00A8  
       __size_of___ftneg 0009         __size_of___ftmul 00B3         __size_of___fttol 0087  
       __size_of___lwdiv 0034                 ___awtoft 06C7                 ___ftpack 0548  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D                 __ptext10 06C7  
               __ptext11 0548                 __ptext12 0672                 __ptext13 06A1  
               __ptext15 06E8                 __ptext16 063E            __size_of_main 0077  
               int$flags 007E                 main@argc 0069                 main@argv 006B  
             _INTCONbits 000B     __end_of_PWM_set_duty 06C7                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000            __pstringtext1 0718            __pstringtext2 071B  
          __pstringtext3 071E            __pstringtext4 0721             M_control@ctr 002F  
  __end_of_calculate_pid 01FA  
