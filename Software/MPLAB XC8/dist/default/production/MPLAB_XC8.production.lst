

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Sep 14 23:29:36 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text18,local,class=CODE,merge=1,delta=2
    26                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	pa_nodes0,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.00
    31                           ; Generated 27/05/2018 GMT
    32                           ; 
    33                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC12F1840 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011D                     	;# 
   115  011D                     	;# 
   116  018C                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019F                     	;# 
   138  020C                     	;# 
   139  0211                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0213                     	;# 
   145  0214                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0216                     	;# 
   151  0216                     	;# 
   152  0217                     	;# 
   153  0217                     	;# 
   154  0291                     	;# 
   155  0291                     	;# 
   156  0292                     	;# 
   157  0293                     	;# 
   158  0294                     	;# 
   159  0295                     	;# 
   160  0295                     	;# 
   161  0296                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  039A                     	;# 
   166  039C                     	;# 
   167  039D                     	;# 
   168  039E                     	;# 
   169  039F                     	;# 
   170  0FE4                     	;# 
   171  0FE5                     	;# 
   172  0FE6                     	;# 
   173  0FE7                     	;# 
   174  0FE8                     	;# 
   175  0FE9                     	;# 
   176  0FEA                     	;# 
   177  0FEB                     	;# 
   178  0FED                     	;# 
   179  0FEE                     	;# 
   180  0FEF                     	;# 
   181                           
   182                           	psect	eeprom_data
   183  0000  0024 0001 0000 0000 0000 0000 00FF 00FF 	db	36,1,0,0,0,0,255,255	;# 
   184  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   185  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   186  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  008C                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  010C                     	;# 
   228  0111                     	;# 
   229  0112                     	;# 
   230  0115                     	;# 
   231  0116                     	;# 
   232  0117                     	;# 
   233  0118                     	;# 
   234  0119                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011D                     	;# 
   238  011D                     	;# 
   239  018C                     	;# 
   240  0191                     	;# 
   241  0191                     	;# 
   242  0192                     	;# 
   243  0193                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0194                     	;# 
   247  0195                     	;# 
   248  0196                     	;# 
   249  0197                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019C                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0291                     	;# 
   278  0291                     	;# 
   279  0292                     	;# 
   280  0293                     	;# 
   281  0294                     	;# 
   282  0295                     	;# 
   283  0295                     	;# 
   284  0296                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  039A                     	;# 
   289  039C                     	;# 
   290  039D                     	;# 
   291  039E                     	;# 
   292  039F                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  008C                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009A                     	;# 
   339  009B                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  010C                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011A                     	;# 
   353  011B                     	;# 
   354  011D                     	;# 
   355  011D                     	;# 
   356  018C                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0197                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020C                     	;# 
   379  0211                     	;# 
   380  0211                     	;# 
   381  0212                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0216                     	;# 
   391  0216                     	;# 
   392  0217                     	;# 
   393  0217                     	;# 
   394  0291                     	;# 
   395  0291                     	;# 
   396  0292                     	;# 
   397  0293                     	;# 
   398  0294                     	;# 
   399  0295                     	;# 
   400  0295                     	;# 
   401  0296                     	;# 
   402  0391                     	;# 
   403  0392                     	;# 
   404  0393                     	;# 
   405  039A                     	;# 
   406  039C                     	;# 
   407  039D                     	;# 
   408  039E                     	;# 
   409  039F                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001E                     	;# 
   446  001F                     	;# 
   447  008C                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  0111                     	;# 
   463  0112                     	;# 
   464  0115                     	;# 
   465  0116                     	;# 
   466  0117                     	;# 
   467  0118                     	;# 
   468  0119                     	;# 
   469  011A                     	;# 
   470  011B                     	;# 
   471  011D                     	;# 
   472  011D                     	;# 
   473  018C                     	;# 
   474  0191                     	;# 
   475  0191                     	;# 
   476  0192                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0193                     	;# 
   480  0194                     	;# 
   481  0195                     	;# 
   482  0196                     	;# 
   483  0197                     	;# 
   484  0199                     	;# 
   485  019A                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019C                     	;# 
   491  019C                     	;# 
   492  019D                     	;# 
   493  019E                     	;# 
   494  019F                     	;# 
   495  020C                     	;# 
   496  0211                     	;# 
   497  0211                     	;# 
   498  0212                     	;# 
   499  0212                     	;# 
   500  0213                     	;# 
   501  0213                     	;# 
   502  0214                     	;# 
   503  0214                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0216                     	;# 
   508  0216                     	;# 
   509  0217                     	;# 
   510  0217                     	;# 
   511  0291                     	;# 
   512  0291                     	;# 
   513  0292                     	;# 
   514  0293                     	;# 
   515  0294                     	;# 
   516  0295                     	;# 
   517  0295                     	;# 
   518  0296                     	;# 
   519  0391                     	;# 
   520  0392                     	;# 
   521  0393                     	;# 
   522  039A                     	;# 
   523  039C                     	;# 
   524  039D                     	;# 
   525  039E                     	;# 
   526  039F                     	;# 
   527  0FE4                     	;# 
   528  0FE5                     	;# 
   529  0FE6                     	;# 
   530  0FE7                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538                           
   539                           	psect	idataBANK1
   540  0000                     __pidataBANK1:	
   541  0003                     _STATUSbits	set	3
   542  000C                     _PORTAbits	set	12
   543  0018                     _T1CON	set	24
   544  000B                     _INTCON	set	11
   545  001C                     _T2CON	set	28
   546  001B                     _PR2	set	27
   547  0012                     _PIR2bits	set	18
   548  0018                     _T1CONbits	set	24
   549  0011                     _PIR1bits	set	17
   550  000B                     _INTCONbits	set	11
   551  0092                     _PIE2bits	set	146
   552  0095                     _OPTION_REGbits	set	149
   553  008C                     _TRISA	set	140
   554  0099                     _OSCCON	set	153
   555  0091                     _PIE1bits	set	145
   556  011D                     _APFCONbits	set	285
   557  010C                     _LATAbits	set	268
   558  0191                     _EEADR	set	401
   559  0196                     _EECON2	set	406
   560  0193                     _EEDATA	set	403
   561  0195                     _EECON1	set	405
   562  0195                     _EECON1bits	set	405
   563  018C                     _ANSELA	set	396
   564  0212                     _SSP1ADD	set	530
   565  0217                     _SSP1CON3bits	set	535
   566  0216                     _SSP1CON2bits	set	534
   567  0215                     _SSP1CON1	set	533
   568  0214                     _SSP1STAT	set	532
   569  020C                     _WPUA	set	524
   570  0215                     _SSP1CON1bits	set	533
   571  0211                     _SSP1BUF	set	529
   572  0214                     _SSP1STATbits	set	532
   573  0291                     _CCPR1L	set	657
   574  0293                     _CCP1CON	set	659
   575  0392                     _IOCANbits	set	914
   576  0393                     _IOCAFbits	set	915
   577                           
   578                           ; #config settings
   579  0000                     
   580                           	psect	cinit
   581  00C2                     start_initialization:	
   582  00C2                     __initialization:	
   583                           
   584                           ; Initialize objects allocated to BANK1
   585  00C2  0021               	movlb	1	; select bank1
   586                           
   587                           ;initializer for _first_i2c
   588  00C3  3001               	movlw	1
   589  00C4  00DC               	movwf	__pdataBANK1& (0+127)
   590                           
   591                           ; Clear objects allocated to BITBANK0
   592  00C5  0020               	movlb	0	; select bank0
   593  00C6  30A0               	movlw	low __pbssBANK1
   594  00C7  01ED               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   595                           
   596                           ; Clear objects allocated to BANK0
   597  00C8  01EE               	clrf	__pbssBANK0& (0+127)
   598                           
   599                           ; Clear objects allocated to BANK1
   600  00C9  0084               	movwf	4
   601  00CA  3000               	movlw	high __pbssBANK1
   602  00CB  0085               	movwf	5
   603  00CC  3037               	movlw	55
   604  00CD  318D  2598         	fcall	clear_ram0
   605  00CF                     end_of_initialization:	
   606                           ;End of C runtime variable initialization code
   607                           
   608  00CF                     __end_of__initialization:	
   609  00CF  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   610  00D0  0020               	movlb	0
   611  00D1  3180  28D3         	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bitbssBANK0
   614  0368                     __pbitbssBANK0:	
   615  0368                     _zero_cross:	
   616  0368                     	ds	1
   617                           
   618                           	psect	bssBANK0
   619  006E                     __pbssBANK0:	
   620  006E                     _index_i2c:	
   621  006E                     	ds	1
   622                           
   623                           	psect	bssBANK1
   624  00A0                     __pbssBANK1:	
   625  00A0                     _I2C_buffer:	
   626  00A0                     	ds	43
   627  00CB                     _lasterrorM:	
   628  00CB                     	ds	4
   629  00CF                     _accumulatorM:	
   630  00CF                     	ds	4
   631  00D3                     _lset:	
   632  00D3                     	ds	2
   633  00D5                     _counter:	
   634  00D5                     	ds	2
   635                           
   636                           	psect	dataBANK1
   637  00DC                     __pdataBANK1:	
   638  00DC                     _first_i2c:	
   639  00DC                     	ds	1
   640                           
   641                           	psect	clrtext
   642  0D98                     clear_ram0:	
   643                           ;	Called with FSR0 containing the base address, and
   644                           ;	WREG with the size to clear
   645                           
   646  0D98  0064               	clrwdt	;clear the watchdog before getting into this loop
   647  0D99                     clrloop0:	
   648  0D99  0180               	clrf	0	;clear RAM location pointed to by FSR
   649  0D9A  3101               	addfsr 0,1
   650  0D9B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   651  0D9C  2D99               	goto	clrloop0	;have we reached the end yet?
   652  0D9D  3400               	retlw	0	;all done for this memory range, return
   653                           
   654                           	psect	cstackBANK1
   655  00D7                     __pcstackBANK1:	
   656  00D7                     ?_pre_pidM:	
   657  00D7                     pre_pidM@set:	
   658                           ; 1 bytes @ 0x0
   659                           
   660                           
   661                           ; 2 bytes @ 0x0
   662  00D7                     	ds	2
   663  00D9                     ??_pre_pidM:	
   664                           
   665                           ; 1 bytes @ 0x2
   666  00D9                     	ds	2
   667  00DB                     ??_main:	
   668                           
   669                           ; 1 bytes @ 0x4
   670  00DB                     	ds	1
   671                           
   672                           	psect	cstackCOMMON
   673  0070                     __pcstackCOMMON:	
   674  0070                     ?_eeprom_read:	
   675  0070                     ?_isr:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_init_I2C_buffer:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_PWM_Init:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?i1___wmul:	
   688                           ; 2 bytes @ 0x0
   689                           
   690  0070                     i1___wmul@multiplier:	
   691                           ; 2 bytes @ 0x0
   692                           
   693                           
   694                           ; 2 bytes @ 0x0
   695  0070                     	ds	2
   696  0072                     i1___wmul@multiplicand:	
   697                           
   698                           ; 2 bytes @ 0x2
   699  0072                     	ds	2
   700  0074                     ??i1___wmul:	
   701  0074                     i1___wmul@product:	
   702                           ; 1 bytes @ 0x4
   703                           
   704                           
   705                           ; 2 bytes @ 0x4
   706  0074                     	ds	2
   707  0076                     ?___lwdiv:	
   708  0076                     ___lwdiv@divisor:	
   709                           ; 2 bytes @ 0x6
   710                           
   711                           
   712                           ; 2 bytes @ 0x6
   713  0076                     	ds	2
   714  0078                     ___lwdiv@dividend:	
   715                           
   716                           ; 2 bytes @ 0x8
   717  0078                     	ds	2
   718  007A                     ??___lwdiv:	
   719  007A                     ___lwdiv@counter:	
   720                           ; 1 bytes @ 0xA
   721                           
   722                           
   723                           ; 1 bytes @ 0xA
   724  007A                     	ds	1
   725  007B                     ___lwdiv@quotient:	
   726                           
   727                           ; 2 bytes @ 0xB
   728  007B                     	ds	2
   729                           
   730                           	psect	cstackBANK0
   731  0020                     __pcstackBANK0:	
   732  0020                     ??_isr:	
   733                           
   734                           ; 1 bytes @ 0x0
   735  0020                     	ds	2
   736  0022                     ?___flge:	
   737  0022                     ??_eeprom_read:	
   738                           ; 1 bit 
   739                           
   740  0022                     ?_eeprom_write:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0022                     ??_PWM_Init:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0022                     ?__Umul8_16:	
   747                           ; 1 bytes @ 0x2
   748                           
   749  0022                     ?_PWM_set_duty:	
   750                           ; 2 bytes @ 0x2
   751                           
   752  0022                     ?___wmul:	
   753                           ; 2 bytes @ 0x2
   754                           
   755  0022                     ?___fltol:	
   756                           ; 2 bytes @ 0x2
   757                           
   758  0022                     ?___xxtofl:	
   759                           ; 4 bytes @ 0x2
   760                           
   761  0022                     eeprom_read@addr:	
   762                           ; 4 bytes @ 0x2
   763                           
   764  0022                     eeprom_write@value:	
   765                           ; 1 bytes @ 0x2
   766                           
   767  0022                     __Umul8_16@multiplicand:	
   768                           ; 1 bytes @ 0x2
   769                           
   770  0022                     PWM_set_duty@duty:	
   771                           ; 1 bytes @ 0x2
   772                           
   773  0022                     ___wmul@multiplier:	
   774                           ; 2 bytes @ 0x2
   775                           
   776  0022                     ___flge@ff1:	
   777                           ; 2 bytes @ 0x2
   778                           
   779  0022                     ___fltol@f1:	
   780                           ; 4 bytes @ 0x2
   781                           
   782  0022                     ___xxtofl@val:	
   783                           ; 4 bytes @ 0x2
   784                           
   785                           
   786                           ; 4 bytes @ 0x2
   787  0022                     	ds	1
   788  0023                     ??_eeprom_write:	
   789  0023                     ??_init_I2C_buffer:	
   790                           ; 1 bytes @ 0x3
   791                           
   792  0023                     eeprom_write@addr:	
   793                           ; 1 bytes @ 0x3
   794                           
   795                           
   796                           ; 1 bytes @ 0x3
   797  0023                     	ds	1
   798  0024                     ??_PWM_set_duty:	
   799  0024                     ___wmul@multiplicand:	
   800                           ; 1 bytes @ 0x4
   801                           
   802                           
   803                           ; 2 bytes @ 0x4
   804  0024                     	ds	1
   805  0025                     ??__Umul8_16:	
   806  0025                     __Umul8_16@product:	
   807                           ; 1 bytes @ 0x5
   808                           
   809                           
   810                           ; 2 bytes @ 0x5
   811  0025                     	ds	1
   812  0026                     ??___wmul:	
   813  0026                     ??___fltol:	
   814                           ; 1 bytes @ 0x6
   815                           
   816  0026                     ??___xxtofl:	
   817                           ; 1 bytes @ 0x6
   818                           
   819  0026                     ___wmul@product:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0026                     ___flge@ff2:	
   823                           ; 2 bytes @ 0x6
   824                           
   825                           
   826                           ; 4 bytes @ 0x6
   827  0026                     	ds	1
   828  0027                     __Umul8_16@multiplier:	
   829                           
   830                           ; 1 bytes @ 0x7
   831  0027                     	ds	1
   832  0028                     __Umul8_16@word_mpld:	
   833                           
   834                           ; 2 bytes @ 0x8
   835  0028                     	ds	2
   836  002A                     ??___flge:	
   837  002A                     ?___flmul:	
   838                           ; 1 bytes @ 0xA
   839                           
   840  002A                     ___fltol@sign1:	
   841                           ; 4 bytes @ 0xA
   842                           
   843  002A                     ___xxtofl@sign:	
   844                           ; 1 bytes @ 0xA
   845                           
   846  002A                     ___flmul@b:	
   847                           ; 1 bytes @ 0xA
   848                           
   849                           
   850                           ; 4 bytes @ 0xA
   851  002A                     	ds	1
   852  002B                     ___fltol@exp1:	
   853  002B                     ___xxtofl@exp:	
   854                           ; 1 bytes @ 0xB
   855                           
   856                           
   857                           ; 1 bytes @ 0xB
   858  002B                     	ds	1
   859  002C                     ?_M_control:	
   860  002C                     M_control@ctr:	
   861                           ; 1 bytes @ 0xC
   862                           
   863  002C                     ___xxtofl@arg:	
   864                           ; 2 bytes @ 0xC
   865                           
   866                           
   867                           ; 4 bytes @ 0xC
   868  002C                     	ds	2
   869  002E                     ??_M_control:	
   870  002E                     ___flmul@a:	
   871                           ; 1 bytes @ 0xE
   872                           
   873                           
   874                           ; 4 bytes @ 0xE
   875  002E                     	ds	4
   876  0032                     ??___flmul:	
   877                           
   878                           ; 1 bytes @ 0x12
   879  0032                     	ds	4
   880  0036                     ___flmul@sign:	
   881                           
   882                           ; 1 bytes @ 0x16
   883  0036                     	ds	1
   884  0037                     ___flmul@aexp:	
   885                           
   886                           ; 1 bytes @ 0x17
   887  0037                     	ds	1
   888  0038                     ___flmul@bexp:	
   889                           
   890                           ; 1 bytes @ 0x18
   891  0038                     	ds	1
   892  0039                     ___flmul@grs:	
   893                           
   894                           ; 4 bytes @ 0x19
   895  0039                     	ds	4
   896  003D                     ___flmul@prod:	
   897                           
   898                           ; 4 bytes @ 0x1D
   899  003D                     	ds	4
   900  0041                     ___flmul@temp:	
   901                           
   902                           ; 2 bytes @ 0x21
   903  0041                     	ds	2
   904  0043                     ?___fladd:	
   905  0043                     ___fladd@b:	
   906                           ; 4 bytes @ 0x23
   907                           
   908                           
   909                           ; 4 bytes @ 0x23
   910  0043                     	ds	4
   911  0047                     ___fladd@a:	
   912                           
   913                           ; 4 bytes @ 0x27
   914  0047                     	ds	4
   915  004B                     ??___fladd:	
   916                           
   917                           ; 1 bytes @ 0x2B
   918  004B                     	ds	8
   919  0053                     ___fladd@signs:	
   920                           
   921                           ; 1 bytes @ 0x33
   922  0053                     	ds	1
   923  0054                     ___fladd@aexp:	
   924                           
   925                           ; 1 bytes @ 0x34
   926  0054                     	ds	1
   927  0055                     ___fladd@bexp:	
   928                           
   929                           ; 1 bytes @ 0x35
   930  0055                     	ds	1
   931  0056                     ___fladd@grs:	
   932                           
   933                           ; 1 bytes @ 0x36
   934  0056                     	ds	1
   935  0057                     ?___flsub:	
   936  0057                     ___flsub@a:	
   937                           ; 4 bytes @ 0x37
   938                           
   939                           
   940                           ; 4 bytes @ 0x37
   941  0057                     	ds	4
   942  005B                     ___flsub@b:	
   943                           
   944                           ; 4 bytes @ 0x3B
   945  005B                     	ds	4
   946  005F                     ?_calculate_pidM:	
   947  005F                     ??___flsub:	
   948                           ; 1 bytes @ 0x3F
   949                           
   950  005F                     calculate_pidM@set:	
   951                           ; 1 bytes @ 0x3F
   952                           
   953                           
   954                           ; 2 bytes @ 0x3F
   955  005F                     	ds	2
   956  0061                     ??_calculate_pidM:	
   957  0061                     _calculate_pidM$1301:	
   958                           ; 1 bytes @ 0x41
   959                           
   960                           
   961                           ; 4 bytes @ 0x41
   962  0061                     	ds	4
   963  0065                     calculate_pidM@error:	
   964                           
   965                           ; 4 bytes @ 0x45
   966  0065                     	ds	4
   967  0069                     calculate_pidM@pid:	
   968                           
   969                           ; 4 bytes @ 0x49
   970  0069                     	ds	4
   971                           
   972                           	psect	maintext
   973  00D3                     __pmaintext:	
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   976 ;;
   977 ;; *************** function _main *****************
   978 ;; Defined at:
   979 ;;		line 337 in file "main.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : B1F/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   993 ;;      Params:         0       0       0       0
   994 ;;      Locals:         0       0       0       0
   995 ;;      Temps:          0       0       1       0
   996 ;;      Totals:         0       0       1       0
   997 ;;Total ram usage:        1 bytes
   998 ;; Hardware stack levels required when called:    6
   999 ;; This function calls:
  1000 ;;		_M_control
  1001 ;;		_PWM_Init
  1002 ;;		_PWM_set_duty
  1003 ;;		_calculate_pidM
  1004 ;;		_eeprom_write
  1005 ;;		_init_I2C_buffer
  1006 ;;		_pre_pidM
  1007 ;; This function is called by:
  1008 ;;		Startup code after reset
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _main
  1014  00D3                     _main:	
  1015                           
  1016                           ;main.c: 338: OSCCON = 0b11110000;
  1017                           
  1018                           ;incstack = 0
  1019                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1020  00D3  30F0               	movlw	240
  1021  00D4  0021               	movlb	1	; select bank1
  1022  00D5  0099               	movwf	25	;volatile
  1023                           
  1024                           ;main.c: 339: init_I2C_buffer();
  1025  00D6  318F  274A  3180   	fcall	_init_I2C_buffer
  1026                           
  1027                           ;main.c: 340: TRISA = 0b00011110;
  1028  00D9  301E               	movlw	30
  1029  00DA  008C               	movwf	12	;volatile
  1030                           
  1031                           ;main.c: 341: ANSELA = 0b00000000;
  1032  00DB  0023               	movlb	3	; select bank3
  1033  00DC  018C               	clrf	12	;volatile
  1034                           
  1035                           ;main.c: 342: WPUA = 0b00011110;
  1036  00DD  0024               	movlb	4	; select bank4
  1037  00DE  008C               	movwf	12	;volatile
  1038                           
  1039                           ;main.c: 343: OPTION_REGbits.nWPUEN = (char) !(I2C_buffer.data.IOWPU & 0x01);
  1040  00DF  0021               	movlb	1	; select bank1
  1041  00E0  1823               	btfsc	(_I2C_buffer^(0+128)+3),0	;volatile
  1042  00E1  28E5               	goto	u4320
  1043  00E2  0021               	movlb	1	; select bank1
  1044  00E3  1795               	bsf	21,7	;volatile
  1045  00E4  28E7               	goto	l3627
  1046  00E5                     u4320:	
  1047  00E5  0021               	movlb	1	; select bank1
  1048  00E6  1395               	bcf	21,7	;volatile
  1049  00E7                     l3627:	
  1050                           
  1051                           ;main.c: 344: APFCONbits.CCP1SEL = 1;
  1052  00E7  0022               	movlb	2	; select bank2
  1053  00E8  141D               	bsf	29,0	;volatile
  1054                           
  1055                           ;main.c: 345: LATAbits.LATA0 = 0;
  1056  00E9  100C               	bcf	12,0	;volatile
  1057                           
  1058                           ;main.c: 346: SSP1STAT = 0b10000000;
  1059  00EA  3080               	movlw	128
  1060  00EB  0024               	movlb	4	; select bank4
  1061  00EC  0094               	movwf	20	;volatile
  1062                           
  1063                           ;main.c: 347: SSP1CON1 = 0b00110110;
  1064  00ED  3036               	movlw	54
  1065  00EE  0095               	movwf	21	;volatile
  1066                           
  1067                           ;main.c: 348: SSP1CON2bits.SEN = 1;
  1068  00EF  1416               	bsf	22,0	;volatile
  1069                           
  1070                           ;main.c: 349: SSP1CON3bits.BOEN = 1;
  1071  00F0  1617               	bsf	23,4	;volatile
  1072                           
  1073                           ;main.c: 350: SSP1CON3bits.SDAHT = 1;
  1074  00F1  1597               	bsf	23,3	;volatile
  1075                           
  1076                           ;main.c: 351: SSP1CON3bits.SBCDE = 1;
  1077  00F2  1517               	bsf	23,2	;volatile
  1078                           
  1079                           ;main.c: 352: SSP1ADD = (I2C_buffer.data.ADDRESS << 1);
  1080  00F3  0021               	movlb	1	; select bank1
  1081  00F4  3521               	lslf	(_I2C_buffer^(0+128)+1),w	;volatile
  1082  00F5  0024               	movlb	4	; select bank4
  1083  00F6  0092               	movwf	18	;volatile
  1084                           
  1085                           ;main.c: 353: PIR1bits.SSP1IF = 0;
  1086  00F7  0020               	movlb	0	; select bank0
  1087  00F8  1191               	bcf	17,3	;volatile
  1088                           
  1089                           ;main.c: 354: PIR2bits.BCL1IF = 0;
  1090  00F9  1192               	bcf	18,3	;volatile
  1091                           
  1092                           ;main.c: 355: PIE2bits.BCL1IE = 1;
  1093  00FA  0021               	movlb	1	; select bank1
  1094  00FB  1592               	bsf	18,3	;volatile
  1095                           
  1096                           ;main.c: 356: PIE1bits.SSP1IE = 1;
  1097  00FC  1591               	bsf	17,3	;volatile
  1098                           
  1099                           ;main.c: 357: INTCONbits.PEIE = 1;
  1100  00FD  170B               	bsf	11,6	;volatile
  1101                           
  1102                           ;main.c: 358: PWM_Init();
  1103  00FE  24A7  3180         	fcall	_PWM_Init
  1104                           
  1105                           ;main.c: 359: PWM_set_duty(0);
  1106  0100  01A2               	clrf	PWM_set_duty@duty
  1107  0101  01A3               	clrf	PWM_set_duty@duty+1
  1108  0102  2488  3180         	fcall	_PWM_set_duty
  1109                           
  1110                           ;main.c: 360: IOCANbits.IOCAN4 = 1;
  1111  0104  0027               	movlb	7	; select bank7
  1112  0105  1612               	bsf	18,4	;volatile
  1113                           
  1114                           ;main.c: 361: INTCON = 0b01001000;
  1115  0106  3048               	movlw	72
  1116  0107  008B               	movwf	11	;volatile
  1117                           
  1118                           ;main.c: 362: T1CON = 0b00110100;
  1119  0108  3034               	movlw	52
  1120  0109  0020               	movlb	0	; select bank0
  1121  010A  0098               	movwf	24	;volatile
  1122                           
  1123                           ;main.c: 363: PIE1bits.TMR1IE = 1;
  1124  010B  0021               	movlb	1	; select bank1
  1125  010C  1411               	bsf	17,0	;volatile
  1126                           
  1127                           ;main.c: 364: T1CONbits.TMR1ON = 1;
  1128  010D  0020               	movlb	0	; select bank0
  1129  010E  1418               	bsf	24,0	;volatile
  1130                           
  1131                           ;main.c: 365: INTCONbits.GIE = 1;
  1132  010F  178B               	bsf	11,7	;volatile
  1133                           
  1134                           ;main.c: 367: _delay((unsigned long)((5)*(32000000/4000.0)));
  1135  0110  3034               	movlw	52
  1136  0111  0021               	movlb	1	; select bank1
  1137  0112  00DB               	movwf	??_main^(0+128)
  1138  0113  30F1               	movlw	241
  1139  0114                     u4487:	
  1140  0114  0B89               	decfsz	9,f
  1141  0115  2914               	goto	u4487
  1142  0116  0BDB               	decfsz	??_main^(0+128),f
  1143  0117  2914               	goto	u4487
  1144  0118  3200               	nop2
  1145                           
  1146                           ;main.c: 369: if (PORTAbits.RA3 == 0) {
  1147  0119  0020               	movlb	0	; select bank0
  1148  011A  198C               	btfsc	12,3	;volatile
  1149  011B  2921               	goto	l147
  1150                           
  1151                           ;main.c: 370: eeprom_write(0, 0x24);
  1152  011C  3024               	movlw	36
  1153  011D  00A2               	movwf	eeprom_write@value
  1154  011E  3000               	movlw	0
  1155  011F  22E7  3180         	fcall	_eeprom_write
  1156  0121                     l147:	
  1157                           ;main.c: 371: };main.c: 373: while (1) {
  1158                           
  1159  0121  0064               	clrwdt	;# 
  1160                           
  1161                           ;main.c: 375: if (I2C_buffer.data.START_STOP == 1) {
  1162  0122  0021               	movlb	1	; select bank1
  1163  0123  0B22               	decfsz	(_I2C_buffer^(0+128)+2),w	;volatile
  1164  0124  2A00               	goto	l3745
  1165  0125  29EC               	goto	l3741
  1166  0126                     l3681:	
  1167                           
  1168                           ;main.c: 378: M_control(0);
  1169  0126  0020               	movlb	0	; select bank0
  1170  0127  01AC               	clrf	M_control@ctr
  1171  0128  01AD               	clrf	M_control@ctr+1
  1172  0129  2304  3180         	fcall	_M_control
  1173                           
  1174                           ;main.c: 379: break;
  1175  012B  29F6               	goto	l3743
  1176  012C                     l3683:	
  1177                           
  1178                           ;main.c: 381: M_control(I2C_buffer.data.SPEED);
  1179  012C  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1180  012D  0020               	movlb	0	; select bank0
  1181  012E  00AD               	movwf	M_control@ctr+1
  1182  012F  0021               	movlb	1	; select bank1
  1183  0130  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1184  0131  0020               	movlb	0	; select bank0
  1185  0132  00AC               	movwf	M_control@ctr
  1186  0133  2304  3180         	fcall	_M_control
  1187                           
  1188                           ;main.c: 382: break;
  1189  0135  29F6               	goto	l3743
  1190  0136                     l3685:	
  1191                           
  1192                           ;main.c: 384: calculate_pidM(I2C_buffer.data.SPEED);
  1193  0136  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1194  0137  0020               	movlb	0	; select bank0
  1195  0138  00E0               	movwf	calculate_pidM@set+1
  1196  0139  0021               	movlb	1	; select bank1
  1197  013A  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1198  013B  0020               	movlb	0	; select bank0
  1199  013C  00DF               	movwf	calculate_pidM@set
  1200  013D  233B  3180         	fcall	_calculate_pidM
  1201                           
  1202                           ;main.c: 385: break;
  1203  013F  29F6               	goto	l3743
  1204  0140                     l3687:	
  1205                           
  1206                           ;main.c: 387: if (I2C_buffer.data.SPEED < 0) {
  1207  0140  30AD               	movlw	((low (_I2C_buffer| 0))& (0+255)+13)
  1208  0141  0086               	movwf	6
  1209  0142  0187               	clrf	7
  1210  0143  3141               	addfsr 1,1
  1211  0144  1F81               	btfss	1,7
  1212  0145  2966               	goto	l3697
  1213                           
  1214                           ;main.c: 388: if (I2C_buffer.data.DISTANCE > 0) {
  1215  0146  1BB2               	btfsc	((_I2C_buffer+3)^(0+128)+15),7	;volatile
  1216  0147  295F               	goto	l3693
  1217  0148  0832               	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1218  0149  1D03               	btfss	3,2
  1219  014A  2955               	goto	l3691
  1220  014B  0831               	movf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1221  014C  1D03               	btfss	3,2
  1222  014D  2955               	goto	l3691
  1223  014E  0830               	movf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1224  014F  1D03               	btfss	3,2
  1225  0150  2955               	goto	l3691
  1226  0151  3001               	movlw	1
  1227  0152  022F               	subwf	(_I2C_buffer^(0+128)+15),w	;volatile
  1228  0153  1C03               	btfss	3,0
  1229  0154  295F               	goto	l3693
  1230  0155                     l3691:	
  1231                           
  1232                           ;main.c: 389: calculate_pidM(I2C_buffer.data.SPEED);
  1233  0155  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1234  0156  0020               	movlb	0	; select bank0
  1235  0157  00E0               	movwf	calculate_pidM@set+1
  1236  0158  0021               	movlb	1	; select bank1
  1237  0159  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1238  015A  0020               	movlb	0	; select bank0
  1239  015B  00DF               	movwf	calculate_pidM@set
  1240  015C  233B  3180         	fcall	_calculate_pidM
  1241                           
  1242                           ;main.c: 390: } else {
  1243  015E  2966               	goto	l3697
  1244  015F                     l3693:	
  1245                           
  1246                           ;main.c: 391: M_control(0);
  1247  015F  0020               	movlb	0	; select bank0
  1248  0160  01AC               	clrf	M_control@ctr
  1249  0161  01AD               	clrf	M_control@ctr+1
  1250  0162  2304  3180         	fcall	_M_control
  1251                           
  1252                           ;main.c: 392: I2C_buffer.data.START_STOP = 0;
  1253  0164  0021               	movlb	1	; select bank1
  1254  0165  01A2               	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  1255  0166                     l3697:	
  1256                           
  1257                           ;main.c: 393: };main.c: 394: };main.c: 395: if (I2C_buffer.data.SPEED > 0) {
  1258  0166  0021               	movlb	1	; select bank1
  1259  0167  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1260  0168  3A80               	xorlw	128
  1261  0169  00DB               	movwf	??_main^(0+128)
  1262  016A  3080               	movlw	128
  1263  016B  025B               	subwf	??_main^(0+128),w
  1264  016C  1D03               	skipz
  1265  016D  2970               	goto	u4385
  1266  016E  3001               	movlw	1
  1267  016F  022D               	subwf	(_I2C_buffer^(0+128)+13),w	;volatile
  1268  0170                     u4385:	
  1269  0170  1C03               	skipc
  1270  0171  2986               	goto	l3707
  1271                           
  1272                           ;main.c: 396: if (I2C_buffer.data.DISTANCE < 0) {
  1273  0172  0021               	movlb	1	; select bank1
  1274  0173  1FB2               	btfss	((_I2C_buffer+3)^(0+128)+15),7	;volatile
  1275  0174  297F               	goto	l3703
  1276                           
  1277                           ;main.c: 397: calculate_pidM(I2C_buffer.data.SPEED);
  1278  0175  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1279  0176  0020               	movlb	0	; select bank0
  1280  0177  00E0               	movwf	calculate_pidM@set+1
  1281  0178  0021               	movlb	1	; select bank1
  1282  0179  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1283  017A  0020               	movlb	0	; select bank0
  1284  017B  00DF               	movwf	calculate_pidM@set
  1285  017C  233B  3180         	fcall	_calculate_pidM
  1286                           
  1287                           ;main.c: 398: } else {
  1288  017E  2986               	goto	l3707
  1289  017F                     l3703:	
  1290                           
  1291                           ;main.c: 399: M_control(0);
  1292  017F  0020               	movlb	0	; select bank0
  1293  0180  01AC               	clrf	M_control@ctr
  1294  0181  01AD               	clrf	M_control@ctr+1
  1295  0182  2304  3180         	fcall	_M_control
  1296                           
  1297                           ;main.c: 400: I2C_buffer.data.START_STOP = 0;
  1298  0184  0021               	movlb	1	; select bank1
  1299  0185  01A2               	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  1300  0186                     l3707:	
  1301                           
  1302                           ;main.c: 401: };main.c: 402: };main.c: 403: if (I2C_buffer.data.SPEED == 0) {
  1303  0186  0021               	movlb	1	; select bank1
  1304  0187  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1305  0188  042E               	iorwf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1306  0189  1D03               	btfss	3,2
  1307  018A  29F6               	goto	l3743
  1308                           
  1309                           ;main.c: 404: calculate_pidM(I2C_buffer.data.SPEED);
  1310  018B  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1311  018C  0020               	movlb	0	; select bank0
  1312  018D  00E0               	movwf	calculate_pidM@set+1
  1313  018E  0021               	movlb	1	; select bank1
  1314  018F  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1315  0190  0020               	movlb	0	; select bank0
  1316  0191  00DF               	movwf	calculate_pidM@set
  1317  0192  233B  3180         	fcall	_calculate_pidM
  1318  0194  29F6               	goto	l3743
  1319  0195                     l3711:	
  1320                           
  1321                           ;main.c: 411: pre_pidM(I2C_buffer.data.SPEED);
  1322  0195  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1323  0196  00D8               	movwf	(pre_pidM@set+1)^(0+128)
  1324  0197  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1325  0198  00D7               	movwf	pre_pidM@set^(0+128)
  1326  0199  318D  25D8  3180   	fcall	_pre_pidM
  1327                           
  1328                           ;main.c: 412: break;
  1329  019C  29F6               	goto	l3743
  1330  019D                     l3713:	
  1331                           
  1332                           ;main.c: 414: if (I2C_buffer.data.SPEED < 0) {
  1333  019D  30AD               	movlw	((low (_I2C_buffer| 0))& (0+255)+13)
  1334  019E  0086               	movwf	6
  1335  019F  0187               	clrf	7
  1336  01A0  3141               	addfsr 1,1
  1337  01A1  1F81               	btfss	1,7
  1338  01A2  29C1               	goto	l3723
  1339                           
  1340                           ;main.c: 415: if (I2C_buffer.data.DISTANCE > 0) {
  1341  01A3  1BB2               	btfsc	((_I2C_buffer+3)^(0+128)+15),7	;volatile
  1342  01A4  29BA               	goto	l3719
  1343  01A5  0832               	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1344  01A6  1D03               	btfss	3,2
  1345  01A7  29B2               	goto	l3717
  1346  01A8  0831               	movf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1347  01A9  1D03               	btfss	3,2
  1348  01AA  29B2               	goto	l3717
  1349  01AB  0830               	movf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1350  01AC  1D03               	btfss	3,2
  1351  01AD  29B2               	goto	l3717
  1352  01AE  3001               	movlw	1
  1353  01AF  022F               	subwf	(_I2C_buffer^(0+128)+15),w	;volatile
  1354  01B0  1C03               	btfss	3,0
  1355  01B1  29BA               	goto	l3719
  1356  01B2                     l3717:	
  1357                           
  1358                           ;main.c: 416: pre_pidM(I2C_buffer.data.SPEED);
  1359  01B2  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1360  01B3  00D8               	movwf	(pre_pidM@set+1)^(0+128)
  1361  01B4  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1362  01B5  00D7               	movwf	pre_pidM@set^(0+128)
  1363  01B6  318D  25D8  3180   	fcall	_pre_pidM
  1364                           
  1365                           ;main.c: 417: } else {
  1366  01B9  29C1               	goto	l3723
  1367  01BA                     l3719:	
  1368                           
  1369                           ;main.c: 418: M_control(0);
  1370  01BA  0020               	movlb	0	; select bank0
  1371  01BB  01AC               	clrf	M_control@ctr
  1372  01BC  01AD               	clrf	M_control@ctr+1
  1373  01BD  2304  3180         	fcall	_M_control
  1374                           
  1375                           ;main.c: 419: I2C_buffer.data.START_STOP = 0;
  1376  01BF  0021               	movlb	1	; select bank1
  1377  01C0  01A2               	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  1378  01C1                     l3723:	
  1379                           
  1380                           ;main.c: 420: };main.c: 421: };main.c: 422: if (I2C_buffer.data.SPEED > 0) {
  1381  01C1  0021               	movlb	1	; select bank1
  1382  01C2  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1383  01C3  3A80               	xorlw	128
  1384  01C4  00DB               	movwf	??_main^(0+128)
  1385  01C5  3080               	movlw	128
  1386  01C6  025B               	subwf	??_main^(0+128),w
  1387  01C7  1D03               	skipz
  1388  01C8  29CB               	goto	u4435
  1389  01C9  3001               	movlw	1
  1390  01CA  022D               	subwf	(_I2C_buffer^(0+128)+13),w	;volatile
  1391  01CB                     u4435:	
  1392  01CB  1C03               	skipc
  1393  01CC  29DF               	goto	l3733
  1394                           
  1395                           ;main.c: 423: if (I2C_buffer.data.DISTANCE < 0) {
  1396  01CD  0021               	movlb	1	; select bank1
  1397  01CE  1FB2               	btfss	((_I2C_buffer+3)^(0+128)+15),7	;volatile
  1398  01CF  29D8               	goto	l3729
  1399                           
  1400                           ;main.c: 424: pre_pidM(I2C_buffer.data.SPEED);
  1401  01D0  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1402  01D1  00D8               	movwf	(pre_pidM@set+1)^(0+128)
  1403  01D2  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1404  01D3  00D7               	movwf	pre_pidM@set^(0+128)
  1405  01D4  318D  25D8  3180   	fcall	_pre_pidM
  1406                           
  1407                           ;main.c: 425: } else {
  1408  01D7  29DF               	goto	l3733
  1409  01D8                     l3729:	
  1410                           
  1411                           ;main.c: 426: M_control(0);
  1412  01D8  0020               	movlb	0	; select bank0
  1413  01D9  01AC               	clrf	M_control@ctr
  1414  01DA  01AD               	clrf	M_control@ctr+1
  1415  01DB  2304  3180         	fcall	_M_control
  1416                           
  1417                           ;main.c: 427: I2C_buffer.data.START_STOP = 0;
  1418  01DD  0021               	movlb	1	; select bank1
  1419  01DE  01A2               	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  1420  01DF                     l3733:	
  1421                           
  1422                           ;main.c: 428: };main.c: 429: };main.c: 430: if (I2C_buffer.data.SPEED == 0) {
  1423  01DF  0021               	movlb	1	; select bank1
  1424  01E0  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1425  01E1  042E               	iorwf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1426  01E2  1D03               	btfss	3,2
  1427  01E3  29F6               	goto	l3743
  1428                           
  1429                           ;main.c: 431: pre_pidM(I2C_buffer.data.SPEED);
  1430  01E4  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1431  01E5  00D8               	movwf	(pre_pidM@set+1)^(0+128)
  1432  01E6  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1433  01E7  00D7               	movwf	pre_pidM@set^(0+128)
  1434  01E8  318D  25D8  3180   	fcall	_pre_pidM
  1435  01EB  29F6               	goto	l3743
  1436  01EC                     l3741:	
  1437  01EC  0824               	movf	(_I2C_buffer^(0+128)+4),w	;volatile
  1438                           
  1439                           ; Switch size 1, requested type "speed"
  1440                           ; Number of cases is 8, Range of values is 0 to 7
  1441                           ; switch strategies available:
  1442                           ; Name         Instructions Cycles
  1443                           ; direct_byte           22     6 (fixed)
  1444                           ; simple_byte           25    13 (average)
  1445                           ; jumptable            260     6 (fixed)
  1446                           ;	Chosen strategy is direct_byte
  1447  01ED  0084               	movwf	4
  1448  01EE  3008               	movlw	8
  1449  01EF  0204               	subwf	4,w
  1450  01F0  1803               	skipnc
  1451  01F1  2926               	goto	l3681
  1452  01F2  3188               	movlp	high S3793
  1453  01F3  3504               	lslf	4,w
  1454  01F4  3E00               	addlw	low S3793
  1455  01F5  0082               	movwf	2
  1456  01F6                     l3743:	
  1457                           
  1458                           ;main.c: 441: _delay((unsigned long)((5)*(32000000/4000.0)));
  1459  01F6  3034               	movlw	52
  1460  01F7  0021               	movlb	1	; select bank1
  1461  01F8  00DB               	movwf	??_main^(0+128)
  1462  01F9  30F1               	movlw	241
  1463  01FA                     u4497:	
  1464  01FA  0B89               	decfsz	9,f
  1465  01FB  29FA               	goto	u4497
  1466  01FC  0BDB               	decfsz	??_main^(0+128),f
  1467  01FD  29FA               	goto	u4497
  1468  01FE  3200               	nop2
  1469                           
  1470                           ;main.c: 442: } else {
  1471  01FF  2A05               	goto	l3747
  1472  0200                     l3745:	
  1473                           
  1474                           ;main.c: 443: M_control(0);
  1475  0200  0020               	movlb	0	; select bank0
  1476  0201  01AC               	clrf	M_control@ctr
  1477  0202  01AD               	clrf	M_control@ctr+1
  1478  0203  2304  3180         	fcall	_M_control
  1479  0205                     l3747:	
  1480                           
  1481                           ;main.c: 444: };main.c: 445: if (I2C_buffer.data.RESET == 1) {
  1482  0205  0021               	movlb	1	; select bank1
  1483  0206  0B26               	decfsz	(_I2C_buffer^(0+128)+6),w	;volatile
  1484  0207  2A09               	goto	l3751
  1485  0208  0001               	reset	;# 
  1486  0209                     l3751:	
  1487                           
  1488                           ;main.c: 447: };main.c: 448: if (I2C_buffer.data.SAVE == 1) {
  1489  0209  0021               	movlb	1	; select bank1
  1490  020A  0B25               	decfsz	(_I2C_buffer^(0+128)+5),w	;volatile
  1491  020B  2921               	goto	l147
  1492                           
  1493                           ;main.c: 449: eeprom_write(0, I2C_buffer.data.ADDRESS);
  1494  020C  0821               	movf	(_I2C_buffer^(0+128)+1),w	;volatile
  1495  020D  0020               	movlb	0	; select bank0
  1496  020E  00A2               	movwf	eeprom_write@value
  1497  020F  3000               	movlw	0
  1498  0210  22E7  3180         	fcall	_eeprom_write
  1499                           
  1500                           ;main.c: 450: eeprom_write(1, I2C_buffer.data.IOWPU);
  1501  0212  0021               	movlb	1	; select bank1
  1502  0213  0823               	movf	(_I2C_buffer^(0+128)+3),w	;volatile
  1503  0214  0020               	movlb	0	; select bank0
  1504  0215  00A2               	movwf	eeprom_write@value
  1505  0216  3001               	movlw	1
  1506  0217  22E7  3180         	fcall	_eeprom_write
  1507                           
  1508                           ;main.c: 451: eeprom_write(2, I2C_buffer.byte[0x07]);
  1509  0219  0021               	movlb	1	; select bank1
  1510  021A  0827               	movf	(_I2C_buffer^(0+128)+7),w	;volatile
  1511  021B  0020               	movlb	0	; select bank0
  1512  021C  00A2               	movwf	eeprom_write@value
  1513  021D  3002               	movlw	2
  1514  021E  22E7  3180         	fcall	_eeprom_write
  1515                           
  1516                           ;main.c: 452: eeprom_write(3, I2C_buffer.byte[0x08]);
  1517  0220  0021               	movlb	1	; select bank1
  1518  0221  0828               	movf	(_I2C_buffer^(0+128)+8),w	;volatile
  1519  0222  0020               	movlb	0	; select bank0
  1520  0223  00A2               	movwf	eeprom_write@value
  1521  0224  3003               	movlw	3
  1522  0225  22E7  3180         	fcall	_eeprom_write
  1523                           
  1524                           ;main.c: 453: eeprom_write(4, I2C_buffer.byte[0x09]);
  1525  0227  0021               	movlb	1	; select bank1
  1526  0228  0829               	movf	(_I2C_buffer^(0+128)+9),w	;volatile
  1527  0229  0020               	movlb	0	; select bank0
  1528  022A  00A2               	movwf	eeprom_write@value
  1529  022B  3004               	movlw	4
  1530  022C  22E7  3180         	fcall	_eeprom_write
  1531                           
  1532                           ;main.c: 454: eeprom_write(5, I2C_buffer.byte[0x0A]);
  1533  022E  0021               	movlb	1	; select bank1
  1534  022F  082A               	movf	(_I2C_buffer^(0+128)+10),w	;volatile
  1535  0230  0020               	movlb	0	; select bank0
  1536  0231  00A2               	movwf	eeprom_write@value
  1537  0232  3005               	movlw	5
  1538  0233  22E7  3180         	fcall	_eeprom_write
  1539                           
  1540                           ;main.c: 455: eeprom_write(8, I2C_buffer.byte[0x13]);
  1541  0235  0021               	movlb	1	; select bank1
  1542  0236  0833               	movf	(_I2C_buffer^(0+128)+19),w	;volatile
  1543  0237  0020               	movlb	0	; select bank0
  1544  0238  00A2               	movwf	eeprom_write@value
  1545  0239  3008               	movlw	8
  1546  023A  22E7  3180         	fcall	_eeprom_write
  1547                           
  1548                           ;main.c: 456: eeprom_write(9, I2C_buffer.byte[0x14]);
  1549  023C  0021               	movlb	1	; select bank1
  1550  023D  0834               	movf	(_I2C_buffer^(0+128)+20),w	;volatile
  1551  023E  0020               	movlb	0	; select bank0
  1552  023F  00A2               	movwf	eeprom_write@value
  1553  0240  3009               	movlw	9
  1554  0241  22E7  3180         	fcall	_eeprom_write
  1555                           
  1556                           ;main.c: 457: eeprom_write(10, I2C_buffer.byte[0x15]);
  1557  0243  0021               	movlb	1	; select bank1
  1558  0244  0835               	movf	(_I2C_buffer^(0+128)+21),w	;volatile
  1559  0245  0020               	movlb	0	; select bank0
  1560  0246  00A2               	movwf	eeprom_write@value
  1561  0247  300A               	movlw	10
  1562  0248  22E7  3180         	fcall	_eeprom_write
  1563                           
  1564                           ;main.c: 458: eeprom_write(11, I2C_buffer.byte[0x16]);
  1565  024A  0021               	movlb	1	; select bank1
  1566  024B  0836               	movf	(_I2C_buffer^(0+128)+22),w	;volatile
  1567  024C  0020               	movlb	0	; select bank0
  1568  024D  00A2               	movwf	eeprom_write@value
  1569  024E  300B               	movlw	11
  1570  024F  22E7  3180         	fcall	_eeprom_write
  1571                           
  1572                           ;main.c: 459: eeprom_write(12, I2C_buffer.byte[0x17]);
  1573  0251  0021               	movlb	1	; select bank1
  1574  0252  0837               	movf	(_I2C_buffer^(0+128)+23),w	;volatile
  1575  0253  0020               	movlb	0	; select bank0
  1576  0254  00A2               	movwf	eeprom_write@value
  1577  0255  300C               	movlw	12
  1578  0256  22E7  3180         	fcall	_eeprom_write
  1579                           
  1580                           ;main.c: 460: eeprom_write(13, I2C_buffer.byte[0x18]);
  1581  0258  0021               	movlb	1	; select bank1
  1582  0259  0838               	movf	(_I2C_buffer^(0+128)+24),w	;volatile
  1583  025A  0020               	movlb	0	; select bank0
  1584  025B  00A2               	movwf	eeprom_write@value
  1585  025C  300D               	movlw	13
  1586  025D  22E7  3180         	fcall	_eeprom_write
  1587                           
  1588                           ;main.c: 461: eeprom_write(14, I2C_buffer.byte[0x19]);
  1589  025F  0021               	movlb	1	; select bank1
  1590  0260  0839               	movf	(_I2C_buffer^(0+128)+25),w	;volatile
  1591  0261  0020               	movlb	0	; select bank0
  1592  0262  00A2               	movwf	eeprom_write@value
  1593  0263  300E               	movlw	14
  1594  0264  22E7  3180         	fcall	_eeprom_write
  1595                           
  1596                           ;main.c: 462: eeprom_write(15, I2C_buffer.byte[0x1A]);
  1597  0266  0021               	movlb	1	; select bank1
  1598  0267  083A               	movf	(_I2C_buffer^(0+128)+26),w	;volatile
  1599  0268  0020               	movlb	0	; select bank0
  1600  0269  00A2               	movwf	eeprom_write@value
  1601  026A  300F               	movlw	15
  1602  026B  22E7  3180         	fcall	_eeprom_write
  1603                           
  1604                           ;main.c: 463: eeprom_write(16, I2C_buffer.byte[0x1B]);
  1605  026D  0021               	movlb	1	; select bank1
  1606  026E  083B               	movf	(_I2C_buffer^(0+128)+27),w	;volatile
  1607  026F  0020               	movlb	0	; select bank0
  1608  0270  00A2               	movwf	eeprom_write@value
  1609  0271  3010               	movlw	16
  1610  0272  22E7  3180         	fcall	_eeprom_write
  1611                           
  1612                           ;main.c: 464: eeprom_write(17, I2C_buffer.byte[0x1C]);
  1613  0274  0021               	movlb	1	; select bank1
  1614  0275  083C               	movf	(_I2C_buffer^(0+128)+28),w	;volatile
  1615  0276  0020               	movlb	0	; select bank0
  1616  0277  00A2               	movwf	eeprom_write@value
  1617  0278  3011               	movlw	17
  1618  0279  22E7  3180         	fcall	_eeprom_write
  1619                           
  1620                           ;main.c: 465: eeprom_write(18, I2C_buffer.byte[0x1D]);
  1621  027B  0021               	movlb	1	; select bank1
  1622  027C  083D               	movf	(_I2C_buffer^(0+128)+29),w	;volatile
  1623  027D  0020               	movlb	0	; select bank0
  1624  027E  00A2               	movwf	eeprom_write@value
  1625  027F  3012               	movlw	18
  1626  0280  22E7  3180         	fcall	_eeprom_write
  1627                           
  1628                           ;main.c: 466: eeprom_write(19, I2C_buffer.byte[0x1E]);
  1629  0282  0021               	movlb	1	; select bank1
  1630  0283  083E               	movf	(_I2C_buffer^(0+128)+30),w	;volatile
  1631  0284  0020               	movlb	0	; select bank0
  1632  0285  00A2               	movwf	eeprom_write@value
  1633  0286  3013               	movlw	19
  1634  0287  22E7  3180         	fcall	_eeprom_write
  1635                           
  1636                           ;main.c: 467: eeprom_write(20, I2C_buffer.byte[0x1F]);
  1637  0289  0021               	movlb	1	; select bank1
  1638  028A  083F               	movf	(_I2C_buffer^(0+128)+31),w	;volatile
  1639  028B  0020               	movlb	0	; select bank0
  1640  028C  00A2               	movwf	eeprom_write@value
  1641  028D  3014               	movlw	20
  1642  028E  22E7  3180         	fcall	_eeprom_write
  1643                           
  1644                           ;main.c: 468: eeprom_write(21, I2C_buffer.byte[0x20]);
  1645  0290  0021               	movlb	1	; select bank1
  1646  0291  0840               	movf	(_I2C_buffer^(0+128)+32),w	;volatile
  1647  0292  0020               	movlb	0	; select bank0
  1648  0293  00A2               	movwf	eeprom_write@value
  1649  0294  3015               	movlw	21
  1650  0295  22E7  3180         	fcall	_eeprom_write
  1651                           
  1652                           ;main.c: 469: eeprom_write(22, I2C_buffer.byte[0x21]);
  1653  0297  0021               	movlb	1	; select bank1
  1654  0298  0841               	movf	(_I2C_buffer^(0+128)+33),w	;volatile
  1655  0299  0020               	movlb	0	; select bank0
  1656  029A  00A2               	movwf	eeprom_write@value
  1657  029B  3016               	movlw	22
  1658  029C  22E7  3180         	fcall	_eeprom_write
  1659                           
  1660                           ;main.c: 470: eeprom_write(23, I2C_buffer.byte[0x22]);
  1661  029E  0021               	movlb	1	; select bank1
  1662  029F  0842               	movf	(_I2C_buffer^(0+128)+34),w	;volatile
  1663  02A0  0020               	movlb	0	; select bank0
  1664  02A1  00A2               	movwf	eeprom_write@value
  1665  02A2  3017               	movlw	23
  1666  02A3  22E7  3180         	fcall	_eeprom_write
  1667                           
  1668                           ;main.c: 471: eeprom_write(24, I2C_buffer.byte[0x23]);
  1669  02A5  0021               	movlb	1	; select bank1
  1670  02A6  0843               	movf	(_I2C_buffer^(0+128)+35),w	;volatile
  1671  02A7  0020               	movlb	0	; select bank0
  1672  02A8  00A2               	movwf	eeprom_write@value
  1673  02A9  3018               	movlw	24
  1674  02AA  22E7  3180         	fcall	_eeprom_write
  1675                           
  1676                           ;main.c: 472: eeprom_write(25, I2C_buffer.byte[0x24]);
  1677  02AC  0021               	movlb	1	; select bank1
  1678  02AD  0844               	movf	(_I2C_buffer^(0+128)+36),w	;volatile
  1679  02AE  0020               	movlb	0	; select bank0
  1680  02AF  00A2               	movwf	eeprom_write@value
  1681  02B0  3019               	movlw	25
  1682  02B1  22E7  3180         	fcall	_eeprom_write
  1683                           
  1684                           ;main.c: 473: eeprom_write(26, I2C_buffer.byte[0x25]);
  1685  02B3  0021               	movlb	1	; select bank1
  1686  02B4  0845               	movf	(_I2C_buffer^(0+128)+37),w	;volatile
  1687  02B5  0020               	movlb	0	; select bank0
  1688  02B6  00A2               	movwf	eeprom_write@value
  1689  02B7  301A               	movlw	26
  1690  02B8  22E7  3180         	fcall	_eeprom_write
  1691                           
  1692                           ;main.c: 474: eeprom_write(27, I2C_buffer.byte[0x26]);
  1693  02BA  0021               	movlb	1	; select bank1
  1694  02BB  0846               	movf	(_I2C_buffer^(0+128)+38),w	;volatile
  1695  02BC  0020               	movlb	0	; select bank0
  1696  02BD  00A2               	movwf	eeprom_write@value
  1697  02BE  301B               	movlw	27
  1698  02BF  22E7  3180         	fcall	_eeprom_write
  1699                           
  1700                           ;main.c: 475: eeprom_write(28, I2C_buffer.byte[0x27]);
  1701  02C1  0021               	movlb	1	; select bank1
  1702  02C2  0847               	movf	(_I2C_buffer^(0+128)+39),w	;volatile
  1703  02C3  0020               	movlb	0	; select bank0
  1704  02C4  00A2               	movwf	eeprom_write@value
  1705  02C5  301C               	movlw	28
  1706  02C6  22E7  3180         	fcall	_eeprom_write
  1707                           
  1708                           ;main.c: 476: eeprom_write(29, I2C_buffer.byte[0x28]);
  1709  02C8  0021               	movlb	1	; select bank1
  1710  02C9  0848               	movf	(_I2C_buffer^(0+128)+40),w	;volatile
  1711  02CA  0020               	movlb	0	; select bank0
  1712  02CB  00A2               	movwf	eeprom_write@value
  1713  02CC  301D               	movlw	29
  1714  02CD  22E7  3180         	fcall	_eeprom_write
  1715                           
  1716                           ;main.c: 477: eeprom_write(30, I2C_buffer.byte[0x29]);
  1717  02CF  0021               	movlb	1	; select bank1
  1718  02D0  0849               	movf	(_I2C_buffer^(0+128)+41),w	;volatile
  1719  02D1  0020               	movlb	0	; select bank0
  1720  02D2  00A2               	movwf	eeprom_write@value
  1721  02D3  301E               	movlw	30
  1722  02D4  22E7  3180         	fcall	_eeprom_write
  1723                           
  1724                           ;main.c: 478: eeprom_write(31, I2C_buffer.byte[0x2A]);
  1725  02D6  0021               	movlb	1	; select bank1
  1726  02D7  084A               	movf	(_I2C_buffer^(0+128)+42),w	;volatile
  1727  02D8  0020               	movlb	0	; select bank0
  1728  02D9  00A2               	movwf	eeprom_write@value
  1729  02DA  301F               	movlw	31
  1730  02DB  22E7  3180         	fcall	_eeprom_write
  1731                           
  1732                           ;main.c: 479: _delay((unsigned long)((5)*(32000000/4000.0)));
  1733  02DD  3034               	movlw	52
  1734  02DE  0021               	movlb	1	; select bank1
  1735  02DF  00DB               	movwf	??_main^(0+128)
  1736  02E0  30F1               	movlw	241
  1737  02E1                     u4507:	
  1738  02E1  0B89               	decfsz	9,f
  1739  02E2  2AE1               	goto	u4507
  1740  02E3  0BDB               	decfsz	??_main^(0+128),f
  1741  02E4  2AE1               	goto	u4507
  1742  02E5  3200               	nop2
  1743  02E6  2921               	goto	l147
  1744  02E7                     __end_of_main:	
  1745  02E7                     __ptext15:	
  1746 ;; *************** function _eeprom_write *****************
  1747 ;; Defined at:
  1748 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\pic\__eewrite.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  addr            1    wreg     unsigned char 
  1751 ;;  value           1    2[BANK0 ] unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  addr            1    3[BANK0 ] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 1F/0
  1760 ;;		On exit  : 1F/3
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1763 ;;      Params:         0       1       0       0
  1764 ;;      Locals:         0       1       0       0
  1765 ;;      Temps:          0       0       0       0
  1766 ;;      Totals:         0       2       0       0
  1767 ;;Total ram usage:        2 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    2
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _eeprom_write
  1779  02E7                     _eeprom_write:	
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1783                           ;eeprom_write@addr stored from wreg
  1784  02E7  00A3               	movwf	eeprom_write@addr
  1785  02E8                     l292:	
  1786                           ;__eewrite.c: 8: do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value
      +                          ); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } I
      +                          NTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1;
      +                           EE
  1787                           
  1788  02E8  0023               	movlb	3	; select bank3
  1789  02E9  1895               	btfsc	21,1	;volsfr
  1790  02EA  2AE8               	goto	l292
  1791  02EB  0020               	movlb	0	; select bank0
  1792  02EC  0823               	movf	eeprom_write@addr,w
  1793  02ED  0023               	movlb	3	; select bank3
  1794  02EE  0091               	movwf	17	;volatile
  1795  02EF  0192               	clrf	18	;volatile
  1796  02F0  0020               	movlb	0	; select bank0
  1797  02F1  0822               	movf	eeprom_write@value,w
  1798  02F2  0023               	movlb	3	; select bank3
  1799  02F3  0093               	movwf	19	;volatile
  1800  02F4  303F               	movlw	63
  1801  02F5  0595               	andwf	21,f	;volsfr
  1802  02F6  1003               	bcf	3,0	;volatile
  1803  02F7  1B8B               	btfsc	11,7	;volatile
  1804  02F8  1403               	bsf	3,0	;volatile
  1805  02F9  138B               	bcf	11,7	;volatile
  1806  02FA  1515               	bsf	21,2	;volsfr
  1807  02FB  3055               	movlw	85
  1808  02FC  0096               	movwf	22	;volsfr
  1809  02FD  30AA               	movlw	170
  1810  02FE  0096               	movwf	22	;volsfr
  1811  02FF  1495               	bsf	21,1	;volsfr
  1812  0300  1115               	bcf	21,2	;volsfr
  1813  0301  1803               	btfsc	3,0	;volatile
  1814  0302  178B               	bsf	11,7	;volatile
  1815  0303  0008               	return
  1816  0304                     __end_of_eeprom_write:	
  1817  0304                     __ptext10:	
  1818 ;; *************** function _M_control *****************
  1819 ;; Defined at:
  1820 ;;		line 229 in file "main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  ctr             2   12[BANK0 ] int 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 1F/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1834 ;;      Params:         0       2       0       0
  1835 ;;      Locals:         0       0       0       0
  1836 ;;      Temps:          0       1       0       0
  1837 ;;      Totals:         0       3       0       0
  1838 ;;Total ram usage:        3 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    3
  1841 ;; This function calls:
  1842 ;;		_PWM_set_duty
  1843 ;;		___wmul
  1844 ;; This function is called by:
  1845 ;;		_calculate_pidM
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _M_control
  1852  0304                     _M_control:	
  1853  0304                     l3005:	
  1854                           ;incstack = 0
  1855                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
  1856                           
  1857                           
  1858                           ;main.c: 231: if (ctr == 0)
  1859  0304  082C               	movf	M_control@ctr,w
  1860  0305  042D               	iorwf	M_control@ctr+1,w
  1861  0306  1D03               	btfss	3,2
  1862  0307  2B0E               	goto	l3009
  1863                           
  1864                           ;main.c: 232: {;main.c: 233: PWM_set_duty(ctr);
  1865  0308  082D               	movf	M_control@ctr+1,w
  1866  0309  00A3               	movwf	PWM_set_duty@duty+1
  1867  030A  082C               	movf	M_control@ctr,w
  1868  030B  00A2               	movwf	PWM_set_duty@duty
  1869  030C  2488  3180         	fcall	_PWM_set_duty
  1870  030E                     l3009:	
  1871                           
  1872                           ;main.c: 234: };main.c: 235: if (ctr > 0)
  1873  030E  0020               	movlb	0	; select bank0
  1874  030F  082D               	movf	M_control@ctr+1,w
  1875  0310  3A80               	xorlw	128
  1876  0311  00AE               	movwf	??_M_control
  1877  0312  3080               	movlw	128
  1878  0313  022E               	subwf	??_M_control,w
  1879  0314  1D03               	skipz
  1880  0315  2B18               	goto	u3425
  1881  0316  3001               	movlw	1
  1882  0317  022C               	subwf	M_control@ctr,w
  1883  0318                     u3425:	
  1884  0318  1C03               	skipc
  1885  0319  2B23               	goto	l3015
  1886                           
  1887                           ;main.c: 236: {;main.c: 237: LATAbits.LATA0 = 1;
  1888  031A  0022               	movlb	2	; select bank2
  1889  031B  140C               	bsf	12,0	;volatile
  1890                           
  1891                           ;main.c: 238: PWM_set_duty(ctr);
  1892  031C  0020               	movlb	0	; select bank0
  1893  031D  082D               	movf	M_control@ctr+1,w
  1894  031E  00A3               	movwf	PWM_set_duty@duty+1
  1895  031F  082C               	movf	M_control@ctr,w
  1896  0320  00A2               	movwf	PWM_set_duty@duty
  1897  0321  2488  3180         	fcall	_PWM_set_duty
  1898  0323                     l3015:	
  1899                           
  1900                           ;main.c: 239: };main.c: 240: if (ctr < 0)
  1901  0323  0020               	movlb	0	; select bank0
  1902  0324  1FAD               	btfss	M_control@ctr+1,7
  1903  0325  0008               	return
  1904                           
  1905                           ;main.c: 241: {;main.c: 242: LATAbits.LATA0 = 0;
  1906  0326  0022               	movlb	2	; select bank2
  1907  0327  100C               	bcf	12,0	;volatile
  1908                           
  1909                           ;main.c: 243: ctr = ctr * -1;
  1910  0328  30FF               	movlw	255
  1911  0329  0020               	movlb	0	; select bank0
  1912  032A  00A2               	movwf	___wmul@multiplier
  1913  032B  00A3               	movwf	___wmul@multiplier+1
  1914  032C  082D               	movf	M_control@ctr+1,w
  1915  032D  00A5               	movwf	___wmul@multiplicand+1
  1916  032E  082C               	movf	M_control@ctr,w
  1917  032F  00A4               	movwf	___wmul@multiplicand
  1918  0330  24B3  3180         	fcall	___wmul
  1919  0332  0823               	movf	?___wmul+1,w
  1920  0333  00AD               	movwf	M_control@ctr+1
  1921  0334  0822               	movf	?___wmul,w
  1922  0335  00AC               	movwf	M_control@ctr
  1923                           
  1924                           ;main.c: 244: PWM_set_duty(ctr);
  1925  0336  082D               	movf	M_control@ctr+1,w
  1926  0337  00A3               	movwf	PWM_set_duty@duty+1
  1927  0338  082C               	movf	M_control@ctr,w
  1928  0339  00A2               	movwf	PWM_set_duty@duty
  1929  033A  2C88               	ljmp	l2755
  1930  033B                     __end_of_M_control:	
  1931  033B                     __ptext2:	
  1932 ;; *************** function _calculate_pidM *****************
  1933 ;; Defined at:
  1934 ;;		line 248 in file "main.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  set             2   63[BANK0 ] int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  pid             4   73[BANK0 ] float 
  1939 ;;  error           4   69[BANK0 ] float 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 1F/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1949 ;;      Params:         0       2       0       0
  1950 ;;      Locals:         0      12       0       0
  1951 ;;      Temps:          0       0       0       0
  1952 ;;      Totals:         0      14       0       0
  1953 ;;Total ram usage:       14 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    4
  1956 ;; This function calls:
  1957 ;;		_M_control
  1958 ;;		___fladd
  1959 ;;		___flge
  1960 ;;		___flmul
  1961 ;;		___flsub
  1962 ;;		___fltol
  1963 ;;		___xxtofl
  1964 ;; This function is called by:
  1965 ;;		_pre_pidM
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _calculate_pidM
  1972  033B                     _calculate_pidM:	
  1973  033B                     l3247:	
  1974                           ;incstack = 0
  1975                           ; Regs used in _calculate_pidM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1976                           
  1977  033B  30AB               	movlw	((low (_I2C_buffer| 0))& (0+255)+11)
  1978                           
  1979                           ;main.c: 251: float pid = 0;
  1980  033C  01E9               	clrf	calculate_pidM@pid
  1981  033D  01EA               	clrf	calculate_pidM@pid+1
  1982  033E  01EB               	clrf	calculate_pidM@pid+2
  1983  033F  01EC               	clrf	calculate_pidM@pid+3
  1984                           
  1985                           ;main.c: 252: error = set - I2C_buffer.data.RPM;
  1986  0340  0086               	movwf	6
  1987  0341  0187               	clrf	7
  1988  0342  3F40               	moviw [0]fsr1
  1989  0343  025F               	subwf	calculate_pidM@set,w
  1990  0344  00A2               	movwf	___xxtofl@val
  1991  0345  3F41               	moviw [1]fsr1
  1992  0346  3B60               	subwfb	calculate_pidM@set+1,w
  1993  0347  00A3               	movwf	___xxtofl@val+1
  1994  0348  01A4               	clrf	___xxtofl@val+2
  1995  0349  1BA3               	btfsc	___xxtofl@val+1,7
  1996  034A  03A4               	decf	___xxtofl@val+2,f
  1997  034B  0824               	movf	___xxtofl@val+2,w
  1998  034C  00A5               	movwf	___xxtofl@val+3
  1999  034D  3001               	movlw	1
  2000  034E  318E  26DD  3180   	fcall	___xxtofl
  2001  0351  0825               	movf	?___xxtofl+3,w
  2002  0352  00E8               	movwf	calculate_pidM@error+3
  2003  0353  0824               	movf	?___xxtofl+2,w
  2004  0354  00E7               	movwf	calculate_pidM@error+2
  2005  0355  0823               	movf	?___xxtofl+1,w
  2006  0356  00E6               	movwf	calculate_pidM@error+1
  2007  0357  0822               	movf	?___xxtofl,w
  2008  0358  00E5               	movwf	calculate_pidM@error
  2009                           
  2010                           ;main.c: 253: pid = error * I2C_buffer.data.RPM_PID_KP;
  2011  0359  0868               	movf	calculate_pidM@error+3,w
  2012  035A  00AD               	movwf	___flmul@b+3
  2013  035B  0867               	movf	calculate_pidM@error+2,w
  2014  035C  00AC               	movwf	___flmul@b+2
  2015  035D  0866               	movf	calculate_pidM@error+1,w
  2016  035E  00AB               	movwf	___flmul@b+1
  2017  035F  0865               	movf	calculate_pidM@error,w
  2018  0360  00AA               	movwf	___flmul@b
  2019  0361  3013               	movlw	19
  2020  0362  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  2021  0363  0086               	movwf	6
  2022  0364  0187               	clrf	7
  2023  0365  3F40               	moviw [0]fsr1
  2024  0366  00AE               	movwf	___flmul@a
  2025  0367  3F41               	moviw [1]fsr1
  2026  0368  00AF               	movwf	___flmul@a+1
  2027  0369  3F42               	moviw [2]fsr1
  2028  036A  00B0               	movwf	___flmul@a+2
  2029  036B  3F43               	moviw [3]fsr1
  2030  036C  00B1               	movwf	___flmul@a+3
  2031  036D  3184  24C8  3180   	fcall	___flmul
  2032  0370  082D               	movf	?___flmul+3,w
  2033  0371  00EC               	movwf	calculate_pidM@pid+3
  2034  0372  082C               	movf	?___flmul+2,w
  2035  0373  00EB               	movwf	calculate_pidM@pid+2
  2036  0374  082B               	movf	?___flmul+1,w
  2037  0375  00EA               	movwf	calculate_pidM@pid+1
  2038  0376  082A               	movf	?___flmul,w
  2039  0377  00E9               	movwf	calculate_pidM@pid
  2040                           
  2041                           ;main.c: 254: accumulatorM += error;
  2042  0378  0868               	movf	calculate_pidM@error+3,w
  2043  0379  00C6               	movwf	___fladd@b+3
  2044  037A  0867               	movf	calculate_pidM@error+2,w
  2045  037B  00C5               	movwf	___fladd@b+2
  2046  037C  0866               	movf	calculate_pidM@error+1,w
  2047  037D  00C4               	movwf	___fladd@b+1
  2048  037E  0865               	movf	calculate_pidM@error,w
  2049  037F  00C3               	movwf	___fladd@b
  2050  0380  0021               	movlb	1	; select bank1
  2051  0381  0852               	movf	(_accumulatorM+3)^(0+128),w
  2052  0382  0020               	movlb	0	; select bank0
  2053  0383  00CA               	movwf	___fladd@a+3
  2054  0384  0021               	movlb	1	; select bank1
  2055  0385  0851               	movf	(_accumulatorM+2)^(0+128),w
  2056  0386  0020               	movlb	0	; select bank0
  2057  0387  00C9               	movwf	___fladd@a+2
  2058  0388  0021               	movlb	1	; select bank1
  2059  0389  0850               	movf	(_accumulatorM+1)^(0+128),w
  2060  038A  0020               	movlb	0	; select bank0
  2061  038B  00C8               	movwf	___fladd@a+1
  2062  038C  0021               	movlb	1	; select bank1
  2063  038D  084F               	movf	_accumulatorM^(0+128),w
  2064  038E  0020               	movlb	0	; select bank0
  2065  038F  00C7               	movwf	___fladd@a
  2066  0390  3186  26AF  3180   	fcall	___fladd
  2067  0393  0846               	movf	?___fladd+3,w
  2068  0394  0021               	movlb	1	; select bank1
  2069  0395  00D2               	movwf	(_accumulatorM+3)^(0+128)
  2070  0396  0020               	movlb	0	; select bank0
  2071  0397  0845               	movf	?___fladd+2,w
  2072  0398  0021               	movlb	1	; select bank1
  2073  0399  00D1               	movwf	(_accumulatorM+2)^(0+128)
  2074  039A  0020               	movlb	0	; select bank0
  2075  039B  0844               	movf	?___fladd+1,w
  2076  039C  0021               	movlb	1	; select bank1
  2077  039D  00D0               	movwf	(_accumulatorM+1)^(0+128)
  2078  039E  0020               	movlb	0	; select bank0
  2079  039F  0843               	movf	?___fladd,w
  2080  03A0  0021               	movlb	1	; select bank1
  2081  03A1  00CF               	movwf	_accumulatorM^(0+128)
  2082                           
  2083                           ;main.c: 255: pid += I2C_buffer.data.RPM_PID_KI*accumulatorM;
  2084  03A2  301B               	movlw	27
  2085  03A3  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  2086  03A4  0086               	movwf	6
  2087  03A5  0187               	clrf	7
  2088  03A6  3F40               	moviw [0]fsr1
  2089  03A7  0020               	movlb	0	; select bank0
  2090  03A8  00AE               	movwf	___flmul@a
  2091  03A9  3F41               	moviw [1]fsr1
  2092  03AA  00AF               	movwf	___flmul@a+1
  2093  03AB  3F42               	moviw [2]fsr1
  2094  03AC  00B0               	movwf	___flmul@a+2
  2095  03AD  3F43               	moviw [3]fsr1
  2096  03AE  00B1               	movwf	___flmul@a+3
  2097  03AF  0021               	movlb	1	; select bank1
  2098  03B0  0852               	movf	(_accumulatorM+3)^(0+128),w
  2099  03B1  0020               	movlb	0	; select bank0
  2100  03B2  00AD               	movwf	___flmul@b+3
  2101  03B3  0021               	movlb	1	; select bank1
  2102  03B4  0851               	movf	(_accumulatorM+2)^(0+128),w
  2103  03B5  0020               	movlb	0	; select bank0
  2104  03B6  00AC               	movwf	___flmul@b+2
  2105  03B7  0021               	movlb	1	; select bank1
  2106  03B8  0850               	movf	(_accumulatorM+1)^(0+128),w
  2107  03B9  0020               	movlb	0	; select bank0
  2108  03BA  00AB               	movwf	___flmul@b+1
  2109  03BB  0021               	movlb	1	; select bank1
  2110  03BC  084F               	movf	_accumulatorM^(0+128),w
  2111  03BD  0020               	movlb	0	; select bank0
  2112  03BE  00AA               	movwf	___flmul@b
  2113  03BF  3184  24C8  3180   	fcall	___flmul
  2114  03C2  082D               	movf	?___flmul+3,w
  2115  03C3  00C6               	movwf	___fladd@b+3
  2116  03C4  082C               	movf	?___flmul+2,w
  2117  03C5  00C5               	movwf	___fladd@b+2
  2118  03C6  082B               	movf	?___flmul+1,w
  2119  03C7  00C4               	movwf	___fladd@b+1
  2120  03C8  082A               	movf	?___flmul,w
  2121  03C9  00C3               	movwf	___fladd@b
  2122  03CA  086C               	movf	calculate_pidM@pid+3,w
  2123  03CB  00CA               	movwf	___fladd@a+3
  2124  03CC  086B               	movf	calculate_pidM@pid+2,w
  2125  03CD  00C9               	movwf	___fladd@a+2
  2126  03CE  086A               	movf	calculate_pidM@pid+1,w
  2127  03CF  00C8               	movwf	___fladd@a+1
  2128  03D0  0869               	movf	calculate_pidM@pid,w
  2129  03D1  00C7               	movwf	___fladd@a
  2130  03D2  3186  26AF  3180   	fcall	___fladd
  2131  03D5  0846               	movf	?___fladd+3,w
  2132  03D6  00EC               	movwf	calculate_pidM@pid+3
  2133  03D7  0845               	movf	?___fladd+2,w
  2134  03D8  00EB               	movwf	calculate_pidM@pid+2
  2135  03D9  0844               	movf	?___fladd+1,w
  2136  03DA  00EA               	movwf	calculate_pidM@pid+1
  2137  03DB  0843               	movf	?___fladd,w
  2138  03DC  00E9               	movwf	calculate_pidM@pid
  2139                           
  2140                           ;main.c: 256: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterrorM);
  2141  03DD  0868               	movf	calculate_pidM@error+3,w
  2142  03DE  00DE               	movwf	___flsub@b+3
  2143  03DF  0867               	movf	calculate_pidM@error+2,w
  2144  03E0  00DD               	movwf	___flsub@b+2
  2145  03E1  0866               	movf	calculate_pidM@error+1,w
  2146  03E2  00DC               	movwf	___flsub@b+1
  2147  03E3  0865               	movf	calculate_pidM@error,w
  2148  03E4  00DB               	movwf	___flsub@b
  2149  03E5  0021               	movlb	1	; select bank1
  2150  03E6  084E               	movf	(_lasterrorM+3)^(0+128),w
  2151  03E7  0020               	movlb	0	; select bank0
  2152  03E8  00DA               	movwf	___flsub@a+3
  2153  03E9  0021               	movlb	1	; select bank1
  2154  03EA  084D               	movf	(_lasterrorM+2)^(0+128),w
  2155  03EB  0020               	movlb	0	; select bank0
  2156  03EC  00D9               	movwf	___flsub@a+2
  2157  03ED  0021               	movlb	1	; select bank1
  2158  03EE  084C               	movf	(_lasterrorM+1)^(0+128),w
  2159  03EF  0020               	movlb	0	; select bank0
  2160  03F0  00D8               	movwf	___flsub@a+1
  2161  03F1  0021               	movlb	1	; select bank1
  2162  03F2  084B               	movf	_lasterrorM^(0+128),w
  2163  03F3  0020               	movlb	0	; select bank0
  2164  03F4  00D7               	movwf	___flsub@a
  2165  03F5  3186  2693  3180   	fcall	___flsub
  2166  03F8  085A               	movf	?___flsub+3,w
  2167  03F9  00B1               	movwf	___flmul@a+3
  2168  03FA  0859               	movf	?___flsub+2,w
  2169  03FB  00B0               	movwf	___flmul@a+2
  2170  03FC  0858               	movf	?___flsub+1,w
  2171  03FD  00AF               	movwf	___flmul@a+1
  2172  03FE  0857               	movf	?___flsub,w
  2173  03FF  00AE               	movwf	___flmul@a
  2174  0400  3017               	movlw	23
  2175  0401  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  2176  0402  0086               	movwf	6
  2177  0403  0187               	clrf	7
  2178  0404  3F40               	moviw [0]fsr1
  2179  0405  00AA               	movwf	___flmul@b
  2180  0406  3F41               	moviw [1]fsr1
  2181  0407  00AB               	movwf	___flmul@b+1
  2182  0408  3F42               	moviw [2]fsr1
  2183  0409  00AC               	movwf	___flmul@b+2
  2184  040A  3F43               	moviw [3]fsr1
  2185  040B  00AD               	movwf	___flmul@b+3
  2186  040C  3184  24C8  3180   	fcall	___flmul
  2187  040F  082D               	movf	?___flmul+3,w
  2188  0410  00E4               	movwf	_calculate_pidM$1301+3
  2189  0411  082C               	movf	?___flmul+2,w
  2190  0412  00E3               	movwf	_calculate_pidM$1301+2
  2191  0413  082B               	movf	?___flmul+1,w
  2192  0414  00E2               	movwf	_calculate_pidM$1301+1
  2193  0415  082A               	movf	?___flmul,w
  2194  0416  00E1               	movwf	_calculate_pidM$1301
  2195                           
  2196                           ;main.c: 256: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterrorM);
  2197  0417  0864               	movf	_calculate_pidM$1301+3,w
  2198  0418  00C6               	movwf	___fladd@b+3
  2199  0419  0863               	movf	_calculate_pidM$1301+2,w
  2200  041A  00C5               	movwf	___fladd@b+2
  2201  041B  0862               	movf	_calculate_pidM$1301+1,w
  2202  041C  00C4               	movwf	___fladd@b+1
  2203  041D  0861               	movf	_calculate_pidM$1301,w
  2204  041E  00C3               	movwf	___fladd@b
  2205  041F  086C               	movf	calculate_pidM@pid+3,w
  2206  0420  00CA               	movwf	___fladd@a+3
  2207  0421  086B               	movf	calculate_pidM@pid+2,w
  2208  0422  00C9               	movwf	___fladd@a+2
  2209  0423  086A               	movf	calculate_pidM@pid+1,w
  2210  0424  00C8               	movwf	___fladd@a+1
  2211  0425  0869               	movf	calculate_pidM@pid,w
  2212  0426  00C7               	movwf	___fladd@a
  2213  0427  3186  26AF  3180   	fcall	___fladd
  2214  042A  0846               	movf	?___fladd+3,w
  2215  042B  00EC               	movwf	calculate_pidM@pid+3
  2216  042C  0845               	movf	?___fladd+2,w
  2217  042D  00EB               	movwf	calculate_pidM@pid+2
  2218  042E  0844               	movf	?___fladd+1,w
  2219  042F  00EA               	movwf	calculate_pidM@pid+1
  2220  0430  0843               	movf	?___fladd,w
  2221  0431  00E9               	movwf	calculate_pidM@pid
  2222                           
  2223                           ;main.c: 257: lasterrorM = error;
  2224  0432  0868               	movf	calculate_pidM@error+3,w
  2225  0433  0021               	movlb	1	; select bank1
  2226  0434  00CE               	movwf	(_lasterrorM+3)^(0+128)
  2227  0435  0020               	movlb	0	; select bank0
  2228  0436  0867               	movf	calculate_pidM@error+2,w
  2229  0437  0021               	movlb	1	; select bank1
  2230  0438  00CD               	movwf	(_lasterrorM+2)^(0+128)
  2231  0439  0020               	movlb	0	; select bank0
  2232  043A  0866               	movf	calculate_pidM@error+1,w
  2233  043B  0021               	movlb	1	; select bank1
  2234  043C  00CC               	movwf	(_lasterrorM+1)^(0+128)
  2235  043D  0020               	movlb	0	; select bank0
  2236  043E  0865               	movf	calculate_pidM@error,w
  2237  043F  0021               	movlb	1	; select bank1
  2238  0440  00CB               	movwf	_lasterrorM^(0+128)
  2239                           
  2240                           ;main.c: 258: if (pid >= 1023)
  2241  0441  0020               	movlb	0	; select bank0
  2242  0442  086C               	movf	calculate_pidM@pid+3,w
  2243  0443  00A5               	movwf	___flge@ff1+3
  2244  0444  086B               	movf	calculate_pidM@pid+2,w
  2245  0445  00A4               	movwf	___flge@ff1+2
  2246  0446  086A               	movf	calculate_pidM@pid+1,w
  2247  0447  00A3               	movwf	___flge@ff1+1
  2248  0448  0869               	movf	calculate_pidM@pid,w
  2249  0449  00A2               	movwf	___flge@ff1
  2250  044A  3044               	movlw	68
  2251  044B  00A9               	movwf	___flge@ff2+3
  2252  044C  307F               	movlw	127
  2253  044D  00A8               	movwf	___flge@ff2+2
  2254  044E  30C0               	movlw	192
  2255  044F  00A7               	movwf	___flge@ff2+1
  2256  0450  01A6               	clrf	___flge@ff2
  2257  0451  318E  267B  3180   	fcall	___flge
  2258  0454  1C03               	btfss	3,0
  2259  0455  2C5D               	goto	l3265
  2260                           
  2261                           ;main.c: 259: {;main.c: 260: pid = 1023;
  2262  0456  3044               	movlw	68
  2263  0457  00EC               	movwf	calculate_pidM@pid+3
  2264  0458  307F               	movlw	127
  2265  0459  00EB               	movwf	calculate_pidM@pid+2
  2266  045A  30C0               	movlw	192
  2267  045B  00EA               	movwf	calculate_pidM@pid+1
  2268  045C  01E9               	clrf	calculate_pidM@pid
  2269  045D                     l3265:	
  2270                           
  2271                           ;main.c: 261: };main.c: 262: if (pid <= -1023) {
  2272  045D  30C4               	movlw	196
  2273  045E  00A5               	movwf	___flge@ff1+3
  2274  045F  307F               	movlw	127
  2275  0460  00A4               	movwf	___flge@ff1+2
  2276  0461  30C0               	movlw	192
  2277  0462  00A3               	movwf	___flge@ff1+1
  2278  0463  01A2               	clrf	___flge@ff1
  2279  0464  086C               	movf	calculate_pidM@pid+3,w
  2280  0465  00A9               	movwf	___flge@ff2+3
  2281  0466  086B               	movf	calculate_pidM@pid+2,w
  2282  0467  00A8               	movwf	___flge@ff2+2
  2283  0468  086A               	movf	calculate_pidM@pid+1,w
  2284  0469  00A7               	movwf	___flge@ff2+1
  2285  046A  0869               	movf	calculate_pidM@pid,w
  2286  046B  00A6               	movwf	___flge@ff2
  2287  046C  318E  267B  3180   	fcall	___flge
  2288  046F  1C03               	btfss	3,0
  2289  0470  2C78               	goto	l3269
  2290                           
  2291                           ;main.c: 263: pid = -1023;
  2292  0471  30C4               	movlw	196
  2293  0472  00EC               	movwf	calculate_pidM@pid+3
  2294  0473  307F               	movlw	127
  2295  0474  00EB               	movwf	calculate_pidM@pid+2
  2296  0475  30C0               	movlw	192
  2297  0476  00EA               	movwf	calculate_pidM@pid+1
  2298  0477  01E9               	clrf	calculate_pidM@pid
  2299  0478                     l3269:	
  2300                           
  2301                           ;main.c: 264: };main.c: 265: M_control((int) pid);
  2302  0478  086C               	movf	calculate_pidM@pid+3,w
  2303  0479  00A5               	movwf	___fltol@f1+3
  2304  047A  086B               	movf	calculate_pidM@pid+2,w
  2305  047B  00A4               	movwf	___fltol@f1+2
  2306  047C  086A               	movf	calculate_pidM@pid+1,w
  2307  047D  00A3               	movwf	___fltol@f1+1
  2308  047E  0869               	movf	calculate_pidM@pid,w
  2309  047F  00A2               	movwf	___fltol@f1
  2310  0480  318E  2628  3180   	fcall	___fltol
  2311  0483  0823               	movf	?___fltol+1,w
  2312  0484  00AD               	movwf	M_control@ctr+1
  2313  0485  0822               	movf	?___fltol,w
  2314  0486  00AC               	movwf	M_control@ctr
  2315  0487  2B04               	ljmp	l3005
  2316  0488                     __end_of_calculate_pidM:	
  2317  0488                     __ptext12:	
  2318 ;; *************** function _PWM_set_duty *****************
  2319 ;; Defined at:
  2320 ;;		line 220 in file "main.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  duty            2    2[BANK0 ] int 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  2    2[BANK0 ] int 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 1F/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2334 ;;      Params:         0       2       0       0
  2335 ;;      Locals:         0       0       0       0
  2336 ;;      Temps:          0       2       0       0
  2337 ;;      Totals:         0       4       0       0
  2338 ;;Total ram usage:        4 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    2
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_M_control
  2345 ;;		_main
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _PWM_set_duty
  2351  0488                     _PWM_set_duty:	
  2352  0488                     l2755:	
  2353                           ;incstack = 0
  2354                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
  2355                           
  2356                           
  2357                           ;main.c: 222: if (duty < 1024) {
  2358  0488  0823               	movf	PWM_set_duty@duty+1,w
  2359  0489  3A80               	xorlw	128
  2360  048A  00A4               	movwf	??_PWM_set_duty
  2361  048B  3084               	movlw	132
  2362  048C  0224               	subwf	??_PWM_set_duty,w
  2363  048D  1D03               	skipz
  2364  048E  2C91               	goto	u2915
  2365  048F  3000               	movlw	0
  2366  0490  0222               	subwf	PWM_set_duty@duty,w
  2367  0491                     u2915:	
  2368  0491  1803               	skipnc
  2369  0492  0008               	return
  2370                           
  2371                           ;main.c: 223: CCPR1L = (0xFF & ((unsigned int) duty >> 2));
  2372  0493  0020               	movlb	0	; select bank0
  2373  0494  0823               	movf	PWM_set_duty@duty+1,w
  2374  0495  00A5               	movwf	??_PWM_set_duty+1
  2375  0496  0822               	movf	PWM_set_duty@duty,w
  2376  0497  00A4               	movwf	??_PWM_set_duty
  2377  0498  36A5               	lsrf	??_PWM_set_duty+1,f
  2378  0499  0CA4               	rrf	??_PWM_set_duty,f
  2379  049A  36A5               	lsrf	??_PWM_set_duty+1,f
  2380  049B  0CA4               	rrf	??_PWM_set_duty,f
  2381  049C  0824               	movf	??_PWM_set_duty,w
  2382  049D  0025               	movlb	5	; select bank5
  2383  049E  0091               	movwf	17	;volatile
  2384                           
  2385                           ;main.c: 224: CCP1CON = (0x0C | (0x30 & ((unsigned int) duty << 4)));
  2386  049F  0020               	movlb	0	; select bank0
  2387  04A0  0E22               	swapf	PWM_set_duty@duty,w
  2388  04A1  39F0               	andlw	240
  2389  04A2  3930               	andlw	48
  2390  04A3  380C               	iorlw	12
  2391  04A4  0025               	movlb	5	; select bank5
  2392  04A5  0093               	movwf	19	;volatile
  2393  04A6  0008               	return
  2394  04A7                     __end_of_PWM_set_duty:	
  2395  04A7                     __ptext16:	
  2396 ;; *************** function _PWM_Init *****************
  2397 ;; Defined at:
  2398 ;;		line 183 in file "main.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  2  115[None  ] int 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2
  2407 ;; Tracked objects:
  2408 ;;		On entry : 1F/1
  2409 ;;		On exit  : 1F/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2412 ;;      Params:         0       0       0       0
  2413 ;;      Locals:         0       0       0       0
  2414 ;;      Temps:          0       0       0       0
  2415 ;;      Totals:         0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    2
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function _PWM_Init
  2428  04A7                     _PWM_Init:	
  2429                           
  2430                           ;main.c: 204: PR2 = 0xFF;
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in _PWM_Init: [wreg+status,2]
  2434  04A7  30FF               	movlw	255
  2435  04A8  0020               	movlb	0	; select bank0
  2436  04A9  009B               	movwf	27	;volatile
  2437                           
  2438                           ;main.c: 205: CCP1CON = 0b00001100;
  2439  04AA  300C               	movlw	12
  2440  04AB  0025               	movlb	5	; select bank5
  2441  04AC  0093               	movwf	19	;volatile
  2442                           
  2443                           ;main.c: 206: CCPR1L = 0b00000000;
  2444  04AD  0191               	clrf	17	;volatile
  2445                           
  2446                           ;main.c: 207: PIR1bits.TMR2IF = 0;
  2447  04AE  0020               	movlb	0	; select bank0
  2448  04AF  1091               	bcf	17,1	;volatile
  2449                           
  2450                           ;main.c: 208: T2CON = 0b00000100;
  2451  04B0  3004               	movlw	4
  2452  04B1  009C               	movwf	28	;volatile
  2453  04B2  0008               	return
  2454  04B3                     __end_of_PWM_Init:	
  2455  04B3                     __ptext11:	
  2456 ;; *************** function ___wmul *****************
  2457 ;; Defined at:
  2458 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  multiplier      2    2[BANK0 ] unsigned int 
  2461 ;;  multiplicand    2    4[BANK0 ] unsigned int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  product         2    6[BANK0 ] unsigned int 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2    2[BANK0 ] unsigned int 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 1F/0
  2470 ;;		On exit  : 1F/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2473 ;;      Params:         0       4       0       0
  2474 ;;      Locals:         0       2       0       0
  2475 ;;      Temps:          0       0       0       0
  2476 ;;      Totals:         0       6       0       0
  2477 ;;Total ram usage:        6 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    2
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_M_control
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function ___wmul
  2489  04B3                     ___wmul:	
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2493  04B3  01A6               	clrf	___wmul@product
  2494  04B4  01A7               	clrf	___wmul@product+1
  2495  04B5                     l2761:	
  2496  04B5  1C22               	btfss	___wmul@multiplier,0
  2497  04B6  2CBB               	goto	l2765
  2498  04B7  0824               	movf	___wmul@multiplicand,w
  2499  04B8  07A6               	addwf	___wmul@product,f
  2500  04B9  0825               	movf	___wmul@multiplicand+1,w
  2501  04BA  3DA7               	addwfc	___wmul@product+1,f
  2502  04BB                     l2765:	
  2503  04BB  35A4               	lslf	___wmul@multiplicand,f
  2504  04BC  0DA5               	rlf	___wmul@multiplicand+1,f
  2505  04BD  36A3               	lsrf	___wmul@multiplier+1,f
  2506  04BE  0CA2               	rrf	___wmul@multiplier,f
  2507  04BF  0822               	movf	___wmul@multiplier,w
  2508  04C0  0423               	iorwf	___wmul@multiplier+1,w
  2509  04C1  1D03               	btfss	3,2
  2510  04C2  2CB5               	goto	l2761
  2511  04C3  0827               	movf	___wmul@product+1,w
  2512  04C4  00A3               	movwf	?___wmul+1
  2513  04C5  0826               	movf	___wmul@product,w
  2514  04C6  00A2               	movwf	?___wmul
  2515  04C7  0008               	return
  2516  04C8                     __end_of___wmul:	
  2517                           
  2518                           	psect	swtext1
  2519  0800                     __pswtext1:	
  2520  0800                     S3793:	
  2521  0800  3181  2926         	ljmp	l3681
  2522  0802  3181  292C         	ljmp	l3683
  2523  0804  3181  2936         	ljmp	l3685
  2524  0806  3181  2940         	ljmp	l3687
  2525  0808  3181  29F6         	ljmp	l3743
  2526  080A  3181  2995         	ljmp	l3711
  2527  080C  3181  299D         	ljmp	l3713
  2528  080E  3181  29F6         	ljmp	l3743
  2529                           
  2530                           	psect	text1
  2531  0DD8                     __ptext1:	
  2532 ;; *************** function _pre_pidM *****************
  2533 ;; Defined at:
  2534 ;;		line 268 in file "main.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  set             2    0[BANK1 ] int 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 1F/1
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2548 ;;      Params:         0       0       2       0
  2549 ;;      Locals:         0       0       0       0
  2550 ;;      Temps:          0       0       2       0
  2551 ;;      Totals:         0       0       4       0
  2552 ;;Total ram usage:        4 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; Hardware stack levels required when called:    5
  2555 ;; This function calls:
  2556 ;;		_calculate_pidM
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _pre_pidM
  2564  0DD8                     _pre_pidM:	
  2565                           
  2566                           ;main.c: 270: zero_cross = ((lset^set) < 0);
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in _pre_pidM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2570  0DD8  0857               	movf	pre_pidM@set^(0+128),w
  2571  0DD9  0653               	xorwf	_lset^(0+128),w
  2572  0DDA  00D9               	movwf	??_pre_pidM^(0+128)
  2573  0DDB  0858               	movf	(pre_pidM@set+1)^(0+128),w
  2574  0DDC  0654               	xorwf	(_lset+1)^(0+128),w
  2575  0DDD  00DA               	movwf	(??_pre_pidM+1)^(0+128)
  2576  0DDE  1FDA               	btfss	(??_pre_pidM+1)^(0+128),7
  2577  0DDF  2DE3               	goto	u3870
  2578  0DE0  0020               	movlb	0	; select bank0
  2579  0DE1  146D               	bsf	_zero_cross/(0+8),_zero_cross& (0+7)
  2580  0DE2  2DE5               	goto	u3884
  2581  0DE3                     u3870:	
  2582  0DE3  0020               	movlb	0	; select bank0
  2583  0DE4  106D               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
  2584  0DE5                     u3884:	
  2585                           
  2586                           ;main.c: 271: if (((zero_cross == 1) &(set <= 0) & (lset <= 0)))
  2587  0DE5  0021               	movlb	1	; select bank1
  2588  0DE6  0858               	movf	(pre_pidM@set+1)^(0+128),w
  2589  0DE7  3A80               	xorlw	128
  2590  0DE8  00D9               	movwf	??_pre_pidM^(0+128)
  2591  0DE9  3080               	movlw	128
  2592  0DEA  0259               	subwf	??_pre_pidM^(0+128),w
  2593  0DEB  1D03               	skipz
  2594  0DEC  2DEF               	goto	u3895
  2595  0DED  3001               	movlw	1
  2596  0DEE  0257               	subwf	pre_pidM@set^(0+128),w
  2597  0DEF                     u3895:	
  2598  0DEF  1803               	skipnc
  2599  0DF0  2E02               	goto	l134
  2600  0DF1  0020               	movlb	0	; select bank0
  2601  0DF2  1C6D               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
  2602  0DF3  2E02               	goto	l134
  2603  0DF4  0021               	movlb	1	; select bank1
  2604  0DF5  0854               	movf	(_lset+1)^(0+128),w
  2605  0DF6  3A80               	xorlw	128
  2606  0DF7  00D9               	movwf	??_pre_pidM^(0+128)
  2607  0DF8  3080               	movlw	128
  2608  0DF9  0259               	subwf	??_pre_pidM^(0+128),w
  2609  0DFA  1D03               	skipz
  2610  0DFB  2DFE               	goto	u3915
  2611  0DFC  3001               	movlw	1
  2612  0DFD  0253               	subwf	_lset^(0+128),w
  2613  0DFE                     u3915:	
  2614  0DFE  1803               	skipnc
  2615  0DFF  2E02               	goto	l134
  2616                           
  2617                           ;main.c: 272: {;main.c: 273: zero_cross = 0;
  2618  0E00  0020               	movlb	0	; select bank0
  2619  0E01  106D               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
  2620  0E02                     l134:	
  2621                           
  2622                           ;main.c: 274: };main.c: 275: if (zero_cross == 1) {
  2623  0E02  0020               	movlb	0	; select bank0
  2624  0E03  1C6D               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
  2625  0E04  2E1A               	goto	l3285
  2626  0E05                     l3279:	
  2627                           
  2628                           ;main.c: 277: calculate_pidM(0);
  2629  0E05  0020               	movlb	0	; select bank0
  2630  0E06  01DF               	clrf	calculate_pidM@set
  2631  0E07  01E0               	clrf	calculate_pidM@set+1
  2632  0E08  3183  233B  318D   	fcall	_calculate_pidM
  2633  0E0B  0064               	clrwdt	;# 
  2634                           
  2635                           ;main.c: 279: _delay((unsigned long)((5)*(32000000/4000.0)));
  2636  0E0C  3034               	movlw	52
  2637  0E0D  0021               	movlb	1	; select bank1
  2638  0E0E  00D9               	movwf	??_pre_pidM^(0+128)
  2639  0E0F  30F1               	movlw	241
  2640  0E10                     u4517:	
  2641  0E10  0B89               	decfsz	9,f
  2642  0E11  2E10               	goto	u4517
  2643  0E12  0BD9               	decfsz	??_pre_pidM^(0+128),f
  2644  0E13  2E10               	goto	u4517
  2645  0E14  3200               	nop2
  2646                           
  2647                           ;main.c: 280: } while ((I2C_buffer.data.RPM != 0));
  2648  0E15  0021               	movlb	1	; select bank1
  2649  0E16  082B               	movf	(_I2C_buffer^(0+128)+11),w	;volatile
  2650  0E17  042C               	iorwf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  2651  0E18  1D03               	btfss	3,2
  2652  0E19  2E05               	goto	l3279
  2653  0E1A                     l3285:	
  2654                           
  2655                           ;main.c: 281: };main.c: 282: lset = set;
  2656  0E1A  0021               	movlb	1	; select bank1
  2657  0E1B  0858               	movf	(pre_pidM@set+1)^(0+128),w
  2658  0E1C  00D4               	movwf	(_lset+1)^(0+128)
  2659  0E1D  0857               	movf	pre_pidM@set^(0+128),w
  2660  0E1E  00D3               	movwf	_lset^(0+128)
  2661                           
  2662                           ;main.c: 283: calculate_pidM(set);
  2663  0E1F  0858               	movf	(pre_pidM@set+1)^(0+128),w
  2664  0E20  0020               	movlb	0	; select bank0
  2665  0E21  00E0               	movwf	calculate_pidM@set+1
  2666  0E22  0021               	movlb	1	; select bank1
  2667  0E23  0857               	movf	pre_pidM@set^(0+128),w
  2668  0E24  0020               	movlb	0	; select bank0
  2669  0E25  00DF               	movwf	calculate_pidM@set
  2670  0E26  3183  2B3B         	ljmp	l3247
  2671  0E28                     __end_of_pre_pidM:	
  2672                           
  2673                           	psect	text3
  2674  0EDD                     __ptext3:	
  2675 ;; *************** function ___xxtofl *****************
  2676 ;; Defined at:
  2677 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  sign            1    wreg     unsigned char 
  2680 ;;  val             4    2[BANK0 ] long 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  sign            1   10[BANK0 ] unsigned char 
  2683 ;;  arg             4   12[BANK0 ] unsigned long 
  2684 ;;  exp             1   11[BANK0 ] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  4    2[BANK0 ] unsigned char 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0
  2689 ;; Tracked objects:
  2690 ;;		On entry : 1F/0
  2691 ;;		On exit  : 1F/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2694 ;;      Params:         0       4       0       0
  2695 ;;      Locals:         0       6       0       0
  2696 ;;      Temps:          0       4       0       0
  2697 ;;      Totals:         0      14       0       0
  2698 ;;Total ram usage:       14 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    2
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_calculate_pidM
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function ___xxtofl
  2710  0EDD                     ___xxtofl:	
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2714                           ;___xxtofl@sign stored from wreg
  2715  0EDD  00AA               	movwf	___xxtofl@sign
  2716  0EDE  082A               	movf	___xxtofl@sign,w
  2717  0EDF  1D03               	btfss	3,2
  2718  0EE0  1FA5               	btfss	___xxtofl@val+3,7
  2719  0EE1  2EF2               	goto	l3209
  2720  0EE2  0922               	comf	___xxtofl@val,w
  2721  0EE3  00AC               	movwf	___xxtofl@arg
  2722  0EE4  0923               	comf	___xxtofl@val+1,w
  2723  0EE5  00AD               	movwf	___xxtofl@arg+1
  2724  0EE6  0924               	comf	___xxtofl@val+2,w
  2725  0EE7  00AE               	movwf	___xxtofl@arg+2
  2726  0EE8  0925               	comf	___xxtofl@val+3,w
  2727  0EE9  00AF               	movwf	___xxtofl@arg+3
  2728  0EEA  0AAC               	incf	___xxtofl@arg,f
  2729  0EEB  1903               	skipnz
  2730  0EEC  0AAD               	incf	___xxtofl@arg+1,f
  2731  0EED  1903               	skipnz
  2732  0EEE  0AAE               	incf	___xxtofl@arg+2,f
  2733  0EEF  1903               	skipnz
  2734  0EF0  0AAF               	incf	___xxtofl@arg+3,f
  2735  0EF1  2EFA               	goto	l715
  2736  0EF2                     l3209:	
  2737  0EF2  0825               	movf	___xxtofl@val+3,w
  2738  0EF3  00AF               	movwf	___xxtofl@arg+3
  2739  0EF4  0824               	movf	___xxtofl@val+2,w
  2740  0EF5  00AE               	movwf	___xxtofl@arg+2
  2741  0EF6  0823               	movf	___xxtofl@val+1,w
  2742  0EF7  00AD               	movwf	___xxtofl@arg+1
  2743  0EF8  0822               	movf	___xxtofl@val,w
  2744  0EF9  00AC               	movwf	___xxtofl@arg
  2745  0EFA                     l715:	
  2746  0EFA  0825               	movf	___xxtofl@val+3,w
  2747  0EFB  0424               	iorwf	___xxtofl@val+2,w
  2748  0EFC  0423               	iorwf	___xxtofl@val+1,w
  2749  0EFD  0422               	iorwf	___xxtofl@val,w
  2750  0EFE  1D03               	skipz
  2751  0EFF  2F05               	goto	l3213
  2752  0F00  01A2               	clrf	?___xxtofl
  2753  0F01  01A3               	clrf	?___xxtofl+1
  2754  0F02  01A4               	clrf	?___xxtofl+2
  2755  0F03  01A5               	clrf	?___xxtofl+3
  2756  0F04  0008               	return
  2757  0F05                     l3213:	
  2758  0F05  3096               	movlw	150
  2759  0F06  00AB               	movwf	___xxtofl@exp
  2760  0F07                     l3217:	
  2761  0F07  30FE               	movlw	254
  2762  0F08  052F               	andwf	___xxtofl@arg+3,w
  2763  0F09  1903               	btfsc	3,2
  2764  0F0A  2F1C               	goto	l3225
  2765  0F0B  0AAB               	incf	___xxtofl@exp,f
  2766  0F0C  36AF               	lsrf	___xxtofl@arg+3,f
  2767  0F0D  0CAE               	rrf	___xxtofl@arg+2,f
  2768  0F0E  0CAD               	rrf	___xxtofl@arg+1,f
  2769  0F0F  0CAC               	rrf	___xxtofl@arg,f
  2770  0F10  2F07               	goto	l3217
  2771  0F11                     l3219:	
  2772  0F11  3001               	movlw	1
  2773  0F12  0AAB               	incf	___xxtofl@exp,f
  2774  0F13  07AC               	addwf	___xxtofl@arg,f
  2775  0F14  3000               	movlw	0
  2776  0F15  3DAD               	addwfc	___xxtofl@arg+1,f
  2777  0F16  3DAE               	addwfc	___xxtofl@arg+2,f
  2778  0F17  3DAF               	addwfc	___xxtofl@arg+3,f
  2779  0F18  36AF               	lsrf	___xxtofl@arg+3,f
  2780  0F19  0CAE               	rrf	___xxtofl@arg+2,f
  2781  0F1A  0CAD               	rrf	___xxtofl@arg+1,f
  2782  0F1B  0CAC               	rrf	___xxtofl@arg,f
  2783  0F1C                     l3225:	
  2784  0F1C  30FF               	movlw	255
  2785  0F1D  052F               	andwf	___xxtofl@arg+3,w
  2786  0F1E  1903               	btfsc	3,2
  2787  0F1F  2F2A               	goto	l3229
  2788  0F20  2F11               	goto	l3219
  2789  0F21                     l3231:	
  2790  0F21  3002               	movlw	2
  2791  0F22  022B               	subwf	___xxtofl@exp,w
  2792  0F23  1C03               	btfss	3,0
  2793  0F24  2F2C               	goto	l728
  2794  0F25  03AB               	decf	___xxtofl@exp,f
  2795  0F26  35AC               	lslf	___xxtofl@arg,f
  2796  0F27  0DAD               	rlf	___xxtofl@arg+1,f
  2797  0F28  0DAE               	rlf	___xxtofl@arg+2,f
  2798  0F29  0DAF               	rlf	___xxtofl@arg+3,f
  2799  0F2A                     l3229:	
  2800  0F2A  1FAE               	btfss	___xxtofl@arg+2,7
  2801  0F2B  2F21               	goto	l3231
  2802  0F2C                     l728:	
  2803  0F2C  1C2B               	btfss	___xxtofl@exp,0
  2804  0F2D  13AE               	bcf	___xxtofl@arg+2,7
  2805  0F2E  36AB               	lsrf	___xxtofl@exp,f
  2806  0F2F  082B               	movf	___xxtofl@exp,w
  2807  0F30  00A9               	movwf	??___xxtofl+3
  2808  0F31  01A8               	clrf	??___xxtofl+2
  2809  0F32  01A7               	clrf	??___xxtofl+1
  2810  0F33  01A6               	clrf	??___xxtofl
  2811  0F34  0826               	movf	??___xxtofl,w
  2812  0F35  04AC               	iorwf	___xxtofl@arg,f
  2813  0F36  0827               	movf	??___xxtofl+1,w
  2814  0F37  04AD               	iorwf	___xxtofl@arg+1,f
  2815  0F38  0828               	movf	??___xxtofl+2,w
  2816  0F39  04AE               	iorwf	___xxtofl@arg+2,f
  2817  0F3A  0829               	movf	??___xxtofl+3,w
  2818  0F3B  04AF               	iorwf	___xxtofl@arg+3,f
  2819  0F3C  082A               	movf	___xxtofl@sign,w
  2820  0F3D  1D03               	btfss	3,2
  2821  0F3E  1FA5               	btfss	___xxtofl@val+3,7
  2822  0F3F  2F41               	goto	l3243
  2823  0F40  17AF               	bsf	___xxtofl@arg+3,7
  2824  0F41                     l3243:	
  2825  0F41  082F               	movf	___xxtofl@arg+3,w
  2826  0F42  00A5               	movwf	?___xxtofl+3
  2827  0F43  082E               	movf	___xxtofl@arg+2,w
  2828  0F44  00A4               	movwf	?___xxtofl+2
  2829  0F45  082D               	movf	___xxtofl@arg+1,w
  2830  0F46  00A3               	movwf	?___xxtofl+1
  2831  0F47  082C               	movf	___xxtofl@arg,w
  2832  0F48  00A2               	movwf	?___xxtofl
  2833  0F49  0008               	return
  2834  0F4A                     __end_of___xxtofl:	
  2835                           
  2836                           	psect	text4
  2837  0E28                     __ptext4:	
  2838 ;; *************** function ___fltol *****************
  2839 ;; Defined at:
  2840 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  f1              4    2[BANK0 ] unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  exp1            1   11[BANK0 ] unsigned char 
  2845 ;;  sign1           1   10[BANK0 ] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  4    2[BANK0 ] long 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 1F/0
  2852 ;;		On exit  : 1F/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2855 ;;      Params:         0       4       0       0
  2856 ;;      Locals:         0       2       0       0
  2857 ;;      Temps:          0       4       0       0
  2858 ;;      Totals:         0      10       0       0
  2859 ;;Total ram usage:       10 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    2
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_calculate_pidM
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           
  2870                           ;psect for function ___fltol
  2871  0E28                     ___fltol:	
  2872                           
  2873                           ;incstack = 0
  2874                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2875  0E28  0822               	movf	___fltol@f1,w
  2876  0E29  00A6               	movwf	??___fltol
  2877  0E2A  0823               	movf	___fltol@f1+1,w
  2878  0E2B  00A7               	movwf	??___fltol+1
  2879  0E2C  0824               	movf	___fltol@f1+2,w
  2880  0E2D  00A8               	movwf	??___fltol+2
  2881  0E2E  0825               	movf	___fltol@f1+3,w
  2882  0E2F  00A9               	movwf	??___fltol+3
  2883  0E30  1003               	clrc
  2884  0E31  0D28               	rlf	??___fltol+2,w
  2885  0E32  0D29               	rlf	??___fltol+3,w
  2886  0E33  00AB               	movwf	___fltol@exp1
  2887  0E34  082B               	movf	___fltol@exp1,w
  2888  0E35  1D03               	btfss	3,2
  2889  0E36  2E3C               	goto	l3045
  2890  0E37                     l3043:	
  2891  0E37  01A2               	clrf	?___fltol
  2892  0E38  01A3               	clrf	?___fltol+1
  2893  0E39  01A4               	clrf	?___fltol+2
  2894  0E3A  01A5               	clrf	?___fltol+3
  2895  0E3B  0008               	return
  2896  0E3C                     l3045:	
  2897  0E3C  0822               	movf	___fltol@f1,w
  2898  0E3D  00A6               	movwf	??___fltol
  2899  0E3E  0823               	movf	___fltol@f1+1,w
  2900  0E3F  00A7               	movwf	??___fltol+1
  2901  0E40  0824               	movf	___fltol@f1+2,w
  2902  0E41  00A8               	movwf	??___fltol+2
  2903  0E42  0825               	movf	___fltol@f1+3,w
  2904  0E43  00A9               	movwf	??___fltol+3
  2905  0E44  301F               	movlw	31
  2906  0E45                     u3505:	
  2907  0E45  36A9               	lsrf	??___fltol+3,f
  2908  0E46  0CA8               	rrf	??___fltol+2,f
  2909  0E47  0CA7               	rrf	??___fltol+1,f
  2910  0E48  0CA6               	rrf	??___fltol,f
  2911  0E49  0B89               	decfsz	9,f
  2912  0E4A  2E45               	goto	u3505
  2913  0E4B  0826               	movf	??___fltol,w
  2914  0E4C  00AA               	movwf	___fltol@sign1
  2915  0E4D  3096               	movlw	150
  2916  0E4E  17A4               	bsf	___fltol@f1+2,7
  2917  0E4F  01A5               	clrf	___fltol@f1+3
  2918  0E50  02AB               	subwf	___fltol@exp1,f
  2919  0E51  1FAB               	btfss	___fltol@exp1,7
  2920  0E52  2E5F               	goto	l3063
  2921  0E53  082B               	movf	___fltol@exp1,w
  2922  0E54  3A80               	xorlw	128
  2923  0E55  3E97               	addlw	151
  2924  0E56  1C03               	btfss	3,0
  2925  0E57  2E37               	goto	l3043
  2926  0E58                     l3059:	
  2927  0E58  36A5               	lsrf	___fltol@f1+3,f
  2928  0E59  0CA4               	rrf	___fltol@f1+2,f
  2929  0E5A  0CA3               	rrf	___fltol@f1+1,f
  2930  0E5B  0CA2               	rrf	___fltol@f1,f
  2931  0E5C  0FAB               	incfsz	___fltol@exp1,f
  2932  0E5D  2E58               	goto	l3059
  2933  0E5E  2E6C               	goto	l3071
  2934  0E5F                     l3063:	
  2935  0E5F  3020               	movlw	32
  2936  0E60  022B               	subwf	___fltol@exp1,w
  2937  0E61  1803               	btfsc	3,0
  2938  0E62  2E37               	goto	l3043
  2939  0E63                     l3069:	
  2940  0E63  082B               	movf	___fltol@exp1,w
  2941  0E64  1903               	btfsc	3,2
  2942  0E65  2E6C               	goto	l3071
  2943  0E66  35A2               	lslf	___fltol@f1,f
  2944  0E67  0DA3               	rlf	___fltol@f1+1,f
  2945  0E68  0DA4               	rlf	___fltol@f1+2,f
  2946  0E69  0DA5               	rlf	___fltol@f1+3,f
  2947  0E6A  03AB               	decf	___fltol@exp1,f
  2948  0E6B  2E63               	goto	l3069
  2949  0E6C                     l3071:	
  2950  0E6C  082A               	movf	___fltol@sign1,w
  2951  0E6D  1903               	btfsc	3,2
  2952  0E6E  0008               	return
  2953  0E6F  09A2               	comf	___fltol@f1,f
  2954  0E70  09A3               	comf	___fltol@f1+1,f
  2955  0E71  09A4               	comf	___fltol@f1+2,f
  2956  0E72  09A5               	comf	___fltol@f1+3,f
  2957  0E73  0AA2               	incf	___fltol@f1,f
  2958  0E74  1903               	skipnz
  2959  0E75  0AA3               	incf	___fltol@f1+1,f
  2960  0E76  1903               	skipnz
  2961  0E77  0AA4               	incf	___fltol@f1+2,f
  2962  0E78  1903               	skipnz
  2963  0E79  0AA5               	incf	___fltol@f1+3,f
  2964  0E7A  0008               	return
  2965  0E7B                     __end_of___fltol:	
  2966                           
  2967                           	psect	text5
  2968  0693                     __ptext5:	
  2969 ;; *************** function ___flsub *****************
  2970 ;; Defined at:
  2971 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  a               4   55[BANK0 ] long 
  2974 ;;  b               4   59[BANK0 ] long 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  4   55[BANK0 ] long 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, pclath, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 1F/0
  2983 ;;		On exit  : 1F/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2986 ;;      Params:         0       8       0       0
  2987 ;;      Locals:         0       0       0       0
  2988 ;;      Temps:          0       0       0       0
  2989 ;;      Totals:         0       8       0       0
  2990 ;;Total ram usage:        8 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    3
  2993 ;; This function calls:
  2994 ;;		___fladd
  2995 ;; This function is called by:
  2996 ;;		_calculate_pidM
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function ___flsub
  3002  0693                     ___flsub:	
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  3006  0693  3080               	movlw	128
  3007  0694  06DA               	xorwf	___flsub@a+3,f
  3008  0695  085E               	movf	___flsub@b+3,w
  3009  0696  00C6               	movwf	___fladd@b+3
  3010  0697  085D               	movf	___flsub@b+2,w
  3011  0698  00C5               	movwf	___fladd@b+2
  3012  0699  085C               	movf	___flsub@b+1,w
  3013  069A  00C4               	movwf	___fladd@b+1
  3014  069B  085B               	movf	___flsub@b,w
  3015  069C  00C3               	movwf	___fladd@b
  3016  069D  085A               	movf	___flsub@a+3,w
  3017  069E  00CA               	movwf	___fladd@a+3
  3018  069F  0859               	movf	___flsub@a+2,w
  3019  06A0  00C9               	movwf	___fladd@a+2
  3020  06A1  0858               	movf	___flsub@a+1,w
  3021  06A2  00C8               	movwf	___fladd@a+1
  3022  06A3  0857               	movf	___flsub@a,w
  3023  06A4  00C7               	movwf	___fladd@a
  3024  06A5  26AF               	fcall	___fladd
  3025  06A6  0846               	movf	?___fladd+3,w
  3026  06A7  00DA               	movwf	?___flsub+3
  3027  06A8  0845               	movf	?___fladd+2,w
  3028  06A9  00D9               	movwf	?___flsub+2
  3029  06AA  0844               	movf	?___fladd+1,w
  3030  06AB  00D8               	movwf	?___flsub+1
  3031  06AC  0843               	movf	?___fladd,w
  3032  06AD  00D7               	movwf	?___flsub
  3033  06AE  0008               	return
  3034  06AF                     __end_of___flsub:	
  3035  06AF                     __ptext6:	
  3036 ;; *************** function ___fladd *****************
  3037 ;; Defined at:
  3038 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  b               4   35[BANK0 ] long 
  3041 ;;  a               4   39[BANK0 ] long 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  grs             1   54[BANK0 ] unsigned char 
  3044 ;;  bexp            1   53[BANK0 ] unsigned char 
  3045 ;;  aexp            1   52[BANK0 ] unsigned char 
  3046 ;;  signs           1   51[BANK0 ] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  4   35[BANK0 ] unsigned char 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 1F/0
  3053 ;;		On exit  : 1F/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3056 ;;      Params:         0       8       0       0
  3057 ;;      Locals:         0       4       0       0
  3058 ;;      Temps:          0       8       0       0
  3059 ;;      Totals:         0      20       0       0
  3060 ;;Total ram usage:       20 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    2
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_calculate_pidM
  3067 ;;		___flsub
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function ___fladd
  3073  06AF                     ___fladd:	
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3077  06AF  0846               	movf	___fladd@b+3,w
  3078  06B0  00D3               	movwf	___fladd@signs
  3079  06B1  3080               	movlw	128
  3080  06B2  05D3               	andwf	___fladd@signs,f
  3081  06B3  3546               	lslf	___fladd@b+3,w
  3082  06B4  00D5               	movwf	___fladd@bexp
  3083  06B5  1BC5               	btfsc	___fladd@b+2,7
  3084  06B6  1455               	bsf	___fladd@bexp,0
  3085  06B7  0855               	movf	___fladd@bexp,w
  3086  06B8  1903               	btfsc	3,2
  3087  06B9  2EC2               	goto	l593
  3088  06BA  0F55               	incfsz	___fladd@bexp,w
  3089  06BB  2EC0               	goto	l594
  3090  06BC  01C3               	clrf	___fladd@b
  3091  06BD  01C4               	clrf	___fladd@b+1
  3092  06BE  01C5               	clrf	___fladd@b+2
  3093  06BF  01C6               	clrf	___fladd@b+3
  3094  06C0                     l594:	
  3095  06C0  17C5               	bsf	___fladd@b+2,7
  3096  06C1  2EC5               	goto	L1
  3097  06C2                     l593:	
  3098  06C2  01C3               	clrf	___fladd@b
  3099  06C3  01C4               	clrf	___fladd@b+1
  3100  06C4  01C5               	clrf	___fladd@b+2
  3101  06C5                     L1:	
  3102  06C5  01C6               	clrf	___fladd@b+3
  3103  06C6  084A               	movf	___fladd@a+3,w
  3104  06C7  00D4               	movwf	___fladd@aexp
  3105  06C8  3080               	movlw	128
  3106  06C9  05D4               	andwf	___fladd@aexp,f
  3107  06CA  0854               	movf	___fladd@aexp,w
  3108  06CB  0653               	xorwf	___fladd@signs,w
  3109  06CC  1D03               	btfss	3,2
  3110  06CD  1753               	bsf	___fladd@signs,6
  3111  06CE  354A               	lslf	___fladd@a+3,w
  3112  06CF  00D4               	movwf	___fladd@aexp
  3113  06D0  1BC9               	btfsc	___fladd@a+2,7
  3114  06D1  1454               	bsf	___fladd@aexp,0
  3115  06D2  0854               	movf	___fladd@aexp,w
  3116  06D3  1903               	btfsc	3,2
  3117  06D4  2EDD               	goto	l598
  3118  06D5  0F54               	incfsz	___fladd@aexp,w
  3119  06D6  2EDB               	goto	l599
  3120  06D7  01C7               	clrf	___fladd@a
  3121  06D8  01C8               	clrf	___fladd@a+1
  3122  06D9  01C9               	clrf	___fladd@a+2
  3123  06DA  01CA               	clrf	___fladd@a+3
  3124  06DB                     l599:	
  3125  06DB  17C9               	bsf	___fladd@a+2,7
  3126  06DC  2EE0               	goto	L2
  3127  06DD                     l598:	
  3128  06DD  01C7               	clrf	___fladd@a
  3129  06DE  01C8               	clrf	___fladd@a+1
  3130  06DF  01C9               	clrf	___fladd@a+2
  3131  06E0                     L2:	
  3132  06E0  01CA               	clrf	___fladd@a+3
  3133  06E1  0855               	movf	___fladd@bexp,w
  3134  06E2  0254               	subwf	___fladd@aexp,w
  3135  06E3  1803               	skipnc
  3136  06E4  2F07               	goto	l2851
  3137  06E5  1F53               	btfss	___fladd@signs,6
  3138  06E6  2EE9               	goto	l2821
  3139  06E7  3080               	movlw	128
  3140  06E8  06D3               	xorwf	___fladd@signs,f
  3141  06E9                     l2821:	
  3142  06E9  0855               	movf	___fladd@bexp,w
  3143  06EA  00D6               	movwf	___fladd@grs
  3144  06EB  0854               	movf	___fladd@aexp,w
  3145  06EC  00D5               	movwf	___fladd@bexp
  3146  06ED  0856               	movf	___fladd@grs,w
  3147  06EE  00D4               	movwf	___fladd@aexp
  3148  06EF  0843               	movf	___fladd@b,w
  3149  06F0  00D6               	movwf	___fladd@grs
  3150  06F1  0847               	movf	___fladd@a,w
  3151  06F2  00C3               	movwf	___fladd@b
  3152  06F3  0856               	movf	___fladd@grs,w
  3153  06F4  00C7               	movwf	___fladd@a
  3154  06F5  0844               	movf	___fladd@b+1,w
  3155  06F6  00D6               	movwf	___fladd@grs
  3156  06F7  0848               	movf	___fladd@a+1,w
  3157  06F8  00C4               	movwf	___fladd@b+1
  3158  06F9  0856               	movf	___fladd@grs,w
  3159  06FA  00C8               	movwf	___fladd@a+1
  3160  06FB  0845               	movf	___fladd@b+2,w
  3161  06FC  00D6               	movwf	___fladd@grs
  3162  06FD  0849               	movf	___fladd@a+2,w
  3163  06FE  00C5               	movwf	___fladd@b+2
  3164  06FF  0856               	movf	___fladd@grs,w
  3165  0700  00C9               	movwf	___fladd@a+2
  3166  0701  0846               	movf	___fladd@b+3,w
  3167  0702  00D6               	movwf	___fladd@grs
  3168  0703  084A               	movf	___fladd@a+3,w
  3169  0704  00C6               	movwf	___fladd@b+3
  3170  0705  0856               	movf	___fladd@grs,w
  3171  0706  00CA               	movwf	___fladd@a+3
  3172  0707                     l2851:	
  3173  0707  01D6               	clrf	___fladd@grs
  3174  0708  0854               	movf	___fladd@aexp,w
  3175  0709  00CB               	movwf	??___fladd
  3176  070A  01CC               	clrf	??___fladd+1
  3177  070B  084C               	movf	??___fladd+1,w
  3178  070C  00CE               	movwf	??___fladd+3
  3179  070D  0855               	movf	___fladd@bexp,w
  3180  070E  024B               	subwf	??___fladd,w
  3181  070F  00CD               	movwf	??___fladd+2
  3182  0710  1C03               	skipc
  3183  0711  03CE               	decf	??___fladd+3,f
  3184  0712  084E               	movf	??___fladd+3,w
  3185  0713  3A80               	xorlw	128
  3186  0714  00CF               	movwf	??___fladd+4
  3187  0715  3080               	movlw	128
  3188  0716  024F               	subwf	??___fladd+4,w
  3189  0717  1D03               	skipz
  3190  0718  2F1B               	goto	u3035
  3191  0719  301A               	movlw	26
  3192  071A  024D               	subwf	??___fladd+2,w
  3193  071B                     u3035:	
  3194  071B  1C03               	skipc
  3195  071C  2F3D               	goto	l2865
  3196  071D  0020               	movlb	0	; select bank0
  3197  071E  0846               	movf	___fladd@b+3,w
  3198  071F  0445               	iorwf	___fladd@b+2,w
  3199  0720  0444               	iorwf	___fladd@b+1,w
  3200  0721  0443               	iorwf	___fladd@b,w
  3201  0722  1903               	btfsc	3,2
  3202  0723  2F26               	goto	u3040
  3203  0724  3001               	movlw	1
  3204  0725  2F27               	goto	u3050
  3205  0726                     u3040:	
  3206  0726  3000               	movlw	0
  3207  0727                     u3050:	
  3208  0727  00D6               	movwf	___fladd@grs
  3209  0728  01C3               	clrf	___fladd@b
  3210  0729  01C4               	clrf	___fladd@b+1
  3211  072A  01C5               	clrf	___fladd@b+2
  3212  072B  01C6               	clrf	___fladd@b+3
  3213  072C  0854               	movf	___fladd@aexp,w
  3214  072D  00D5               	movwf	___fladd@bexp
  3215  072E  2F42               	goto	l604
  3216  072F                     l606:	
  3217  072F  1C56               	btfss	___fladd@grs,0
  3218  0730  2F35               	goto	l607
  3219  0731  3656               	lsrf	___fladd@grs,w
  3220  0732  3801               	iorlw	1
  3221  0733  00D6               	movwf	___fladd@grs
  3222  0734  2F36               	goto	l608
  3223  0735                     l607:	
  3224  0735  36D6               	lsrf	___fladd@grs,f
  3225  0736                     l608:	
  3226  0736  1843               	btfsc	___fladd@b,0
  3227  0737  17D6               	bsf	___fladd@grs,7
  3228  0738  37C6               	asrf	___fladd@b+3,f
  3229  0739  0CC5               	rrf	___fladd@b+2,f
  3230  073A  0CC4               	rrf	___fladd@b+1,f
  3231  073B  0CC3               	rrf	___fladd@b,f
  3232  073C  0AD5               	incf	___fladd@bexp,f
  3233  073D                     l2865:	
  3234  073D  0020               	movlb	0	; select bank0
  3235  073E  0854               	movf	___fladd@aexp,w
  3236  073F  0255               	subwf	___fladd@bexp,w
  3237  0740  1C03               	skipc
  3238  0741  2F2F               	goto	l606
  3239  0742                     l604:	
  3240  0742  1B53               	btfsc	___fladd@signs,6
  3241  0743  2F65               	goto	l2883
  3242  0744  0855               	movf	___fladd@bexp,w
  3243  0745  1D03               	btfss	3,2
  3244  0746  2F4C               	goto	l2871
  3245  0747  01C3               	clrf	?___fladd
  3246  0748  01C4               	clrf	?___fladd+1
  3247  0749  01C5               	clrf	?___fladd+2
  3248  074A  01C6               	clrf	?___fladd+3
  3249  074B  0008               	return
  3250  074C                     l2871:	
  3251  074C  0847               	movf	___fladd@a,w
  3252  074D  07C3               	addwf	___fladd@b,f
  3253  074E  0848               	movf	___fladd@a+1,w
  3254  074F  3DC4               	addwfc	___fladd@b+1,f
  3255  0750  0849               	movf	___fladd@a+2,w
  3256  0751  3DC5               	addwfc	___fladd@b+2,f
  3257  0752  084A               	movf	___fladd@a+3,w
  3258  0753  3DC6               	addwfc	___fladd@b+3,f
  3259  0754  1C46               	btfss	___fladd@b+3,0
  3260  0755  2FCD               	goto	l2913
  3261  0756  1C56               	btfss	___fladd@grs,0
  3262  0757  2F5C               	goto	l615
  3263  0758  3656               	lsrf	___fladd@grs,w
  3264  0759  3801               	iorlw	1
  3265  075A  00D6               	movwf	___fladd@grs
  3266  075B  2F5D               	goto	l616
  3267  075C                     l615:	
  3268  075C  36D6               	lsrf	___fladd@grs,f
  3269  075D                     l616:	
  3270  075D  1843               	btfsc	___fladd@b,0
  3271  075E  17D6               	bsf	___fladd@grs,7
  3272  075F  37C6               	asrf	___fladd@b+3,f
  3273  0760  0CC5               	rrf	___fladd@b+2,f
  3274  0761  0CC4               	rrf	___fladd@b+1,f
  3275  0762  0CC3               	rrf	___fladd@b,f
  3276  0763  0AD5               	incf	___fladd@bexp,f
  3277  0764  2FCD               	goto	l2913
  3278  0765                     l2883:	
  3279  0765  0846               	movf	___fladd@b+3,w
  3280  0766  3A80               	xorlw	128
  3281  0767  00CB               	movwf	??___fladd
  3282  0768  084A               	movf	___fladd@a+3,w
  3283  0769  3A80               	xorlw	128
  3284  076A  024B               	subwf	??___fladd,w
  3285  076B  1D03               	skipz
  3286  076C  2F77               	goto	u3143
  3287  076D  0849               	movf	___fladd@a+2,w
  3288  076E  0245               	subwf	___fladd@b+2,w
  3289  076F  1D03               	skipz
  3290  0770  2F77               	goto	u3143
  3291  0771  0848               	movf	___fladd@a+1,w
  3292  0772  0244               	subwf	___fladd@b+1,w
  3293  0773  1D03               	skipz
  3294  0774  2F77               	goto	u3143
  3295  0775  0847               	movf	___fladd@a,w
  3296  0776  0243               	subwf	___fladd@b,w
  3297  0777                     u3143:	
  3298  0777  1803               	skipnc
  3299  0778  2FA6               	goto	l2893
  3300  0779  30FF               	movlw	255
  3301  077A  00CB               	movwf	??___fladd
  3302  077B  00CC               	movwf	??___fladd+1
  3303  077C  00CD               	movwf	??___fladd+2
  3304  077D  00CE               	movwf	??___fladd+3
  3305  077E  0843               	movf	___fladd@b,w
  3306  077F  0247               	subwf	___fladd@a,w
  3307  0780  00CF               	movwf	??___fladd+4
  3308  0781  0844               	movf	___fladd@b+1,w
  3309  0782  3B48               	subwfb	___fladd@a+1,w
  3310  0783  00D0               	movwf	??___fladd+5
  3311  0784  0845               	movf	___fladd@b+2,w
  3312  0785  3B49               	subwfb	___fladd@a+2,w
  3313  0786  00D1               	movwf	??___fladd+6
  3314  0787  0846               	movf	___fladd@b+3,w
  3315  0788  3B4A               	subwfb	___fladd@a+3,w
  3316  0789  00D2               	movwf	??___fladd+7
  3317  078A  084F               	movf	??___fladd+4,w
  3318  078B  07CB               	addwf	??___fladd,f
  3319  078C  0850               	movf	??___fladd+5,w
  3320  078D  3DCC               	addwfc	??___fladd+1,f
  3321  078E  0851               	movf	??___fladd+6,w
  3322  078F  3DCD               	addwfc	??___fladd+2,f
  3323  0790  0852               	movf	??___fladd+7,w
  3324  0791  3DCE               	addwfc	??___fladd+3,f
  3325  0792  084E               	movf	??___fladd+3,w
  3326  0793  00C6               	movwf	___fladd@b+3
  3327  0794  084D               	movf	??___fladd+2,w
  3328  0795  00C5               	movwf	___fladd@b+2
  3329  0796  084C               	movf	??___fladd+1,w
  3330  0797  00C4               	movwf	___fladd@b+1
  3331  0798  084B               	movf	??___fladd,w
  3332  0799  00C3               	movwf	___fladd@b
  3333  079A  3080               	movlw	128
  3334  079B  06D3               	xorwf	___fladd@signs,f
  3335  079C  09D6               	comf	___fladd@grs,f
  3336  079D  0FD6               	incfsz	___fladd@grs,f
  3337  079E  2FAE               	goto	l621
  3338  079F  3001               	movlw	1
  3339  07A0  07C3               	addwf	___fladd@b,f
  3340  07A1  3000               	movlw	0
  3341  07A2  3DC4               	addwfc	___fladd@b+1,f
  3342  07A3  3DC5               	addwfc	___fladd@b+2,f
  3343  07A4  3DC6               	addwfc	___fladd@b+3,f
  3344  07A5  2FAE               	goto	l621
  3345  07A6                     l2893:	
  3346  07A6  0847               	movf	___fladd@a,w
  3347  07A7  02C3               	subwf	___fladd@b,f
  3348  07A8  0848               	movf	___fladd@a+1,w
  3349  07A9  3BC4               	subwfb	___fladd@b+1,f
  3350  07AA  0849               	movf	___fladd@a+2,w
  3351  07AB  3BC5               	subwfb	___fladd@b+2,f
  3352  07AC  084A               	movf	___fladd@a+3,w
  3353  07AD  3BC6               	subwfb	___fladd@b+3,f
  3354  07AE                     l621:	
  3355  07AE  0846               	movf	___fladd@b+3,w
  3356  07AF  0445               	iorwf	___fladd@b+2,w
  3357  07B0  0444               	iorwf	___fladd@b+1,w
  3358  07B1  0443               	iorwf	___fladd@b,w
  3359  07B2  1D03               	skipz
  3360  07B3  2FCB               	goto	l2911
  3361  07B4  0856               	movf	___fladd@grs,w
  3362  07B5  1D03               	btfss	3,2
  3363  07B6  2FCB               	goto	l2911
  3364  07B7  01C3               	clrf	?___fladd
  3365  07B8  01C4               	clrf	?___fladd+1
  3366  07B9  01C5               	clrf	?___fladd+2
  3367  07BA  01C6               	clrf	?___fladd+3
  3368  07BB  0008               	return
  3369  07BC                     l2899:	
  3370  07BC  35C3               	lslf	___fladd@b,f
  3371  07BD  0DC4               	rlf	___fladd@b+1,f
  3372  07BE  0DC5               	rlf	___fladd@b+2,f
  3373  07BF  0DC6               	rlf	___fladd@b+3,f
  3374  07C0  1BD6               	btfsc	___fladd@grs,7
  3375  07C1  1443               	bsf	___fladd@b,0
  3376  07C2  1C56               	btfss	___fladd@grs,0
  3377  07C3  2FC7               	goto	l626
  3378  07C4  1403               	setc
  3379  07C5  0DD6               	rlf	___fladd@grs,f
  3380  07C6  2FC8               	goto	l2907
  3381  07C7                     l626:	
  3382  07C7  35D6               	lslf	___fladd@grs,f
  3383  07C8                     l2907:	
  3384  07C8  0855               	movf	___fladd@bexp,w
  3385  07C9  1D03               	btfss	3,2
  3386  07CA  03D5               	decf	___fladd@bexp,f
  3387  07CB                     l2911:	
  3388  07CB  1FC5               	btfss	___fladd@b+2,7
  3389  07CC  2FBC               	goto	l2899
  3390  07CD                     l2913:	
  3391  07CD  01D4               	clrf	___fladd@aexp
  3392  07CE  1FD6               	btfss	___fladd@grs,7
  3393  07CF  2FD8               	goto	l2923
  3394  07D0  0856               	movf	___fladd@grs,w
  3395  07D1  397F               	andlw	127
  3396  07D2  1903               	btfsc	3,2
  3397  07D3  1843               	btfsc	___fladd@b,0
  3398  07D4  2FD6               	goto	l2919
  3399  07D5  2FD8               	goto	l2923
  3400  07D6                     l2919:	
  3401  07D6  01D4               	clrf	___fladd@aexp
  3402  07D7  0AD4               	incf	___fladd@aexp,f
  3403  07D8                     l2923:	
  3404  07D8  0854               	movf	___fladd@aexp,w
  3405  07D9  1903               	btfsc	3,2
  3406  07DA  2FE9               	goto	l2935
  3407  07DB  3001               	movlw	1
  3408  07DC  07C3               	addwf	___fladd@b,f
  3409  07DD  3000               	movlw	0
  3410  07DE  3DC4               	addwfc	___fladd@b+1,f
  3411  07DF  3DC5               	addwfc	___fladd@b+2,f
  3412  07E0  3DC6               	addwfc	___fladd@b+3,f
  3413  07E1  1C46               	btfss	___fladd@b+3,0
  3414  07E2  2FE9               	goto	l2935
  3415  07E3  37C6               	asrf	___fladd@b+3,f
  3416  07E4  0CC5               	rrf	___fladd@b+2,f
  3417  07E5  0CC4               	rrf	___fladd@b+1,f
  3418  07E6  0CC3               	rrf	___fladd@b,f
  3419  07E7  0F55               	incfsz	___fladd@bexp,w
  3420  07E8  0AD5               	incf	___fladd@bexp,f
  3421  07E9                     l2935:	
  3422  07E9  0A55               	incf	___fladd@bexp,w
  3423  07EA  1D03               	btfss	3,2
  3424  07EB  0855               	movf	___fladd@bexp,w
  3425  07EC  1D03               	btfss	3,2
  3426  07ED  2FF5               	goto	l2943
  3427  07EE  01C3               	clrf	___fladd@b
  3428  07EF  01C4               	clrf	___fladd@b+1
  3429  07F0  01C5               	clrf	___fladd@b+2
  3430  07F1  01C6               	clrf	___fladd@b+3
  3431  07F2  0855               	movf	___fladd@bexp,w
  3432  07F3  1903               	btfsc	3,2
  3433  07F4  01D3               	clrf	___fladd@signs
  3434  07F5                     l2943:	
  3435  07F5  1C55               	btfss	___fladd@bexp,0
  3436  07F6  2FF9               	goto	l641
  3437  07F7  17C5               	bsf	___fladd@b+2,7
  3438  07F8  2FFA               	goto	l2947
  3439  07F9                     l641:	
  3440  07F9  13C5               	bcf	___fladd@b+2,7
  3441  07FA                     l2947:	
  3442  07FA  3655               	lsrf	___fladd@bexp,w
  3443  07FB  00C6               	movwf	___fladd@b+3
  3444  07FC  1BD3               	btfsc	___fladd@signs,7
  3445  07FD  17C6               	bsf	___fladd@b+3,7
  3446  07FE  0008               	return
  3447  07FF                     __end_of___fladd:	
  3448                           
  3449                           	psect	text7
  3450  04C8                     __ptext7:	
  3451 ;; *************** function ___flmul *****************
  3452 ;; Defined at:
  3453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  b               4   10[BANK0 ] unsigned char 
  3456 ;;  a               4   14[BANK0 ] unsigned char 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  prod            4   29[BANK0 ] struct .
  3459 ;;  grs             4   25[BANK0 ] unsigned long 
  3460 ;;  temp            2   33[BANK0 ] struct .
  3461 ;;  bexp            1   24[BANK0 ] unsigned char 
  3462 ;;  aexp            1   23[BANK0 ] unsigned char 
  3463 ;;  sign            1   22[BANK0 ] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  4   10[BANK0 ] unsigned char 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0, pclath, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 1F/0
  3470 ;;		On exit  : 1F/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3473 ;;      Params:         0       8       0       0
  3474 ;;      Locals:         0      13       0       0
  3475 ;;      Temps:          0       4       0       0
  3476 ;;      Totals:         0      25       0       0
  3477 ;;Total ram usage:       25 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    3
  3480 ;; This function calls:
  3481 ;;		__Umul8_16
  3482 ;; This function is called by:
  3483 ;;		_calculate_pidM
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function ___flmul
  3489  04C8                     ___flmul:	
  3490                           
  3491                           ;incstack = 0
  3492                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3493  04C8  082D               	movf	___flmul@b+3,w
  3494  04C9  00B6               	movwf	___flmul@sign
  3495  04CA  3080               	movlw	128
  3496  04CB  05B6               	andwf	___flmul@sign,f
  3497  04CC  352D               	lslf	___flmul@b+3,w
  3498  04CD  00B8               	movwf	___flmul@bexp
  3499  04CE  1BAC               	btfsc	___flmul@b+2,7
  3500  04CF  1438               	bsf	___flmul@bexp,0
  3501  04D0  0838               	movf	___flmul@bexp,w
  3502  04D1  1903               	btfsc	3,2
  3503  04D2  2CDB               	goto	l686
  3504  04D3  0F38               	incfsz	___flmul@bexp,w
  3505  04D4  2CD9               	goto	l687
  3506  04D5  01AA               	clrf	___flmul@b
  3507  04D6  01AB               	clrf	___flmul@b+1
  3508  04D7  01AC               	clrf	___flmul@b+2
  3509  04D8  01AD               	clrf	___flmul@b+3
  3510  04D9                     l687:	
  3511  04D9  17AC               	bsf	___flmul@b+2,7
  3512  04DA  2CDF               	goto	l3097
  3513  04DB                     l686:	
  3514  04DB  01AA               	clrf	___flmul@b
  3515  04DC  01AB               	clrf	___flmul@b+1
  3516  04DD  01AC               	clrf	___flmul@b+2
  3517  04DE  01AD               	clrf	___flmul@b+3
  3518  04DF                     l3097:	
  3519  04DF  0831               	movf	___flmul@a+3,w
  3520  04E0  3980               	andlw	128
  3521  04E1  06B6               	xorwf	___flmul@sign,f
  3522  04E2  3531               	lslf	___flmul@a+3,w
  3523  04E3  00B7               	movwf	___flmul@aexp
  3524  04E4  1BB0               	btfsc	___flmul@a+2,7
  3525  04E5  1437               	bsf	___flmul@aexp,0
  3526  04E6  0837               	movf	___flmul@aexp,w
  3527  04E7  1903               	btfsc	3,2
  3528  04E8  2CF1               	goto	l690
  3529  04E9  0F37               	incfsz	___flmul@aexp,w
  3530  04EA  2CEF               	goto	l691
  3531  04EB  01AE               	clrf	___flmul@a
  3532  04EC  01AF               	clrf	___flmul@a+1
  3533  04ED  01B0               	clrf	___flmul@a+2
  3534  04EE  01B1               	clrf	___flmul@a+3
  3535  04EF                     l691:	
  3536  04EF  17B0               	bsf	___flmul@a+2,7
  3537  04F0  2CF5               	goto	l3109
  3538  04F1                     l690:	
  3539  04F1  01AE               	clrf	___flmul@a
  3540  04F2  01AF               	clrf	___flmul@a+1
  3541  04F3  01B0               	clrf	___flmul@a+2
  3542  04F4  01B1               	clrf	___flmul@a+3
  3543  04F5                     l3109:	
  3544  04F5  0837               	movf	___flmul@aexp,w
  3545  04F6  1D03               	btfss	3,2
  3546  04F7  0838               	movf	___flmul@bexp,w
  3547  04F8  1D03               	btfss	3,2
  3548  04F9  2CFF               	goto	l3113
  3549  04FA  01AA               	clrf	?___flmul
  3550  04FB  01AB               	clrf	?___flmul+1
  3551  04FC  01AC               	clrf	?___flmul+2
  3552  04FD  01AD               	clrf	?___flmul+3
  3553  04FE  0008               	return
  3554  04FF                     l3113:	
  3555  04FF  082A               	movf	___flmul@b,w
  3556  0500  00A2               	movwf	__Umul8_16@multiplicand
  3557  0501  0830               	movf	___flmul@a+2,w
  3558  0502  264A  3184         	fcall	__Umul8_16
  3559  0504  0823               	movf	?__Umul8_16+1,w
  3560  0505  00C2               	movwf	___flmul@temp+1
  3561  0506  0822               	movf	?__Umul8_16,w
  3562  0507  00C1               	movwf	___flmul@temp
  3563  0508  00B9               	movwf	___flmul@grs
  3564  0509  01BA               	clrf	___flmul@grs+1
  3565  050A  01BB               	clrf	___flmul@grs+2
  3566  050B  01BC               	clrf	___flmul@grs+3
  3567  050C  0842               	movf	___flmul@temp+1,w
  3568  050D  00BD               	movwf	___flmul@prod
  3569  050E  01BE               	clrf	___flmul@prod+1
  3570  050F  01BF               	clrf	___flmul@prod+2
  3571  0510  01C0               	clrf	___flmul@prod+3
  3572  0511  082B               	movf	___flmul@b+1,w
  3573  0512  00A2               	movwf	__Umul8_16@multiplicand
  3574  0513  082F               	movf	___flmul@a+1,w
  3575  0514  264A  3184         	fcall	__Umul8_16
  3576  0516  0823               	movf	?__Umul8_16+1,w
  3577  0517  00C2               	movwf	___flmul@temp+1
  3578  0518  0822               	movf	?__Umul8_16,w
  3579  0519  00C1               	movwf	___flmul@temp
  3580  051A  07B9               	addwf	___flmul@grs,f
  3581  051B  3001               	movlw	1
  3582  051C  1803               	skipnc
  3583  051D  07BA               	addwf	___flmul@grs+1,f
  3584  051E  1803               	skipnc
  3585  051F  07BB               	addwf	___flmul@grs+2,f
  3586  0520  1803               	skipnc
  3587  0521  07BC               	addwf	___flmul@grs+3,f
  3588  0522  0842               	movf	___flmul@temp+1,w
  3589  0523  07BD               	addwf	___flmul@prod,f
  3590  0524  3001               	movlw	1
  3591  0525  1803               	skipnc
  3592  0526  07BE               	addwf	___flmul@prod+1,f
  3593  0527  1803               	skipnc
  3594  0528  07BF               	addwf	___flmul@prod+2,f
  3595  0529  1803               	skipnc
  3596  052A  07C0               	addwf	___flmul@prod+3,f
  3597  052B  082C               	movf	___flmul@b+2,w
  3598  052C  00A2               	movwf	__Umul8_16@multiplicand
  3599  052D  082E               	movf	___flmul@a,w
  3600  052E  264A  3184         	fcall	__Umul8_16
  3601  0530  0823               	movf	?__Umul8_16+1,w
  3602  0531  00C2               	movwf	___flmul@temp+1
  3603  0532  0822               	movf	?__Umul8_16,w
  3604  0533  00C1               	movwf	___flmul@temp
  3605  0534  07B9               	addwf	___flmul@grs,f
  3606  0535  3001               	movlw	1
  3607  0536  1803               	skipnc
  3608  0537  07BA               	addwf	___flmul@grs+1,f
  3609  0538  1803               	skipnc
  3610  0539  07BB               	addwf	___flmul@grs+2,f
  3611  053A  1803               	skipnc
  3612  053B  07BC               	addwf	___flmul@grs+3,f
  3613  053C  0842               	movf	___flmul@temp+1,w
  3614  053D  07BD               	addwf	___flmul@prod,f
  3615  053E  3001               	movlw	1
  3616  053F  1803               	skipnc
  3617  0540  07BE               	addwf	___flmul@prod+1,f
  3618  0541  1803               	skipnc
  3619  0542  07BF               	addwf	___flmul@prod+2,f
  3620  0543  1803               	skipnc
  3621  0544  07C0               	addwf	___flmul@prod+3,f
  3622  0545  083B               	movf	___flmul@grs+2,w
  3623  0546  00BC               	movwf	___flmul@grs+3
  3624  0547  083A               	movf	___flmul@grs+1,w
  3625  0548  00BB               	movwf	___flmul@grs+2
  3626  0549  0839               	movf	___flmul@grs,w
  3627  054A  00BA               	movwf	___flmul@grs+1
  3628  054B  01B9               	clrf	___flmul@grs
  3629  054C  082B               	movf	___flmul@b+1,w
  3630  054D  00A2               	movwf	__Umul8_16@multiplicand
  3631  054E  082E               	movf	___flmul@a,w
  3632  054F  264A  3184         	fcall	__Umul8_16
  3633  0551  0823               	movf	?__Umul8_16+1,w
  3634  0552  00C2               	movwf	___flmul@temp+1
  3635  0553  0822               	movf	?__Umul8_16,w
  3636  0554  00C1               	movwf	___flmul@temp
  3637  0555  07B9               	addwf	___flmul@grs,f
  3638  0556  0842               	movf	___flmul@temp+1,w
  3639  0557  3DBA               	addwfc	___flmul@grs+1,f
  3640  0558  3000               	movlw	0
  3641  0559  3DBB               	addwfc	___flmul@grs+2,f
  3642  055A  3DBC               	addwfc	___flmul@grs+3,f
  3643  055B  082A               	movf	___flmul@b,w
  3644  055C  00A2               	movwf	__Umul8_16@multiplicand
  3645  055D  082F               	movf	___flmul@a+1,w
  3646  055E  264A  3184         	fcall	__Umul8_16
  3647  0560  0823               	movf	?__Umul8_16+1,w
  3648  0561  00C2               	movwf	___flmul@temp+1
  3649  0562  0822               	movf	?__Umul8_16,w
  3650  0563  00C1               	movwf	___flmul@temp
  3651  0564  07B9               	addwf	___flmul@grs,f
  3652  0565  0842               	movf	___flmul@temp+1,w
  3653  0566  3DBA               	addwfc	___flmul@grs+1,f
  3654  0567  3000               	movlw	0
  3655  0568  3DBB               	addwfc	___flmul@grs+2,f
  3656  0569  3DBC               	addwfc	___flmul@grs+3,f
  3657  056A  083B               	movf	___flmul@grs+2,w
  3658  056B  00BC               	movwf	___flmul@grs+3
  3659  056C  083A               	movf	___flmul@grs+1,w
  3660  056D  00BB               	movwf	___flmul@grs+2
  3661  056E  0839               	movf	___flmul@grs,w
  3662  056F  00BA               	movwf	___flmul@grs+1
  3663  0570  01B9               	clrf	___flmul@grs
  3664  0571  082A               	movf	___flmul@b,w
  3665  0572  00A2               	movwf	__Umul8_16@multiplicand
  3666  0573  082E               	movf	___flmul@a,w
  3667  0574  264A  3184         	fcall	__Umul8_16
  3668  0576  0823               	movf	?__Umul8_16+1,w
  3669  0577  00C2               	movwf	___flmul@temp+1
  3670  0578  0822               	movf	?__Umul8_16,w
  3671  0579  00C1               	movwf	___flmul@temp
  3672  057A  07B9               	addwf	___flmul@grs,f
  3673  057B  0842               	movf	___flmul@temp+1,w
  3674  057C  3DBA               	addwfc	___flmul@grs+1,f
  3675  057D  3000               	movlw	0
  3676  057E  3DBB               	addwfc	___flmul@grs+2,f
  3677  057F  3DBC               	addwfc	___flmul@grs+3,f
  3678  0580  082B               	movf	___flmul@b+1,w
  3679  0581  00A2               	movwf	__Umul8_16@multiplicand
  3680  0582  0830               	movf	___flmul@a+2,w
  3681  0583  264A  3184         	fcall	__Umul8_16
  3682  0585  0823               	movf	?__Umul8_16+1,w
  3683  0586  00C2               	movwf	___flmul@temp+1
  3684  0587  0822               	movf	?__Umul8_16,w
  3685  0588  00C1               	movwf	___flmul@temp
  3686  0589  07BD               	addwf	___flmul@prod,f
  3687  058A  0842               	movf	___flmul@temp+1,w
  3688  058B  3DBE               	addwfc	___flmul@prod+1,f
  3689  058C  3000               	movlw	0
  3690  058D  3DBF               	addwfc	___flmul@prod+2,f
  3691  058E  3DC0               	addwfc	___flmul@prod+3,f
  3692  058F  082C               	movf	___flmul@b+2,w
  3693  0590  00A2               	movwf	__Umul8_16@multiplicand
  3694  0591  082F               	movf	___flmul@a+1,w
  3695  0592  264A  3184         	fcall	__Umul8_16
  3696  0594  0823               	movf	?__Umul8_16+1,w
  3697  0595  00C2               	movwf	___flmul@temp+1
  3698  0596  0822               	movf	?__Umul8_16,w
  3699  0597  00C1               	movwf	___flmul@temp
  3700  0598  07BD               	addwf	___flmul@prod,f
  3701  0599  0842               	movf	___flmul@temp+1,w
  3702  059A  3DBE               	addwfc	___flmul@prod+1,f
  3703  059B  3000               	movlw	0
  3704  059C  3DBF               	addwfc	___flmul@prod+2,f
  3705  059D  3DC0               	addwfc	___flmul@prod+3,f
  3706  059E  082C               	movf	___flmul@b+2,w
  3707  059F  00A2               	movwf	__Umul8_16@multiplicand
  3708  05A0  0830               	movf	___flmul@a+2,w
  3709  05A1  264A  3184         	fcall	__Umul8_16
  3710  05A3  0823               	movf	?__Umul8_16+1,w
  3711  05A4  00C2               	movwf	___flmul@temp+1
  3712  05A5  0822               	movf	?__Umul8_16,w
  3713  05A6  00C1               	movwf	___flmul@temp
  3714  05A7  00B2               	movwf	??___flmul
  3715  05A8  0842               	movf	___flmul@temp+1,w
  3716  05A9  00B3               	movwf	??___flmul+1
  3717  05AA  01B4               	clrf	??___flmul+2
  3718  05AB  01B5               	clrf	??___flmul+3
  3719  05AC  0834               	movf	??___flmul+2,w
  3720  05AD  00B5               	movwf	??___flmul+3
  3721  05AE  0833               	movf	??___flmul+1,w
  3722  05AF  00B4               	movwf	??___flmul+2
  3723  05B0  0832               	movf	??___flmul,w
  3724  05B1  00B3               	movwf	??___flmul+1
  3725  05B2  01B2               	clrf	??___flmul
  3726  05B3  0832               	movf	??___flmul,w
  3727  05B4  07BD               	addwf	___flmul@prod,f
  3728  05B5  0833               	movf	??___flmul+1,w
  3729  05B6  3DBE               	addwfc	___flmul@prod+1,f
  3730  05B7  0834               	movf	??___flmul+2,w
  3731  05B8  3DBF               	addwfc	___flmul@prod+2,f
  3732  05B9  0835               	movf	??___flmul+3,w
  3733  05BA  3DC0               	addwfc	___flmul@prod+3,f
  3734  05BB  083C               	movf	___flmul@grs+3,w
  3735  05BC  07BD               	addwf	___flmul@prod,f
  3736  05BD  3001               	movlw	1
  3737  05BE  1803               	skipnc
  3738  05BF  07BE               	addwf	___flmul@prod+1,f
  3739  05C0  1803               	skipnc
  3740  05C1  07BF               	addwf	___flmul@prod+2,f
  3741  05C2  1803               	skipnc
  3742  05C3  07C0               	addwf	___flmul@prod+3,f
  3743  05C4  083B               	movf	___flmul@grs+2,w
  3744  05C5  00BC               	movwf	___flmul@grs+3
  3745  05C6  083A               	movf	___flmul@grs+1,w
  3746  05C7  00BB               	movwf	___flmul@grs+2
  3747  05C8  0839               	movf	___flmul@grs,w
  3748  05C9  00BA               	movwf	___flmul@grs+1
  3749  05CA  01B9               	clrf	___flmul@grs
  3750  05CB  0838               	movf	___flmul@bexp,w
  3751  05CC  00C1               	movwf	___flmul@temp
  3752  05CD  01C2               	clrf	___flmul@temp+1
  3753  05CE  0837               	movf	___flmul@aexp,w
  3754  05CF  07C1               	addwf	___flmul@temp,f
  3755  05D0  1803               	skipnc
  3756  05D1  0AC2               	incf	___flmul@temp+1,f
  3757  05D2  3082               	movlw	-126
  3758  05D3                     L3:	
  3759  05D3  07C1               	addwf	___flmul@temp,f
  3760  05D4  1C03               	skipc
  3761  05D5  03C2               	decf	___flmul@temp+1,f
  3762  05D6  1BBF               	btfsc	___flmul@prod+2,7
  3763  05D7  2DE4               	goto	l3161
  3764  05D8  35BD               	lslf	___flmul@prod,f
  3765  05D9  0DBE               	rlf	___flmul@prod+1,f
  3766  05DA  0DBF               	rlf	___flmul@prod+2,f
  3767  05DB  0DC0               	rlf	___flmul@prod+3,f
  3768  05DC  1BBC               	btfsc	___flmul@grs+3,7
  3769  05DD  143D               	bsf	___flmul@prod,0
  3770  05DE  30FF               	movlw	-1
  3771  05DF  35B9               	lslf	___flmul@grs,f
  3772  05E0  0DBA               	rlf	___flmul@grs+1,f
  3773  05E1  0DBB               	rlf	___flmul@grs+2,f
  3774  05E2  0DBC               	rlf	___flmul@grs+3,f
  3775  05E3  2DD3               	goto	L3
  3776  05E4                     l3161:	
  3777  05E4  01B7               	clrf	___flmul@aexp
  3778  05E5  1FBC               	btfss	___flmul@grs+3,7
  3779  05E6  2DF9               	goto	l3171
  3780  05E7  0839               	movf	___flmul@grs,w
  3781  05E8  00B2               	movwf	??___flmul
  3782  05E9  083A               	movf	___flmul@grs+1,w
  3783  05EA  00B3               	movwf	??___flmul+1
  3784  05EB  083B               	movf	___flmul@grs+2,w
  3785  05EC  00B4               	movwf	??___flmul+2
  3786  05ED  307F               	movlw	127
  3787  05EE  053C               	andwf	___flmul@grs+3,w
  3788  05EF  00B5               	movwf	??___flmul+3
  3789  05F0  0434               	iorwf	??___flmul+2,w
  3790  05F1  0433               	iorwf	??___flmul+1,w
  3791  05F2  0432               	iorwf	??___flmul,w
  3792  05F3  1903               	skipnz
  3793  05F4  183D               	btfsc	___flmul@prod,0
  3794  05F5  2DF7               	goto	l3167
  3795  05F6  2DF9               	goto	l3171
  3796  05F7                     l3167:	
  3797  05F7  01B7               	clrf	___flmul@aexp
  3798  05F8  0AB7               	incf	___flmul@aexp,f
  3799  05F9                     l3171:	
  3800  05F9  0837               	movf	___flmul@aexp,w
  3801  05FA  1903               	btfsc	3,2
  3802  05FB  2E0B               	goto	l3181
  3803  05FC  3001               	movlw	1
  3804  05FD  07BD               	addwf	___flmul@prod,f
  3805  05FE  3000               	movlw	0
  3806  05FF  3DBE               	addwfc	___flmul@prod+1,f
  3807  0600  3DBF               	addwfc	___flmul@prod+2,f
  3808  0601  3DC0               	addwfc	___flmul@prod+3,f
  3809  0602  1C40               	btfss	___flmul@prod+3,0
  3810  0603  2E0B               	goto	l3181
  3811  0604  37C0               	asrf	___flmul@prod+3,f
  3812  0605  0CBF               	rrf	___flmul@prod+2,f
  3813  0606  0CBE               	rrf	___flmul@prod+1,f
  3814  0607  0CBD               	rrf	___flmul@prod,f
  3815  0608  0AC1               	incf	___flmul@temp,f
  3816  0609  1903               	skipnz
  3817  060A  0AC2               	incf	___flmul@temp+1,f
  3818  060B                     l3181:	
  3819  060B  0842               	movf	___flmul@temp+1,w
  3820  060C  3A80               	xorlw	128
  3821  060D  00B2               	movwf	??___flmul
  3822  060E  3080               	movlw	128
  3823  060F  0232               	subwf	??___flmul,w
  3824  0610  1D03               	skipz
  3825  0611  2E14               	goto	u3725
  3826  0612  30FF               	movlw	255
  3827  0613  0241               	subwf	___flmul@temp,w
  3828  0614                     u3725:	
  3829  0614  1C03               	skipc
  3830  0615  2E1E               	goto	l3185
  3831  0616  307F               	movlw	127
  3832  0617  0020               	movlb	0	; select bank0
  3833  0618  00C0               	movwf	___flmul@prod+3
  3834  0619  3080               	movlw	128
  3835  061A  00BF               	movwf	___flmul@prod+2
  3836  061B  01BE               	clrf	___flmul@prod+1
  3837  061C  01BD               	clrf	___flmul@prod
  3838  061D  2E3F               	goto	l708
  3839  061E                     l3185:	
  3840  061E  0020               	movlb	0	; select bank0
  3841  061F  0842               	movf	___flmul@temp+1,w
  3842  0620  3A80               	xorlw	128
  3843  0621  00B2               	movwf	??___flmul
  3844  0622  3080               	movlw	128
  3845  0623  0232               	subwf	??___flmul,w
  3846  0624  1D03               	skipz
  3847  0625  2E28               	goto	u3735
  3848  0626  3001               	movlw	1
  3849  0627  0241               	subwf	___flmul@temp,w
  3850  0628                     u3735:	
  3851  0628  1803               	skipnc
  3852  0629  2E31               	goto	l3191
  3853  062A  0020               	movlb	0	; select bank0
  3854  062B  01BD               	clrf	___flmul@prod
  3855  062C  01BE               	clrf	___flmul@prod+1
  3856  062D  01BF               	clrf	___flmul@prod+2
  3857  062E  01C0               	clrf	___flmul@prod+3
  3858  062F  01B6               	clrf	___flmul@sign
  3859  0630  2E3F               	goto	l708
  3860  0631                     l3191:	
  3861  0631  0020               	movlb	0	; select bank0
  3862  0632  0841               	movf	___flmul@temp,w
  3863  0633  00B8               	movwf	___flmul@bexp
  3864  0634  30FF               	movlw	255
  3865  0635  05BD               	andwf	___flmul@prod,f
  3866  0636  05BE               	andwf	___flmul@prod+1,f
  3867  0637  307F               	movlw	127
  3868  0638  05BF               	andwf	___flmul@prod+2,f
  3869  0639  3000               	movlw	0
  3870  063A  01C0               	clrf	___flmul@prod+3
  3871  063B  1838               	btfsc	___flmul@bexp,0
  3872  063C  17BF               	bsf	___flmul@prod+2,7
  3873  063D  3638               	lsrf	___flmul@bexp,w
  3874  063E  00C0               	movwf	___flmul@prod+3
  3875  063F                     l708:	
  3876  063F  0836               	movf	___flmul@sign,w
  3877  0640  04C0               	iorwf	___flmul@prod+3,f
  3878  0641  0840               	movf	___flmul@prod+3,w
  3879  0642  00AD               	movwf	?___flmul+3
  3880  0643  083F               	movf	___flmul@prod+2,w
  3881  0644  00AC               	movwf	?___flmul+2
  3882  0645  083E               	movf	___flmul@prod+1,w
  3883  0646  00AB               	movwf	?___flmul+1
  3884  0647  083D               	movf	___flmul@prod,w
  3885  0648  00AA               	movwf	?___flmul
  3886  0649  0008               	return
  3887  064A                     __end_of___flmul:	
  3888  064A                     __ptext8:	
  3889 ;; *************** function __Umul8_16 *****************
  3890 ;; Defined at:
  3891 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  multiplier      1    wreg     unsigned char 
  3894 ;;  multiplicand    1    2[BANK0 ] unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  multiplier      1    7[BANK0 ] unsigned char 
  3897 ;;  word_mpld       2    8[BANK0 ] unsigned int 
  3898 ;;  product         2    5[BANK0 ] unsigned int 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2    2[BANK0 ] unsigned int 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 1F/0
  3905 ;;		On exit  : 1F/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3908 ;;      Params:         0       3       0       0
  3909 ;;      Locals:         0       5       0       0
  3910 ;;      Temps:          0       0       0       0
  3911 ;;      Totals:         0       8       0       0
  3912 ;;Total ram usage:        8 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    2
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		___flmul
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           
  3923                           ;psect for function __Umul8_16
  3924  064A                     __Umul8_16:	
  3925                           
  3926                           ;incstack = 0
  3927                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3928                           ;__Umul8_16@multiplier stored from wreg
  3929  064A  00A7               	movwf	__Umul8_16@multiplier
  3930  064B  01A5               	clrf	__Umul8_16@product
  3931  064C  01A6               	clrf	__Umul8_16@product+1
  3932  064D  0822               	movf	__Umul8_16@multiplicand,w
  3933  064E  00A8               	movwf	__Umul8_16@word_mpld
  3934  064F  01A9               	clrf	__Umul8_16@word_mpld+1
  3935  0650  1C27               	btfss	__Umul8_16@multiplier,0
  3936  0651  2E56               	goto	l2961
  3937  0652  0828               	movf	__Umul8_16@word_mpld,w
  3938  0653  07A5               	addwf	__Umul8_16@product,f
  3939  0654  0829               	movf	__Umul8_16@word_mpld+1,w
  3940  0655  3DA6               	addwfc	__Umul8_16@product+1,f
  3941  0656                     l2961:	
  3942  0656  35A8               	lslf	__Umul8_16@word_mpld,f
  3943  0657  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3944  0658  1CA7               	btfss	__Umul8_16@multiplier,1
  3945  0659  2E5E               	goto	l2967
  3946  065A  0828               	movf	__Umul8_16@word_mpld,w
  3947  065B  07A5               	addwf	__Umul8_16@product,f
  3948  065C  0829               	movf	__Umul8_16@word_mpld+1,w
  3949  065D  3DA6               	addwfc	__Umul8_16@product+1,f
  3950  065E                     l2967:	
  3951  065E  35A8               	lslf	__Umul8_16@word_mpld,f
  3952  065F  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3953  0660  1D27               	btfss	__Umul8_16@multiplier,2
  3954  0661  2E66               	goto	l2973
  3955  0662  0828               	movf	__Umul8_16@word_mpld,w
  3956  0663  07A5               	addwf	__Umul8_16@product,f
  3957  0664  0829               	movf	__Umul8_16@word_mpld+1,w
  3958  0665  3DA6               	addwfc	__Umul8_16@product+1,f
  3959  0666                     l2973:	
  3960  0666  35A8               	lslf	__Umul8_16@word_mpld,f
  3961  0667  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3962  0668  1DA7               	btfss	__Umul8_16@multiplier,3
  3963  0669  2E6E               	goto	l2979
  3964  066A  0828               	movf	__Umul8_16@word_mpld,w
  3965  066B  07A5               	addwf	__Umul8_16@product,f
  3966  066C  0829               	movf	__Umul8_16@word_mpld+1,w
  3967  066D  3DA6               	addwfc	__Umul8_16@product+1,f
  3968  066E                     l2979:	
  3969  066E  35A8               	lslf	__Umul8_16@word_mpld,f
  3970  066F  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3971  0670  1E27               	btfss	__Umul8_16@multiplier,4
  3972  0671  2E76               	goto	l2985
  3973  0672  0828               	movf	__Umul8_16@word_mpld,w
  3974  0673  07A5               	addwf	__Umul8_16@product,f
  3975  0674  0829               	movf	__Umul8_16@word_mpld+1,w
  3976  0675  3DA6               	addwfc	__Umul8_16@product+1,f
  3977  0676                     l2985:	
  3978  0676  35A8               	lslf	__Umul8_16@word_mpld,f
  3979  0677  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3980  0678  1EA7               	btfss	__Umul8_16@multiplier,5
  3981  0679  2E7E               	goto	l2991
  3982  067A  0828               	movf	__Umul8_16@word_mpld,w
  3983  067B  07A5               	addwf	__Umul8_16@product,f
  3984  067C  0829               	movf	__Umul8_16@word_mpld+1,w
  3985  067D  3DA6               	addwfc	__Umul8_16@product+1,f
  3986  067E                     l2991:	
  3987  067E  35A8               	lslf	__Umul8_16@word_mpld,f
  3988  067F  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3989  0680  1F27               	btfss	__Umul8_16@multiplier,6
  3990  0681  2E86               	goto	l2997
  3991  0682  0828               	movf	__Umul8_16@word_mpld,w
  3992  0683  07A5               	addwf	__Umul8_16@product,f
  3993  0684  0829               	movf	__Umul8_16@word_mpld+1,w
  3994  0685  3DA6               	addwfc	__Umul8_16@product+1,f
  3995  0686                     l2997:	
  3996  0686  35A8               	lslf	__Umul8_16@word_mpld,f
  3997  0687  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3998  0688  1FA7               	btfss	__Umul8_16@multiplier,7
  3999  0689  2E8E               	goto	l740
  4000  068A  0828               	movf	__Umul8_16@word_mpld,w
  4001  068B  07A5               	addwf	__Umul8_16@product,f
  4002  068C  0829               	movf	__Umul8_16@word_mpld+1,w
  4003  068D  3DA6               	addwfc	__Umul8_16@product+1,f
  4004  068E                     l740:	
  4005  068E  0826               	movf	__Umul8_16@product+1,w
  4006  068F  00A3               	movwf	?__Umul8_16+1
  4007  0690  0825               	movf	__Umul8_16@product,w
  4008  0691  00A2               	movwf	?__Umul8_16
  4009  0692  0008               	return
  4010  0693                     __end_of__Umul8_16:	
  4011                           
  4012                           	psect	text9
  4013  0E7B                     __ptext9:	
  4014 ;; *************** function ___flge *****************
  4015 ;; Defined at:
  4016 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  ff1             4    2[BANK0 ] unsigned int 
  4019 ;;  ff2             4    6[BANK0 ] unsigned int 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;		None
  4022 ;; Return value:  Size  Location     Type
  4023 ;;		None               void
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0
  4026 ;; Tracked objects:
  4027 ;;		On entry : 1F/0
  4028 ;;		On exit  : 1F/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4031 ;;      Params:         0       8       0       0
  4032 ;;      Locals:         0       0       0       0
  4033 ;;      Temps:          0       4       0       0
  4034 ;;      Totals:         0      12       0       0
  4035 ;;Total ram usage:       12 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    2
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_calculate_pidM
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function ___flge
  4047  0E7B                     ___flge:	
  4048                           
  4049                           ;incstack = 0
  4050                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4051  0E7B  3080               	movlw	128
  4052  0E7C  01AA               	clrf	??___flge
  4053  0E7D  01AB               	clrf	??___flge+1
  4054  0E7E  0524               	andwf	___flge@ff1+2,w
  4055  0E7F  00AC               	movwf	??___flge+2
  4056  0E80  307F               	movlw	127
  4057  0E81  0525               	andwf	___flge@ff1+3,w
  4058  0E82  00AD               	movwf	??___flge+3
  4059  0E83  042C               	iorwf	??___flge+2,w
  4060  0E84  042B               	iorwf	??___flge+1,w
  4061  0E85  042A               	iorwf	??___flge,w
  4062  0E86  1D03               	skipz
  4063  0E87  2E8C               	goto	l3025
  4064  0E88  01A2               	clrf	___flge@ff1
  4065  0E89  01A3               	clrf	___flge@ff1+1
  4066  0E8A  01A4               	clrf	___flge@ff1+2
  4067  0E8B  01A5               	clrf	___flge@ff1+3
  4068  0E8C                     l3025:	
  4069  0E8C  3080               	movlw	128
  4070  0E8D  01AA               	clrf	??___flge
  4071  0E8E  01AB               	clrf	??___flge+1
  4072  0E8F  0528               	andwf	___flge@ff2+2,w
  4073  0E90  00AC               	movwf	??___flge+2
  4074  0E91  307F               	movlw	127
  4075  0E92  0529               	andwf	___flge@ff2+3,w
  4076  0E93  00AD               	movwf	??___flge+3
  4077  0E94  042C               	iorwf	??___flge+2,w
  4078  0E95  042B               	iorwf	??___flge+1,w
  4079  0E96  042A               	iorwf	??___flge,w
  4080  0E97  1D03               	skipz
  4081  0E98  2E9D               	goto	l482
  4082  0E99  01A6               	clrf	___flge@ff2
  4083  0E9A  01A7               	clrf	___flge@ff2+1
  4084  0E9B  01A8               	clrf	___flge@ff2+2
  4085  0E9C  01A9               	clrf	___flge@ff2+3
  4086  0E9D                     l482:	
  4087  0E9D  1FA5               	btfss	___flge@ff1+3,7
  4088  0E9E  2EB4               	goto	l3031
  4089  0E9F  3080               	movlw	128
  4090  0EA0  01AA               	clrf	??___flge
  4091  0EA1  01AB               	clrf	??___flge+1
  4092  0EA2  01AC               	clrf	??___flge+2
  4093  0EA3  00AD               	movwf	??___flge+3
  4094  0EA4  0822               	movf	___flge@ff1,w
  4095  0EA5  02AA               	subwf	??___flge,f
  4096  0EA6  0823               	movf	___flge@ff1+1,w
  4097  0EA7  3BAB               	subwfb	??___flge+1,f
  4098  0EA8  0824               	movf	___flge@ff1+2,w
  4099  0EA9  3BAC               	subwfb	??___flge+2,f
  4100  0EAA  0825               	movf	___flge@ff1+3,w
  4101  0EAB  3BAD               	subwfb	??___flge+3,f
  4102  0EAC  082D               	movf	??___flge+3,w
  4103  0EAD  00A5               	movwf	___flge@ff1+3
  4104  0EAE  082C               	movf	??___flge+2,w
  4105  0EAF  00A4               	movwf	___flge@ff1+2
  4106  0EB0  082B               	movf	??___flge+1,w
  4107  0EB1  00A3               	movwf	___flge@ff1+1
  4108  0EB2  082A               	movf	??___flge,w
  4109  0EB3  00A2               	movwf	___flge@ff1
  4110  0EB4                     l3031:	
  4111  0EB4  1FA9               	btfss	___flge@ff2+3,7
  4112  0EB5  2ECB               	goto	l484
  4113  0EB6  3080               	movlw	128
  4114  0EB7  01AA               	clrf	??___flge
  4115  0EB8  01AB               	clrf	??___flge+1
  4116  0EB9  01AC               	clrf	??___flge+2
  4117  0EBA  00AD               	movwf	??___flge+3
  4118  0EBB  0826               	movf	___flge@ff2,w
  4119  0EBC  02AA               	subwf	??___flge,f
  4120  0EBD  0827               	movf	___flge@ff2+1,w
  4121  0EBE  3BAB               	subwfb	??___flge+1,f
  4122  0EBF  0828               	movf	___flge@ff2+2,w
  4123  0EC0  3BAC               	subwfb	??___flge+2,f
  4124  0EC1  0829               	movf	___flge@ff2+3,w
  4125  0EC2  3BAD               	subwfb	??___flge+3,f
  4126  0EC3  082D               	movf	??___flge+3,w
  4127  0EC4  00A9               	movwf	___flge@ff2+3
  4128  0EC5  082C               	movf	??___flge+2,w
  4129  0EC6  00A8               	movwf	___flge@ff2+2
  4130  0EC7  082B               	movf	??___flge+1,w
  4131  0EC8  00A7               	movwf	___flge@ff2+1
  4132  0EC9  082A               	movf	??___flge,w
  4133  0ECA  00A6               	movwf	___flge@ff2
  4134  0ECB                     l484:	
  4135  0ECB  3080               	movlw	128
  4136  0ECC  06A5               	xorwf	___flge@ff1+3,f
  4137  0ECD  06A9               	xorwf	___flge@ff2+3,f
  4138  0ECE  0829               	movf	___flge@ff2+3,w
  4139  0ECF  0225               	subwf	___flge@ff1+3,w
  4140  0ED0  1D03               	skipz
  4141  0ED1  0008               	return
  4142  0ED2  0828               	movf	___flge@ff2+2,w
  4143  0ED3  0224               	subwf	___flge@ff1+2,w
  4144  0ED4  1D03               	skipz
  4145  0ED5  0008               	return
  4146  0ED6  0827               	movf	___flge@ff2+1,w
  4147  0ED7  0223               	subwf	___flge@ff1+1,w
  4148  0ED8  1D03               	skipz
  4149  0ED9  0008               	return
  4150  0EDA  0826               	movf	___flge@ff2,w
  4151  0EDB  0222               	subwf	___flge@ff1,w
  4152  0EDC  0008               	return
  4153  0EDD                     __end_of___flge:	
  4154                           
  4155                           	psect	text13
  4156  0F4A                     __ptext13:	
  4157 ;; *************** function _init_I2C_buffer *****************
  4158 ;; Defined at:
  4159 ;;		line 286 in file "main.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, pclath, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : B1F/1
  4170 ;;		On exit  : 1F/1
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4173 ;;      Params:         0       0       0       0
  4174 ;;      Locals:         0       0       0       0
  4175 ;;      Temps:          0       0       0       0
  4176 ;;      Totals:         0       0       0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    3
  4180 ;; This function calls:
  4181 ;;		_eeprom_read
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _init_I2C_buffer
  4189  0F4A                     _init_I2C_buffer:	
  4190                           
  4191                           ;main.c: 287: I2C_buffer.data.ID = 0xF3;
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _init_I2C_buffer: [wreg+status,2+status,0+pclath+cstack]
  4195  0F4A  30F3               	movlw	243
  4196  0F4B  00A0               	movwf	_I2C_buffer^(0+128)	;volatile
  4197                           
  4198                           ;main.c: 288: I2C_buffer.data.ADDRESS = eeprom_read(0);
  4199  0F4C  3000               	movlw	0
  4200  0F4D  27EE  318F         	fcall	_eeprom_read
  4201  0F4F  0021               	movlb	1	; select bank1
  4202  0F50  00A1               	movwf	(_I2C_buffer^(0+128)+1)	;volatile
  4203                           
  4204                           ;main.c: 289: I2C_buffer.data.START_STOP = 0;
  4205  0F51  01A2               	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  4206                           
  4207                           ;main.c: 290: I2C_buffer.data.IOWPU = eeprom_read(1);
  4208  0F52  3001               	movlw	1
  4209  0F53  27EE  318F         	fcall	_eeprom_read
  4210  0F55  0021               	movlb	1	; select bank1
  4211  0F56  00A3               	movwf	(_I2C_buffer^(0+128)+3)	;volatile
  4212                           
  4213                           ;main.c: 291: I2C_buffer.data.MODE = 0;
  4214  0F57  01A4               	clrf	(_I2C_buffer^(0+128)+4)	;volatile
  4215                           
  4216                           ;main.c: 292: I2C_buffer.data.SAVE = 0;
  4217  0F58  01A5               	clrf	(_I2C_buffer^(0+128)+5)	;volatile
  4218                           
  4219                           ;main.c: 293: I2C_buffer.data.RESET = 0;
  4220  0F59  01A6               	clrf	(_I2C_buffer^(0+128)+6)	;volatile
  4221                           
  4222                           ;main.c: 295: I2C_buffer.byte[0x07] = eeprom_read(2);
  4223  0F5A  3002               	movlw	2
  4224  0F5B  27EE  318F         	fcall	_eeprom_read
  4225  0F5D  0021               	movlb	1	; select bank1
  4226  0F5E  00A7               	movwf	(_I2C_buffer^(0+128)+7)	;volatile
  4227                           
  4228                           ;main.c: 296: I2C_buffer.byte[0x08] = eeprom_read(3);
  4229  0F5F  3003               	movlw	3
  4230  0F60  27EE  318F         	fcall	_eeprom_read
  4231  0F62  0021               	movlb	1	; select bank1
  4232  0F63  00A8               	movwf	(_I2C_buffer^(0+128)+8)	;volatile
  4233                           
  4234                           ;main.c: 298: I2C_buffer.byte[0x09] = eeprom_read(4);
  4235  0F64  3004               	movlw	4
  4236  0F65  27EE  318F         	fcall	_eeprom_read
  4237  0F67  0021               	movlb	1	; select bank1
  4238  0F68  00A9               	movwf	(_I2C_buffer^(0+128)+9)	;volatile
  4239                           
  4240                           ;main.c: 299: I2C_buffer.byte[0x0A] = eeprom_read(5);
  4241  0F69  3005               	movlw	5
  4242  0F6A  27EE  318F         	fcall	_eeprom_read
  4243  0F6C  0021               	movlb	1	; select bank1
  4244  0F6D  00AA               	movwf	(_I2C_buffer^(0+128)+10)	;volatile
  4245                           
  4246                           ;main.c: 300: I2C_buffer.data.RPM = 0;
  4247  0F6E  01AB               	clrf	(_I2C_buffer^(0+128)+11)	;volatile
  4248  0F6F  01AC               	clrf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  4249                           
  4250                           ;main.c: 301: I2C_buffer.data.SPEED = 0;
  4251  0F70  01AD               	clrf	(_I2C_buffer^(0+128)+13)	;volatile
  4252  0F71  01AE               	clrf	((_I2C_buffer+1)^(0+128)+13)	;volatile
  4253                           
  4254                           ;main.c: 302: I2C_buffer.data.DISTANCE = 0;
  4255  0F72  01AF               	clrf	(_I2C_buffer^(0+128)+15)	;volatile
  4256  0F73  01B0               	clrf	((_I2C_buffer+1)^(0+128)+15)	;volatile
  4257  0F74  01B1               	clrf	((_I2C_buffer+2)^(0+128)+15)	;volatile
  4258  0F75  01B2               	clrf	((_I2C_buffer+3)^(0+128)+15)	;volatile
  4259                           
  4260                           ;main.c: 304: I2C_buffer.byte[0x13] = eeprom_read(8);
  4261  0F76  3008               	movlw	8
  4262  0F77  27EE  318F         	fcall	_eeprom_read
  4263  0F79  0021               	movlb	1	; select bank1
  4264  0F7A  00B3               	movwf	(_I2C_buffer^(0+128)+19)	;volatile
  4265                           
  4266                           ;main.c: 305: I2C_buffer.byte[0x14] = eeprom_read(9);
  4267  0F7B  3009               	movlw	9
  4268  0F7C  27EE  318F         	fcall	_eeprom_read
  4269  0F7E  0021               	movlb	1	; select bank1
  4270  0F7F  00B4               	movwf	(_I2C_buffer^(0+128)+20)	;volatile
  4271                           
  4272                           ;main.c: 306: I2C_buffer.byte[0x15] = eeprom_read(10);
  4273  0F80  300A               	movlw	10
  4274  0F81  27EE  318F         	fcall	_eeprom_read
  4275  0F83  0021               	movlb	1	; select bank1
  4276  0F84  00B5               	movwf	(_I2C_buffer^(0+128)+21)	;volatile
  4277                           
  4278                           ;main.c: 307: I2C_buffer.byte[0x16] = eeprom_read(11);
  4279  0F85  300B               	movlw	11
  4280  0F86  27EE  318F         	fcall	_eeprom_read
  4281  0F88  0021               	movlb	1	; select bank1
  4282  0F89  00B6               	movwf	(_I2C_buffer^(0+128)+22)	;volatile
  4283                           
  4284                           ;main.c: 309: I2C_buffer.byte[0x17] = eeprom_read(12);
  4285  0F8A  300C               	movlw	12
  4286  0F8B  27EE  318F         	fcall	_eeprom_read
  4287  0F8D  0021               	movlb	1	; select bank1
  4288  0F8E  00B7               	movwf	(_I2C_buffer^(0+128)+23)	;volatile
  4289                           
  4290                           ;main.c: 310: I2C_buffer.byte[0x18] = eeprom_read(13);
  4291  0F8F  300D               	movlw	13
  4292  0F90  27EE  318F         	fcall	_eeprom_read
  4293  0F92  0021               	movlb	1	; select bank1
  4294  0F93  00B8               	movwf	(_I2C_buffer^(0+128)+24)	;volatile
  4295                           
  4296                           ;main.c: 311: I2C_buffer.byte[0x19] = eeprom_read(14);
  4297  0F94  300E               	movlw	14
  4298  0F95  27EE  318F         	fcall	_eeprom_read
  4299  0F97  0021               	movlb	1	; select bank1
  4300  0F98  00B9               	movwf	(_I2C_buffer^(0+128)+25)	;volatile
  4301                           
  4302                           ;main.c: 312: I2C_buffer.byte[0x1A] = eeprom_read(15);
  4303  0F99  300F               	movlw	15
  4304  0F9A  27EE  318F         	fcall	_eeprom_read
  4305  0F9C  0021               	movlb	1	; select bank1
  4306  0F9D  00BA               	movwf	(_I2C_buffer^(0+128)+26)	;volatile
  4307                           
  4308                           ;main.c: 314: I2C_buffer.byte[0x1B] = eeprom_read(16);
  4309  0F9E  3010               	movlw	16
  4310  0F9F  27EE  318F         	fcall	_eeprom_read
  4311  0FA1  0021               	movlb	1	; select bank1
  4312  0FA2  00BB               	movwf	(_I2C_buffer^(0+128)+27)	;volatile
  4313                           
  4314                           ;main.c: 315: I2C_buffer.byte[0x1C] = eeprom_read(17);
  4315  0FA3  3011               	movlw	17
  4316  0FA4  27EE  318F         	fcall	_eeprom_read
  4317  0FA6  0021               	movlb	1	; select bank1
  4318  0FA7  00BC               	movwf	(_I2C_buffer^(0+128)+28)	;volatile
  4319                           
  4320                           ;main.c: 316: I2C_buffer.byte[0x1D] = eeprom_read(18);
  4321  0FA8  3012               	movlw	18
  4322  0FA9  27EE  318F         	fcall	_eeprom_read
  4323  0FAB  0021               	movlb	1	; select bank1
  4324  0FAC  00BD               	movwf	(_I2C_buffer^(0+128)+29)	;volatile
  4325                           
  4326                           ;main.c: 317: I2C_buffer.byte[0x1E] = eeprom_read(19);
  4327  0FAD  3013               	movlw	19
  4328  0FAE  27EE  318F         	fcall	_eeprom_read
  4329  0FB0  0021               	movlb	1	; select bank1
  4330  0FB1  00BE               	movwf	(_I2C_buffer^(0+128)+30)	;volatile
  4331                           
  4332                           ;main.c: 319: I2C_buffer.byte[0x1F] = eeprom_read(20);
  4333  0FB2  3014               	movlw	20
  4334  0FB3  27EE  318F         	fcall	_eeprom_read
  4335  0FB5  0021               	movlb	1	; select bank1
  4336  0FB6  00BF               	movwf	(_I2C_buffer^(0+128)+31)	;volatile
  4337                           
  4338                           ;main.c: 320: I2C_buffer.byte[0x20] = eeprom_read(21);
  4339  0FB7  3015               	movlw	21
  4340  0FB8  27EE  318F         	fcall	_eeprom_read
  4341  0FBA  0021               	movlb	1	; select bank1
  4342  0FBB  00C0               	movwf	(_I2C_buffer^(0+128)+32)	;volatile
  4343                           
  4344                           ;main.c: 321: I2C_buffer.byte[0x21] = eeprom_read(22);
  4345  0FBC  3016               	movlw	22
  4346  0FBD  27EE  318F         	fcall	_eeprom_read
  4347  0FBF  0021               	movlb	1	; select bank1
  4348  0FC0  00C1               	movwf	(_I2C_buffer^(0+128)+33)	;volatile
  4349                           
  4350                           ;main.c: 322: I2C_buffer.byte[0x22] = eeprom_read(23);
  4351  0FC1  3017               	movlw	23
  4352  0FC2  27EE  318F         	fcall	_eeprom_read
  4353  0FC4  0021               	movlb	1	; select bank1
  4354  0FC5  00C2               	movwf	(_I2C_buffer^(0+128)+34)	;volatile
  4355                           
  4356                           ;main.c: 324: I2C_buffer.byte[0x23] = eeprom_read(24);
  4357  0FC6  3018               	movlw	24
  4358  0FC7  27EE  318F         	fcall	_eeprom_read
  4359  0FC9  0021               	movlb	1	; select bank1
  4360  0FCA  00C3               	movwf	(_I2C_buffer^(0+128)+35)	;volatile
  4361                           
  4362                           ;main.c: 325: I2C_buffer.byte[0x24] = eeprom_read(25);
  4363  0FCB  3019               	movlw	25
  4364  0FCC  27EE  318F         	fcall	_eeprom_read
  4365  0FCE  0021               	movlb	1	; select bank1
  4366  0FCF  00C4               	movwf	(_I2C_buffer^(0+128)+36)	;volatile
  4367                           
  4368                           ;main.c: 326: I2C_buffer.byte[0x25] = eeprom_read(26);
  4369  0FD0  301A               	movlw	26
  4370  0FD1  27EE  318F         	fcall	_eeprom_read
  4371  0FD3  0021               	movlb	1	; select bank1
  4372  0FD4  00C5               	movwf	(_I2C_buffer^(0+128)+37)	;volatile
  4373                           
  4374                           ;main.c: 327: I2C_buffer.byte[0x26] = eeprom_read(27);
  4375  0FD5  301B               	movlw	27
  4376  0FD6  27EE  318F         	fcall	_eeprom_read
  4377  0FD8  0021               	movlb	1	; select bank1
  4378  0FD9  00C6               	movwf	(_I2C_buffer^(0+128)+38)	;volatile
  4379                           
  4380                           ;main.c: 329: I2C_buffer.byte[0x27] = eeprom_read(28);
  4381  0FDA  301C               	movlw	28
  4382  0FDB  27EE  318F         	fcall	_eeprom_read
  4383  0FDD  0021               	movlb	1	; select bank1
  4384  0FDE  00C7               	movwf	(_I2C_buffer^(0+128)+39)	;volatile
  4385                           
  4386                           ;main.c: 330: I2C_buffer.byte[0x28] = eeprom_read(29);
  4387  0FDF  301D               	movlw	29
  4388  0FE0  27EE  318F         	fcall	_eeprom_read
  4389  0FE2  0021               	movlb	1	; select bank1
  4390  0FE3  00C8               	movwf	(_I2C_buffer^(0+128)+40)	;volatile
  4391                           
  4392                           ;main.c: 331: I2C_buffer.byte[0x29] = eeprom_read(30);
  4393  0FE4  301E               	movlw	30
  4394  0FE5  27EE  318F         	fcall	_eeprom_read
  4395  0FE7  0021               	movlb	1	; select bank1
  4396  0FE8  00C9               	movwf	(_I2C_buffer^(0+128)+41)	;volatile
  4397                           
  4398                           ;main.c: 332: I2C_buffer.byte[0x2A] = eeprom_read(31);
  4399  0FE9  301F               	movlw	31
  4400  0FEA  27EE               	fcall	_eeprom_read
  4401  0FEB  0021               	movlb	1	; select bank1
  4402  0FEC  00CA               	movwf	(_I2C_buffer^(0+128)+42)	;volatile
  4403  0FED  0008               	return
  4404  0FEE                     __end_of_init_I2C_buffer:	
  4405  0FEE                     __ptext14:	
  4406 ;; *************** function _eeprom_read *****************
  4407 ;; Defined at:
  4408 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\pic\__eeread.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  addr            1    wreg     unsigned char 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  addr            1    2[BANK0 ] unsigned char 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      unsigned char 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 1F/1
  4419 ;;		On exit  : 1F/3
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4422 ;;      Params:         0       0       0       0
  4423 ;;      Locals:         0       1       0       0
  4424 ;;      Temps:          0       0       0       0
  4425 ;;      Totals:         0       1       0       0
  4426 ;;Total ram usage:        1 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    2
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_init_I2C_buffer
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           
  4437                           ;psect for function _eeprom_read
  4438  0FEE                     _eeprom_read:	
  4439                           
  4440                           ;incstack = 0
  4441                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4442                           ;eeprom_read@addr stored from wreg
  4443  0FEE  0020               	movlb	0	; select bank0
  4444  0FEF  00A2               	movwf	eeprom_read@addr
  4445  0FF0  2FF2               	goto	l272
  4446  0FF1                     u2421:	
  4447  0FF1  0020               	movlb	0	; select bank0
  4448  0FF2                     l272:	
  4449                           ;__eeread.c: 8: do
  4450                           
  4451  0FF2  0064               	clrwdt	;# 
  4452                           
  4453                           ;__eeread.c: 12: while(EECON1bits.WR);
  4454  0FF3  0023               	movlb	3	; select bank3
  4455  0FF4  1895               	btfsc	21,1	;volsfr
  4456  0FF5  2FF1               	goto	u2421
  4457                           
  4458                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4459  0FF6  0020               	movlb	0	; select bank0
  4460  0FF7  0822               	movf	eeprom_read@addr,w
  4461  0FF8  0023               	movlb	3	; select bank3
  4462  0FF9  0091               	movwf	17	;volatile
  4463  0FFA  0192               	clrf	18	;volatile
  4464  0FFB  303F               	movlw	63
  4465  0FFC  0595               	andwf	21,f	;volsfr
  4466  0FFD  1415               	bsf	21,0	;volsfr
  4467  0FFE  0813               	movf	19,w	;volatile
  4468  0FFF  0008               	return
  4469  1000                     __end_of_eeprom_read:	
  4470                           
  4471                           	psect	intentry
  4472  0004                     __pintentry:	
  4473 ;; *************** function _isr *****************
  4474 ;; Defined at:
  4475 ;;		line 88 in file "main.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 1F/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4489 ;;      Params:         0       0       0       0
  4490 ;;      Locals:         0       0       0       0
  4491 ;;      Temps:          0       2       0       0
  4492 ;;      Totals:         0       2       0       0
  4493 ;;Total ram usage:        2 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    1
  4496 ;; This function calls:
  4497 ;;		___lwdiv
  4498 ;;		i1___wmul
  4499 ;; This function is called by:
  4500 ;;		Interrupt level 1
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504  0004                     _isr:	
  4505                           
  4506                           ;incstack = 0
  4507  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4508                           
  4509                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4510  0005  3180               	pagesel	$
  4511                           
  4512                           ;main.c: 90: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  4513  0006  1C0B               	btfss	11,0	;volatile
  4514  0007  2821               	goto	i1l3349
  4515  0008  0027               	movlb	7	; select bank7
  4516  0009  1E13               	btfss	19,4	;volatile
  4517  000A  2821               	goto	i1l3349
  4518                           
  4519                           ;main.c: 91: {;main.c: 92: INTCONbits.IOCIE = 0;
  4520  000B  118B               	bcf	11,3	;volatile
  4521                           
  4522                           ;main.c: 93: counter++;
  4523  000C  0021               	movlb	1	; select bank1
  4524  000D  0AD5               	incf	_counter^(0+128),f
  4525  000E  1903               	skipnz
  4526  000F  0AD6               	incf	(_counter+1)^(0+128),f
  4527                           
  4528                           ;main.c: 94: if (LATAbits.LATA0 == 0) {
  4529  0010  0022               	movlb	2	; select bank2
  4530  0011  180C               	btfsc	12,0	;volatile
  4531  0012  2817               	goto	i1l3343
  4532                           
  4533                           ;main.c: 95: I2C_buffer.data.DISTANCE--;
  4534  0013  30FF               	movlw	255
  4535  0014  0021               	movlb	1	; select bank1
  4536  0015  07AF               	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  4537  0016  281B               	goto	L5
  4538  0017                     i1l3343:	
  4539                           ;main.c: 96: } else {
  4540                           
  4541                           
  4542                           ;main.c: 97: I2C_buffer.data.DISTANCE++;
  4543  0017  3001               	movlw	1
  4544  0018  0021               	movlb	1	; select bank1
  4545  0019  07AF               	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  4546  001A  3000               	movlw	0
  4547  001B                     L5:	
  4548  001B  3DB0               	addwfc	((_I2C_buffer+1)^(0+128)+15),f	;volatile
  4549  001C  3DB1               	addwfc	((_I2C_buffer+2)^(0+128)+15),f	;volatile
  4550  001D  3DB2               	addwfc	((_I2C_buffer+3)^(0+128)+15),f	;volatile
  4551                           
  4552                           ;main.c: 98: };main.c: 99: IOCAFbits.IOCAF4 = 0;
  4553  001E  0027               	movlb	7	; select bank7
  4554  001F  1213               	bcf	19,4	;volatile
  4555                           
  4556                           ;main.c: 100: INTCONbits.IOCIE = 1;
  4557  0020  158B               	bsf	11,3	;volatile
  4558  0021                     i1l3349:	
  4559                           
  4560                           ;main.c: 101: };main.c: 103: if (PIR1bits.TMR1IF == 1)
  4561  0021  0020               	movlb	0	; select bank0
  4562  0022  1C11               	btfss	17,0	;volatile
  4563  0023  285C               	goto	i1l3367
  4564                           
  4565                           ;main.c: 104: {;main.c: 105: INTCONbits.IOCIE = 0;
  4566  0024  118B               	bcf	11,3	;volatile
  4567                           
  4568                           ;main.c: 106: T1CONbits.TMR1ON = 0;
  4569  0025  1018               	bcf	24,0	;volatile
  4570                           
  4571                           ;main.c: 107: I2C_buffer.data.RPM = (counter * 300) / I2C_buffer.data.GEAR_RATIO;
  4572  0026  0021               	movlb	1	; select bank1
  4573  0027  0828               	movf	((_I2C_buffer+1)^(0+128)+7),w	;volatile
  4574  0028  00F7               	movwf	___lwdiv@divisor+1
  4575  0029  0827               	movf	(_I2C_buffer^(0+128)+7),w	;volatile
  4576  002A  00F6               	movwf	___lwdiv@divisor
  4577  002B  0856               	movf	(_counter+1)^(0+128),w
  4578  002C  00F1               	movwf	i1___wmul@multiplier+1
  4579  002D  0855               	movf	_counter^(0+128),w
  4580  002E  00F0               	movwf	i1___wmul@multiplier
  4581  002F  302C               	movlw	44
  4582  0030  00F2               	movwf	i1___wmul@multiplicand
  4583  0031  3001               	movlw	1
  4584  0032  00F3               	movwf	i1___wmul@multiplicand+1
  4585  0033  318D  259E  3180   	fcall	i1___wmul
  4586  0036  0871               	movf	?i1___wmul+1,w
  4587  0037  00F9               	movwf	___lwdiv@dividend+1
  4588  0038  0870               	movf	?i1___wmul,w
  4589  0039  00F8               	movwf	___lwdiv@dividend
  4590  003A  318D  25B3  3180   	fcall	___lwdiv
  4591  003D  0877               	movf	?___lwdiv+1,w
  4592  003E  00AC               	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  4593  003F  0876               	movf	?___lwdiv,w
  4594  0040  00AB               	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  4595                           
  4596                           ;main.c: 108: counter = 0;
  4597  0041  01D5               	clrf	_counter^(0+128)
  4598  0042  01D6               	clrf	(_counter+1)^(0+128)
  4599                           
  4600                           ;main.c: 109: if (LATAbits.LATA0 == 0) {
  4601  0043  0022               	movlb	2	; select bank2
  4602  0044  180C               	btfsc	12,0	;volatile
  4603  0045  2858               	goto	i1l3361
  4604                           
  4605                           ;main.c: 110: I2C_buffer.data.RPM = I2C_buffer.data.RPM *-1;
  4606  0046  0021               	movlb	1	; select bank1
  4607  0047  092B               	comf	(_I2C_buffer^(0+128)+11),w	;volatile
  4608  0048  0020               	movlb	0	; select bank0
  4609  0049  00A0               	movwf	??_isr
  4610  004A  0021               	movlb	1	; select bank1
  4611  004B  092C               	comf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  4612  004C  0020               	movlb	0	; select bank0
  4613  004D  00A1               	movwf	??_isr+1
  4614  004E  0AA0               	incf	??_isr,f
  4615  004F  1903               	skipnz
  4616  0050  0AA1               	incf	??_isr+1,f
  4617  0051  0820               	movf	??_isr,w
  4618  0052  0021               	movlb	1	; select bank1
  4619  0053  00AB               	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  4620  0054  0020               	movlb	0	; select bank0
  4621  0055  0821               	movf	??_isr+1,w
  4622  0056  0021               	movlb	1	; select bank1
  4623  0057  00AC               	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  4624  0058                     i1l3361:	
  4625                           
  4626                           ;main.c: 111: };main.c: 112: INTCONbits.IOCIE = 1;
  4627  0058  158B               	bsf	11,3	;volatile
  4628                           
  4629                           ;main.c: 113: PIR1bits.TMR1IF = 0;
  4630  0059  0020               	movlb	0	; select bank0
  4631  005A  1011               	bcf	17,0	;volatile
  4632                           
  4633                           ;main.c: 114: T1CONbits.TMR1ON = 1;
  4634  005B  1418               	bsf	24,0	;volatile
  4635  005C                     i1l3367:	
  4636                           
  4637                           ;main.c: 115: };main.c: 117: static unsigned char junk = 0;;main.c: 119: if (PIR1bits.SS
      +                          P1IF)
  4638  005C  1D91               	btfss	17,3	;volatile
  4639  005D  28B3               	goto	i1l3427
  4640                           
  4641                           ;main.c: 120: {;main.c: 121: INTCONbits.IOCIE = 0;
  4642  005E  118B               	bcf	11,3	;volatile
  4643                           
  4644                           ;main.c: 122: PIE1bits.TMR1IE = 0;
  4645  005F  0021               	movlb	1	; select bank1
  4646  0060  1011               	bcf	17,0	;volatile
  4647                           
  4648                           ;main.c: 123: if (SSP1STATbits.R_nW)
  4649  0061  0024               	movlb	4	; select bank4
  4650  0062  1D14               	btfss	20,2	;volatile
  4651  0063  2880               	goto	i1l3387
  4652                           
  4653                           ;main.c: 124: {;main.c: 125: if (!SSP1STATbits.D_nA)
  4654  0064  1A94               	btfsc	20,5	;volatile
  4655  0065  2872               	goto	i1l3379
  4656                           
  4657                           ;main.c: 126: {;main.c: 127: SSP1BUF = I2C_buffer.byte[index_i2c++];
  4658  0066  0020               	movlb	0	; select bank0
  4659  0067  086E               	movf	_index_i2c,w
  4660  0068  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  4661  0069  0086               	movwf	6
  4662  006A  0187               	clrf	7
  4663  006B  0801               	movf	1,w
  4664  006C  0024               	movlb	4	; select bank4
  4665  006D  0091               	movwf	17	;volatile
  4666  006E  0020               	movlb	0	; select bank0
  4667  006F  0AEE               	incf	_index_i2c,f
  4668                           
  4669                           ;main.c: 128: SSP1CON1bits.CKP = 1;
  4670  0070  0024               	movlb	4	; select bank4
  4671  0071  1615               	bsf	21,4	;volatile
  4672  0072                     i1l3379:	
  4673                           
  4674                           ;main.c: 129: };main.c: 130: if (SSP1STATbits.D_nA)
  4675  0072  1E94               	btfss	20,5	;volatile
  4676  0073  2880               	goto	i1l3387
  4677                           
  4678                           ;main.c: 131: {;main.c: 132: SSP1BUF = I2C_buffer.byte[index_i2c++];
  4679  0074  0020               	movlb	0	; select bank0
  4680  0075  086E               	movf	_index_i2c,w
  4681  0076  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  4682  0077  0086               	movwf	6
  4683  0078  0187               	clrf	7
  4684  0079  0801               	movf	1,w
  4685  007A  0024               	movlb	4	; select bank4
  4686  007B  0091               	movwf	17	;volatile
  4687  007C  0020               	movlb	0	; select bank0
  4688  007D  0AEE               	incf	_index_i2c,f
  4689                           
  4690                           ;main.c: 133: SSP1CON1bits.CKP = 1;
  4691  007E  0024               	movlb	4	; select bank4
  4692  007F  1615               	bsf	21,4	;volatile
  4693  0080                     i1l3387:	
  4694                           
  4695                           ;main.c: 134: };main.c: 135: };main.c: 136: if (!SSP1STATbits.R_nW)
  4696  0080  1914               	btfsc	20,2	;volatile
  4697  0081  28AE               	goto	i1l3421
  4698                           
  4699                           ;main.c: 137: {;main.c: 138: if (!SSP1STATbits.D_nA)
  4700  0082  1A94               	btfsc	20,5	;volatile
  4701  0083  288A               	goto	i1l3397
  4702                           
  4703                           ;main.c: 139: {;main.c: 140: first_i2c = 1;
  4704  0084  0021               	movlb	1	; select bank1
  4705  0085  01DC               	clrf	_first_i2c^(0+128)
  4706  0086  0ADC               	incf	_first_i2c^(0+128),f
  4707                           
  4708                           ;main.c: 141: junk = SSP1BUF;
  4709  0087  0024               	movlb	4	; select bank4
  4710  0088  0811               	movf	17,w	;volatile
  4711                           
  4712                           ;main.c: 142: SSP1CON1bits.CKP = 1;
  4713  0089  1615               	bsf	21,4	;volatile
  4714  008A                     i1l3397:	
  4715                           
  4716                           ;main.c: 143: };main.c: 144: if (SSP1STATbits.D_nA)
  4717  008A  1E94               	btfss	20,5	;volatile
  4718  008B  28AE               	goto	i1l3421
  4719                           
  4720                           ;main.c: 145: {;main.c: 146: if (first_i2c) {
  4721  008C  0021               	movlb	1	; select bank1
  4722  008D  085C               	movf	_first_i2c^(0+128),w
  4723  008E  1903               	btfsc	3,2
  4724  008F  2897               	goto	i1l3405
  4725                           
  4726                           ;main.c: 147: index_i2c = SSP1BUF;
  4727  0090  0024               	movlb	4	; select bank4
  4728  0091  0811               	movf	17,w	;volatile
  4729  0092  0020               	movlb	0	; select bank0
  4730  0093  00EE               	movwf	_index_i2c
  4731                           
  4732                           ;main.c: 148: first_i2c = 0;
  4733  0094  0021               	movlb	1	; select bank1
  4734  0095  01DC               	clrf	_first_i2c^(0+128)
  4735                           
  4736                           ;main.c: 149: }
  4737  0096  28A8               	goto	i1l3413
  4738  0097                     i1l3405:	
  4739                           
  4740                           ;main.c: 151: else {;main.c: 152: if (index_i2c < RX_ELMNTS)
  4741  0097  302B               	movlw	43
  4742  0098  0020               	movlb	0	; select bank0
  4743  0099  026E               	subwf	_index_i2c,w
  4744  009A  1803               	skipnc
  4745  009B  28A6               	goto	i1l3411
  4746                           
  4747                           ;main.c: 153: {;main.c: 154: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  4748  009C  086E               	movf	_index_i2c,w
  4749  009D  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  4750  009E  0086               	movwf	6
  4751  009F  0187               	clrf	7
  4752  00A0  0024               	movlb	4	; select bank4
  4753  00A1  0811               	movf	17,w	;volatile
  4754  00A2  0081               	movwf	1
  4755  00A3  0020               	movlb	0	; select bank0
  4756  00A4  0AEE               	incf	_index_i2c,f
  4757                           
  4758                           ;main.c: 155: } else {
  4759  00A5  28A8               	goto	i1l3413
  4760  00A6                     i1l3411:	
  4761                           
  4762                           ;main.c: 156: junk = SSP1BUF;
  4763  00A6  0024               	movlb	4	; select bank4
  4764  00A7  0811               	movf	17,w	;volatile
  4765  00A8                     i1l3413:	
  4766                           
  4767                           ;main.c: 157: };main.c: 158: };main.c: 159: if (SSP1CON1bits.WCOL)
  4768  00A8  0024               	movlb	4	; select bank4
  4769  00A9  1F95               	btfss	21,7	;volatile
  4770  00AA  28AD               	goto	i1l3419
  4771                           
  4772                           ;main.c: 160: {;main.c: 161: SSP1CON1bits.WCOL = 0;
  4773  00AB  1395               	bcf	21,7	;volatile
  4774                           
  4775                           ;main.c: 162: junk = SSP1BUF;
  4776  00AC  0811               	movf	17,w	;volatile
  4777  00AD                     i1l3419:	
  4778                           
  4779                           ;main.c: 163: };main.c: 164: SSP1CON1bits.CKP = 1;
  4780  00AD  1615               	bsf	21,4	;volatile
  4781  00AE                     i1l3421:	
  4782                           
  4783                           ;main.c: 165: };main.c: 166: };main.c: 167: PIR1bits.SSP1IF = 0;
  4784  00AE  0020               	movlb	0	; select bank0
  4785  00AF  1191               	bcf	17,3	;volatile
  4786                           
  4787                           ;main.c: 168: INTCONbits.IOCIE = 1;
  4788  00B0  158B               	bsf	11,3	;volatile
  4789                           
  4790                           ;main.c: 169: PIE1bits.TMR1IE = 1;
  4791  00B1  0021               	movlb	1	; select bank1
  4792  00B2  1411               	bsf	17,0	;volatile
  4793  00B3                     i1l3427:	
  4794                           
  4795                           ;main.c: 170: };main.c: 172: if (PIR2bits.BCL1IF)
  4796  00B3  0020               	movlb	0	; select bank0
  4797  00B4  1D92               	btfss	18,3	;volatile
  4798  00B5  28BE               	goto	i1l113
  4799                           
  4800                           ;main.c: 173: {;main.c: 174: junk = SSP1BUF;
  4801  00B6  0024               	movlb	4	; select bank4
  4802  00B7  0811               	movf	17,w	;volatile
  4803                           
  4804                           ;main.c: 175: PIR2bits.BCL1IF = 0;
  4805  00B8  0020               	movlb	0	; select bank0
  4806  00B9  1192               	bcf	18,3	;volatile
  4807                           
  4808                           ;main.c: 176: SSP1CON1bits.CKP = 1;
  4809  00BA  0024               	movlb	4	; select bank4
  4810  00BB  1615               	bsf	21,4	;volatile
  4811                           
  4812                           ;main.c: 177: PIR1bits.SSP1IF = 0;
  4813  00BC  0020               	movlb	0	; select bank0
  4814  00BD  1191               	bcf	17,3	;volatile
  4815  00BE                     i1l113:	
  4816  00BE  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4817  00BF  0009               	retfie
  4818  00C0                     __end_of_isr:	
  4819                           
  4820                           	psect	text18
  4821  0D9E                     __ptext18:	
  4822 ;; *************** function i1___wmul *****************
  4823 ;; Defined at:
  4824 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  multiplier      2    0[COMMON] unsigned int 
  4827 ;;  multiplicand    2    2[COMMON] unsigned int 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  __wmul          2    4[COMMON] unsigned int 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  2    0[COMMON] unsigned int 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 1F/1
  4836 ;;		On exit  : 1F/1
  4837 ;;		Unchanged: 1F/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4839 ;;      Params:         4       0       0       0
  4840 ;;      Locals:         2       0       0       0
  4841 ;;      Temps:          0       0       0       0
  4842 ;;      Totals:         6       0       0       0
  4843 ;;Total ram usage:        6 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_isr
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function i1___wmul
  4854  0D9E                     i1___wmul:	
  4855                           
  4856                           ;incstack = 0
  4857                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4858  0D9E  01F4               	clrf	i1___wmul@product
  4859  0D9F  01F5               	clrf	i1___wmul@product+1
  4860  0DA0                     i1l3317:	
  4861  0DA0  1C70               	btfss	i1___wmul@multiplier,0
  4862  0DA1  2DA6               	goto	i1l3321
  4863  0DA2  0872               	movf	i1___wmul@multiplicand,w
  4864  0DA3  07F4               	addwf	i1___wmul@product,f
  4865  0DA4  0873               	movf	i1___wmul@multiplicand+1,w
  4866  0DA5  3DF5               	addwfc	i1___wmul@product+1,f
  4867  0DA6                     i1l3321:	
  4868  0DA6  35F2               	lslf	i1___wmul@multiplicand,f
  4869  0DA7  0DF3               	rlf	i1___wmul@multiplicand+1,f
  4870  0DA8  36F1               	lsrf	i1___wmul@multiplier+1,f
  4871  0DA9  0CF0               	rrf	i1___wmul@multiplier,f
  4872  0DAA  0870               	movf	i1___wmul@multiplier,w
  4873  0DAB  0471               	iorwf	i1___wmul@multiplier+1,w
  4874  0DAC  1D03               	btfss	3,2
  4875  0DAD  2DA0               	goto	i1l3317
  4876  0DAE  0875               	movf	i1___wmul@product+1,w
  4877  0DAF  00F1               	movwf	?i1___wmul+1
  4878  0DB0  0874               	movf	i1___wmul@product,w
  4879  0DB1  00F0               	movwf	?i1___wmul
  4880  0DB2  0008               	return
  4881  0DB3                     __end_ofi1___wmul:	
  4882                           
  4883                           	psect	text19
  4884  0DB3                     __ptext19:	
  4885 ;; *************** function ___lwdiv *****************
  4886 ;; Defined at:
  4887 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  divisor         2    6[COMMON] unsigned int 
  4890 ;;  dividend        2    8[COMMON] unsigned int 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  quotient        2   11[COMMON] unsigned int 
  4893 ;;  counter         1   10[COMMON] unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  2    6[COMMON] unsigned int 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 1F/1
  4900 ;;		On exit  : 1F/1
  4901 ;;		Unchanged: 1F/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4903 ;;      Params:         4       0       0       0
  4904 ;;      Locals:         3       0       0       0
  4905 ;;      Temps:          0       0       0       0
  4906 ;;      Totals:         7       0       0       0
  4907 ;;Total ram usage:        7 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_isr
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function ___lwdiv
  4918  0DB3                     ___lwdiv:	
  4919                           
  4920                           ;incstack = 0
  4921                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4922  0DB3  01FB               	clrf	___lwdiv@quotient
  4923  0DB4  01FC               	clrf	___lwdiv@quotient+1
  4924  0DB5  0876               	movf	___lwdiv@divisor,w
  4925  0DB6  0477               	iorwf	___lwdiv@divisor+1,w
  4926  0DB7  1903               	btfsc	3,2
  4927  0DB8  2DD3               	goto	i1l3311
  4928  0DB9  01FA               	clrf	___lwdiv@counter
  4929  0DBA                     L6:	
  4930  0DBA  0AFA               	incf	___lwdiv@counter,f
  4931  0DBB  1BF7               	btfsc	___lwdiv@divisor+1,7
  4932  0DBC  2DC0               	goto	i1l3299
  4933  0DBD  35F6               	lslf	___lwdiv@divisor,f
  4934  0DBE  0DF7               	rlf	___lwdiv@divisor+1,f
  4935  0DBF  2DBA               	goto	L6
  4936  0DC0                     i1l3299:	
  4937  0DC0  35FB               	lslf	___lwdiv@quotient,f
  4938  0DC1  0DFC               	rlf	___lwdiv@quotient+1,f
  4939  0DC2  0877               	movf	___lwdiv@divisor+1,w
  4940  0DC3  0279               	subwf	___lwdiv@dividend+1,w
  4941  0DC4  1D03               	skipz
  4942  0DC5  2DC8               	goto	u396_25
  4943  0DC6  0876               	movf	___lwdiv@divisor,w
  4944  0DC7  0278               	subwf	___lwdiv@dividend,w
  4945  0DC8                     u396_25:	
  4946  0DC8  1C03               	skipc
  4947  0DC9  2DCF               	goto	i1l3307
  4948  0DCA  0876               	movf	___lwdiv@divisor,w
  4949  0DCB  02F8               	subwf	___lwdiv@dividend,f
  4950  0DCC  0877               	movf	___lwdiv@divisor+1,w
  4951  0DCD  3BF9               	subwfb	___lwdiv@dividend+1,f
  4952  0DCE  147B               	bsf	___lwdiv@quotient,0
  4953  0DCF                     i1l3307:	
  4954  0DCF  36F7               	lsrf	___lwdiv@divisor+1,f
  4955  0DD0  0CF6               	rrf	___lwdiv@divisor,f
  4956  0DD1  0BFA               	decfsz	___lwdiv@counter,f
  4957  0DD2  2DC0               	goto	i1l3299
  4958  0DD3                     i1l3311:	
  4959  0DD3  087C               	movf	___lwdiv@quotient+1,w
  4960  0DD4  00F7               	movwf	?___lwdiv+1
  4961  0DD5  087B               	movf	___lwdiv@quotient,w
  4962  0DD6  00F6               	movwf	?___lwdiv
  4963  0DD7  0008               	return
  4964  0DD8                     __end_of___lwdiv:	
  4965  007E                     btemp	set	126	;btemp
  4966  007E                     int$flags	set	126
  4967  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     77      79
    BANK1            80      5      61
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    ___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _main->_calculate_pidM
    _pre_pidM->_calculate_pidM
    _calculate_pidM->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->__Umul8_16
    _M_control->___fltol
    _init_I2C_buffer->_eeprom_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pre_pidM

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   37444
                                              4 BANK1      1     1      0
                          _M_control
                           _PWM_Init
                       _PWM_set_duty
                     _calculate_pidM
                       _eeprom_write
                    _init_I2C_buffer
                           _pre_pidM
 ---------------------------------------------------------------------------------
 (1) _pre_pidM                                             4     2      2   16572
                                              0 BANK1      4     2      2
                     _calculate_pidM
 ---------------------------------------------------------------------------------
 (2) _calculate_pidM                                      14    12      2   16088
                                             63 BANK0     14    12      2
                          _M_control
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     566
                                              2 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                              2 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3882
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3637
                                             35 BANK0     20    12      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4133
                                             10 BANK0     25    17      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            8     5      3    1419
                                              2 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     626
                                              2 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _M_control                                            3     1      2    1909
                                             12 BANK0      3     1      2
                       _PWM_set_duty
                            ___fltol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     426
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _PWM_set_duty                                         4     2      2     453
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      0     0      0      22
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          1     1      0      22
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         2     1      1    2400
                                              2 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0     627
                                              0 BANK0      2     2      0
                            ___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4     206
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              6 COMMON     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _M_control
     _PWM_set_duty
     ___fltol (ARG)
     ___wmul (ARG)
   _PWM_Init
   _PWM_set_duty
   _calculate_pidM
     _M_control
       _PWM_set_duty
       ___fltol (ARG)
       ___wmul (ARG)
     ___fladd
       ___flmul (ARG)
         __Umul8_16
     ___flge
     ___flmul
       __Umul8_16
     ___flsub
       ___fladd
         ___flmul (ARG)
           __Umul8_16
       ___flmul (ARG)
         __Umul8_16
     ___fltol
     ___xxtofl
   _eeprom_write
   _init_I2C_buffer
     _eeprom_read
   _pre_pidM
     _calculate_pidM
       _M_control
         _PWM_set_duty
         ___fltol (ARG)
         ___wmul (ARG)
       ___fladd
         ___flmul (ARG)
           __Umul8_16
       ___flge
       ___flmul
         __Umul8_16
       ___flsub
         ___fladd
           ___flmul (ARG)
             __Umul8_16
         ___flmul (ARG)
           __Umul8_16
       ___fltol
       ___xxtofl

 _isr (ROOT)
   ___lwdiv
     i1___wmul (ARG)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      99       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4D      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      5      3D       8       76.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      99      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Sep 14 23:29:36 2018

                       pc 0002               __CFG_CP$OFF 0000         calculate_pidM@pid 0069  
       calculate_pidM@set 005F       ___wmul@multiplicand 0024          i1___wmul@product 0074  
     __Umul8_16@word_mpld 0028                       l134 0E02                       l147 0121  
                     l272 0FF2                       l292 02E8                       l604 0742  
                     l621 07AE                       l606 072F                       l615 075C  
                     l607 0735                       l616 075D                       l608 0736  
                     l641 07F9                       l482 0E9D                       l626 07C7  
                     l715 0EFA                       l484 0ECB                       l740 068E  
                     l708 063F                       l728 0F2C                       l593 06C2  
                     l690 04F1                       l594 06C0                       l691 04EF  
                     l686 04DB                       l598 06DD                       l687 04D9  
                     l599 06DB                       _PR2 001B              __CFG_CPD$OFF 0000  
                     _isr 0004              __CFG_BORV$LO 0000                       wreg 0009  
            ___flmul@aexp 0037              ___flmul@bexp 0038              ___flmul@sign 0036  
            ___flmul@temp 0041              ___flmul@prod 003D                      S3793 0800  
            __CFG_LVP$OFF 0000              ___fltol@exp1 002B                      l3005 0304  
                    l3015 0323                      l3031 0EB4                      l3009 030E  
                    l3025 0E8C                      l3113 04FF                      l3043 0E37  
                    l3109 04F5                      l3045 0E3C                      l3213 0F05  
                    l3071 0E6C                      l3063 0E5F                      l3231 0F21  
                    l3161 05E4                      l3225 0F1C                      l3217 0F07  
                    l3209 0EF2                      l3171 05F9                      l3059 0E58  
                    l3243 0F41                      l3219 0F11                      l3181 060B  
                    l3069 0E63                      l3229 0F2A                      l3191 0631  
                    l3167 05F7                      l3247 033B                      l3185 061E  
                    l3097 04DF                      l3265 045D                      l2821 06E9  
                    l3269 0478                      l3285 0E1A                      l2911 07CB  
                    l3279 0E05                      l3711 0195                      l3703 017F  
                    l2761 04B5                      l2913 07CD                      l3713 019D  
                    l2755 0488                      l2923 07D8                      l2907 07C8  
                    l2851 0707                      l3723 01C1                      l3707 0186  
                    l3627 00E7                      l2765 04BB                      l3733 01DF  
                    l3717 01B2                      l3741 01EC                      l2943 07F5  
                    l2935 07E9                      l2919 07D6                      l2871 074C  
                    l3751 0209                      l3719 01BA                      l3743 01F6  
                    l2961 0656                      l2865 073D                      l3729 01D8  
                    l3681 0126                      l3745 0200                      l2947 07FA  
                    l2883 0765                      l3747 0205                      l3691 0155  
                    l3683 012C                      l2973 0666                      l2893 07A6  
                    l3693 015F                      l3685 0136                      l2991 067E  
                    l2967 065E                      l3687 0140                      l2985 0676  
                    l3697 0166                      l2979 066E                      l2899 07BC  
                    l2997 0686                      ?_isr 0070              __CFG_WDTE$ON 0000  
         ?_calculate_pidM 005F                      u3040 0726                      u3050 0727  
                    u3035 071B                      u2421 0FF1                      u3143 0777  
                    u4320 00E5                      u3425 0318                      u3505 0E45  
                    u2915 0491                      u4507 02E1                      u4435 01CB  
                    u3725 0614                      u4517 0E10                      u3735 0628  
                    u4385 0170                      u3915 0DFE                      u3870 0DE3  
                    u4487 0114                      u4497 01FA                      u3884 0DE5  
                    u3895 0DEF                      _WPUA 020C            ??_eeprom_write 0023  
            __CFG_WRT$OFF 0000       calculate_pidM@error 0065                      _main 00D3  
                    _lset 00D3                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 00C0             __CFG_IESO$OFF 0000                     ??_isr 0020  
           __CFG_PLLEN$ON 0000     __size_of_PWM_set_duty 001F             ___fltol@sign1 002A  
         __end_of___fladd 07FF                     ?_main 0070                     _EEADR 0191  
         __end_of___flmul 064A           __end_of___flsub 06AF           __end_of___fltol 0E7B  
                   _T1CON 0018                     _T2CON 001C           __end_of___lwdiv 0DD8  
                   i1l113 00BE                     _TRISA 008C             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000          __end_of_PWM_Init 04B3          __end_ofi1___wmul 0DB3  
                   status 0003       i1___wmul@multiplier 0070                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000              _PWM_set_duty 0488           __initialization 00C2  
            __end_of_main 02E7                    ??_main 00DB        __size_of_M_control 0037  
                  _EEDATA 0193                    _CCPR1L 0291                    _EECON1 0195  
                  _EECON2 0196                    _ANSELA 018C                    i1l3311 0DD3  
                  i1l3321 0DA6                    i1l3307 0DCF                    i1l3411 00A6  
                  i1l3317 0DA0                    i1l3413 00A8                    i1l3405 0097  
                  i1l3421 00AE                    i1l3343 0017                    i1l3361 0058  
                  i1l3419 00AD                    i1l3427 00B3                    i1l3349 0021  
                  i1l3367 005C                    i1l3299 0DC0                    i1l3379 0072  
                  i1l3387 0080                    i1l3397 008A                    _INTCON 000B  
                  _OSCCON 0099                    u396_25 0DC8          __end_of___xxtofl 0F4A  
            _accumulatorM 00CF      __size_of_eeprom_read 0012                    ___flge 0E7B  
               ??___fladd 004B                    ___wmul 04B3            __CFG_STVREN$ON 0000  
               ??___flmul 0032                 ??___flsub 005F                 ??___fltol 0026  
               ??___lwdiv 007A      __end_of_eeprom_write 0304  __size_of_init_I2C_buffer 00A4  
        __end_of_pre_pidM 0E28        __size_of__Umul8_16 0049                ___flge@ff1 0022  
              ___flge@ff2 0026              ___xxtofl@arg 002C              ___xxtofl@exp 002B  
            ___xxtofl@val 0022   __end_of__initialization 00CF           eeprom_read@addr 0022  
              ___fltol@f1 0022            __pcstackCOMMON 0070              __pidataBANK1 0000  
       __end_of_M_control 033B                 ?_PWM_Init 0070                 ?i1___wmul 0070  
          _OPTION_REGbits 0095          ??_calculate_pidM 0061         eeprom_write@value 0022  
              __pbssBANK0 006E                __pbssBANK1 00A0         __end_of__Umul8_16 0693  
              __pmaintext 00D3                   ?___flge 0022                   ?___wmul 0022  
              __pintentry 0004                   _CCP1CON 0293                ??_PWM_Init 0022  
              ??i1___wmul 0074                 ?___xxtofl 0022       _calculate_pidM$1301 0061  
                 _SSP1ADD 0212                   _SSP1BUF 0211         ??_init_I2C_buffer 0023  
        PWM_set_duty@duty 0022                 ?_pre_pidM 00D7     __size_of_eeprom_write 001D  
         __size_of___flge 0062                   ___fladd 06AF                   ___flmul 04C8  
                 ___flsub 0693                   ___fltol 0E28           __size_of___wmul 0015  
                 ___lwdiv 0DB3                _lasterrorM 00CB                   __ptext1 0DD8  
                 __ptext2 033B                   __ptext3 0EDD                   __ptext4 0E28  
                 __ptext5 0693                   __ptext6 06AF                   __ptext7 04C8  
                 __ptext8 064A                   __ptext9 0E7B               pre_pidM@set 00D7  
               _T1CONbits 0018                   _counter 00D5              __size_of_isr 00BC  
              ??___xxtofl 0026                 _IOCAFbits 0393                 _IOCANbits 0392  
                 clrloop0 0D99      end_of_initialization 00CF              _eeprom_write 02E7  
              ??_pre_pidM 00D9     i1___wmul@multiplicand 0072                 _PORTAbits 000C  
             ___fladd@grs 0056          __CFG_FOSC$INTOSC 0000             ___xxtofl@sign 002A  
             ___flmul@grs 0039             ??_eeprom_read 0022                _zero_cross 0368  
          __end_of___flge 0EDD            __end_of___wmul 04C8                 _M_control 0304  
           __pbitbssBANK0 0368         __size_of_PWM_Init 000C       start_initialization 00C2  
       __size_ofi1___wmul 0015               __end_of_isr 00C0                  ??___flge 002A  
                ??___wmul 0026       __end_of_eeprom_read 1000                 __Umul8_16 064A  
             __pdataBANK1 00DC                ?_M_control 002C           _init_I2C_buffer 0F4A  
               ___fladd@a 0047                 ___fladd@b 0043                 ___flmul@a 002E  
               ___flmul@b 002A                 ___flsub@a 0057                 ___flsub@b 005B  
               ___latbits 0001             __pcstackBANK0 0020             __pcstackBANK1 00D7  
       __size_of___xxtofl 006D          eeprom_write@addr 0023             ?_PWM_set_duty 0022  
        ___lwdiv@dividend 0078                  ?___fladd 0043                  ?___flmul 002A  
                ?___flsub 0057                  ?___fltol 0022         __size_of_pre_pidM 0050  
              ?__Umul8_16 0022                  ?___lwdiv 0076                 __pswtext1 0800  
               _first_i2c 00DC                 _index_i2c 006E          ___lwdiv@quotient 007B  
          ___wmul@product 0026                  _LATAbits 010C   __size_of_calculate_pidM 014D  
               clear_ram0 0D98               _eeprom_read 0FEE                  _PIE1bits 0091  
                _PIE2bits 0092            ??_PWM_set_duty 0024                  _PIR1bits 0011  
                _PIR2bits 0012   __end_of_init_I2C_buffer 0FEE                  _SSP1CON1 0215  
                _SSP1STAT 0214               ??_M_control 002E                  _PWM_Init 04A7  
       ___wmul@multiplier 0022                  i1___wmul 0D9E                _I2C_buffer 00A0  
              _EECON1bits 0195                _APFCONbits 011D               ??__Umul8_16 0025  
        __size_of___fladd 0150          __size_of___flmul 0182          __size_of___flsub 001C  
        __size_of___fltol 0053          __size_of___lwdiv 0025                  ___xxtofl 0EDD  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007A                  __ptext10 0304  
                __ptext11 04B3                  __ptext12 0488                  __ptext13 0F4A  
                __ptext14 0FEE                  __ptext15 02E7                  __ptext16 04A7  
                __ptext18 0D9E                  __ptext19 0DB3              _SSP1CON1bits 0215  
            _SSP1CON2bits 0216              _SSP1CON3bits 0217             __size_of_main 0214  
                _pre_pidM 0DD8          ?_init_I2C_buffer 0070                  int$flags 007E  
            _SSP1STATbits 0214                _INTCONbits 000B      __end_of_PWM_set_duty 04A7  
                intlevel1 0000            _calculate_pidM 033B         __CFG_CLKOUTEN$OFF 0000  
  __Umul8_16@multiplicand 0022             ___fladd@signs 0053    __end_of_calculate_pidM 0488  
           ?_eeprom_write 0022              ___fladd@aexp 0054              ___fladd@bexp 0055  
            M_control@ctr 002C                _STATUSbits 0003      __Umul8_16@multiplier 0027  
            ?_eeprom_read 0070         __Umul8_16@product 0025  
