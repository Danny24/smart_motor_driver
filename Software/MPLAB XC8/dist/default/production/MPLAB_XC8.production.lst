

Microchip Technology PIC PRO Macro Assembler V1.43 build -156212558 
                                                                                               Tue Sep 04 19:44:30 2018

Microchip Technology Omniscient Code Generator v1.43 (PRO mode) build 201707250354
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text16,local,class=CODE,merge=1,delta=2
    20                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	pa_nodes0,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 1.43
    25                           ; Generated 25/07/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC12F1840 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  008C                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  010C                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011D                     	;# 
   109  011D                     	;# 
   110  018C                     	;# 
   111  0191                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0197                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  020C                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0291                     	;# 
   149  0291                     	;# 
   150  0292                     	;# 
   151  0293                     	;# 
   152  0294                     	;# 
   153  0295                     	;# 
   154  0295                     	;# 
   155  0296                     	;# 
   156  0391                     	;# 
   157  0392                     	;# 
   158  0393                     	;# 
   159  039A                     	;# 
   160  039C                     	;# 
   161  039D                     	;# 
   162  039E                     	;# 
   163  039F                     	;# 
   164  0FE4                     	;# 
   165  0FE5                     	;# 
   166  0FE6                     	;# 
   167  0FE7                     	;# 
   168  0FE8                     	;# 
   169  0FE9                     	;# 
   170  0FEA                     	;# 
   171  0FEB                     	;# 
   172  0FED                     	;# 
   173  0FEE                     	;# 
   174  0FEF                     	;# 
   175                           
   176                           	psect	idataBANK0
   177  0000                     __pidataBANK0:	
   178  0018                     _T1CON	set	24
   179  000B                     _INTCON	set	11
   180  001C                     _T2CON	set	28
   181  001B                     _PR2	set	27
   182  0012                     _PIR2bits	set	18
   183  0018                     _T1CONbits	set	24
   184  0011                     _PIR1bits	set	17
   185  000B                     _INTCONbits	set	11
   186  0092                     _PIE2bits	set	146
   187  0095                     _OPTION_REGbits	set	149
   188  008C                     _TRISA	set	140
   189  0099                     _OSCCON	set	153
   190  0091                     _PIE1bits	set	145
   191  011D                     _APFCONbits	set	285
   192  010C                     _LATAbits	set	268
   193  018C                     _ANSELA	set	396
   194  0212                     _SSP1ADD	set	530
   195  0217                     _SSP1CON3bits	set	535
   196  0216                     _SSP1CON2bits	set	534
   197  0215                     _SSP1CON1	set	533
   198  0214                     _SSP1STAT	set	532
   199  020C                     _WPUA	set	524
   200  0215                     _SSP1CON1bits	set	533
   201  0211                     _SSP1BUF	set	529
   202  0214                     _SSP1STATbits	set	532
   203  0291                     _CCPR1L	set	657
   204  0293                     _CCP1CON	set	659
   205  0392                     _IOCANbits	set	914
   206  0393                     _IOCAFbits	set	915
   207                           
   208                           ; #config settings
   209  0000                     
   210                           	psect	cinit
   211  00C0                     start_initialization:	
   212  00C0                     __initialization:	
   213                           
   214                           ;initializer for _first_i2c
   215  00C0  3001               	movlw	1
   216  00C1  00E6               	movwf	__pdataBANK0& (0+127)
   217  00C2  30A0               	movlw	low __pbssBANK1
   218                           
   219                           ; Clear objects allocated to BITBANK0
   220  00C3  01E4               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   221                           
   222                           ; Clear objects allocated to BANK0
   223  00C4  01E5               	clrf	__pbssBANK0& (0+127)
   224                           
   225                           ; Clear objects allocated to BANK1
   226  00C5  0084               	movwf	4
   227  00C6  3000               	movlw	high __pbssBANK1
   228  00C7  0085               	movwf	5
   229  00C8  3037               	movlw	55
   230  00C9  3187  27F9  3180   	fcall	clear_ram0
   231  00CC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  00CC                     __end_of__initialization:	
   235  00CC  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   236  00CD  0020               	movlb	0
   237  00CE  28CF               	ljmp	_main	;jump to C main() function
   238  00CF                     __pmaintext:	
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 309 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B1F/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   258 ;;      Params:         0       0       0       0
   259 ;;      Locals:         0       0       0       0
   260 ;;      Temps:          0       1       0       0
   261 ;;      Totals:         0       1       0       0
   262 ;;Total ram usage:        1 bytes
   263 ;; Hardware stack levels required when called:    6
   264 ;; This function calls:
   265 ;;		_PID
   266 ;;		_PWM_Init
   267 ;;		_PWM_set_duty
   268 ;;		_init_I2C_buffer
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           
   275                           ;psect for function _main
   276  00CF                     _main:	
   277                           
   278                           ;main.c: 310: OSCCON = 0b11110000;
   279                           
   280                           ;incstack = 0
   281                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   282  00CF  30F0               	movlw	240
   283  00D0  0021               	movlb	1	; select bank1
   284  00D1  0099               	movwf	25	;volatile
   285                           
   286                           ;main.c: 311: init_I2C_buffer();
   287  00D2  21E3  3180         	fcall	_init_I2C_buffer
   288                           
   289                           ;main.c: 312: TRISA = 0b00011110;
   290  00D4  301E               	movlw	30
   291  00D5  008C               	movwf	12	;volatile
   292                           
   293                           ;main.c: 313: ANSELA = 0b00000000;
   294  00D6  0023               	movlb	3	; select bank3
   295  00D7  018C               	clrf	12	;volatile
   296                           
   297                           ;main.c: 314: WPUA = 0b00011110;
   298  00D8  0024               	movlb	4	; select bank4
   299  00D9  008C               	movwf	12	;volatile
   300                           
   301                           ;main.c: 315: OPTION_REGbits.nWPUEN = 0;
   302  00DA  0021               	movlb	1	; select bank1
   303  00DB  1395               	bcf	21,7	;volatile
   304                           
   305                           ;main.c: 316: APFCONbits.CCP1SEL = 1;
   306  00DC  0022               	movlb	2	; select bank2
   307  00DD  141D               	bsf	29,0	;volatile
   308                           
   309                           ;main.c: 317: LATAbits.LATA0 = 0;
   310  00DE  100C               	bcf	12,0	;volatile
   311                           
   312                           ;main.c: 318: SSP1STAT = 0b10000000;
   313  00DF  3080               	movlw	128
   314  00E0  0024               	movlb	4	; select bank4
   315  00E1  0094               	movwf	20	;volatile
   316                           
   317                           ;main.c: 319: SSP1CON1 = 0b00110110;
   318  00E2  3036               	movlw	54
   319  00E3  0095               	movwf	21	;volatile
   320                           
   321                           ;main.c: 320: SSP1CON2bits.SEN = 1;
   322  00E4  1416               	bsf	22,0	;volatile
   323                           
   324                           ;main.c: 321: SSP1CON3bits.BOEN = 1;
   325  00E5  1617               	bsf	23,4	;volatile
   326                           
   327                           ;main.c: 322: SSP1CON3bits.SDAHT = 1;
   328  00E6  1597               	bsf	23,3	;volatile
   329                           
   330                           ;main.c: 323: SSP1CON3bits.SBCDE = 1;
   331  00E7  1517               	bsf	23,2	;volatile
   332                           
   333                           ;main.c: 324: SSP1ADD = I2C_buffer.data.ADDRESS;
   334  00E8  0021               	movlb	1	; select bank1
   335  00E9  0821               	movf	(_I2C_buffer^(0+128)+1),w	;volatile
   336  00EA  0024               	movlb	4	; select bank4
   337  00EB  0092               	movwf	18	;volatile
   338                           
   339                           ;main.c: 325: PIR1bits.SSP1IF = 0;
   340  00EC  0020               	movlb	0	; select bank0
   341  00ED  1191               	bcf	17,3	;volatile
   342                           
   343                           ;main.c: 326: PIR2bits.BCL1IF = 0;
   344  00EE  1192               	bcf	18,3	;volatile
   345                           
   346                           ;main.c: 327: PIE2bits.BCL1IE = 1;
   347  00EF  0021               	movlb	1	; select bank1
   348  00F0  1592               	bsf	18,3	;volatile
   349                           
   350                           ;main.c: 328: PIE1bits.SSP1IE = 1;
   351  00F1  1591               	bsf	17,3	;volatile
   352                           
   353                           ;main.c: 329: INTCONbits.PEIE = 1;
   354  00F2  170B               	bsf	11,6	;volatile
   355                           
   356                           ;main.c: 330: PWM_Init();
   357  00F3  21D7  3180         	fcall	_PWM_Init
   358                           
   359                           ;main.c: 331: PWM_set_duty(0);
   360  00F5  01A2               	clrf	PWM_set_duty@duty
   361  00F6  01A3               	clrf	PWM_set_duty@duty+1
   362  00F7  214D  3180         	fcall	_PWM_set_duty
   363                           
   364                           ;main.c: 332: IOCANbits.IOCAN4 = 1;
   365  00F9  0027               	movlb	7	; select bank7
   366  00FA  1612               	bsf	18,4	;volatile
   367                           
   368                           ;main.c: 333: INTCON = 0b01001000;
   369  00FB  3048               	movlw	72
   370  00FC  008B               	movwf	11	;volatile
   371                           
   372                           ;main.c: 334: T1CON = 0b00110100;
   373  00FD  3034               	movlw	52
   374  00FE  0020               	movlb	0	; select bank0
   375  00FF  0098               	movwf	24	;volatile
   376                           
   377                           ;main.c: 335: PIE1bits.TMR1IE = 1;
   378  0100  0021               	movlb	1	; select bank1
   379  0101  1411               	bsf	17,0	;volatile
   380                           
   381                           ;main.c: 336: T1CONbits.TMR1ON = 1;
   382  0102  0020               	movlb	0	; select bank0
   383  0103  1418               	bsf	24,0	;volatile
   384                           
   385                           ;main.c: 337: INTCONbits.GIE = 1;
   386  0104  178B               	bsf	11,7	;volatile
   387  0105                     l2813:	
   388                           
   389                           ;main.c: 340: PID(I2C_buffer.data.SPEED);
   390  0105  0021               	movlb	1	; select bank1
   391  0106  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
   392  0107  00E4               	movwf	(PID@set+1)^(0+128)
   393  0108  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
   394  0109  00E3               	movwf	PID@set^(0+128)
   395  010A  2181  3180         	fcall	_PID
   396                           
   397                           ;main.c: 341: _delay((unsigned long)((10)*(32000000/4000.0)));
   398  010C  3068               	movlw	104
   399  010D  0020               	movlb	0	; select bank0
   400  010E  00E3               	movwf	??_main
   401  010F  30E4               	movlw	228
   402  0110                     u3547:	
   403  0110  0B89               	decfsz	9,f
   404  0111  2910               	goto	u3547
   405  0112  0BE3               	decfsz	??_main,f
   406  0113  2910               	goto	u3547
   407  0114  0000               	nop
   408  0115  2905               	goto	l2813
   409  0116                     __end_of_main:	
   410  0116                     __ptext12:	
   411 ;; *************** function _M_control *****************
   412 ;; Defined at:
   413 ;;		line 222 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;  ctr             2   12[BANK0 ] int 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 1F/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   427 ;;      Params:         0       2       0       0
   428 ;;      Locals:         0       0       0       0
   429 ;;      Temps:          0       1       0       0
   430 ;;      Totals:         0       3       0       0
   431 ;;Total ram usage:        3 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; Hardware stack levels required when called:    3
   434 ;; This function calls:
   435 ;;		_PWM_set_duty
   436 ;;		___wmul
   437 ;; This function is called by:
   438 ;;		_calculate_pid
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           
   443                           ;psect for function _M_control
   444  0116                     _M_control:	
   445  0116                     l2473:	
   446                           ;incstack = 0
   447                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
   448                           
   449                           
   450                           ;main.c: 224: if (ctr == 0)
   451  0116  082C               	movf	M_control@ctr,w
   452  0117  042D               	iorwf	M_control@ctr+1,w
   453  0118  1D03               	btfss	3,2
   454  0119  2920               	goto	l2477
   455                           
   456                           ;main.c: 225: {
   457                           ;main.c: 226: PWM_set_duty(ctr);
   458  011A  082D               	movf	M_control@ctr+1,w
   459  011B  00A3               	movwf	PWM_set_duty@duty+1
   460  011C  082C               	movf	M_control@ctr,w
   461  011D  00A2               	movwf	PWM_set_duty@duty
   462  011E  214D  3180         	fcall	_PWM_set_duty
   463  0120                     l2477:	
   464                           
   465                           ;main.c: 227: }
   466                           ;main.c: 228: if (ctr > 0)
   467  0120  0020               	movlb	0	; select bank0
   468  0121  082D               	movf	M_control@ctr+1,w
   469  0122  3A80               	xorlw	128
   470  0123  00AE               	movwf	??_M_control
   471  0124  3080               	movlw	128
   472  0125  022E               	subwf	??_M_control,w
   473  0126  1D03               	skipz
   474  0127  292A               	goto	u3025
   475  0128  3001               	movlw	1
   476  0129  022C               	subwf	M_control@ctr,w
   477  012A                     u3025:	
   478  012A  1C03               	skipc
   479  012B  2935               	goto	l2483
   480                           
   481                           ;main.c: 229: {
   482                           ;main.c: 230: LATAbits.LATA0 = 1;
   483  012C  0022               	movlb	2	; select bank2
   484  012D  140C               	bsf	12,0	;volatile
   485                           
   486                           ;main.c: 231: PWM_set_duty(ctr);
   487  012E  0020               	movlb	0	; select bank0
   488  012F  082D               	movf	M_control@ctr+1,w
   489  0130  00A3               	movwf	PWM_set_duty@duty+1
   490  0131  082C               	movf	M_control@ctr,w
   491  0132  00A2               	movwf	PWM_set_duty@duty
   492  0133  214D  3180         	fcall	_PWM_set_duty
   493  0135                     l2483:	
   494                           
   495                           ;main.c: 232: }
   496                           ;main.c: 233: if (ctr < 0)
   497  0135  0020               	movlb	0	; select bank0
   498  0136  1FAD               	btfss	M_control@ctr+1,7
   499  0137  0008               	return
   500                           
   501                           ;main.c: 234: {
   502                           ;main.c: 235: LATAbits.LATA0 = 0;
   503  0138  0022               	movlb	2	; select bank2
   504  0139  100C               	bcf	12,0	;volatile
   505                           
   506                           ;main.c: 236: ctr = ctr * -1;
   507  013A  30FF               	movlw	255
   508  013B  0020               	movlb	0	; select bank0
   509  013C  00A2               	movwf	___wmul@multiplier
   510  013D  00A3               	movwf	___wmul@multiplier+1
   511  013E  082D               	movf	M_control@ctr+1,w
   512  013F  00A5               	movwf	___wmul@multiplicand+1
   513  0140  082C               	movf	M_control@ctr,w
   514  0141  00A4               	movwf	___wmul@multiplicand
   515  0142  216C  3180         	fcall	___wmul
   516  0144  0823               	movf	?___wmul+1,w
   517  0145  00AD               	movwf	M_control@ctr+1
   518  0146  0822               	movf	?___wmul,w
   519  0147  00AC               	movwf	M_control@ctr
   520                           
   521                           ;main.c: 237: PWM_set_duty(ctr);
   522  0148  082D               	movf	M_control@ctr+1,w
   523  0149  00A3               	movwf	PWM_set_duty@duty+1
   524  014A  082C               	movf	M_control@ctr,w
   525  014B  00A2               	movwf	PWM_set_duty@duty
   526  014C  294D               	ljmp	l2223
   527  014D                     __end_of_M_control:	
   528  014D                     __ptext14:	
   529 ;; *************** function _PWM_set_duty *****************
   530 ;; Defined at:
   531 ;;		line 213 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;  duty            2    2[BANK0 ] int 
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  2    2[BANK0 ] int 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0
   540 ;; Tracked objects:
   541 ;;		On entry : 1F/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   545 ;;      Params:         0       2       0       0
   546 ;;      Locals:         0       0       0       0
   547 ;;      Temps:          0       2       0       0
   548 ;;      Totals:         0       4       0       0
   549 ;;Total ram usage:        4 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    2
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_M_control
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _PWM_set_duty
   562  014D                     _PWM_set_duty:	
   563  014D                     l2223:	
   564                           ;incstack = 0
   565                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
   566                           
   567                           
   568                           ;main.c: 215: if (duty < 1024) {
   569  014D  0823               	movf	PWM_set_duty@duty+1,w
   570  014E  3A80               	xorlw	128
   571  014F  00A4               	movwf	??_PWM_set_duty
   572  0150  3084               	movlw	132
   573  0151  0224               	subwf	??_PWM_set_duty,w
   574  0152  1D03               	skipz
   575  0153  2956               	goto	u2515
   576  0154  3000               	movlw	0
   577  0155  0222               	subwf	PWM_set_duty@duty,w
   578  0156                     u2515:	
   579  0156  1803               	skipnc
   580  0157  0008               	return
   581                           
   582                           ;main.c: 216: CCPR1L = (0xFF & ((unsigned int) duty >> 2));
   583  0158  0020               	movlb	0	; select bank0
   584  0159  0823               	movf	PWM_set_duty@duty+1,w
   585  015A  00A5               	movwf	??_PWM_set_duty+1
   586  015B  0822               	movf	PWM_set_duty@duty,w
   587  015C  00A4               	movwf	??_PWM_set_duty
   588  015D  36A5               	lsrf	??_PWM_set_duty+1,f
   589  015E  0CA4               	rrf	??_PWM_set_duty,f
   590  015F  36A5               	lsrf	??_PWM_set_duty+1,f
   591  0160  0CA4               	rrf	??_PWM_set_duty,f
   592  0161  0824               	movf	??_PWM_set_duty,w
   593  0162  0025               	movlb	5	; select bank5
   594  0163  0091               	movwf	17	;volatile
   595                           
   596                           ;main.c: 217: CCP1CON = (0x0C | (0x30 & ((unsigned int) duty << 4)));
   597  0164  0020               	movlb	0	; select bank0
   598  0165  0E22               	swapf	PWM_set_duty@duty,w
   599  0166  39F0               	andlw	240
   600  0167  3930               	andlw	48
   601  0168  380C               	iorlw	12
   602  0169  0025               	movlb	5	; select bank5
   603  016A  0093               	movwf	19	;volatile
   604  016B  0008               	return
   605  016C                     __end_of_PWM_set_duty:	
   606  016C                     __ptext13:	
   607 ;; *************** function ___wmul *****************
   608 ;; Defined at:
   609 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  multiplier      2    2[BANK0 ] unsigned int 
   612 ;;  multiplicand    2    4[BANK0 ] unsigned int 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  product         2    6[BANK0 ] unsigned int 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  2    2[BANK0 ] unsigned int 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 1F/0
   621 ;;		On exit  : 1F/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   624 ;;      Params:         0       4       0       0
   625 ;;      Locals:         0       2       0       0
   626 ;;      Temps:          0       0       0       0
   627 ;;      Totals:         0       6       0       0
   628 ;;Total ram usage:        6 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    2
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_M_control
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function ___wmul
   640  016C                     ___wmul:	
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   644  016C  01A6               	clrf	___wmul@product
   645  016D  01A7               	clrf	___wmul@product+1
   646  016E                     l2229:	
   647  016E  1C22               	btfss	___wmul@multiplier,0
   648  016F  2974               	goto	l2233
   649  0170  0824               	movf	___wmul@multiplicand,w
   650  0171  07A6               	addwf	___wmul@product,f
   651  0172  0825               	movf	___wmul@multiplicand+1,w
   652  0173  3DA7               	addwfc	___wmul@product+1,f
   653  0174                     l2233:	
   654  0174  35A4               	lslf	___wmul@multiplicand,f
   655  0175  0DA5               	rlf	___wmul@multiplicand+1,f
   656  0176  36A3               	lsrf	___wmul@multiplier+1,f
   657  0177  0CA2               	rrf	___wmul@multiplier,f
   658  0178  0822               	movf	___wmul@multiplier,w
   659  0179  0423               	iorwf	___wmul@multiplier+1,w
   660  017A  1D03               	btfss	3,2
   661  017B  296E               	goto	l2229
   662  017C  0827               	movf	___wmul@product+1,w
   663  017D  00A3               	movwf	?___wmul+1
   664  017E  0826               	movf	___wmul@product,w
   665  017F  00A2               	movwf	?___wmul
   666  0180  0008               	return
   667  0181                     __end_of___wmul:	
   668  0181                     __ptext3:	
   669 ;; *************** function _PID *****************
   670 ;; Defined at:
   671 ;;		line 262 in file "main.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;  set             2   12[BANK1 ] int 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 1F/1
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   685 ;;      Params:         0       0       2       0
   686 ;;      Locals:         0       0       0       0
   687 ;;      Temps:          0       2       0       0
   688 ;;      Totals:         0       2       2       0
   689 ;;Total ram usage:        4 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    5
   692 ;; This function calls:
   693 ;;		_calculate_pid
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _PID
   701  0181                     _PID:	
   702                           
   703                           ;main.c: 264: zero_cross = ((lset^set) < 0);
   704                           
   705                           ;incstack = 0
   706                           ; Regs used in _PID: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   707  0181  0863               	movf	PID@set^(0+128),w
   708  0182  0653               	xorwf	_lset^(0+128),w
   709  0183  0020               	movlb	0	; select bank0
   710  0184  00E1               	movwf	??_PID
   711  0185  0021               	movlb	1	; select bank1
   712  0186  0864               	movf	(PID@set+1)^(0+128),w
   713  0187  0654               	xorwf	(_lset+1)^(0+128),w
   714  0188  0020               	movlb	0	; select bank0
   715  0189  00E2               	movwf	??_PID+1
   716  018A  1FE2               	btfss	??_PID+1,7
   717  018B  298F               	goto	u3470
   718  018C  0020               	movlb	0	; select bank0
   719  018D  1464               	bsf	_zero_cross/(0+8),_zero_cross& (0+7)
   720  018E  2991               	goto	u3484
   721  018F                     u3470:	
   722  018F  0020               	movlb	0	; select bank0
   723  0190  1064               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
   724  0191                     u3484:	
   725                           
   726                           ;main.c: 265: if (((zero_cross == 1) &(set <= 0) & (lset <= 0)))
   727  0191  0021               	movlb	1	; select bank1
   728  0192  0864               	movf	(PID@set+1)^(0+128),w
   729  0193  3A80               	xorlw	128
   730  0194  0020               	movlb	0	; select bank0
   731  0195  00E1               	movwf	??_PID
   732  0196  3080               	movlw	128
   733  0197  0261               	subwf	??_PID,w
   734  0198  1D03               	skipz
   735  0199  299D               	goto	u3495
   736  019A  3001               	movlw	1
   737  019B  0021               	movlb	1	; select bank1
   738  019C  0263               	subwf	PID@set^(0+128),w
   739  019D                     u3495:	
   740  019D  1803               	skipnc
   741  019E  29B2               	goto	l124
   742  019F  0020               	movlb	0	; select bank0
   743  01A0  1C64               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
   744  01A1  29B2               	goto	l124
   745  01A2  0021               	movlb	1	; select bank1
   746  01A3  0854               	movf	(_lset+1)^(0+128),w
   747  01A4  3A80               	xorlw	128
   748  01A5  0020               	movlb	0	; select bank0
   749  01A6  00E1               	movwf	??_PID
   750  01A7  3080               	movlw	128
   751  01A8  0261               	subwf	??_PID,w
   752  01A9  1D03               	skipz
   753  01AA  29AE               	goto	u3515
   754  01AB  3001               	movlw	1
   755  01AC  0021               	movlb	1	; select bank1
   756  01AD  0253               	subwf	_lset^(0+128),w
   757  01AE                     u3515:	
   758  01AE  1803               	skipnc
   759  01AF  29B2               	goto	l124
   760                           
   761                           ;main.c: 266: {
   762                           ;main.c: 267: zero_cross = 0;
   763  01B0  0020               	movlb	0	; select bank0
   764  01B1  1064               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
   765  01B2                     l124:	
   766                           
   767                           ;main.c: 268: }
   768                           ;main.c: 269: if (zero_cross == 1) {
   769  01B2  0020               	movlb	0	; select bank0
   770  01B3  1C64               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
   771  01B4  29C9               	goto	l2753
   772  01B5                     l2747:	
   773                           
   774                           ;main.c: 271: calculate_pid(0);
   775  01B5  0020               	movlb	0	; select bank0
   776  01B6  01DF               	clrf	calculate_pid@set
   777  01B7  01E0               	clrf	calculate_pid@set+1
   778  01B8  3182  222C  3180   	fcall	_calculate_pid
   779                           
   780                           ;main.c: 272: _delay((unsigned long)((10)*(32000000/4000.0)));
   781  01BB  3068               	movlw	104
   782  01BC  0020               	movlb	0	; select bank0
   783  01BD  00E1               	movwf	??_PID
   784  01BE  30E4               	movlw	228
   785  01BF                     u3557:	
   786  01BF  0B89               	decfsz	9,f
   787  01C0  29BF               	goto	u3557
   788  01C1  0BE1               	decfsz	??_PID,f
   789  01C2  29BF               	goto	u3557
   790  01C3  0000               	nop
   791                           
   792                           ;main.c: 273: } while ((I2C_buffer.data.RPM != 0));
   793  01C4  0021               	movlb	1	; select bank1
   794  01C5  082B               	movf	(_I2C_buffer^(0+128)+11),w	;volatile
   795  01C6  042C               	iorwf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
   796  01C7  1D03               	btfss	3,2
   797  01C8  29B5               	goto	l2747
   798  01C9                     l2753:	
   799                           
   800                           ;main.c: 274: }
   801                           ;main.c: 275: lset = set;
   802  01C9  0021               	movlb	1	; select bank1
   803  01CA  0864               	movf	(PID@set+1)^(0+128),w
   804  01CB  00D4               	movwf	(_lset+1)^(0+128)
   805  01CC  0863               	movf	PID@set^(0+128),w
   806  01CD  00D3               	movwf	_lset^(0+128)
   807                           
   808                           ;main.c: 276: calculate_pid(set);
   809  01CE  0864               	movf	(PID@set+1)^(0+128),w
   810  01CF  0020               	movlb	0	; select bank0
   811  01D0  00E0               	movwf	calculate_pid@set+1
   812  01D1  0021               	movlb	1	; select bank1
   813  01D2  0863               	movf	PID@set^(0+128),w
   814  01D3  0020               	movlb	0	; select bank0
   815  01D4  00DF               	movwf	calculate_pid@set
   816  01D5  3182  2A2C         	ljmp	l2715
   817  01D7                     __end_of_PID:	
   818  01D7                     __ptext2:	
   819 ;; *************** function _PWM_Init *****************
   820 ;; Defined at:
   821 ;;		line 176 in file "main.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  2  105[None  ] int 
   828 ;; Registers used:
   829 ;;		wreg, status,2
   830 ;; Tracked objects:
   831 ;;		On entry : B1F/1
   832 ;;		On exit  : B1F/0
   833 ;;		Unchanged: B00/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   835 ;;      Params:         0       0       0       0
   836 ;;      Locals:         0       0       0       0
   837 ;;      Temps:          0       0       0       0
   838 ;;      Totals:         0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    2
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _PWM_Init
   851  01D7                     _PWM_Init:	
   852                           
   853                           ;main.c: 197: PR2 = 0xFF;
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _PWM_Init: [wreg+status,2]
   857  01D7  30FF               	movlw	255
   858  01D8  0020               	movlb	0	; select bank0
   859  01D9  009B               	movwf	27	;volatile
   860                           
   861                           ;main.c: 198: CCP1CON = 0b00001100;
   862  01DA  300C               	movlw	12
   863  01DB  0025               	movlb	5	; select bank5
   864  01DC  0093               	movwf	19	;volatile
   865                           
   866                           ;main.c: 199: CCPR1L = 0b00000000;
   867  01DD  0191               	clrf	17	;volatile
   868                           
   869                           ;main.c: 200: PIR1bits.TMR2IF = 0;
   870  01DE  0020               	movlb	0	; select bank0
   871  01DF  1091               	bcf	17,1	;volatile
   872                           
   873                           ;main.c: 201: T2CON = 0b00000100;
   874  01E0  3004               	movlw	4
   875  01E1  009C               	movwf	28	;volatile
   876  01E2  0008               	return
   877  01E3                     __end_of_PWM_Init:	
   878  01E3                     __ptext1:	
   879 ;; *************** function _init_I2C_buffer *****************
   880 ;; Defined at:
   881 ;;		line 286 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2
   890 ;; Tracked objects:
   891 ;;		On entry : B1F/1
   892 ;;		On exit  : B1F/1
   893 ;;		Unchanged: B00/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   895 ;;      Params:         0       0       0       0
   896 ;;      Locals:         0       0       0       0
   897 ;;      Temps:          0       0       0       0
   898 ;;      Totals:         0       0       0       0
   899 ;;Total ram usage:        0 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    2
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _init_I2C_buffer
   911  01E3                     _init_I2C_buffer:	
   912                           
   913                           ;main.c: 287: I2C_buffer.data.ID = 0xF3;
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _init_I2C_buffer: [wreg+status,2]
   917  01E3  30F3               	movlw	243
   918  01E4  00A0               	movwf	_I2C_buffer^(0+128)	;volatile
   919                           
   920                           ;main.c: 288: I2C_buffer.data.ADDRESS = 0x24 << 1;
   921  01E5  3048               	movlw	72
   922  01E6  00A1               	movwf	(_I2C_buffer^(0+128)+1)	;volatile
   923                           
   924                           ;main.c: 289: I2C_buffer.data.START_STOP = 0;
   925  01E7  01A2               	clrf	(_I2C_buffer^(0+128)+2)	;volatile
   926                           
   927                           ;main.c: 290: I2C_buffer.data.IOWPU = 1;
   928  01E8  3001               	movlw	1
   929  01E9  00A3               	movwf	(_I2C_buffer^(0+128)+3)	;volatile
   930                           
   931                           ;main.c: 291: I2C_buffer.data.MODE = 5;
   932  01EA  3005               	movlw	5
   933  01EB  00A4               	movwf	(_I2C_buffer^(0+128)+4)	;volatile
   934                           
   935                           ;main.c: 292: I2C_buffer.data.SAVE = 0;
   936  01EC  01A5               	clrf	(_I2C_buffer^(0+128)+5)	;volatile
   937                           
   938                           ;main.c: 293: I2C_buffer.data.RESET = 0;
   939  01ED  01A6               	clrf	(_I2C_buffer^(0+128)+6)	;volatile
   940                           
   941                           ;main.c: 294: I2C_buffer.data.GEAR_RATIO = 150;
   942  01EE  3096               	movlw	150
   943  01EF  00A7               	movwf	(_I2C_buffer^(0+128)+7)	;volatile
   944  01F0  01A8               	clrf	((_I2C_buffer+1)^(0+128)+7)	;volatile
   945                           
   946                           ;main.c: 295: I2C_buffer.data.DIAMETER = 42;
   947  01F1  302A               	movlw	42
   948  01F2  00A9               	movwf	(_I2C_buffer^(0+128)+9)	;volatile
   949  01F3  01AA               	clrf	((_I2C_buffer+1)^(0+128)+9)	;volatile
   950                           
   951                           ;main.c: 296: I2C_buffer.data.RPM = 0;
   952  01F4  01AB               	clrf	(_I2C_buffer^(0+128)+11)	;volatile
   953  01F5  01AC               	clrf	((_I2C_buffer+1)^(0+128)+11)	;volatile
   954                           
   955                           ;main.c: 297: I2C_buffer.data.SPEED = 0;
   956  01F6  01AD               	clrf	(_I2C_buffer^(0+128)+13)	;volatile
   957  01F7  01AE               	clrf	((_I2C_buffer+1)^(0+128)+13)	;volatile
   958                           
   959                           ;main.c: 298: I2C_buffer.data.DISTANCE = 0;
   960  01F8  01AF               	clrf	(_I2C_buffer^(0+128)+15)	;volatile
   961  01F9  01B0               	clrf	((_I2C_buffer+1)^(0+128)+15)	;volatile
   962  01FA  01B1               	clrf	((_I2C_buffer+2)^(0+128)+15)	;volatile
   963  01FB  01B2               	clrf	((_I2C_buffer+3)^(0+128)+15)	;volatile
   964                           
   965                           ;main.c: 299: I2C_buffer.data.RPM_PID_KP = 0.1;
   966  01FC  303D               	movlw	61
   967  01FD  00B6               	movwf	((_I2C_buffer+3)^(0+128)+19)	;volatile
   968  01FE  30CC               	movlw	204
   969  01FF  00B5               	movwf	((_I2C_buffer+2)^(0+128)+19)	;volatile
   970  0200  00B4               	movwf	((_I2C_buffer+1)^(0+128)+19)	;volatile
   971  0201  30CD               	movlw	205
   972  0202  00B3               	movwf	(_I2C_buffer^(0+128)+19)	;volatile
   973                           
   974                           ;main.c: 300: I2C_buffer.data.RPM_PID_KD = 0.01;
   975  0203  303C               	movlw	60
   976  0204  00BA               	movwf	((_I2C_buffer+3)^(0+128)+23)	;volatile
   977  0205  3023               	movlw	35
   978  0206  00B9               	movwf	((_I2C_buffer+2)^(0+128)+23)	;volatile
   979  0207  30D7               	movlw	215
   980  0208  00B8               	movwf	((_I2C_buffer+1)^(0+128)+23)	;volatile
   981  0209  300A               	movlw	10
   982  020A  00B7               	movwf	(_I2C_buffer^(0+128)+23)	;volatile
   983                           
   984                           ;main.c: 301: I2C_buffer.data.RPM_PID_KI = 0.04;
   985  020B  303D               	movlw	61
   986  020C  00BE               	movwf	((_I2C_buffer+3)^(0+128)+27)	;volatile
   987  020D  3023               	movlw	35
   988  020E  00BD               	movwf	((_I2C_buffer+2)^(0+128)+27)	;volatile
   989  020F  30D7               	movlw	215
   990  0210  00BC               	movwf	((_I2C_buffer+1)^(0+128)+27)	;volatile
   991  0211  300A               	movlw	10
   992  0212  00BB               	movwf	(_I2C_buffer^(0+128)+27)	;volatile
   993                           
   994                           ;main.c: 302: I2C_buffer.data.ATS_PID_KP = 0.15;
   995  0213  303E               	movlw	62
   996  0214  00C2               	movwf	((_I2C_buffer+3)^(0+128)+31)	;volatile
   997  0215  3019               	movlw	25
   998  0216  00C1               	movwf	((_I2C_buffer+2)^(0+128)+31)	;volatile
   999  0217  3099               	movlw	153
  1000  0218  00C0               	movwf	((_I2C_buffer+1)^(0+128)+31)	;volatile
  1001  0219  309A               	movlw	154
  1002  021A  00BF               	movwf	(_I2C_buffer^(0+128)+31)	;volatile
  1003                           
  1004                           ;main.c: 303: I2C_buffer.data.ATS_PID_KD = 0.08;
  1005  021B  303D               	movlw	61
  1006  021C  00C6               	movwf	((_I2C_buffer+3)^(0+128)+35)	;volatile
  1007  021D  30A3               	movlw	163
  1008  021E  00C5               	movwf	((_I2C_buffer+2)^(0+128)+35)	;volatile
  1009  021F  30D7               	movlw	215
  1010  0220  00C4               	movwf	((_I2C_buffer+1)^(0+128)+35)	;volatile
  1011  0221  300A               	movlw	10
  1012  0222  00C3               	movwf	(_I2C_buffer^(0+128)+35)	;volatile
  1013                           
  1014                           ;main.c: 304: I2C_buffer.data.ATS_PID_KI = 0.03;
  1015  0223  303C               	movlw	60
  1016  0224  00CA               	movwf	((_I2C_buffer+3)^(0+128)+39)	;volatile
  1017  0225  30F5               	movlw	245
  1018  0226  00C9               	movwf	((_I2C_buffer+2)^(0+128)+39)	;volatile
  1019  0227  30C2               	movlw	194
  1020  0228  00C8               	movwf	((_I2C_buffer+1)^(0+128)+39)	;volatile
  1021  0229  308F               	movlw	143
  1022  022A  00C7               	movwf	(_I2C_buffer^(0+128)+39)	;volatile
  1023  022B  0008               	return
  1024  022C                     __end_of_init_I2C_buffer:	
  1025                           
  1026                           	psect	bitbssBANK0
  1027  0320                     __pbitbssBANK0:	
  1028  0320                     _zero_cross:	
  1029  0320                     	ds	1
  1030                           
  1031                           	psect	bssBANK0
  1032  0065                     __pbssBANK0:	
  1033  0065                     _index_i2c:	
  1034  0065                     	ds	1
  1035                           
  1036                           	psect	dataBANK0
  1037  0066                     __pdataBANK0:	
  1038  0066                     _first_i2c:	
  1039  0066                     	ds	1
  1040                           
  1041                           	psect	bssBANK1
  1042  00A0                     __pbssBANK1:	
  1043  00A0                     _I2C_buffer:	
  1044  00A0                     	ds	43
  1045  00CB                     _lasterror:	
  1046  00CB                     	ds	4
  1047  00CF                     _accumulator:	
  1048  00CF                     	ds	4
  1049  00D3                     _lset:	
  1050  00D3                     	ds	2
  1051  00D5                     _counter:	
  1052  00D5                     	ds	2
  1053                           
  1054                           	psect	clrtext
  1055  07F9                     clear_ram0:	
  1056                           ;	Called with FSR0 containing the base address, and
  1057                           ;	WREG with the size to clear
  1058                           
  1059  07F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1060  07FA                     clrloop0:	
  1061  07FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1062  07FB  3101               	addfsr 0,1
  1063  07FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1064  07FD  2FFA               	goto	clrloop0	;have we reached the end yet?
  1065  07FE  3400               	retlw	0	;all done for this memory range, return
  1066                           
  1067                           	psect	cstackBANK1
  1068  00D7                     __pcstackBANK1:	
  1069  00D7                     _calculate_pid$1068:	
  1070                           
  1071                           ; 4 bytes @ 0x0
  1072  00D7                     	ds	4
  1073  00DB                     calculate_pid@error:	
  1074                           
  1075                           ; 4 bytes @ 0x4
  1076  00DB                     	ds	4
  1077  00DF                     calculate_pid@pid:	
  1078                           
  1079                           ; 4 bytes @ 0x8
  1080  00DF                     	ds	4
  1081  00E3                     ?_PID:	
  1082  00E3                     PID@set:	
  1083                           ; 1 bytes @ 0xC
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0xC
  1087  00E3                     	ds	2
  1088                           
  1089                           	psect	cstackCOMMON
  1090  0070                     __pcstackCOMMON:	
  1091  0070                     ?_isr:	
  1092  0070                     ?_init_I2C_buffer:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_main:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_PWM_Init:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?i1___wmul:	
  1102                           ; 2 bytes @ 0x0
  1103                           
  1104  0070                     i1___wmul@multiplier:	
  1105                           ; 2 bytes @ 0x0
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x0
  1109  0070                     	ds	2
  1110  0072                     i1___wmul@multiplicand:	
  1111                           
  1112                           ; 2 bytes @ 0x2
  1113  0072                     	ds	2
  1114  0074                     ??i1___wmul:	
  1115  0074                     i1___wmul@product:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118                           
  1119                           ; 2 bytes @ 0x4
  1120  0074                     	ds	2
  1121  0076                     ?___lwdiv:	
  1122  0076                     ___lwdiv@divisor:	
  1123                           ; 2 bytes @ 0x6
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x6
  1127  0076                     	ds	2
  1128  0078                     ___lwdiv@dividend:	
  1129                           
  1130                           ; 2 bytes @ 0x8
  1131  0078                     	ds	2
  1132  007A                     ??___lwdiv:	
  1133  007A                     ___lwdiv@quotient:	
  1134                           ; 1 bytes @ 0xA
  1135                           
  1136                           
  1137                           ; 2 bytes @ 0xA
  1138  007A                     	ds	2
  1139  007C                     ___lwdiv@counter:	
  1140                           
  1141                           ; 1 bytes @ 0xC
  1142  007C                     	ds	1
  1143                           
  1144                           	psect	cstackBANK0
  1145  0020                     __pcstackBANK0:	
  1146  0020                     ??_isr:	
  1147                           
  1148                           ; 1 bytes @ 0x0
  1149  0020                     	ds	2
  1150  0022                     ?___flge:	
  1151  0022                     ??_PWM_Init:	
  1152                           ; 1 bit 
  1153                           
  1154  0022                     ??_init_I2C_buffer:	
  1155                           ; 1 bytes @ 0x2
  1156                           
  1157  0022                     ?__Umul8_16:	
  1158                           ; 1 bytes @ 0x2
  1159                           
  1160  0022                     ?_PWM_set_duty:	
  1161                           ; 2 bytes @ 0x2
  1162                           
  1163  0022                     ?___wmul:	
  1164                           ; 2 bytes @ 0x2
  1165                           
  1166  0022                     ?___fltol:	
  1167                           ; 2 bytes @ 0x2
  1168                           
  1169  0022                     ?___xxtofl:	
  1170                           ; 4 bytes @ 0x2
  1171                           
  1172  0022                     __Umul8_16@multiplicand:	
  1173                           ; 4 bytes @ 0x2
  1174                           
  1175  0022                     PWM_set_duty@duty:	
  1176                           ; 1 bytes @ 0x2
  1177                           
  1178  0022                     ___wmul@multiplier:	
  1179                           ; 2 bytes @ 0x2
  1180                           
  1181  0022                     ___flge@ff1:	
  1182                           ; 2 bytes @ 0x2
  1183                           
  1184  0022                     ___fltol@f1:	
  1185                           ; 4 bytes @ 0x2
  1186                           
  1187  0022                     ___xxtofl@val:	
  1188                           ; 4 bytes @ 0x2
  1189                           
  1190                           
  1191                           ; 4 bytes @ 0x2
  1192  0022                     	ds	2
  1193  0024                     ??_PWM_set_duty:	
  1194  0024                     ___wmul@multiplicand:	
  1195                           ; 1 bytes @ 0x4
  1196                           
  1197                           
  1198                           ; 2 bytes @ 0x4
  1199  0024                     	ds	1
  1200  0025                     ??__Umul8_16:	
  1201  0025                     __Umul8_16@product:	
  1202                           ; 1 bytes @ 0x5
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x5
  1206  0025                     	ds	1
  1207  0026                     ??___wmul:	
  1208  0026                     ??___fltol:	
  1209                           ; 1 bytes @ 0x6
  1210                           
  1211  0026                     ??___xxtofl:	
  1212                           ; 1 bytes @ 0x6
  1213                           
  1214  0026                     ___wmul@product:	
  1215                           ; 1 bytes @ 0x6
  1216                           
  1217  0026                     ___flge@ff2:	
  1218                           ; 2 bytes @ 0x6
  1219                           
  1220                           
  1221                           ; 4 bytes @ 0x6
  1222  0026                     	ds	1
  1223  0027                     __Umul8_16@multiplier:	
  1224                           
  1225                           ; 1 bytes @ 0x7
  1226  0027                     	ds	1
  1227  0028                     __Umul8_16@word_mpld:	
  1228                           
  1229                           ; 2 bytes @ 0x8
  1230  0028                     	ds	2
  1231  002A                     ??___flge:	
  1232  002A                     ?___flmul:	
  1233                           ; 1 bytes @ 0xA
  1234                           
  1235  002A                     ___fltol@sign1:	
  1236                           ; 4 bytes @ 0xA
  1237                           
  1238  002A                     ___xxtofl@sign:	
  1239                           ; 1 bytes @ 0xA
  1240                           
  1241  002A                     ___flmul@b:	
  1242                           ; 1 bytes @ 0xA
  1243                           
  1244                           
  1245                           ; 4 bytes @ 0xA
  1246  002A                     	ds	1
  1247  002B                     ___fltol@exp1:	
  1248  002B                     ___xxtofl@exp:	
  1249                           ; 1 bytes @ 0xB
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0xB
  1253  002B                     	ds	1
  1254  002C                     ?_M_control:	
  1255  002C                     M_control@ctr:	
  1256                           ; 1 bytes @ 0xC
  1257                           
  1258  002C                     ___xxtofl@arg:	
  1259                           ; 2 bytes @ 0xC
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0xC
  1263  002C                     	ds	2
  1264  002E                     ??_M_control:	
  1265  002E                     ___flmul@a:	
  1266                           ; 1 bytes @ 0xE
  1267                           
  1268                           
  1269                           ; 4 bytes @ 0xE
  1270  002E                     	ds	4
  1271  0032                     ??___flmul:	
  1272                           
  1273                           ; 1 bytes @ 0x12
  1274  0032                     	ds	4
  1275  0036                     ___flmul@sign:	
  1276                           
  1277                           ; 1 bytes @ 0x16
  1278  0036                     	ds	1
  1279  0037                     ___flmul@aexp:	
  1280                           
  1281                           ; 1 bytes @ 0x17
  1282  0037                     	ds	1
  1283  0038                     ___flmul@bexp:	
  1284                           
  1285                           ; 1 bytes @ 0x18
  1286  0038                     	ds	1
  1287  0039                     ___flmul@grs:	
  1288                           
  1289                           ; 4 bytes @ 0x19
  1290  0039                     	ds	4
  1291  003D                     ___flmul@prod:	
  1292                           
  1293                           ; 4 bytes @ 0x1D
  1294  003D                     	ds	4
  1295  0041                     ___flmul@temp:	
  1296                           
  1297                           ; 2 bytes @ 0x21
  1298  0041                     	ds	2
  1299  0043                     ?___fladd:	
  1300  0043                     ___fladd@b:	
  1301                           ; 4 bytes @ 0x23
  1302                           
  1303                           
  1304                           ; 4 bytes @ 0x23
  1305  0043                     	ds	4
  1306  0047                     ___fladd@a:	
  1307                           
  1308                           ; 4 bytes @ 0x27
  1309  0047                     	ds	4
  1310  004B                     ??___fladd:	
  1311                           
  1312                           ; 1 bytes @ 0x2B
  1313  004B                     	ds	8
  1314  0053                     ___fladd@signs:	
  1315                           
  1316                           ; 1 bytes @ 0x33
  1317  0053                     	ds	1
  1318  0054                     ___fladd@aexp:	
  1319                           
  1320                           ; 1 bytes @ 0x34
  1321  0054                     	ds	1
  1322  0055                     ___fladd@bexp:	
  1323                           
  1324                           ; 1 bytes @ 0x35
  1325  0055                     	ds	1
  1326  0056                     ___fladd@grs:	
  1327                           
  1328                           ; 1 bytes @ 0x36
  1329  0056                     	ds	1
  1330  0057                     ?___flsub:	
  1331  0057                     ___flsub@a:	
  1332                           ; 4 bytes @ 0x37
  1333                           
  1334                           
  1335                           ; 4 bytes @ 0x37
  1336  0057                     	ds	4
  1337  005B                     ___flsub@b:	
  1338                           
  1339                           ; 4 bytes @ 0x3B
  1340  005B                     	ds	4
  1341  005F                     ?_calculate_pid:	
  1342  005F                     ??___flsub:	
  1343                           ; 1 bytes @ 0x3F
  1344                           
  1345  005F                     calculate_pid@set:	
  1346                           ; 1 bytes @ 0x3F
  1347                           
  1348                           
  1349                           ; 2 bytes @ 0x3F
  1350  005F                     	ds	2
  1351  0061                     ??_calculate_pid:	
  1352  0061                     ??_PID:	
  1353                           ; 1 bytes @ 0x41
  1354                           
  1355                           
  1356                           ; 1 bytes @ 0x41
  1357  0061                     	ds	2
  1358  0063                     ??_main:	
  1359                           
  1360                           ; 1 bytes @ 0x43
  1361  0063                     	ds	1
  1362                           
  1363                           	psect	text4
  1364  022C                     __ptext4:	
  1365 ;; *************** function _calculate_pid *****************
  1366 ;; Defined at:
  1367 ;;		line 241 in file "main.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  set             2   63[BANK0 ] int 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  pid             4    8[BANK1 ] float 
  1372 ;;  error           4    4[BANK1 ] float 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 1F/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1382 ;;      Params:         0       2       0       0
  1383 ;;      Locals:         0       0      12       0
  1384 ;;      Temps:          0       0       0       0
  1385 ;;      Totals:         0       2      12       0
  1386 ;;Total ram usage:       14 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    4
  1389 ;; This function calls:
  1390 ;;		_M_control
  1391 ;;		___fladd
  1392 ;;		___flge
  1393 ;;		___flmul
  1394 ;;		___flsub
  1395 ;;		___fltol
  1396 ;;		___xxtofl
  1397 ;; This function is called by:
  1398 ;;		_PID
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _calculate_pid
  1404  022C                     _calculate_pid:	
  1405  022C                     l2715:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _calculate_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1408                           
  1409                           
  1410                           ;main.c: 244: float pid = 0;
  1411  022C  0021               	movlb	1	; select bank1
  1412  022D  30AB               	movlw	((low (_I2C_buffer| 0))& (0+255)+11)
  1413  022E  01DF               	clrf	calculate_pid@pid^(0+128)
  1414  022F  01E0               	clrf	(calculate_pid@pid+1)^(0+128)
  1415  0230  01E1               	clrf	(calculate_pid@pid+2)^(0+128)
  1416  0231  01E2               	clrf	(calculate_pid@pid+3)^(0+128)
  1417                           
  1418                           ;main.c: 245: error = set - I2C_buffer.data.RPM;
  1419  0232  0086               	movwf	6
  1420  0233  0187               	clrf	7
  1421  0234  3F40               	moviw [0]fsr1
  1422  0235  0020               	movlb	0	; select bank0
  1423  0236  025F               	subwf	calculate_pid@set,w
  1424  0237  00A2               	movwf	___xxtofl@val
  1425  0238  3F41               	moviw [1]fsr1
  1426  0239  3B60               	subwfb	calculate_pid@set+1,w
  1427  023A  00A3               	movwf	___xxtofl@val+1
  1428  023B  01A4               	clrf	___xxtofl@val+2
  1429  023C  1BA3               	btfsc	___xxtofl@val+1,7
  1430  023D  03A4               	decf	___xxtofl@val+2,f
  1431  023E  0824               	movf	___xxtofl@val+2,w
  1432  023F  00A5               	movwf	___xxtofl@val+3
  1433  0240  3001               	movlw	1
  1434  0241  3187  2770  3182   	fcall	___xxtofl
  1435  0244  0825               	movf	?___xxtofl+3,w
  1436  0245  0021               	movlb	1	; select bank1
  1437  0246  00DE               	movwf	(calculate_pid@error+3)^(0+128)
  1438  0247  0020               	movlb	0	; select bank0
  1439  0248  0824               	movf	?___xxtofl+2,w
  1440  0249  0021               	movlb	1	; select bank1
  1441  024A  00DD               	movwf	(calculate_pid@error+2)^(0+128)
  1442  024B  0020               	movlb	0	; select bank0
  1443  024C  0823               	movf	?___xxtofl+1,w
  1444  024D  0021               	movlb	1	; select bank1
  1445  024E  00DC               	movwf	(calculate_pid@error+1)^(0+128)
  1446  024F  0020               	movlb	0	; select bank0
  1447  0250  0822               	movf	?___xxtofl,w
  1448  0251  0021               	movlb	1	; select bank1
  1449  0252  00DB               	movwf	calculate_pid@error^(0+128)
  1450                           
  1451                           ;main.c: 246: pid = error * I2C_buffer.data.RPM_PID_KP;
  1452  0253  085E               	movf	(calculate_pid@error+3)^(0+128),w
  1453  0254  0020               	movlb	0	; select bank0
  1454  0255  00AD               	movwf	___flmul@b+3
  1455  0256  0021               	movlb	1	; select bank1
  1456  0257  085D               	movf	(calculate_pid@error+2)^(0+128),w
  1457  0258  0020               	movlb	0	; select bank0
  1458  0259  00AC               	movwf	___flmul@b+2
  1459  025A  0021               	movlb	1	; select bank1
  1460  025B  085C               	movf	(calculate_pid@error+1)^(0+128),w
  1461  025C  0020               	movlb	0	; select bank0
  1462  025D  00AB               	movwf	___flmul@b+1
  1463  025E  0021               	movlb	1	; select bank1
  1464  025F  085B               	movf	calculate_pid@error^(0+128),w
  1465  0260  0020               	movlb	0	; select bank0
  1466  0261  00AA               	movwf	___flmul@b
  1467  0262  3013               	movlw	19
  1468  0263  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1469  0264  0086               	movwf	6
  1470  0265  0187               	clrf	7
  1471  0266  3F40               	moviw [0]fsr1
  1472  0267  00AE               	movwf	___flmul@a
  1473  0268  3F41               	moviw [1]fsr1
  1474  0269  00AF               	movwf	___flmul@a+1
  1475  026A  3F42               	moviw [2]fsr1
  1476  026B  00B0               	movwf	___flmul@a+2
  1477  026C  3F43               	moviw [3]fsr1
  1478  026D  00B1               	movwf	___flmul@a+3
  1479  026E  23D5  3182         	fcall	___flmul
  1480  0270  082D               	movf	?___flmul+3,w
  1481  0271  0021               	movlb	1	; select bank1
  1482  0272  00E2               	movwf	(calculate_pid@pid+3)^(0+128)
  1483  0273  0020               	movlb	0	; select bank0
  1484  0274  082C               	movf	?___flmul+2,w
  1485  0275  0021               	movlb	1	; select bank1
  1486  0276  00E1               	movwf	(calculate_pid@pid+2)^(0+128)
  1487  0277  0020               	movlb	0	; select bank0
  1488  0278  082B               	movf	?___flmul+1,w
  1489  0279  0021               	movlb	1	; select bank1
  1490  027A  00E0               	movwf	(calculate_pid@pid+1)^(0+128)
  1491  027B  0020               	movlb	0	; select bank0
  1492  027C  082A               	movf	?___flmul,w
  1493  027D  0021               	movlb	1	; select bank1
  1494  027E  00DF               	movwf	calculate_pid@pid^(0+128)
  1495                           
  1496                           ;main.c: 247: accumulator += error;
  1497  027F  085E               	movf	(calculate_pid@error+3)^(0+128),w
  1498  0280  0020               	movlb	0	; select bank0
  1499  0281  00C6               	movwf	___fladd@b+3
  1500  0282  0021               	movlb	1	; select bank1
  1501  0283  085D               	movf	(calculate_pid@error+2)^(0+128),w
  1502  0284  0020               	movlb	0	; select bank0
  1503  0285  00C5               	movwf	___fladd@b+2
  1504  0286  0021               	movlb	1	; select bank1
  1505  0287  085C               	movf	(calculate_pid@error+1)^(0+128),w
  1506  0288  0020               	movlb	0	; select bank0
  1507  0289  00C4               	movwf	___fladd@b+1
  1508  028A  0021               	movlb	1	; select bank1
  1509  028B  085B               	movf	calculate_pid@error^(0+128),w
  1510  028C  0020               	movlb	0	; select bank0
  1511  028D  00C3               	movwf	___fladd@b
  1512  028E  0021               	movlb	1	; select bank1
  1513  028F  0852               	movf	(_accumulator+3)^(0+128),w
  1514  0290  0020               	movlb	0	; select bank0
  1515  0291  00CA               	movwf	___fladd@a+3
  1516  0292  0021               	movlb	1	; select bank1
  1517  0293  0851               	movf	(_accumulator+2)^(0+128),w
  1518  0294  0020               	movlb	0	; select bank0
  1519  0295  00C9               	movwf	___fladd@a+2
  1520  0296  0021               	movlb	1	; select bank1
  1521  0297  0850               	movf	(_accumulator+1)^(0+128),w
  1522  0298  0020               	movlb	0	; select bank0
  1523  0299  00C8               	movwf	___fladd@a+1
  1524  029A  0021               	movlb	1	; select bank1
  1525  029B  084F               	movf	_accumulator^(0+128),w
  1526  029C  0020               	movlb	0	; select bank0
  1527  029D  00C7               	movwf	___fladd@a
  1528  029E  3186  261F  3182   	fcall	___fladd
  1529  02A1  0846               	movf	?___fladd+3,w
  1530  02A2  0021               	movlb	1	; select bank1
  1531  02A3  00D2               	movwf	(_accumulator+3)^(0+128)
  1532  02A4  0020               	movlb	0	; select bank0
  1533  02A5  0845               	movf	?___fladd+2,w
  1534  02A6  0021               	movlb	1	; select bank1
  1535  02A7  00D1               	movwf	(_accumulator+2)^(0+128)
  1536  02A8  0020               	movlb	0	; select bank0
  1537  02A9  0844               	movf	?___fladd+1,w
  1538  02AA  0021               	movlb	1	; select bank1
  1539  02AB  00D0               	movwf	(_accumulator+1)^(0+128)
  1540  02AC  0020               	movlb	0	; select bank0
  1541  02AD  0843               	movf	?___fladd,w
  1542  02AE  0021               	movlb	1	; select bank1
  1543  02AF  00CF               	movwf	_accumulator^(0+128)
  1544                           
  1545                           ;main.c: 248: pid += I2C_buffer.data.RPM_PID_KI*accumulator;
  1546  02B0  301B               	movlw	27
  1547  02B1  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1548  02B2  0086               	movwf	6
  1549  02B3  0187               	clrf	7
  1550  02B4  3F40               	moviw [0]fsr1
  1551  02B5  0020               	movlb	0	; select bank0
  1552  02B6  00AE               	movwf	___flmul@a
  1553  02B7  3F41               	moviw [1]fsr1
  1554  02B8  00AF               	movwf	___flmul@a+1
  1555  02B9  3F42               	moviw [2]fsr1
  1556  02BA  00B0               	movwf	___flmul@a+2
  1557  02BB  3F43               	moviw [3]fsr1
  1558  02BC  00B1               	movwf	___flmul@a+3
  1559  02BD  0021               	movlb	1	; select bank1
  1560  02BE  0852               	movf	(_accumulator+3)^(0+128),w
  1561  02BF  0020               	movlb	0	; select bank0
  1562  02C0  00AD               	movwf	___flmul@b+3
  1563  02C1  0021               	movlb	1	; select bank1
  1564  02C2  0851               	movf	(_accumulator+2)^(0+128),w
  1565  02C3  0020               	movlb	0	; select bank0
  1566  02C4  00AC               	movwf	___flmul@b+2
  1567  02C5  0021               	movlb	1	; select bank1
  1568  02C6  0850               	movf	(_accumulator+1)^(0+128),w
  1569  02C7  0020               	movlb	0	; select bank0
  1570  02C8  00AB               	movwf	___flmul@b+1
  1571  02C9  0021               	movlb	1	; select bank1
  1572  02CA  084F               	movf	_accumulator^(0+128),w
  1573  02CB  0020               	movlb	0	; select bank0
  1574  02CC  00AA               	movwf	___flmul@b
  1575  02CD  23D5               	fcall	___flmul
  1576  02CE  082D               	movf	?___flmul+3,w
  1577  02CF  00C6               	movwf	___fladd@b+3
  1578  02D0  082C               	movf	?___flmul+2,w
  1579  02D1  00C5               	movwf	___fladd@b+2
  1580  02D2  082B               	movf	?___flmul+1,w
  1581  02D3  00C4               	movwf	___fladd@b+1
  1582  02D4  082A               	movf	?___flmul,w
  1583  02D5  00C3               	movwf	___fladd@b
  1584  02D6  0021               	movlb	1	; select bank1
  1585  02D7  0862               	movf	(calculate_pid@pid+3)^(0+128),w
  1586  02D8  0020               	movlb	0	; select bank0
  1587  02D9  00CA               	movwf	___fladd@a+3
  1588  02DA  0021               	movlb	1	; select bank1
  1589  02DB  0861               	movf	(calculate_pid@pid+2)^(0+128),w
  1590  02DC  0020               	movlb	0	; select bank0
  1591  02DD  00C9               	movwf	___fladd@a+2
  1592  02DE  0021               	movlb	1	; select bank1
  1593  02DF  0860               	movf	(calculate_pid@pid+1)^(0+128),w
  1594  02E0  0020               	movlb	0	; select bank0
  1595  02E1  00C8               	movwf	___fladd@a+1
  1596  02E2  0021               	movlb	1	; select bank1
  1597  02E3  085F               	movf	calculate_pid@pid^(0+128),w
  1598  02E4  0020               	movlb	0	; select bank0
  1599  02E5  00C7               	movwf	___fladd@a
  1600  02E6  3186  261F  3182   	fcall	___fladd
  1601  02E9  0846               	movf	?___fladd+3,w
  1602  02EA  0021               	movlb	1	; select bank1
  1603  02EB  00E2               	movwf	(calculate_pid@pid+3)^(0+128)
  1604  02EC  0020               	movlb	0	; select bank0
  1605  02ED  0845               	movf	?___fladd+2,w
  1606  02EE  0021               	movlb	1	; select bank1
  1607  02EF  00E1               	movwf	(calculate_pid@pid+2)^(0+128)
  1608  02F0  0020               	movlb	0	; select bank0
  1609  02F1  0844               	movf	?___fladd+1,w
  1610  02F2  0021               	movlb	1	; select bank1
  1611  02F3  00E0               	movwf	(calculate_pid@pid+1)^(0+128)
  1612  02F4  0020               	movlb	0	; select bank0
  1613  02F5  0843               	movf	?___fladd,w
  1614  02F6  0021               	movlb	1	; select bank1
  1615  02F7  00DF               	movwf	calculate_pid@pid^(0+128)
  1616                           
  1617                           ;main.c: 249: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterror);
  1618  02F8  085E               	movf	(calculate_pid@error+3)^(0+128),w
  1619  02F9  0020               	movlb	0	; select bank0
  1620  02FA  00DE               	movwf	___flsub@b+3
  1621  02FB  0021               	movlb	1	; select bank1
  1622  02FC  085D               	movf	(calculate_pid@error+2)^(0+128),w
  1623  02FD  0020               	movlb	0	; select bank0
  1624  02FE  00DD               	movwf	___flsub@b+2
  1625  02FF  0021               	movlb	1	; select bank1
  1626  0300  085C               	movf	(calculate_pid@error+1)^(0+128),w
  1627  0301  0020               	movlb	0	; select bank0
  1628  0302  00DC               	movwf	___flsub@b+1
  1629  0303  0021               	movlb	1	; select bank1
  1630  0304  085B               	movf	calculate_pid@error^(0+128),w
  1631  0305  0020               	movlb	0	; select bank0
  1632  0306  00DB               	movwf	___flsub@b
  1633  0307  0021               	movlb	1	; select bank1
  1634  0308  084E               	movf	(_lasterror+3)^(0+128),w
  1635  0309  0020               	movlb	0	; select bank0
  1636  030A  00DA               	movwf	___flsub@a+3
  1637  030B  0021               	movlb	1	; select bank1
  1638  030C  084D               	movf	(_lasterror+2)^(0+128),w
  1639  030D  0020               	movlb	0	; select bank0
  1640  030E  00D9               	movwf	___flsub@a+2
  1641  030F  0021               	movlb	1	; select bank1
  1642  0310  084C               	movf	(_lasterror+1)^(0+128),w
  1643  0311  0020               	movlb	0	; select bank0
  1644  0312  00D8               	movwf	___flsub@a+1
  1645  0313  0021               	movlb	1	; select bank1
  1646  0314  084B               	movf	_lasterror^(0+128),w
  1647  0315  0020               	movlb	0	; select bank0
  1648  0316  00D7               	movwf	___flsub@a
  1649  0317  2602  3182         	fcall	___flsub
  1650  0319  085A               	movf	?___flsub+3,w
  1651  031A  00B1               	movwf	___flmul@a+3
  1652  031B  0859               	movf	?___flsub+2,w
  1653  031C  00B0               	movwf	___flmul@a+2
  1654  031D  0858               	movf	?___flsub+1,w
  1655  031E  00AF               	movwf	___flmul@a+1
  1656  031F  0857               	movf	?___flsub,w
  1657  0320  00AE               	movwf	___flmul@a
  1658  0321  3017               	movlw	23
  1659  0322  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1660  0323  0086               	movwf	6
  1661  0324  0187               	clrf	7
  1662  0325  3F40               	moviw [0]fsr1
  1663  0326  00AA               	movwf	___flmul@b
  1664  0327  3F41               	moviw [1]fsr1
  1665  0328  00AB               	movwf	___flmul@b+1
  1666  0329  3F42               	moviw [2]fsr1
  1667  032A  00AC               	movwf	___flmul@b+2
  1668  032B  3F43               	moviw [3]fsr1
  1669  032C  00AD               	movwf	___flmul@b+3
  1670  032D  23D5  3182         	fcall	___flmul
  1671  032F  082D               	movf	?___flmul+3,w
  1672  0330  0021               	movlb	1	; select bank1
  1673  0331  00DA               	movwf	(_calculate_pid$1068+3)^(0+128)
  1674  0332  0020               	movlb	0	; select bank0
  1675  0333  082C               	movf	?___flmul+2,w
  1676  0334  0021               	movlb	1	; select bank1
  1677  0335  00D9               	movwf	(_calculate_pid$1068+2)^(0+128)
  1678  0336  0020               	movlb	0	; select bank0
  1679  0337  082B               	movf	?___flmul+1,w
  1680  0338  0021               	movlb	1	; select bank1
  1681  0339  00D8               	movwf	(_calculate_pid$1068+1)^(0+128)
  1682  033A  0020               	movlb	0	; select bank0
  1683  033B  082A               	movf	?___flmul,w
  1684  033C  0021               	movlb	1	; select bank1
  1685  033D  00D7               	movwf	_calculate_pid$1068^(0+128)
  1686                           
  1687                           ;main.c: 249: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterror);
  1688  033E  085A               	movf	(_calculate_pid$1068+3)^(0+128),w
  1689  033F  0020               	movlb	0	; select bank0
  1690  0340  00C6               	movwf	___fladd@b+3
  1691  0341  0021               	movlb	1	; select bank1
  1692  0342  0859               	movf	(_calculate_pid$1068+2)^(0+128),w
  1693  0343  0020               	movlb	0	; select bank0
  1694  0344  00C5               	movwf	___fladd@b+2
  1695  0345  0021               	movlb	1	; select bank1
  1696  0346  0858               	movf	(_calculate_pid$1068+1)^(0+128),w
  1697  0347  0020               	movlb	0	; select bank0
  1698  0348  00C4               	movwf	___fladd@b+1
  1699  0349  0021               	movlb	1	; select bank1
  1700  034A  0857               	movf	_calculate_pid$1068^(0+128),w
  1701  034B  0020               	movlb	0	; select bank0
  1702  034C  00C3               	movwf	___fladd@b
  1703  034D  0021               	movlb	1	; select bank1
  1704  034E  0862               	movf	(calculate_pid@pid+3)^(0+128),w
  1705  034F  0020               	movlb	0	; select bank0
  1706  0350  00CA               	movwf	___fladd@a+3
  1707  0351  0021               	movlb	1	; select bank1
  1708  0352  0861               	movf	(calculate_pid@pid+2)^(0+128),w
  1709  0353  0020               	movlb	0	; select bank0
  1710  0354  00C9               	movwf	___fladd@a+2
  1711  0355  0021               	movlb	1	; select bank1
  1712  0356  0860               	movf	(calculate_pid@pid+1)^(0+128),w
  1713  0357  0020               	movlb	0	; select bank0
  1714  0358  00C8               	movwf	___fladd@a+1
  1715  0359  0021               	movlb	1	; select bank1
  1716  035A  085F               	movf	calculate_pid@pid^(0+128),w
  1717  035B  0020               	movlb	0	; select bank0
  1718  035C  00C7               	movwf	___fladd@a
  1719  035D  3186  261F  3182   	fcall	___fladd
  1720  0360  0846               	movf	?___fladd+3,w
  1721  0361  0021               	movlb	1	; select bank1
  1722  0362  00E2               	movwf	(calculate_pid@pid+3)^(0+128)
  1723  0363  0020               	movlb	0	; select bank0
  1724  0364  0845               	movf	?___fladd+2,w
  1725  0365  0021               	movlb	1	; select bank1
  1726  0366  00E1               	movwf	(calculate_pid@pid+2)^(0+128)
  1727  0367  0020               	movlb	0	; select bank0
  1728  0368  0844               	movf	?___fladd+1,w
  1729  0369  0021               	movlb	1	; select bank1
  1730  036A  00E0               	movwf	(calculate_pid@pid+1)^(0+128)
  1731  036B  0020               	movlb	0	; select bank0
  1732  036C  0843               	movf	?___fladd,w
  1733  036D  0021               	movlb	1	; select bank1
  1734  036E  00DF               	movwf	calculate_pid@pid^(0+128)
  1735                           
  1736                           ;main.c: 250: lasterror = error;
  1737  036F  085E               	movf	(calculate_pid@error+3)^(0+128),w
  1738  0370  00CE               	movwf	(_lasterror+3)^(0+128)
  1739  0371  085D               	movf	(calculate_pid@error+2)^(0+128),w
  1740  0372  00CD               	movwf	(_lasterror+2)^(0+128)
  1741  0373  085C               	movf	(calculate_pid@error+1)^(0+128),w
  1742  0374  00CC               	movwf	(_lasterror+1)^(0+128)
  1743  0375  085B               	movf	calculate_pid@error^(0+128),w
  1744  0376  00CB               	movwf	_lasterror^(0+128)
  1745                           
  1746                           ;main.c: 251: if (pid >= 1023)
  1747  0377  0862               	movf	(calculate_pid@pid+3)^(0+128),w
  1748  0378  0020               	movlb	0	; select bank0
  1749  0379  00A5               	movwf	___flge@ff1+3
  1750  037A  0021               	movlb	1	; select bank1
  1751  037B  0861               	movf	(calculate_pid@pid+2)^(0+128),w
  1752  037C  0020               	movlb	0	; select bank0
  1753  037D  00A4               	movwf	___flge@ff1+2
  1754  037E  0021               	movlb	1	; select bank1
  1755  037F  0860               	movf	(calculate_pid@pid+1)^(0+128),w
  1756  0380  0020               	movlb	0	; select bank0
  1757  0381  00A3               	movwf	___flge@ff1+1
  1758  0382  0021               	movlb	1	; select bank1
  1759  0383  085F               	movf	calculate_pid@pid^(0+128),w
  1760  0384  0020               	movlb	0	; select bank0
  1761  0385  00A2               	movwf	___flge@ff1
  1762  0386  3044               	movlw	68
  1763  0387  00A9               	movwf	___flge@ff2+3
  1764  0388  307F               	movlw	127
  1765  0389  00A8               	movwf	___flge@ff2+2
  1766  038A  30C0               	movlw	192
  1767  038B  00A7               	movwf	___flge@ff2+1
  1768  038C  01A6               	clrf	___flge@ff2
  1769  038D  25A0  3182         	fcall	___flge
  1770  038F  1C03               	btfss	3,0
  1771  0390  2B99               	goto	l2733
  1772                           
  1773                           ;main.c: 252: {
  1774                           ;main.c: 253: pid = 1023;
  1775  0391  3044               	movlw	68
  1776  0392  0021               	movlb	1	; select bank1
  1777  0393  00E2               	movwf	(calculate_pid@pid+3)^(0+128)
  1778  0394  307F               	movlw	127
  1779  0395  00E1               	movwf	(calculate_pid@pid+2)^(0+128)
  1780  0396  30C0               	movlw	192
  1781  0397  00E0               	movwf	(calculate_pid@pid+1)^(0+128)
  1782  0398  01DF               	clrf	calculate_pid@pid^(0+128)
  1783  0399                     l2733:	
  1784                           
  1785                           ;main.c: 254: }
  1786                           ;main.c: 255: if (pid <= -1023)
  1787  0399  30C4               	movlw	196
  1788  039A  0020               	movlb	0	; select bank0
  1789  039B  00A5               	movwf	___flge@ff1+3
  1790  039C  307F               	movlw	127
  1791  039D  00A4               	movwf	___flge@ff1+2
  1792  039E  30C0               	movlw	192
  1793  039F  00A3               	movwf	___flge@ff1+1
  1794  03A0  01A2               	clrf	___flge@ff1
  1795  03A1  0021               	movlb	1	; select bank1
  1796  03A2  0862               	movf	(calculate_pid@pid+3)^(0+128),w
  1797  03A3  0020               	movlb	0	; select bank0
  1798  03A4  00A9               	movwf	___flge@ff2+3
  1799  03A5  0021               	movlb	1	; select bank1
  1800  03A6  0861               	movf	(calculate_pid@pid+2)^(0+128),w
  1801  03A7  0020               	movlb	0	; select bank0
  1802  03A8  00A8               	movwf	___flge@ff2+2
  1803  03A9  0021               	movlb	1	; select bank1
  1804  03AA  0860               	movf	(calculate_pid@pid+1)^(0+128),w
  1805  03AB  0020               	movlb	0	; select bank0
  1806  03AC  00A7               	movwf	___flge@ff2+1
  1807  03AD  0021               	movlb	1	; select bank1
  1808  03AE  085F               	movf	calculate_pid@pid^(0+128),w
  1809  03AF  0020               	movlb	0	; select bank0
  1810  03B0  00A6               	movwf	___flge@ff2
  1811  03B1  25A0  3182         	fcall	___flge
  1812  03B3  1C03               	btfss	3,0
  1813  03B4  2BBD               	goto	l2737
  1814                           
  1815                           ;main.c: 256: {
  1816                           ;main.c: 257: pid = -1023;
  1817  03B5  30C4               	movlw	196
  1818  03B6  0021               	movlb	1	; select bank1
  1819  03B7  00E2               	movwf	(calculate_pid@pid+3)^(0+128)
  1820  03B8  307F               	movlw	127
  1821  03B9  00E1               	movwf	(calculate_pid@pid+2)^(0+128)
  1822  03BA  30C0               	movlw	192
  1823  03BB  00E0               	movwf	(calculate_pid@pid+1)^(0+128)
  1824  03BC  01DF               	clrf	calculate_pid@pid^(0+128)
  1825  03BD                     l2737:	
  1826                           
  1827                           ;main.c: 258: }
  1828                           ;main.c: 259: M_control((int) pid);
  1829  03BD  0021               	movlb	1	; select bank1
  1830  03BE  0862               	movf	(calculate_pid@pid+3)^(0+128),w
  1831  03BF  0020               	movlb	0	; select bank0
  1832  03C0  00A5               	movwf	___fltol@f1+3
  1833  03C1  0021               	movlb	1	; select bank1
  1834  03C2  0861               	movf	(calculate_pid@pid+2)^(0+128),w
  1835  03C3  0020               	movlb	0	; select bank0
  1836  03C4  00A4               	movwf	___fltol@f1+2
  1837  03C5  0021               	movlb	1	; select bank1
  1838  03C6  0860               	movf	(calculate_pid@pid+1)^(0+128),w
  1839  03C7  0020               	movlb	0	; select bank0
  1840  03C8  00A3               	movwf	___fltol@f1+1
  1841  03C9  0021               	movlb	1	; select bank1
  1842  03CA  085F               	movf	calculate_pid@pid^(0+128),w
  1843  03CB  0020               	movlb	0	; select bank0
  1844  03CC  00A2               	movwf	___fltol@f1
  1845  03CD  318F  27AD         	fcall	___fltol
  1846  03CF  0823               	movf	?___fltol+1,w
  1847  03D0  00AD               	movwf	M_control@ctr+1
  1848  03D1  0822               	movf	?___fltol,w
  1849  03D2  00AC               	movwf	M_control@ctr
  1850  03D3  3181  2916         	ljmp	l2473
  1851  03D5                     __end_of_calculate_pid:	
  1852  03D5                     __ptext9:	
  1853 ;; *************** function ___flmul *****************
  1854 ;; Defined at:
  1855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcmul.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  b               4   10[BANK0 ] unsigned char 
  1858 ;;  a               4   14[BANK0 ] unsigned char 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  prod            4   29[BANK0 ] struct .
  1861 ;;  grs             4   25[BANK0 ] unsigned long 
  1862 ;;  temp            2   33[BANK0 ] struct .
  1863 ;;  bexp            1   24[BANK0 ] unsigned char 
  1864 ;;  aexp            1   23[BANK0 ] unsigned char 
  1865 ;;  sign            1   22[BANK0 ] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  4   10[BANK0 ] unsigned char 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 1F/0
  1872 ;;		On exit  : 1F/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1875 ;;      Params:         0       8       0       0
  1876 ;;      Locals:         0      13       0       0
  1877 ;;      Temps:          0       4       0       0
  1878 ;;      Totals:         0      25       0       0
  1879 ;;Total ram usage:       25 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    3
  1882 ;; This function calls:
  1883 ;;		__Umul8_16
  1884 ;; This function is called by:
  1885 ;;		_calculate_pid
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function ___flmul
  1891  03D5                     ___flmul:	
  1892                           
  1893                           ;incstack = 0
  1894                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  1895  03D5  082D               	movf	___flmul@b+3,w
  1896  03D6  00B6               	movwf	___flmul@sign
  1897  03D7  3080               	movlw	128
  1898  03D8  05B6               	andwf	___flmul@sign,f
  1899  03D9  352D               	lslf	___flmul@b+3,w
  1900  03DA  00B8               	movwf	___flmul@bexp
  1901  03DB  1BAC               	btfsc	___flmul@b+2,7
  1902  03DC  1438               	bsf	___flmul@bexp,0
  1903  03DD  0838               	movf	___flmul@bexp,w
  1904  03DE  1903               	btfsc	3,2
  1905  03DF  2BE8               	goto	l550
  1906  03E0  0F38               	incfsz	___flmul@bexp,w
  1907  03E1  2BE6               	goto	l551
  1908  03E2  01AA               	clrf	___flmul@b
  1909  03E3  01AB               	clrf	___flmul@b+1
  1910  03E4  01AC               	clrf	___flmul@b+2
  1911  03E5  01AD               	clrf	___flmul@b+3
  1912  03E6                     l551:	
  1913  03E6  17AC               	bsf	___flmul@b+2,7
  1914  03E7  2BEC               	goto	l2565
  1915  03E8                     l550:	
  1916  03E8  01AA               	clrf	___flmul@b
  1917  03E9  01AB               	clrf	___flmul@b+1
  1918  03EA  01AC               	clrf	___flmul@b+2
  1919  03EB  01AD               	clrf	___flmul@b+3
  1920  03EC                     l2565:	
  1921  03EC  0831               	movf	___flmul@a+3,w
  1922  03ED  3980               	andlw	128
  1923  03EE  06B6               	xorwf	___flmul@sign,f
  1924  03EF  3531               	lslf	___flmul@a+3,w
  1925  03F0  00B7               	movwf	___flmul@aexp
  1926  03F1  1BB0               	btfsc	___flmul@a+2,7
  1927  03F2  1437               	bsf	___flmul@aexp,0
  1928  03F3  0837               	movf	___flmul@aexp,w
  1929  03F4  1903               	btfsc	3,2
  1930  03F5  2BFE               	goto	l554
  1931  03F6  0F37               	incfsz	___flmul@aexp,w
  1932  03F7  2BFC               	goto	l555
  1933  03F8  01AE               	clrf	___flmul@a
  1934  03F9  01AF               	clrf	___flmul@a+1
  1935  03FA  01B0               	clrf	___flmul@a+2
  1936  03FB  01B1               	clrf	___flmul@a+3
  1937  03FC                     l555:	
  1938  03FC  17B0               	bsf	___flmul@a+2,7
  1939  03FD  2C02               	goto	l2577
  1940  03FE                     l554:	
  1941  03FE  01AE               	clrf	___flmul@a
  1942  03FF  01AF               	clrf	___flmul@a+1
  1943  0400  01B0               	clrf	___flmul@a+2
  1944  0401  01B1               	clrf	___flmul@a+3
  1945  0402                     l2577:	
  1946  0402  0837               	movf	___flmul@aexp,w
  1947  0403  1D03               	btfss	3,2
  1948  0404  0838               	movf	___flmul@bexp,w
  1949  0405  1D03               	btfss	3,2
  1950  0406  2C0C               	goto	l2581
  1951  0407  01AA               	clrf	?___flmul
  1952  0408  01AB               	clrf	?___flmul+1
  1953  0409  01AC               	clrf	?___flmul+2
  1954  040A  01AD               	clrf	?___flmul+3
  1955  040B  0008               	return
  1956  040C                     l2581:	
  1957  040C  082A               	movf	___flmul@b,w
  1958  040D  00A2               	movwf	__Umul8_16@multiplicand
  1959  040E  0830               	movf	___flmul@a+2,w
  1960  040F  2557  3182         	fcall	__Umul8_16
  1961  0411  0823               	movf	?__Umul8_16+1,w
  1962  0412  00C2               	movwf	___flmul@temp+1
  1963  0413  0822               	movf	?__Umul8_16,w
  1964  0414  00C1               	movwf	___flmul@temp
  1965  0415  00B9               	movwf	___flmul@grs
  1966  0416  01BA               	clrf	___flmul@grs+1
  1967  0417  01BB               	clrf	___flmul@grs+2
  1968  0418  01BC               	clrf	___flmul@grs+3
  1969  0419  0842               	movf	___flmul@temp+1,w
  1970  041A  00BD               	movwf	___flmul@prod
  1971  041B  01BE               	clrf	___flmul@prod+1
  1972  041C  01BF               	clrf	___flmul@prod+2
  1973  041D  01C0               	clrf	___flmul@prod+3
  1974  041E  082B               	movf	___flmul@b+1,w
  1975  041F  00A2               	movwf	__Umul8_16@multiplicand
  1976  0420  082F               	movf	___flmul@a+1,w
  1977  0421  2557  3182         	fcall	__Umul8_16
  1978  0423  0823               	movf	?__Umul8_16+1,w
  1979  0424  00C2               	movwf	___flmul@temp+1
  1980  0425  0822               	movf	?__Umul8_16,w
  1981  0426  00C1               	movwf	___flmul@temp
  1982  0427  07B9               	addwf	___flmul@grs,f
  1983  0428  3001               	movlw	1
  1984  0429  1803               	skipnc
  1985  042A  07BA               	addwf	___flmul@grs+1,f
  1986  042B  1803               	skipnc
  1987  042C  07BB               	addwf	___flmul@grs+2,f
  1988  042D  1803               	skipnc
  1989  042E  07BC               	addwf	___flmul@grs+3,f
  1990  042F  0842               	movf	___flmul@temp+1,w
  1991  0430  07BD               	addwf	___flmul@prod,f
  1992  0431  3001               	movlw	1
  1993  0432  1803               	skipnc
  1994  0433  07BE               	addwf	___flmul@prod+1,f
  1995  0434  1803               	skipnc
  1996  0435  07BF               	addwf	___flmul@prod+2,f
  1997  0436  1803               	skipnc
  1998  0437  07C0               	addwf	___flmul@prod+3,f
  1999  0438  082C               	movf	___flmul@b+2,w
  2000  0439  00A2               	movwf	__Umul8_16@multiplicand
  2001  043A  082E               	movf	___flmul@a,w
  2002  043B  2557  3182         	fcall	__Umul8_16
  2003  043D  0823               	movf	?__Umul8_16+1,w
  2004  043E  00C2               	movwf	___flmul@temp+1
  2005  043F  0822               	movf	?__Umul8_16,w
  2006  0440  00C1               	movwf	___flmul@temp
  2007  0441  07B9               	addwf	___flmul@grs,f
  2008  0442  3001               	movlw	1
  2009  0443  1803               	skipnc
  2010  0444  07BA               	addwf	___flmul@grs+1,f
  2011  0445  1803               	skipnc
  2012  0446  07BB               	addwf	___flmul@grs+2,f
  2013  0447  1803               	skipnc
  2014  0448  07BC               	addwf	___flmul@grs+3,f
  2015  0449  0842               	movf	___flmul@temp+1,w
  2016  044A  07BD               	addwf	___flmul@prod,f
  2017  044B  3001               	movlw	1
  2018  044C  1803               	skipnc
  2019  044D  07BE               	addwf	___flmul@prod+1,f
  2020  044E  1803               	skipnc
  2021  044F  07BF               	addwf	___flmul@prod+2,f
  2022  0450  1803               	skipnc
  2023  0451  07C0               	addwf	___flmul@prod+3,f
  2024  0452  083B               	movf	___flmul@grs+2,w
  2025  0453  00BC               	movwf	___flmul@grs+3
  2026  0454  083A               	movf	___flmul@grs+1,w
  2027  0455  00BB               	movwf	___flmul@grs+2
  2028  0456  0839               	movf	___flmul@grs,w
  2029  0457  00BA               	movwf	___flmul@grs+1
  2030  0458  01B9               	clrf	___flmul@grs
  2031  0459  082B               	movf	___flmul@b+1,w
  2032  045A  00A2               	movwf	__Umul8_16@multiplicand
  2033  045B  082E               	movf	___flmul@a,w
  2034  045C  2557  3182         	fcall	__Umul8_16
  2035  045E  0823               	movf	?__Umul8_16+1,w
  2036  045F  00C2               	movwf	___flmul@temp+1
  2037  0460  0822               	movf	?__Umul8_16,w
  2038  0461  00C1               	movwf	___flmul@temp
  2039  0462  07B9               	addwf	___flmul@grs,f
  2040  0463  0842               	movf	___flmul@temp+1,w
  2041  0464  3DBA               	addwfc	___flmul@grs+1,f
  2042  0465  3000               	movlw	0
  2043  0466  3DBB               	addwfc	___flmul@grs+2,f
  2044  0467  3DBC               	addwfc	___flmul@grs+3,f
  2045  0468  082A               	movf	___flmul@b,w
  2046  0469  00A2               	movwf	__Umul8_16@multiplicand
  2047  046A  082F               	movf	___flmul@a+1,w
  2048  046B  2557  3182         	fcall	__Umul8_16
  2049  046D  0823               	movf	?__Umul8_16+1,w
  2050  046E  00C2               	movwf	___flmul@temp+1
  2051  046F  0822               	movf	?__Umul8_16,w
  2052  0470  00C1               	movwf	___flmul@temp
  2053  0471  07B9               	addwf	___flmul@grs,f
  2054  0472  0842               	movf	___flmul@temp+1,w
  2055  0473  3DBA               	addwfc	___flmul@grs+1,f
  2056  0474  3000               	movlw	0
  2057  0475  3DBB               	addwfc	___flmul@grs+2,f
  2058  0476  3DBC               	addwfc	___flmul@grs+3,f
  2059  0477  083B               	movf	___flmul@grs+2,w
  2060  0478  00BC               	movwf	___flmul@grs+3
  2061  0479  083A               	movf	___flmul@grs+1,w
  2062  047A  00BB               	movwf	___flmul@grs+2
  2063  047B  0839               	movf	___flmul@grs,w
  2064  047C  00BA               	movwf	___flmul@grs+1
  2065  047D  01B9               	clrf	___flmul@grs
  2066  047E  082A               	movf	___flmul@b,w
  2067  047F  00A2               	movwf	__Umul8_16@multiplicand
  2068  0480  082E               	movf	___flmul@a,w
  2069  0481  2557  3182         	fcall	__Umul8_16
  2070  0483  0823               	movf	?__Umul8_16+1,w
  2071  0484  00C2               	movwf	___flmul@temp+1
  2072  0485  0822               	movf	?__Umul8_16,w
  2073  0486  00C1               	movwf	___flmul@temp
  2074  0487  07B9               	addwf	___flmul@grs,f
  2075  0488  0842               	movf	___flmul@temp+1,w
  2076  0489  3DBA               	addwfc	___flmul@grs+1,f
  2077  048A  3000               	movlw	0
  2078  048B  3DBB               	addwfc	___flmul@grs+2,f
  2079  048C  3DBC               	addwfc	___flmul@grs+3,f
  2080  048D  082B               	movf	___flmul@b+1,w
  2081  048E  00A2               	movwf	__Umul8_16@multiplicand
  2082  048F  0830               	movf	___flmul@a+2,w
  2083  0490  2557  3182         	fcall	__Umul8_16
  2084  0492  0823               	movf	?__Umul8_16+1,w
  2085  0493  00C2               	movwf	___flmul@temp+1
  2086  0494  0822               	movf	?__Umul8_16,w
  2087  0495  00C1               	movwf	___flmul@temp
  2088  0496  07BD               	addwf	___flmul@prod,f
  2089  0497  0842               	movf	___flmul@temp+1,w
  2090  0498  3DBE               	addwfc	___flmul@prod+1,f
  2091  0499  3000               	movlw	0
  2092  049A  3DBF               	addwfc	___flmul@prod+2,f
  2093  049B  3DC0               	addwfc	___flmul@prod+3,f
  2094  049C  082C               	movf	___flmul@b+2,w
  2095  049D  00A2               	movwf	__Umul8_16@multiplicand
  2096  049E  082F               	movf	___flmul@a+1,w
  2097  049F  2557  3182         	fcall	__Umul8_16
  2098  04A1  0823               	movf	?__Umul8_16+1,w
  2099  04A2  00C2               	movwf	___flmul@temp+1
  2100  04A3  0822               	movf	?__Umul8_16,w
  2101  04A4  00C1               	movwf	___flmul@temp
  2102  04A5  07BD               	addwf	___flmul@prod,f
  2103  04A6  0842               	movf	___flmul@temp+1,w
  2104  04A7  3DBE               	addwfc	___flmul@prod+1,f
  2105  04A8  3000               	movlw	0
  2106  04A9  3DBF               	addwfc	___flmul@prod+2,f
  2107  04AA  3DC0               	addwfc	___flmul@prod+3,f
  2108  04AB  082C               	movf	___flmul@b+2,w
  2109  04AC  00A2               	movwf	__Umul8_16@multiplicand
  2110  04AD  0830               	movf	___flmul@a+2,w
  2111  04AE  2557  3182         	fcall	__Umul8_16
  2112  04B0  0823               	movf	?__Umul8_16+1,w
  2113  04B1  00C2               	movwf	___flmul@temp+1
  2114  04B2  0822               	movf	?__Umul8_16,w
  2115  04B3  00C1               	movwf	___flmul@temp
  2116  04B4  00B2               	movwf	??___flmul
  2117  04B5  0842               	movf	___flmul@temp+1,w
  2118  04B6  00B3               	movwf	??___flmul+1
  2119  04B7  01B4               	clrf	??___flmul+2
  2120  04B8  01B5               	clrf	??___flmul+3
  2121  04B9  0834               	movf	??___flmul+2,w
  2122  04BA  00B5               	movwf	??___flmul+3
  2123  04BB  0833               	movf	??___flmul+1,w
  2124  04BC  00B4               	movwf	??___flmul+2
  2125  04BD  0832               	movf	??___flmul,w
  2126  04BE  00B3               	movwf	??___flmul+1
  2127  04BF  01B2               	clrf	??___flmul
  2128  04C0  0832               	movf	??___flmul,w
  2129  04C1  07BD               	addwf	___flmul@prod,f
  2130  04C2  0833               	movf	??___flmul+1,w
  2131  04C3  3DBE               	addwfc	___flmul@prod+1,f
  2132  04C4  0834               	movf	??___flmul+2,w
  2133  04C5  3DBF               	addwfc	___flmul@prod+2,f
  2134  04C6  0835               	movf	??___flmul+3,w
  2135  04C7  3DC0               	addwfc	___flmul@prod+3,f
  2136  04C8  083C               	movf	___flmul@grs+3,w
  2137  04C9  07BD               	addwf	___flmul@prod,f
  2138  04CA  3001               	movlw	1
  2139  04CB  1803               	skipnc
  2140  04CC  07BE               	addwf	___flmul@prod+1,f
  2141  04CD  1803               	skipnc
  2142  04CE  07BF               	addwf	___flmul@prod+2,f
  2143  04CF  1803               	skipnc
  2144  04D0  07C0               	addwf	___flmul@prod+3,f
  2145  04D1  083B               	movf	___flmul@grs+2,w
  2146  04D2  00BC               	movwf	___flmul@grs+3
  2147  04D3  083A               	movf	___flmul@grs+1,w
  2148  04D4  00BB               	movwf	___flmul@grs+2
  2149  04D5  0839               	movf	___flmul@grs,w
  2150  04D6  00BA               	movwf	___flmul@grs+1
  2151  04D7  01B9               	clrf	___flmul@grs
  2152  04D8  0838               	movf	___flmul@bexp,w
  2153  04D9  00C1               	movwf	___flmul@temp
  2154  04DA  01C2               	clrf	___flmul@temp+1
  2155  04DB  0837               	movf	___flmul@aexp,w
  2156  04DC  07C1               	addwf	___flmul@temp,f
  2157  04DD  1803               	skipnc
  2158  04DE  0AC2               	incf	___flmul@temp+1,f
  2159  04DF  3082               	movlw	-126
  2160  04E0                     L3:	
  2161  04E0  07C1               	addwf	___flmul@temp,f
  2162  04E1  1C03               	skipc
  2163  04E2  03C2               	decf	___flmul@temp+1,f
  2164  04E3  1BBF               	btfsc	___flmul@prod+2,7
  2165  04E4  2CF1               	goto	l2629
  2166  04E5  35BD               	lslf	___flmul@prod,f
  2167  04E6  0DBE               	rlf	___flmul@prod+1,f
  2168  04E7  0DBF               	rlf	___flmul@prod+2,f
  2169  04E8  0DC0               	rlf	___flmul@prod+3,f
  2170  04E9  1BBC               	btfsc	___flmul@grs+3,7
  2171  04EA  143D               	bsf	___flmul@prod,0
  2172  04EB  30FF               	movlw	-1
  2173  04EC  35B9               	lslf	___flmul@grs,f
  2174  04ED  0DBA               	rlf	___flmul@grs+1,f
  2175  04EE  0DBB               	rlf	___flmul@grs+2,f
  2176  04EF  0DBC               	rlf	___flmul@grs+3,f
  2177  04F0  2CE0               	goto	L3
  2178  04F1                     l2629:	
  2179  04F1  01B7               	clrf	___flmul@aexp
  2180  04F2  1FBC               	btfss	___flmul@grs+3,7
  2181  04F3  2D06               	goto	l2639
  2182  04F4  0839               	movf	___flmul@grs,w
  2183  04F5  00B2               	movwf	??___flmul
  2184  04F6  083A               	movf	___flmul@grs+1,w
  2185  04F7  00B3               	movwf	??___flmul+1
  2186  04F8  083B               	movf	___flmul@grs+2,w
  2187  04F9  00B4               	movwf	??___flmul+2
  2188  04FA  307F               	movlw	127
  2189  04FB  053C               	andwf	___flmul@grs+3,w
  2190  04FC  00B5               	movwf	??___flmul+3
  2191  04FD  0434               	iorwf	??___flmul+2,w
  2192  04FE  0433               	iorwf	??___flmul+1,w
  2193  04FF  0432               	iorwf	??___flmul,w
  2194  0500  1903               	skipnz
  2195  0501  183D               	btfsc	___flmul@prod,0
  2196  0502  2D04               	goto	l2635
  2197  0503  2D06               	goto	l2639
  2198  0504                     l2635:	
  2199  0504  01B7               	clrf	___flmul@aexp
  2200  0505  0AB7               	incf	___flmul@aexp,f
  2201  0506                     l2639:	
  2202  0506  0837               	movf	___flmul@aexp,w
  2203  0507  1903               	btfsc	3,2
  2204  0508  2D18               	goto	l2649
  2205  0509  3001               	movlw	1
  2206  050A  07BD               	addwf	___flmul@prod,f
  2207  050B  3000               	movlw	0
  2208  050C  3DBE               	addwfc	___flmul@prod+1,f
  2209  050D  3DBF               	addwfc	___flmul@prod+2,f
  2210  050E  3DC0               	addwfc	___flmul@prod+3,f
  2211  050F  1C40               	btfss	___flmul@prod+3,0
  2212  0510  2D18               	goto	l2649
  2213  0511  37C0               	asrf	___flmul@prod+3,f
  2214  0512  0CBF               	rrf	___flmul@prod+2,f
  2215  0513  0CBE               	rrf	___flmul@prod+1,f
  2216  0514  0CBD               	rrf	___flmul@prod,f
  2217  0515  0AC1               	incf	___flmul@temp,f
  2218  0516  1903               	skipnz
  2219  0517  0AC2               	incf	___flmul@temp+1,f
  2220  0518                     l2649:	
  2221  0518  0842               	movf	___flmul@temp+1,w
  2222  0519  3A80               	xorlw	128
  2223  051A  00B2               	movwf	??___flmul
  2224  051B  3080               	movlw	128
  2225  051C  0232               	subwf	??___flmul,w
  2226  051D  1D03               	skipz
  2227  051E  2D21               	goto	u3325
  2228  051F  30FF               	movlw	255
  2229  0520  0241               	subwf	___flmul@temp,w
  2230  0521                     u3325:	
  2231  0521  1C03               	skipc
  2232  0522  2D2B               	goto	l2653
  2233  0523  307F               	movlw	127
  2234  0524  0020               	movlb	0	; select bank0
  2235  0525  00C0               	movwf	___flmul@prod+3
  2236  0526  3080               	movlw	128
  2237  0527  00BF               	movwf	___flmul@prod+2
  2238  0528  01BE               	clrf	___flmul@prod+1
  2239  0529  01BD               	clrf	___flmul@prod
  2240  052A  2D4C               	goto	l572
  2241  052B                     l2653:	
  2242  052B  0020               	movlb	0	; select bank0
  2243  052C  0842               	movf	___flmul@temp+1,w
  2244  052D  3A80               	xorlw	128
  2245  052E  00B2               	movwf	??___flmul
  2246  052F  3080               	movlw	128
  2247  0530  0232               	subwf	??___flmul,w
  2248  0531  1D03               	skipz
  2249  0532  2D35               	goto	u3335
  2250  0533  3001               	movlw	1
  2251  0534  0241               	subwf	___flmul@temp,w
  2252  0535                     u3335:	
  2253  0535  1803               	skipnc
  2254  0536  2D3E               	goto	l2659
  2255  0537  0020               	movlb	0	; select bank0
  2256  0538  01BD               	clrf	___flmul@prod
  2257  0539  01BE               	clrf	___flmul@prod+1
  2258  053A  01BF               	clrf	___flmul@prod+2
  2259  053B  01C0               	clrf	___flmul@prod+3
  2260  053C  01B6               	clrf	___flmul@sign
  2261  053D  2D4C               	goto	l572
  2262  053E                     l2659:	
  2263  053E  0020               	movlb	0	; select bank0
  2264  053F  0841               	movf	___flmul@temp,w
  2265  0540  00B8               	movwf	___flmul@bexp
  2266  0541  30FF               	movlw	255
  2267  0542  05BD               	andwf	___flmul@prod,f
  2268  0543  05BE               	andwf	___flmul@prod+1,f
  2269  0544  307F               	movlw	127
  2270  0545  05BF               	andwf	___flmul@prod+2,f
  2271  0546  3000               	movlw	0
  2272  0547  01C0               	clrf	___flmul@prod+3
  2273  0548  1838               	btfsc	___flmul@bexp,0
  2274  0549  17BF               	bsf	___flmul@prod+2,7
  2275  054A  3638               	lsrf	___flmul@bexp,w
  2276  054B  00C0               	movwf	___flmul@prod+3
  2277  054C                     l572:	
  2278  054C  0836               	movf	___flmul@sign,w
  2279  054D  04C0               	iorwf	___flmul@prod+3,f
  2280  054E  0840               	movf	___flmul@prod+3,w
  2281  054F  00AD               	movwf	?___flmul+3
  2282  0550  083F               	movf	___flmul@prod+2,w
  2283  0551  00AC               	movwf	?___flmul+2
  2284  0552  083E               	movf	___flmul@prod+1,w
  2285  0553  00AB               	movwf	?___flmul+1
  2286  0554  083D               	movf	___flmul@prod,w
  2287  0555  00AA               	movwf	?___flmul
  2288  0556  0008               	return
  2289  0557                     __end_of___flmul:	
  2290  0557                     __ptext10:	
  2291 ;; *************** function __Umul8_16 *****************
  2292 ;; Defined at:
  2293 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8_16.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  multiplier      1    wreg     unsigned char 
  2296 ;;  multiplicand    1    2[BANK0 ] unsigned char 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  multiplier      1    7[BANK0 ] unsigned char 
  2299 ;;  word_mpld       2    8[BANK0 ] unsigned int 
  2300 ;;  product         2    5[BANK0 ] unsigned int 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  2    2[BANK0 ] unsigned int 
  2303 ;; Registers used:
  2304 ;;		wreg, status,2, status,0
  2305 ;; Tracked objects:
  2306 ;;		On entry : 1F/0
  2307 ;;		On exit  : 1F/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2310 ;;      Params:         0       3       0       0
  2311 ;;      Locals:         0       5       0       0
  2312 ;;      Temps:          0       0       0       0
  2313 ;;      Totals:         0       8       0       0
  2314 ;;Total ram usage:        8 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    2
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		___flmul
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function __Umul8_16
  2326  0557                     __Umul8_16:	
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  2330                           ;__Umul8_16@multiplier stored from wreg
  2331  0557  00A7               	movwf	__Umul8_16@multiplier
  2332  0558  01A5               	clrf	__Umul8_16@product
  2333  0559  01A6               	clrf	__Umul8_16@product+1
  2334  055A  0822               	movf	__Umul8_16@multiplicand,w
  2335  055B  00A8               	movwf	__Umul8_16@word_mpld
  2336  055C  01A9               	clrf	__Umul8_16@word_mpld+1
  2337  055D  1C27               	btfss	__Umul8_16@multiplier,0
  2338  055E  2D63               	goto	l2429
  2339  055F  0828               	movf	__Umul8_16@word_mpld,w
  2340  0560  07A5               	addwf	__Umul8_16@product,f
  2341  0561  0829               	movf	__Umul8_16@word_mpld+1,w
  2342  0562  3DA6               	addwfc	__Umul8_16@product+1,f
  2343  0563                     l2429:	
  2344  0563  35A8               	lslf	__Umul8_16@word_mpld,f
  2345  0564  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2346  0565  1CA7               	btfss	__Umul8_16@multiplier,1
  2347  0566  2D6B               	goto	l2435
  2348  0567  0828               	movf	__Umul8_16@word_mpld,w
  2349  0568  07A5               	addwf	__Umul8_16@product,f
  2350  0569  0829               	movf	__Umul8_16@word_mpld+1,w
  2351  056A  3DA6               	addwfc	__Umul8_16@product+1,f
  2352  056B                     l2435:	
  2353  056B  35A8               	lslf	__Umul8_16@word_mpld,f
  2354  056C  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2355  056D  1D27               	btfss	__Umul8_16@multiplier,2
  2356  056E  2D73               	goto	l2441
  2357  056F  0828               	movf	__Umul8_16@word_mpld,w
  2358  0570  07A5               	addwf	__Umul8_16@product,f
  2359  0571  0829               	movf	__Umul8_16@word_mpld+1,w
  2360  0572  3DA6               	addwfc	__Umul8_16@product+1,f
  2361  0573                     l2441:	
  2362  0573  35A8               	lslf	__Umul8_16@word_mpld,f
  2363  0574  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2364  0575  1DA7               	btfss	__Umul8_16@multiplier,3
  2365  0576  2D7B               	goto	l2447
  2366  0577  0828               	movf	__Umul8_16@word_mpld,w
  2367  0578  07A5               	addwf	__Umul8_16@product,f
  2368  0579  0829               	movf	__Umul8_16@word_mpld+1,w
  2369  057A  3DA6               	addwfc	__Umul8_16@product+1,f
  2370  057B                     l2447:	
  2371  057B  35A8               	lslf	__Umul8_16@word_mpld,f
  2372  057C  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2373  057D  1E27               	btfss	__Umul8_16@multiplier,4
  2374  057E  2D83               	goto	l2453
  2375  057F  0828               	movf	__Umul8_16@word_mpld,w
  2376  0580  07A5               	addwf	__Umul8_16@product,f
  2377  0581  0829               	movf	__Umul8_16@word_mpld+1,w
  2378  0582  3DA6               	addwfc	__Umul8_16@product+1,f
  2379  0583                     l2453:	
  2380  0583  35A8               	lslf	__Umul8_16@word_mpld,f
  2381  0584  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2382  0585  1EA7               	btfss	__Umul8_16@multiplier,5
  2383  0586  2D8B               	goto	l2459
  2384  0587  0828               	movf	__Umul8_16@word_mpld,w
  2385  0588  07A5               	addwf	__Umul8_16@product,f
  2386  0589  0829               	movf	__Umul8_16@word_mpld+1,w
  2387  058A  3DA6               	addwfc	__Umul8_16@product+1,f
  2388  058B                     l2459:	
  2389  058B  35A8               	lslf	__Umul8_16@word_mpld,f
  2390  058C  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2391  058D  1F27               	btfss	__Umul8_16@multiplier,6
  2392  058E  2D93               	goto	l2465
  2393  058F  0828               	movf	__Umul8_16@word_mpld,w
  2394  0590  07A5               	addwf	__Umul8_16@product,f
  2395  0591  0829               	movf	__Umul8_16@word_mpld+1,w
  2396  0592  3DA6               	addwfc	__Umul8_16@product+1,f
  2397  0593                     l2465:	
  2398  0593  35A8               	lslf	__Umul8_16@word_mpld,f
  2399  0594  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2400  0595  1FA7               	btfss	__Umul8_16@multiplier,7
  2401  0596  2D9B               	goto	l604
  2402  0597  0828               	movf	__Umul8_16@word_mpld,w
  2403  0598  07A5               	addwf	__Umul8_16@product,f
  2404  0599  0829               	movf	__Umul8_16@word_mpld+1,w
  2405  059A  3DA6               	addwfc	__Umul8_16@product+1,f
  2406  059B                     l604:	
  2407  059B  0826               	movf	__Umul8_16@product+1,w
  2408  059C  00A3               	movwf	?__Umul8_16+1
  2409  059D  0825               	movf	__Umul8_16@product,w
  2410  059E  00A2               	movwf	?__Umul8_16
  2411  059F  0008               	return
  2412  05A0                     __end_of__Umul8_16:	
  2413  05A0                     __ptext11:	
  2414 ;; *************** function ___flge *****************
  2415 ;; Defined at:
  2416 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\flge.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  ff1             4    2[BANK0 ] unsigned int 
  2419 ;;  ff2             4    6[BANK0 ] unsigned int 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;		None               void
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0
  2426 ;; Tracked objects:
  2427 ;;		On entry : 1F/0
  2428 ;;		On exit  : 1F/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2431 ;;      Params:         0       8       0       0
  2432 ;;      Locals:         0       0       0       0
  2433 ;;      Temps:          0       4       0       0
  2434 ;;      Totals:         0      12       0       0
  2435 ;;Total ram usage:       12 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    2
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_calculate_pid
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function ___flge
  2447  05A0                     ___flge:	
  2448                           
  2449                           ;incstack = 0
  2450                           ; Regs used in ___flge: [wreg+status,2+status,0]
  2451  05A0  3080               	movlw	128
  2452  05A1  01AA               	clrf	??___flge
  2453  05A2  01AB               	clrf	??___flge+1
  2454  05A3  0524               	andwf	___flge@ff1+2,w
  2455  05A4  00AC               	movwf	??___flge+2
  2456  05A5  307F               	movlw	127
  2457  05A6  0525               	andwf	___flge@ff1+3,w
  2458  05A7  00AD               	movwf	??___flge+3
  2459  05A8  042C               	iorwf	??___flge+2,w
  2460  05A9  042B               	iorwf	??___flge+1,w
  2461  05AA  042A               	iorwf	??___flge,w
  2462  05AB  1D03               	skipz
  2463  05AC  2DB1               	goto	l2493
  2464  05AD  01A2               	clrf	___flge@ff1
  2465  05AE  01A3               	clrf	___flge@ff1+1
  2466  05AF  01A4               	clrf	___flge@ff1+2
  2467  05B0  01A5               	clrf	___flge@ff1+3
  2468  05B1                     l2493:	
  2469  05B1  3080               	movlw	128
  2470  05B2  01AA               	clrf	??___flge
  2471  05B3  01AB               	clrf	??___flge+1
  2472  05B4  0528               	andwf	___flge@ff2+2,w
  2473  05B5  00AC               	movwf	??___flge+2
  2474  05B6  307F               	movlw	127
  2475  05B7  0529               	andwf	___flge@ff2+3,w
  2476  05B8  00AD               	movwf	??___flge+3
  2477  05B9  042C               	iorwf	??___flge+2,w
  2478  05BA  042B               	iorwf	??___flge+1,w
  2479  05BB  042A               	iorwf	??___flge,w
  2480  05BC  1D03               	skipz
  2481  05BD  2DC2               	goto	l356
  2482  05BE  01A6               	clrf	___flge@ff2
  2483  05BF  01A7               	clrf	___flge@ff2+1
  2484  05C0  01A8               	clrf	___flge@ff2+2
  2485  05C1  01A9               	clrf	___flge@ff2+3
  2486  05C2                     l356:	
  2487  05C2  1FA5               	btfss	___flge@ff1+3,7
  2488  05C3  2DD9               	goto	l2499
  2489  05C4  3080               	movlw	128
  2490  05C5  01AA               	clrf	??___flge
  2491  05C6  01AB               	clrf	??___flge+1
  2492  05C7  01AC               	clrf	??___flge+2
  2493  05C8  00AD               	movwf	??___flge+3
  2494  05C9  0822               	movf	___flge@ff1,w
  2495  05CA  02AA               	subwf	??___flge,f
  2496  05CB  0823               	movf	___flge@ff1+1,w
  2497  05CC  3BAB               	subwfb	??___flge+1,f
  2498  05CD  0824               	movf	___flge@ff1+2,w
  2499  05CE  3BAC               	subwfb	??___flge+2,f
  2500  05CF  0825               	movf	___flge@ff1+3,w
  2501  05D0  3BAD               	subwfb	??___flge+3,f
  2502  05D1  082D               	movf	??___flge+3,w
  2503  05D2  00A5               	movwf	___flge@ff1+3
  2504  05D3  082C               	movf	??___flge+2,w
  2505  05D4  00A4               	movwf	___flge@ff1+2
  2506  05D5  082B               	movf	??___flge+1,w
  2507  05D6  00A3               	movwf	___flge@ff1+1
  2508  05D7  082A               	movf	??___flge,w
  2509  05D8  00A2               	movwf	___flge@ff1
  2510  05D9                     l2499:	
  2511  05D9  1FA9               	btfss	___flge@ff2+3,7
  2512  05DA  2DF0               	goto	l358
  2513  05DB  3080               	movlw	128
  2514  05DC  01AA               	clrf	??___flge
  2515  05DD  01AB               	clrf	??___flge+1
  2516  05DE  01AC               	clrf	??___flge+2
  2517  05DF  00AD               	movwf	??___flge+3
  2518  05E0  0826               	movf	___flge@ff2,w
  2519  05E1  02AA               	subwf	??___flge,f
  2520  05E2  0827               	movf	___flge@ff2+1,w
  2521  05E3  3BAB               	subwfb	??___flge+1,f
  2522  05E4  0828               	movf	___flge@ff2+2,w
  2523  05E5  3BAC               	subwfb	??___flge+2,f
  2524  05E6  0829               	movf	___flge@ff2+3,w
  2525  05E7  3BAD               	subwfb	??___flge+3,f
  2526  05E8  082D               	movf	??___flge+3,w
  2527  05E9  00A9               	movwf	___flge@ff2+3
  2528  05EA  082C               	movf	??___flge+2,w
  2529  05EB  00A8               	movwf	___flge@ff2+2
  2530  05EC  082B               	movf	??___flge+1,w
  2531  05ED  00A7               	movwf	___flge@ff2+1
  2532  05EE  082A               	movf	??___flge,w
  2533  05EF  00A6               	movwf	___flge@ff2
  2534  05F0                     l358:	
  2535  05F0  3080               	movlw	128
  2536  05F1  06A5               	xorwf	___flge@ff1+3,f
  2537  05F2  06A9               	xorwf	___flge@ff2+3,f
  2538  05F3  0829               	movf	___flge@ff2+3,w
  2539  05F4  0225               	subwf	___flge@ff1+3,w
  2540  05F5  1D03               	skipz
  2541  05F6  0008               	return
  2542  05F7  0828               	movf	___flge@ff2+2,w
  2543  05F8  0224               	subwf	___flge@ff1+2,w
  2544  05F9  1D03               	skipz
  2545  05FA  0008               	return
  2546  05FB  0827               	movf	___flge@ff2+1,w
  2547  05FC  0223               	subwf	___flge@ff1+1,w
  2548  05FD  1D03               	skipz
  2549  05FE  0008               	return
  2550  05FF  0826               	movf	___flge@ff2,w
  2551  0600  0222               	subwf	___flge@ff1,w
  2552  0601  0008               	return
  2553  0602                     __end_of___flge:	
  2554  0602                     __ptext7:	
  2555 ;; *************** function ___flsub *****************
  2556 ;; Defined at:
  2557 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcadd.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  a               4   55[BANK0 ] long 
  2560 ;;  b               4   59[BANK0 ] long 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  4   55[BANK0 ] long 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 1F/0
  2569 ;;		On exit  : 1F/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2572 ;;      Params:         0       8       0       0
  2573 ;;      Locals:         0       0       0       0
  2574 ;;      Temps:          0       0       0       0
  2575 ;;      Totals:         0       8       0       0
  2576 ;;Total ram usage:        8 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    3
  2579 ;; This function calls:
  2580 ;;		___fladd
  2581 ;; This function is called by:
  2582 ;;		_calculate_pid
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function ___flsub
  2588  0602                     ___flsub:	
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  2592  0602  3080               	movlw	128
  2593  0603  06DA               	xorwf	___flsub@a+3,f
  2594  0604  085E               	movf	___flsub@b+3,w
  2595  0605  00C6               	movwf	___fladd@b+3
  2596  0606  085D               	movf	___flsub@b+2,w
  2597  0607  00C5               	movwf	___fladd@b+2
  2598  0608  085C               	movf	___flsub@b+1,w
  2599  0609  00C4               	movwf	___fladd@b+1
  2600  060A  085B               	movf	___flsub@b,w
  2601  060B  00C3               	movwf	___fladd@b
  2602  060C  085A               	movf	___flsub@a+3,w
  2603  060D  00CA               	movwf	___fladd@a+3
  2604  060E  0859               	movf	___flsub@a+2,w
  2605  060F  00C9               	movwf	___fladd@a+2
  2606  0610  0858               	movf	___flsub@a+1,w
  2607  0611  00C8               	movwf	___fladd@a+1
  2608  0612  0857               	movf	___flsub@a,w
  2609  0613  00C7               	movwf	___fladd@a
  2610  0614  3186  261F         	fcall	___fladd
  2611  0616  0846               	movf	?___fladd+3,w
  2612  0617  00DA               	movwf	?___flsub+3
  2613  0618  0845               	movf	?___fladd+2,w
  2614  0619  00D9               	movwf	?___flsub+2
  2615  061A  0844               	movf	?___fladd+1,w
  2616  061B  00D8               	movwf	?___flsub+1
  2617  061C  0843               	movf	?___fladd,w
  2618  061D  00D7               	movwf	?___flsub
  2619  061E  0008               	return
  2620  061F                     __end_of___flsub:	
  2621                           
  2622                           	psect	text5
  2623  0770                     __ptext5:	
  2624 ;; *************** function ___xxtofl *****************
  2625 ;; Defined at:
  2626 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\xxtofl.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  sign            1    wreg     unsigned char 
  2629 ;;  val             4    2[BANK0 ] long 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  sign            1   10[BANK0 ] unsigned char 
  2632 ;;  arg             4   12[BANK0 ] unsigned long 
  2633 ;;  exp             1   11[BANK0 ] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  4    2[BANK0 ] unsigned char 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 1F/0
  2640 ;;		On exit  : 1F/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2643 ;;      Params:         0       4       0       0
  2644 ;;      Locals:         0       6       0       0
  2645 ;;      Temps:          0       4       0       0
  2646 ;;      Totals:         0      14       0       0
  2647 ;;Total ram usage:       14 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    2
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_calculate_pid
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function ___xxtofl
  2659  0770                     ___xxtofl:	
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2663                           ;___xxtofl@sign stored from wreg
  2664  0770  00AA               	movwf	___xxtofl@sign
  2665  0771  082A               	movf	___xxtofl@sign,w
  2666  0772  1D03               	btfss	3,2
  2667  0773  1FA5               	btfss	___xxtofl@val+3,7
  2668  0774  2F85               	goto	l2677
  2669  0775  0922               	comf	___xxtofl@val,w
  2670  0776  00AC               	movwf	___xxtofl@arg
  2671  0777  0923               	comf	___xxtofl@val+1,w
  2672  0778  00AD               	movwf	___xxtofl@arg+1
  2673  0779  0924               	comf	___xxtofl@val+2,w
  2674  077A  00AE               	movwf	___xxtofl@arg+2
  2675  077B  0925               	comf	___xxtofl@val+3,w
  2676  077C  00AF               	movwf	___xxtofl@arg+3
  2677  077D  0AAC               	incf	___xxtofl@arg,f
  2678  077E  1903               	skipnz
  2679  077F  0AAD               	incf	___xxtofl@arg+1,f
  2680  0780  1903               	skipnz
  2681  0781  0AAE               	incf	___xxtofl@arg+2,f
  2682  0782  1903               	skipnz
  2683  0783  0AAF               	incf	___xxtofl@arg+3,f
  2684  0784  2F8D               	goto	l579
  2685  0785                     l2677:	
  2686  0785  0825               	movf	___xxtofl@val+3,w
  2687  0786  00AF               	movwf	___xxtofl@arg+3
  2688  0787  0824               	movf	___xxtofl@val+2,w
  2689  0788  00AE               	movwf	___xxtofl@arg+2
  2690  0789  0823               	movf	___xxtofl@val+1,w
  2691  078A  00AD               	movwf	___xxtofl@arg+1
  2692  078B  0822               	movf	___xxtofl@val,w
  2693  078C  00AC               	movwf	___xxtofl@arg
  2694  078D                     l579:	
  2695  078D  0825               	movf	___xxtofl@val+3,w
  2696  078E  0424               	iorwf	___xxtofl@val+2,w
  2697  078F  0423               	iorwf	___xxtofl@val+1,w
  2698  0790  0422               	iorwf	___xxtofl@val,w
  2699  0791  1D03               	skipz
  2700  0792  2F98               	goto	l2681
  2701  0793  01A2               	clrf	?___xxtofl
  2702  0794  01A3               	clrf	?___xxtofl+1
  2703  0795  01A4               	clrf	?___xxtofl+2
  2704  0796  01A5               	clrf	?___xxtofl+3
  2705  0797  0008               	return
  2706  0798                     l2681:	
  2707  0798  3096               	movlw	150
  2708  0799  00AB               	movwf	___xxtofl@exp
  2709  079A                     l2685:	
  2710  079A  30FE               	movlw	254
  2711  079B  052F               	andwf	___xxtofl@arg+3,w
  2712  079C  1903               	btfsc	3,2
  2713  079D  2FAF               	goto	l2693
  2714  079E  0AAB               	incf	___xxtofl@exp,f
  2715  079F  36AF               	lsrf	___xxtofl@arg+3,f
  2716  07A0  0CAE               	rrf	___xxtofl@arg+2,f
  2717  07A1  0CAD               	rrf	___xxtofl@arg+1,f
  2718  07A2  0CAC               	rrf	___xxtofl@arg,f
  2719  07A3  2F9A               	goto	l2685
  2720  07A4                     l2687:	
  2721  07A4  3001               	movlw	1
  2722  07A5  0AAB               	incf	___xxtofl@exp,f
  2723  07A6  07AC               	addwf	___xxtofl@arg,f
  2724  07A7  3000               	movlw	0
  2725  07A8  3DAD               	addwfc	___xxtofl@arg+1,f
  2726  07A9  3DAE               	addwfc	___xxtofl@arg+2,f
  2727  07AA  3DAF               	addwfc	___xxtofl@arg+3,f
  2728  07AB  36AF               	lsrf	___xxtofl@arg+3,f
  2729  07AC  0CAE               	rrf	___xxtofl@arg+2,f
  2730  07AD  0CAD               	rrf	___xxtofl@arg+1,f
  2731  07AE  0CAC               	rrf	___xxtofl@arg,f
  2732  07AF                     l2693:	
  2733  07AF  30FF               	movlw	255
  2734  07B0  052F               	andwf	___xxtofl@arg+3,w
  2735  07B1  1903               	btfsc	3,2
  2736  07B2  2FBD               	goto	l2697
  2737  07B3  2FA4               	goto	l2687
  2738  07B4                     l2699:	
  2739  07B4  3002               	movlw	2
  2740  07B5  022B               	subwf	___xxtofl@exp,w
  2741  07B6  1C03               	btfss	3,0
  2742  07B7  2FBF               	goto	l592
  2743  07B8  03AB               	decf	___xxtofl@exp,f
  2744  07B9  35AC               	lslf	___xxtofl@arg,f
  2745  07BA  0DAD               	rlf	___xxtofl@arg+1,f
  2746  07BB  0DAE               	rlf	___xxtofl@arg+2,f
  2747  07BC  0DAF               	rlf	___xxtofl@arg+3,f
  2748  07BD                     l2697:	
  2749  07BD  1FAE               	btfss	___xxtofl@arg+2,7
  2750  07BE  2FB4               	goto	l2699
  2751  07BF                     l592:	
  2752  07BF  182B               	btfsc	___xxtofl@exp,0
  2753  07C0  2FC8               	goto	l2703
  2754  07C1  30FF               	movlw	255
  2755  07C2  05AC               	andwf	___xxtofl@arg,f
  2756  07C3  05AD               	andwf	___xxtofl@arg+1,f
  2757  07C4  307F               	movlw	127
  2758  07C5  05AE               	andwf	___xxtofl@arg+2,f
  2759  07C6  30FF               	movlw	255
  2760  07C7  05AF               	andwf	___xxtofl@arg+3,f
  2761  07C8                     l2703:	
  2762  07C8  36AB               	lsrf	___xxtofl@exp,f
  2763  07C9  082B               	movf	___xxtofl@exp,w
  2764  07CA  00A9               	movwf	??___xxtofl+3
  2765  07CB  01A8               	clrf	??___xxtofl+2
  2766  07CC  01A7               	clrf	??___xxtofl+1
  2767  07CD  01A6               	clrf	??___xxtofl
  2768  07CE  0826               	movf	??___xxtofl,w
  2769  07CF  04AC               	iorwf	___xxtofl@arg,f
  2770  07D0  0827               	movf	??___xxtofl+1,w
  2771  07D1  04AD               	iorwf	___xxtofl@arg+1,f
  2772  07D2  0828               	movf	??___xxtofl+2,w
  2773  07D3  04AE               	iorwf	___xxtofl@arg+2,f
  2774  07D4  0829               	movf	??___xxtofl+3,w
  2775  07D5  04AF               	iorwf	___xxtofl@arg+3,f
  2776  07D6  082A               	movf	___xxtofl@sign,w
  2777  07D7  1D03               	btfss	3,2
  2778  07D8  1FA5               	btfss	___xxtofl@val+3,7
  2779  07D9  2FDB               	goto	l2711
  2780  07DA  17AF               	bsf	___xxtofl@arg+3,7
  2781  07DB                     l2711:	
  2782  07DB  082F               	movf	___xxtofl@arg+3,w
  2783  07DC  00A5               	movwf	?___xxtofl+3
  2784  07DD  082E               	movf	___xxtofl@arg+2,w
  2785  07DE  00A4               	movwf	?___xxtofl+2
  2786  07DF  082D               	movf	___xxtofl@arg+1,w
  2787  07E0  00A3               	movwf	?___xxtofl+1
  2788  07E1  082C               	movf	___xxtofl@arg,w
  2789  07E2  00A2               	movwf	?___xxtofl
  2790  07E3  0008               	return
  2791  07E4                     __end_of___xxtofl:	
  2792                           
  2793                           	psect	text6
  2794  0FAD                     __ptext6:	
  2795 ;; *************** function ___fltol *****************
  2796 ;; Defined at:
  2797 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fltol.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  f1              4    2[BANK0 ] unsigned char 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  exp1            1   11[BANK0 ] unsigned char 
  2802 ;;  sign1           1   10[BANK0 ] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  4    2[BANK0 ] long 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0
  2807 ;; Tracked objects:
  2808 ;;		On entry : 1F/0
  2809 ;;		On exit  : 1F/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2812 ;;      Params:         0       4       0       0
  2813 ;;      Locals:         0       2       0       0
  2814 ;;      Temps:          0       4       0       0
  2815 ;;      Totals:         0      10       0       0
  2816 ;;Total ram usage:       10 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    2
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_calculate_pid
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function ___fltol
  2828  0FAD                     ___fltol:	
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2832  0FAD  0822               	movf	___fltol@f1,w
  2833  0FAE  00A6               	movwf	??___fltol
  2834  0FAF  0823               	movf	___fltol@f1+1,w
  2835  0FB0  00A7               	movwf	??___fltol+1
  2836  0FB1  0824               	movf	___fltol@f1+2,w
  2837  0FB2  00A8               	movwf	??___fltol+2
  2838  0FB3  0825               	movf	___fltol@f1+3,w
  2839  0FB4  00A9               	movwf	??___fltol+3
  2840  0FB5  1003               	clrc
  2841  0FB6  0D28               	rlf	??___fltol+2,w
  2842  0FB7  0D29               	rlf	??___fltol+3,w
  2843  0FB8  00AB               	movwf	___fltol@exp1
  2844  0FB9  082B               	movf	___fltol@exp1,w
  2845  0FBA  1D03               	btfss	3,2
  2846  0FBB  2FC1               	goto	l2513
  2847  0FBC                     l2511:	
  2848  0FBC  01A2               	clrf	?___fltol
  2849  0FBD  01A3               	clrf	?___fltol+1
  2850  0FBE  01A4               	clrf	?___fltol+2
  2851  0FBF  01A5               	clrf	?___fltol+3
  2852  0FC0  0008               	return
  2853  0FC1                     l2513:	
  2854  0FC1  0822               	movf	___fltol@f1,w
  2855  0FC2  00A6               	movwf	??___fltol
  2856  0FC3  0823               	movf	___fltol@f1+1,w
  2857  0FC4  00A7               	movwf	??___fltol+1
  2858  0FC5  0824               	movf	___fltol@f1+2,w
  2859  0FC6  00A8               	movwf	??___fltol+2
  2860  0FC7  0825               	movf	___fltol@f1+3,w
  2861  0FC8  00A9               	movwf	??___fltol+3
  2862  0FC9  301F               	movlw	31
  2863  0FCA                     u3105:	
  2864  0FCA  36A9               	lsrf	??___fltol+3,f
  2865  0FCB  0CA8               	rrf	??___fltol+2,f
  2866  0FCC  0CA7               	rrf	??___fltol+1,f
  2867  0FCD  0CA6               	rrf	??___fltol,f
  2868  0FCE  0B89               	decfsz	9,f
  2869  0FCF  2FCA               	goto	u3105
  2870  0FD0  0826               	movf	??___fltol,w
  2871  0FD1  00AA               	movwf	___fltol@sign1
  2872  0FD2  3096               	movlw	150
  2873  0FD3  17A4               	bsf	___fltol@f1+2,7
  2874  0FD4  01A5               	clrf	___fltol@f1+3
  2875  0FD5  02AB               	subwf	___fltol@exp1,f
  2876  0FD6  1FAB               	btfss	___fltol@exp1,7
  2877  0FD7  2FE4               	goto	l2531
  2878  0FD8  082B               	movf	___fltol@exp1,w
  2879  0FD9  3A80               	xorlw	128
  2880  0FDA  3E97               	addlw	151
  2881  0FDB  1C03               	btfss	3,0
  2882  0FDC  2FBC               	goto	l2511
  2883  0FDD                     l2527:	
  2884  0FDD  36A5               	lsrf	___fltol@f1+3,f
  2885  0FDE  0CA4               	rrf	___fltol@f1+2,f
  2886  0FDF  0CA3               	rrf	___fltol@f1+1,f
  2887  0FE0  0CA2               	rrf	___fltol@f1,f
  2888  0FE1  0FAB               	incfsz	___fltol@exp1,f
  2889  0FE2  2FDD               	goto	l2527
  2890  0FE3  2FF1               	goto	l2539
  2891  0FE4                     l2531:	
  2892  0FE4  3020               	movlw	32
  2893  0FE5  022B               	subwf	___fltol@exp1,w
  2894  0FE6  1803               	btfsc	3,0
  2895  0FE7  2FBC               	goto	l2511
  2896  0FE8                     l2537:	
  2897  0FE8  082B               	movf	___fltol@exp1,w
  2898  0FE9  1903               	btfsc	3,2
  2899  0FEA  2FF1               	goto	l2539
  2900  0FEB  35A2               	lslf	___fltol@f1,f
  2901  0FEC  0DA3               	rlf	___fltol@f1+1,f
  2902  0FED  0DA4               	rlf	___fltol@f1+2,f
  2903  0FEE  0DA5               	rlf	___fltol@f1+3,f
  2904  0FEF  03AB               	decf	___fltol@exp1,f
  2905  0FF0  2FE8               	goto	l2537
  2906  0FF1                     l2539:	
  2907  0FF1  082A               	movf	___fltol@sign1,w
  2908  0FF2  1903               	btfsc	3,2
  2909  0FF3  0008               	return
  2910  0FF4  09A2               	comf	___fltol@f1,f
  2911  0FF5  09A3               	comf	___fltol@f1+1,f
  2912  0FF6  09A4               	comf	___fltol@f1+2,f
  2913  0FF7  09A5               	comf	___fltol@f1+3,f
  2914  0FF8  0AA2               	incf	___fltol@f1,f
  2915  0FF9  1903               	skipnz
  2916  0FFA  0AA3               	incf	___fltol@f1+1,f
  2917  0FFB  1903               	skipnz
  2918  0FFC  0AA4               	incf	___fltol@f1+2,f
  2919  0FFD  1903               	skipnz
  2920  0FFE  0AA5               	incf	___fltol@f1+3,f
  2921  0FFF  0008               	return
  2922  1000                     __end_of___fltol:	
  2923                           
  2924                           	psect	text8
  2925  061F                     __ptext8:	
  2926 ;; *************** function ___fladd *****************
  2927 ;; Defined at:
  2928 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcadd.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  b               4   35[BANK0 ] long 
  2931 ;;  a               4   39[BANK0 ] long 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  grs             1   54[BANK0 ] unsigned char 
  2934 ;;  bexp            1   53[BANK0 ] unsigned char 
  2935 ;;  aexp            1   52[BANK0 ] unsigned char 
  2936 ;;  signs           1   51[BANK0 ] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  4   35[BANK0 ] unsigned char 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0
  2941 ;; Tracked objects:
  2942 ;;		On entry : 1F/0
  2943 ;;		On exit  : 1F/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2946 ;;      Params:         0       8       0       0
  2947 ;;      Locals:         0       4       0       0
  2948 ;;      Temps:          0       8       0       0
  2949 ;;      Totals:         0      20       0       0
  2950 ;;Total ram usage:       20 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    2
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_calculate_pid
  2957 ;;		___flsub
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function ___fladd
  2963  061F                     ___fladd:	
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  2967  061F  0846               	movf	___fladd@b+3,w
  2968  0620  00D3               	movwf	___fladd@signs
  2969  0621  3080               	movlw	128
  2970  0622  05D3               	andwf	___fladd@signs,f
  2971  0623  3546               	lslf	___fladd@b+3,w
  2972  0624  00D5               	movwf	___fladd@bexp
  2973  0625  1BC5               	btfsc	___fladd@b+2,7
  2974  0626  1455               	bsf	___fladd@bexp,0
  2975  0627  0855               	movf	___fladd@bexp,w
  2976  0628  1903               	btfsc	3,2
  2977  0629  2E32               	goto	l457
  2978  062A  0F55               	incfsz	___fladd@bexp,w
  2979  062B  2E30               	goto	l458
  2980  062C  01C3               	clrf	___fladd@b
  2981  062D  01C4               	clrf	___fladd@b+1
  2982  062E  01C5               	clrf	___fladd@b+2
  2983  062F  01C6               	clrf	___fladd@b+3
  2984  0630                     l458:	
  2985  0630  17C5               	bsf	___fladd@b+2,7
  2986  0631  2E35               	goto	L1
  2987  0632                     l457:	
  2988  0632  01C3               	clrf	___fladd@b
  2989  0633  01C4               	clrf	___fladd@b+1
  2990  0634  01C5               	clrf	___fladd@b+2
  2991  0635                     L1:	
  2992  0635  01C6               	clrf	___fladd@b+3
  2993  0636  084A               	movf	___fladd@a+3,w
  2994  0637  00D4               	movwf	___fladd@aexp
  2995  0638  3080               	movlw	128
  2996  0639  05D4               	andwf	___fladd@aexp,f
  2997  063A  0854               	movf	___fladd@aexp,w
  2998  063B  0653               	xorwf	___fladd@signs,w
  2999  063C  1D03               	btfss	3,2
  3000  063D  1753               	bsf	___fladd@signs,6
  3001  063E  354A               	lslf	___fladd@a+3,w
  3002  063F  00D4               	movwf	___fladd@aexp
  3003  0640  1BC9               	btfsc	___fladd@a+2,7
  3004  0641  1454               	bsf	___fladd@aexp,0
  3005  0642  0854               	movf	___fladd@aexp,w
  3006  0643  1903               	btfsc	3,2
  3007  0644  2E4D               	goto	l462
  3008  0645  0F54               	incfsz	___fladd@aexp,w
  3009  0646  2E4B               	goto	l463
  3010  0647  01C7               	clrf	___fladd@a
  3011  0648  01C8               	clrf	___fladd@a+1
  3012  0649  01C9               	clrf	___fladd@a+2
  3013  064A  01CA               	clrf	___fladd@a+3
  3014  064B                     l463:	
  3015  064B  17C9               	bsf	___fladd@a+2,7
  3016  064C  2E50               	goto	L2
  3017  064D                     l462:	
  3018  064D  01C7               	clrf	___fladd@a
  3019  064E  01C8               	clrf	___fladd@a+1
  3020  064F  01C9               	clrf	___fladd@a+2
  3021  0650                     L2:	
  3022  0650  01CA               	clrf	___fladd@a+3
  3023  0651  0855               	movf	___fladd@bexp,w
  3024  0652  0254               	subwf	___fladd@aexp,w
  3025  0653  1803               	skipnc
  3026  0654  2E77               	goto	l2319
  3027  0655  1F53               	btfss	___fladd@signs,6
  3028  0656  2E59               	goto	l2289
  3029  0657  3080               	movlw	128
  3030  0658  06D3               	xorwf	___fladd@signs,f
  3031  0659                     l2289:	
  3032  0659  0855               	movf	___fladd@bexp,w
  3033  065A  00D6               	movwf	___fladd@grs
  3034  065B  0854               	movf	___fladd@aexp,w
  3035  065C  00D5               	movwf	___fladd@bexp
  3036  065D  0856               	movf	___fladd@grs,w
  3037  065E  00D4               	movwf	___fladd@aexp
  3038  065F  0843               	movf	___fladd@b,w
  3039  0660  00D6               	movwf	___fladd@grs
  3040  0661  0847               	movf	___fladd@a,w
  3041  0662  00C3               	movwf	___fladd@b
  3042  0663  0856               	movf	___fladd@grs,w
  3043  0664  00C7               	movwf	___fladd@a
  3044  0665  0844               	movf	___fladd@b+1,w
  3045  0666  00D6               	movwf	___fladd@grs
  3046  0667  0848               	movf	___fladd@a+1,w
  3047  0668  00C4               	movwf	___fladd@b+1
  3048  0669  0856               	movf	___fladd@grs,w
  3049  066A  00C8               	movwf	___fladd@a+1
  3050  066B  0845               	movf	___fladd@b+2,w
  3051  066C  00D6               	movwf	___fladd@grs
  3052  066D  0849               	movf	___fladd@a+2,w
  3053  066E  00C5               	movwf	___fladd@b+2
  3054  066F  0856               	movf	___fladd@grs,w
  3055  0670  00C9               	movwf	___fladd@a+2
  3056  0671  0846               	movf	___fladd@b+3,w
  3057  0672  00D6               	movwf	___fladd@grs
  3058  0673  084A               	movf	___fladd@a+3,w
  3059  0674  00C6               	movwf	___fladd@b+3
  3060  0675  0856               	movf	___fladd@grs,w
  3061  0676  00CA               	movwf	___fladd@a+3
  3062  0677                     l2319:	
  3063  0677  01D6               	clrf	___fladd@grs
  3064  0678  0854               	movf	___fladd@aexp,w
  3065  0679  00CB               	movwf	??___fladd
  3066  067A  01CC               	clrf	??___fladd+1
  3067  067B  084C               	movf	??___fladd+1,w
  3068  067C  00CE               	movwf	??___fladd+3
  3069  067D  0855               	movf	___fladd@bexp,w
  3070  067E  024B               	subwf	??___fladd,w
  3071  067F  00CD               	movwf	??___fladd+2
  3072  0680  1C03               	skipc
  3073  0681  03CE               	decf	??___fladd+3,f
  3074  0682  084E               	movf	??___fladd+3,w
  3075  0683  3A80               	xorlw	128
  3076  0684  00CF               	movwf	??___fladd+4
  3077  0685  3080               	movlw	128
  3078  0686  024F               	subwf	??___fladd+4,w
  3079  0687  1D03               	skipz
  3080  0688  2E8B               	goto	u2635
  3081  0689  301A               	movlw	26
  3082  068A  024D               	subwf	??___fladd+2,w
  3083  068B                     u2635:	
  3084  068B  1C03               	skipc
  3085  068C  2EAD               	goto	l2333
  3086  068D  0020               	movlb	0	; select bank0
  3087  068E  0846               	movf	___fladd@b+3,w
  3088  068F  0445               	iorwf	___fladd@b+2,w
  3089  0690  0444               	iorwf	___fladd@b+1,w
  3090  0691  0443               	iorwf	___fladd@b,w
  3091  0692  1903               	btfsc	3,2
  3092  0693  2E96               	goto	u2640
  3093  0694  3001               	movlw	1
  3094  0695  2E97               	goto	u2650
  3095  0696                     u2640:	
  3096  0696  3000               	movlw	0
  3097  0697                     u2650:	
  3098  0697  00D6               	movwf	___fladd@grs
  3099  0698  01C3               	clrf	___fladd@b
  3100  0699  01C4               	clrf	___fladd@b+1
  3101  069A  01C5               	clrf	___fladd@b+2
  3102  069B  01C6               	clrf	___fladd@b+3
  3103  069C  0854               	movf	___fladd@aexp,w
  3104  069D  00D5               	movwf	___fladd@bexp
  3105  069E  2EB2               	goto	l468
  3106  069F                     l470:	
  3107  069F  1C56               	btfss	___fladd@grs,0
  3108  06A0  2EA5               	goto	l471
  3109  06A1  3656               	lsrf	___fladd@grs,w
  3110  06A2  3801               	iorlw	1
  3111  06A3  00D6               	movwf	___fladd@grs
  3112  06A4  2EA6               	goto	l472
  3113  06A5                     l471:	
  3114  06A5  36D6               	lsrf	___fladd@grs,f
  3115  06A6                     l472:	
  3116  06A6  1843               	btfsc	___fladd@b,0
  3117  06A7  17D6               	bsf	___fladd@grs,7
  3118  06A8  37C6               	asrf	___fladd@b+3,f
  3119  06A9  0CC5               	rrf	___fladd@b+2,f
  3120  06AA  0CC4               	rrf	___fladd@b+1,f
  3121  06AB  0CC3               	rrf	___fladd@b,f
  3122  06AC  0AD5               	incf	___fladd@bexp,f
  3123  06AD                     l2333:	
  3124  06AD  0020               	movlb	0	; select bank0
  3125  06AE  0854               	movf	___fladd@aexp,w
  3126  06AF  0255               	subwf	___fladd@bexp,w
  3127  06B0  1C03               	skipc
  3128  06B1  2E9F               	goto	l470
  3129  06B2                     l468:	
  3130  06B2  1B53               	btfsc	___fladd@signs,6
  3131  06B3  2ED6               	goto	l2351
  3132  06B4  0855               	movf	___fladd@bexp,w
  3133  06B5  1D03               	btfss	3,2
  3134  06B6  2EBC               	goto	l2339
  3135  06B7  01C3               	clrf	?___fladd
  3136  06B8  01C4               	clrf	?___fladd+1
  3137  06B9  01C5               	clrf	?___fladd+2
  3138  06BA  01C6               	clrf	?___fladd+3
  3139  06BB  0008               	return
  3140  06BC                     l2339:	
  3141  06BC  0847               	movf	___fladd@a,w
  3142  06BD  07C3               	addwf	___fladd@b,f
  3143  06BE  0848               	movf	___fladd@a+1,w
  3144  06BF  3DC4               	addwfc	___fladd@b+1,f
  3145  06C0  0849               	movf	___fladd@a+2,w
  3146  06C1  3DC5               	addwfc	___fladd@b+2,f
  3147  06C2  084A               	movf	___fladd@a+3,w
  3148  06C3  3DC6               	addwfc	___fladd@b+3,f
  3149  06C4  1C46               	btfss	___fladd@b+3,0
  3150  06C5  2F3E               	goto	l2381
  3151  06C6  1C56               	btfss	___fladd@grs,0
  3152  06C7  2ECD               	goto	l479
  3153  06C8  36D6               	lsrf	___fladd@grs,f
  3154  06C9  0856               	movf	___fladd@grs,w
  3155  06CA  3801               	iorlw	1
  3156  06CB  00D6               	movwf	___fladd@grs
  3157  06CC  2ECE               	goto	l480
  3158  06CD                     l479:	
  3159  06CD  36D6               	lsrf	___fladd@grs,f
  3160  06CE                     l480:	
  3161  06CE  1843               	btfsc	___fladd@b,0
  3162  06CF  17D6               	bsf	___fladd@grs,7
  3163  06D0  37C6               	asrf	___fladd@b+3,f
  3164  06D1  0CC5               	rrf	___fladd@b+2,f
  3165  06D2  0CC4               	rrf	___fladd@b+1,f
  3166  06D3  0CC3               	rrf	___fladd@b,f
  3167  06D4  0AD5               	incf	___fladd@bexp,f
  3168  06D5  2F3E               	goto	l2381
  3169  06D6                     l2351:	
  3170  06D6  0846               	movf	___fladd@b+3,w
  3171  06D7  3A80               	xorlw	128
  3172  06D8  00CB               	movwf	??___fladd
  3173  06D9  084A               	movf	___fladd@a+3,w
  3174  06DA  3A80               	xorlw	128
  3175  06DB  024B               	subwf	??___fladd,w
  3176  06DC  1D03               	skipz
  3177  06DD  2EE8               	goto	u2743
  3178  06DE  0849               	movf	___fladd@a+2,w
  3179  06DF  0245               	subwf	___fladd@b+2,w
  3180  06E0  1D03               	skipz
  3181  06E1  2EE8               	goto	u2743
  3182  06E2  0848               	movf	___fladd@a+1,w
  3183  06E3  0244               	subwf	___fladd@b+1,w
  3184  06E4  1D03               	skipz
  3185  06E5  2EE8               	goto	u2743
  3186  06E6  0847               	movf	___fladd@a,w
  3187  06E7  0243               	subwf	___fladd@b,w
  3188  06E8                     u2743:	
  3189  06E8  1803               	skipnc
  3190  06E9  2F17               	goto	l2361
  3191  06EA  30FF               	movlw	255
  3192  06EB  00CB               	movwf	??___fladd
  3193  06EC  00CC               	movwf	??___fladd+1
  3194  06ED  00CD               	movwf	??___fladd+2
  3195  06EE  00CE               	movwf	??___fladd+3
  3196  06EF  0843               	movf	___fladd@b,w
  3197  06F0  0247               	subwf	___fladd@a,w
  3198  06F1  00CF               	movwf	??___fladd+4
  3199  06F2  0844               	movf	___fladd@b+1,w
  3200  06F3  3B48               	subwfb	___fladd@a+1,w
  3201  06F4  00D0               	movwf	??___fladd+5
  3202  06F5  0845               	movf	___fladd@b+2,w
  3203  06F6  3B49               	subwfb	___fladd@a+2,w
  3204  06F7  00D1               	movwf	??___fladd+6
  3205  06F8  0846               	movf	___fladd@b+3,w
  3206  06F9  3B4A               	subwfb	___fladd@a+3,w
  3207  06FA  00D2               	movwf	??___fladd+7
  3208  06FB  084F               	movf	??___fladd+4,w
  3209  06FC  07CB               	addwf	??___fladd,f
  3210  06FD  0850               	movf	??___fladd+5,w
  3211  06FE  3DCC               	addwfc	??___fladd+1,f
  3212  06FF  0851               	movf	??___fladd+6,w
  3213  0700  3DCD               	addwfc	??___fladd+2,f
  3214  0701  0852               	movf	??___fladd+7,w
  3215  0702  3DCE               	addwfc	??___fladd+3,f
  3216  0703  084E               	movf	??___fladd+3,w
  3217  0704  00C6               	movwf	___fladd@b+3
  3218  0705  084D               	movf	??___fladd+2,w
  3219  0706  00C5               	movwf	___fladd@b+2
  3220  0707  084C               	movf	??___fladd+1,w
  3221  0708  00C4               	movwf	___fladd@b+1
  3222  0709  084B               	movf	??___fladd,w
  3223  070A  00C3               	movwf	___fladd@b
  3224  070B  3080               	movlw	128
  3225  070C  06D3               	xorwf	___fladd@signs,f
  3226  070D  09D6               	comf	___fladd@grs,f
  3227  070E  0FD6               	incfsz	___fladd@grs,f
  3228  070F  2F1F               	goto	l485
  3229  0710  3001               	movlw	1
  3230  0711  07C3               	addwf	___fladd@b,f
  3231  0712  3000               	movlw	0
  3232  0713  3DC4               	addwfc	___fladd@b+1,f
  3233  0714  3DC5               	addwfc	___fladd@b+2,f
  3234  0715  3DC6               	addwfc	___fladd@b+3,f
  3235  0716  2F1F               	goto	l485
  3236  0717                     l2361:	
  3237  0717  0847               	movf	___fladd@a,w
  3238  0718  02C3               	subwf	___fladd@b,f
  3239  0719  0848               	movf	___fladd@a+1,w
  3240  071A  3BC4               	subwfb	___fladd@b+1,f
  3241  071B  0849               	movf	___fladd@a+2,w
  3242  071C  3BC5               	subwfb	___fladd@b+2,f
  3243  071D  084A               	movf	___fladd@a+3,w
  3244  071E  3BC6               	subwfb	___fladd@b+3,f
  3245  071F                     l485:	
  3246  071F  0846               	movf	___fladd@b+3,w
  3247  0720  0445               	iorwf	___fladd@b+2,w
  3248  0721  0444               	iorwf	___fladd@b+1,w
  3249  0722  0443               	iorwf	___fladd@b,w
  3250  0723  1D03               	skipz
  3251  0724  2F3C               	goto	l2379
  3252  0725  0856               	movf	___fladd@grs,w
  3253  0726  1D03               	btfss	3,2
  3254  0727  2F3C               	goto	l2379
  3255  0728  01C3               	clrf	?___fladd
  3256  0729  01C4               	clrf	?___fladd+1
  3257  072A  01C5               	clrf	?___fladd+2
  3258  072B  01C6               	clrf	?___fladd+3
  3259  072C  0008               	return
  3260  072D                     l2367:	
  3261  072D  35C3               	lslf	___fladd@b,f
  3262  072E  0DC4               	rlf	___fladd@b+1,f
  3263  072F  0DC5               	rlf	___fladd@b+2,f
  3264  0730  0DC6               	rlf	___fladd@b+3,f
  3265  0731  1BD6               	btfsc	___fladd@grs,7
  3266  0732  1443               	bsf	___fladd@b,0
  3267  0733  1C56               	btfss	___fladd@grs,0
  3268  0734  2F38               	goto	l490
  3269  0735  1403               	setc
  3270  0736  0DD6               	rlf	___fladd@grs,f
  3271  0737  2F39               	goto	l2375
  3272  0738                     l490:	
  3273  0738  35D6               	lslf	___fladd@grs,f
  3274  0739                     l2375:	
  3275  0739  0855               	movf	___fladd@bexp,w
  3276  073A  1D03               	btfss	3,2
  3277  073B  03D5               	decf	___fladd@bexp,f
  3278  073C                     l2379:	
  3279  073C  1FC5               	btfss	___fladd@b+2,7
  3280  073D  2F2D               	goto	l2367
  3281  073E                     l2381:	
  3282  073E  01D4               	clrf	___fladd@aexp
  3283  073F  1FD6               	btfss	___fladd@grs,7
  3284  0740  2F49               	goto	l2391
  3285  0741  0856               	movf	___fladd@grs,w
  3286  0742  397F               	andlw	127
  3287  0743  1903               	btfsc	3,2
  3288  0744  1843               	btfsc	___fladd@b,0
  3289  0745  2F47               	goto	l2387
  3290  0746  2F49               	goto	l2391
  3291  0747                     l2387:	
  3292  0747  01D4               	clrf	___fladd@aexp
  3293  0748  0AD4               	incf	___fladd@aexp,f
  3294  0749                     l2391:	
  3295  0749  0854               	movf	___fladd@aexp,w
  3296  074A  1903               	btfsc	3,2
  3297  074B  2F5A               	goto	l2403
  3298  074C  3001               	movlw	1
  3299  074D  07C3               	addwf	___fladd@b,f
  3300  074E  3000               	movlw	0
  3301  074F  3DC4               	addwfc	___fladd@b+1,f
  3302  0750  3DC5               	addwfc	___fladd@b+2,f
  3303  0751  3DC6               	addwfc	___fladd@b+3,f
  3304  0752  1C46               	btfss	___fladd@b+3,0
  3305  0753  2F5A               	goto	l2403
  3306  0754  37C6               	asrf	___fladd@b+3,f
  3307  0755  0CC5               	rrf	___fladd@b+2,f
  3308  0756  0CC4               	rrf	___fladd@b+1,f
  3309  0757  0CC3               	rrf	___fladd@b,f
  3310  0758  0F55               	incfsz	___fladd@bexp,w
  3311  0759  0AD5               	incf	___fladd@bexp,f
  3312  075A                     l2403:	
  3313  075A  0A55               	incf	___fladd@bexp,w
  3314  075B  1D03               	btfss	3,2
  3315  075C  0855               	movf	___fladd@bexp,w
  3316  075D  1D03               	btfss	3,2
  3317  075E  2F66               	goto	l2411
  3318  075F  01C3               	clrf	___fladd@b
  3319  0760  01C4               	clrf	___fladd@b+1
  3320  0761  01C5               	clrf	___fladd@b+2
  3321  0762  01C6               	clrf	___fladd@b+3
  3322  0763  0855               	movf	___fladd@bexp,w
  3323  0764  1903               	btfsc	3,2
  3324  0765  01D3               	clrf	___fladd@signs
  3325  0766                     l2411:	
  3326  0766  1C55               	btfss	___fladd@bexp,0
  3327  0767  2F6A               	goto	l505
  3328  0768  17C5               	bsf	___fladd@b+2,7
  3329  0769  2F6B               	goto	l2415
  3330  076A                     l505:	
  3331  076A  13C5               	bcf	___fladd@b+2,7
  3332  076B                     l2415:	
  3333  076B  3655               	lsrf	___fladd@bexp,w
  3334  076C  00C6               	movwf	___fladd@b+3
  3335  076D  1BD3               	btfsc	___fladd@signs,7
  3336  076E  17C6               	bsf	___fladd@b+3,7
  3337  076F  0008               	return
  3338  0770                     __end_of___fladd:	
  3339                           
  3340                           	psect	intentry
  3341  0004                     __pintentry:	
  3342 ;; *************** function _isr *****************
  3343 ;; Defined at:
  3344 ;;		line 78 in file "main.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;		None
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 1F/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3358 ;;      Params:         0       0       0       0
  3359 ;;      Locals:         0       0       0       0
  3360 ;;      Temps:          0       2       0       0
  3361 ;;      Totals:         0       2       0       0
  3362 ;;Total ram usage:        2 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    1
  3365 ;; This function calls:
  3366 ;;		___lwdiv
  3367 ;;		i1___wmul
  3368 ;; This function is called by:
  3369 ;;		Interrupt level 1
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373  0004                     _isr:	
  3374                           
  3375                           ;incstack = 0
  3376  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3377                           
  3378                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3379  0005  3180               	pagesel	$
  3380                           
  3381                           ;main.c: 80: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  3382  0006  1C0B               	btfss	11,0	;volatile
  3383  0007  2821               	goto	i1l2071
  3384  0008  0027               	movlb	7	; select bank7
  3385  0009  1E13               	btfss	19,4	;volatile
  3386  000A  2821               	goto	i1l2071
  3387                           
  3388                           ;main.c: 81: {
  3389                           ;main.c: 82: INTCONbits.IOCIE = 0;
  3390  000B  118B               	bcf	11,3	;volatile
  3391                           
  3392                           ;main.c: 83: counter++;
  3393  000C  0021               	movlb	1	; select bank1
  3394  000D  0AD5               	incf	_counter^(0+128),f
  3395  000E  1903               	skipnz
  3396  000F  0AD6               	incf	(_counter+1)^(0+128),f
  3397                           
  3398                           ;main.c: 84: if (LATAbits.LATA0 == 0) {
  3399  0010  0022               	movlb	2	; select bank2
  3400  0011  180C               	btfsc	12,0	;volatile
  3401  0012  2817               	goto	i1l2065
  3402                           
  3403                           ;main.c: 85: I2C_buffer.data.DISTANCE--;
  3404  0013  30FF               	movlw	255
  3405  0014  0021               	movlb	1	; select bank1
  3406  0015  07AF               	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  3407  0016  281B               	goto	L5
  3408  0017                     i1l2065:	
  3409                           ;main.c: 86: }
  3410                           
  3411                           
  3412                           ;main.c: 87: else
  3413                           ;main.c: 88: {
  3414                           ;main.c: 89: I2C_buffer.data.DISTANCE++;
  3415  0017  3001               	movlw	1
  3416  0018  0021               	movlb	1	; select bank1
  3417  0019  07AF               	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  3418  001A  3000               	movlw	0
  3419  001B                     L5:	
  3420  001B  3DB0               	addwfc	((_I2C_buffer+1)^(0+128)+15),f	;volatile
  3421  001C  3DB1               	addwfc	((_I2C_buffer+2)^(0+128)+15),f	;volatile
  3422  001D  3DB2               	addwfc	((_I2C_buffer+3)^(0+128)+15),f	;volatile
  3423                           
  3424                           ;main.c: 90: }
  3425                           ;main.c: 91: IOCAFbits.IOCAF4 = 0;
  3426  001E  0027               	movlb	7	; select bank7
  3427  001F  1213               	bcf	19,4	;volatile
  3428                           
  3429                           ;main.c: 92: INTCONbits.IOCIE = 1;
  3430  0020  158B               	bsf	11,3	;volatile
  3431  0021                     i1l2071:	
  3432                           
  3433                           ;main.c: 93: }
  3434                           ;main.c: 95: if (PIR1bits.TMR1IF == 1)
  3435  0021  0020               	movlb	0	; select bank0
  3436  0022  1C11               	btfss	17,0	;volatile
  3437  0023  285C               	goto	i1l2089
  3438                           
  3439                           ;main.c: 96: {
  3440                           ;main.c: 97: INTCONbits.IOCIE = 0;
  3441  0024  118B               	bcf	11,3	;volatile
  3442                           
  3443                           ;main.c: 98: T1CONbits.TMR1ON = 0;
  3444  0025  1018               	bcf	24,0	;volatile
  3445                           
  3446                           ;main.c: 99: I2C_buffer.data.RPM = (counter * 300) / I2C_buffer.data.GEAR_RATIO;
  3447  0026  0021               	movlb	1	; select bank1
  3448  0027  0828               	movf	((_I2C_buffer+1)^(0+128)+7),w	;volatile
  3449  0028  00F7               	movwf	___lwdiv@divisor+1
  3450  0029  0827               	movf	(_I2C_buffer^(0+128)+7),w	;volatile
  3451  002A  00F6               	movwf	___lwdiv@divisor
  3452  002B  0856               	movf	(_counter+1)^(0+128),w
  3453  002C  00F1               	movwf	i1___wmul@multiplier+1
  3454  002D  0855               	movf	_counter^(0+128),w
  3455  002E  00F0               	movwf	i1___wmul@multiplier
  3456  002F  302C               	movlw	44
  3457  0030  00F2               	movwf	i1___wmul@multiplicand
  3458  0031  3001               	movlw	1
  3459  0032  00F3               	movwf	i1___wmul@multiplicand+1
  3460  0033  3187  27E4  3180   	fcall	i1___wmul
  3461  0036  0871               	movf	?i1___wmul+1,w
  3462  0037  00F9               	movwf	___lwdiv@dividend+1
  3463  0038  0870               	movf	?i1___wmul,w
  3464  0039  00F8               	movwf	___lwdiv@dividend
  3465  003A  318F  2788  3180   	fcall	___lwdiv
  3466  003D  0877               	movf	?___lwdiv+1,w
  3467  003E  00AC               	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  3468  003F  0876               	movf	?___lwdiv,w
  3469  0040  00AB               	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  3470                           
  3471                           ;main.c: 100: counter = 0;
  3472  0041  01D5               	clrf	_counter^(0+128)
  3473  0042  01D6               	clrf	(_counter+1)^(0+128)
  3474                           
  3475                           ;main.c: 101: if (LATAbits.LATA0 == 0) {
  3476  0043  0022               	movlb	2	; select bank2
  3477  0044  180C               	btfsc	12,0	;volatile
  3478  0045  2858               	goto	i1l2083
  3479                           
  3480                           ;main.c: 102: I2C_buffer.data.RPM = I2C_buffer.data.RPM *-1;
  3481  0046  0021               	movlb	1	; select bank1
  3482  0047  092B               	comf	(_I2C_buffer^(0+128)+11),w	;volatile
  3483  0048  0020               	movlb	0	; select bank0
  3484  0049  00A0               	movwf	??_isr
  3485  004A  0021               	movlb	1	; select bank1
  3486  004B  092C               	comf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  3487  004C  0020               	movlb	0	; select bank0
  3488  004D  00A1               	movwf	??_isr+1
  3489  004E  0AA0               	incf	??_isr,f
  3490  004F  1903               	skipnz
  3491  0050  0AA1               	incf	??_isr+1,f
  3492  0051  0820               	movf	??_isr,w
  3493  0052  0021               	movlb	1	; select bank1
  3494  0053  00AB               	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  3495  0054  0020               	movlb	0	; select bank0
  3496  0055  0821               	movf	??_isr+1,w
  3497  0056  0021               	movlb	1	; select bank1
  3498  0057  00AC               	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  3499  0058                     i1l2083:	
  3500                           
  3501                           ;main.c: 103: }
  3502                           ;main.c: 104: INTCONbits.IOCIE = 1;
  3503  0058  158B               	bsf	11,3	;volatile
  3504                           
  3505                           ;main.c: 105: PIR1bits.TMR1IF = 0;
  3506  0059  0020               	movlb	0	; select bank0
  3507  005A  1011               	bcf	17,0	;volatile
  3508                           
  3509                           ;main.c: 106: T1CONbits.TMR1ON = 1;
  3510  005B  1418               	bsf	24,0	;volatile
  3511  005C                     i1l2089:	
  3512                           
  3513                           ;main.c: 107: }
  3514                           ;main.c: 109: static unsigned char junk = 0;
  3515                           ;main.c: 111: if (PIR1bits.SSP1IF)
  3516  005C  1D91               	btfss	17,3	;volatile
  3517  005D  28B1               	goto	i1l2149
  3518                           
  3519                           ;main.c: 112: {
  3520                           ;main.c: 113: INTCONbits.IOCIE = 0;
  3521  005E  118B               	bcf	11,3	;volatile
  3522                           
  3523                           ;main.c: 114: PIE1bits.TMR1IE = 0;
  3524  005F  0021               	movlb	1	; select bank1
  3525  0060  1011               	bcf	17,0	;volatile
  3526                           
  3527                           ;main.c: 115: if (SSP1STATbits.R_nW)
  3528  0061  0024               	movlb	4	; select bank4
  3529  0062  1D14               	btfss	20,2	;volatile
  3530  0063  2880               	goto	i1l2109
  3531                           
  3532                           ;main.c: 116: {
  3533                           ;main.c: 117: if (!SSP1STATbits.D_nA)
  3534  0064  1A94               	btfsc	20,5	;volatile
  3535  0065  2872               	goto	i1l2101
  3536                           
  3537                           ;main.c: 118: {
  3538                           ;main.c: 119: SSP1BUF = I2C_buffer.byte[index_i2c++];
  3539  0066  0020               	movlb	0	; select bank0
  3540  0067  0865               	movf	_index_i2c,w
  3541  0068  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  3542  0069  0086               	movwf	6
  3543  006A  0187               	clrf	7
  3544  006B  0801               	movf	1,w
  3545  006C  0024               	movlb	4	; select bank4
  3546  006D  0091               	movwf	17	;volatile
  3547  006E  0020               	movlb	0	; select bank0
  3548  006F  0AE5               	incf	_index_i2c,f
  3549                           
  3550                           ;main.c: 120: SSP1CON1bits.CKP = 1;
  3551  0070  0024               	movlb	4	; select bank4
  3552  0071  1615               	bsf	21,4	;volatile
  3553  0072                     i1l2101:	
  3554                           
  3555                           ;main.c: 121: }
  3556                           ;main.c: 122: if (SSP1STATbits.D_nA)
  3557  0072  1E94               	btfss	20,5	;volatile
  3558  0073  2880               	goto	i1l2109
  3559                           
  3560                           ;main.c: 123: {
  3561                           ;main.c: 124: SSP1BUF = I2C_buffer.byte[index_i2c++];
  3562  0074  0020               	movlb	0	; select bank0
  3563  0075  0865               	movf	_index_i2c,w
  3564  0076  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  3565  0077  0086               	movwf	6
  3566  0078  0187               	clrf	7
  3567  0079  0801               	movf	1,w
  3568  007A  0024               	movlb	4	; select bank4
  3569  007B  0091               	movwf	17	;volatile
  3570  007C  0020               	movlb	0	; select bank0
  3571  007D  0AE5               	incf	_index_i2c,f
  3572                           
  3573                           ;main.c: 125: SSP1CON1bits.CKP = 1;
  3574  007E  0024               	movlb	4	; select bank4
  3575  007F  1615               	bsf	21,4	;volatile
  3576  0080                     i1l2109:	
  3577                           
  3578                           ;main.c: 126: }
  3579                           ;main.c: 127: }
  3580                           ;main.c: 128: if (!SSP1STATbits.R_nW)
  3581  0080  1914               	btfsc	20,2	;volatile
  3582  0081  28AC               	goto	i1l2143
  3583                           
  3584                           ;main.c: 129: {
  3585                           ;main.c: 130: if (!SSP1STATbits.D_nA)
  3586  0082  1A94               	btfsc	20,5	;volatile
  3587  0083  288A               	goto	i1l2119
  3588                           
  3589                           ;main.c: 131: {
  3590                           ;main.c: 132: first_i2c = 1;
  3591  0084  0020               	movlb	0	; select bank0
  3592  0085  01E6               	clrf	_first_i2c
  3593  0086  0AE6               	incf	_first_i2c,f
  3594                           
  3595                           ;main.c: 133: junk = SSP1BUF;
  3596  0087  0024               	movlb	4	; select bank4
  3597  0088  0811               	movf	17,w	;volatile
  3598                           
  3599                           ;main.c: 134: SSP1CON1bits.CKP = 1;
  3600  0089  1615               	bsf	21,4	;volatile
  3601  008A                     i1l2119:	
  3602                           
  3603                           ;main.c: 135: }
  3604                           ;main.c: 136: if (SSP1STATbits.D_nA)
  3605  008A  1E94               	btfss	20,5	;volatile
  3606  008B  28AC               	goto	i1l2143
  3607                           
  3608                           ;main.c: 137: {
  3609                           ;main.c: 138: if (first_i2c) {
  3610  008C  0020               	movlb	0	; select bank0
  3611  008D  0866               	movf	_first_i2c,w
  3612  008E  1903               	btfsc	3,2
  3613  008F  2896               	goto	i1l2127
  3614                           
  3615                           ;main.c: 139: index_i2c = SSP1BUF;
  3616  0090  0024               	movlb	4	; select bank4
  3617  0091  0811               	movf	17,w	;volatile
  3618  0092  0020               	movlb	0	; select bank0
  3619  0093  00E5               	movwf	_index_i2c
  3620                           
  3621                           ;main.c: 140: first_i2c = 0;
  3622  0094  01E6               	clrf	_first_i2c
  3623                           
  3624                           ;main.c: 141: }
  3625  0095  28A6               	goto	i1l2135
  3626  0096                     i1l2127:	
  3627                           
  3628                           ;main.c: 143: else {
  3629                           ;main.c: 144: if (index_i2c < RX_ELMNTS)
  3630  0096  302B               	movlw	43
  3631  0097  0265               	subwf	_index_i2c,w
  3632  0098  1803               	skipnc
  3633  0099  28A4               	goto	i1l2133
  3634                           
  3635                           ;main.c: 145: {
  3636                           ;main.c: 146: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  3637  009A  0865               	movf	_index_i2c,w
  3638  009B  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  3639  009C  0086               	movwf	6
  3640  009D  0187               	clrf	7
  3641  009E  0024               	movlb	4	; select bank4
  3642  009F  0811               	movf	17,w	;volatile
  3643  00A0  0081               	movwf	1
  3644  00A1  0020               	movlb	0	; select bank0
  3645  00A2  0AE5               	incf	_index_i2c,f
  3646                           
  3647                           ;main.c: 147: }
  3648  00A3  28A6               	goto	i1l2135
  3649  00A4                     i1l2133:	
  3650                           
  3651                           ;main.c: 148: else {
  3652                           ;main.c: 149: junk = SSP1BUF;
  3653  00A4  0024               	movlb	4	; select bank4
  3654  00A5  0811               	movf	17,w	;volatile
  3655  00A6                     i1l2135:	
  3656                           
  3657                           ;main.c: 150: }
  3658                           ;main.c: 151: }
  3659                           ;main.c: 152: if (SSP1CON1bits.WCOL)
  3660  00A6  0024               	movlb	4	; select bank4
  3661  00A7  1F95               	btfss	21,7	;volatile
  3662  00A8  28AB               	goto	i1l2141
  3663                           
  3664                           ;main.c: 153: {
  3665                           ;main.c: 154: SSP1CON1bits.WCOL = 0;
  3666  00A9  1395               	bcf	21,7	;volatile
  3667                           
  3668                           ;main.c: 155: junk = SSP1BUF;
  3669  00AA  0811               	movf	17,w	;volatile
  3670  00AB                     i1l2141:	
  3671                           
  3672                           ;main.c: 156: }
  3673                           ;main.c: 157: SSP1CON1bits.CKP = 1;
  3674  00AB  1615               	bsf	21,4	;volatile
  3675  00AC                     i1l2143:	
  3676                           
  3677                           ;main.c: 158: }
  3678                           ;main.c: 159: }
  3679                           ;main.c: 160: PIR1bits.SSP1IF = 0;
  3680  00AC  0020               	movlb	0	; select bank0
  3681  00AD  1191               	bcf	17,3	;volatile
  3682                           
  3683                           ;main.c: 161: INTCONbits.IOCIE = 1;
  3684  00AE  158B               	bsf	11,3	;volatile
  3685                           
  3686                           ;main.c: 162: PIE1bits.TMR1IE = 1;
  3687  00AF  0021               	movlb	1	; select bank1
  3688  00B0  1411               	bsf	17,0	;volatile
  3689  00B1                     i1l2149:	
  3690                           
  3691                           ;main.c: 163: }
  3692                           ;main.c: 165: if (PIR2bits.BCL1IF)
  3693  00B1  0020               	movlb	0	; select bank0
  3694  00B2  1D92               	btfss	18,3	;volatile
  3695  00B3  28BC               	goto	i1l103
  3696                           
  3697                           ;main.c: 166: {
  3698                           ;main.c: 167: junk = SSP1BUF;
  3699  00B4  0024               	movlb	4	; select bank4
  3700  00B5  0811               	movf	17,w	;volatile
  3701                           
  3702                           ;main.c: 168: PIR2bits.BCL1IF = 0;
  3703  00B6  0020               	movlb	0	; select bank0
  3704  00B7  1192               	bcf	18,3	;volatile
  3705                           
  3706                           ;main.c: 169: SSP1CON1bits.CKP = 1;
  3707  00B8  0024               	movlb	4	; select bank4
  3708  00B9  1615               	bsf	21,4	;volatile
  3709                           
  3710                           ;main.c: 170: PIR1bits.SSP1IF = 0;
  3711  00BA  0020               	movlb	0	; select bank0
  3712  00BB  1191               	bcf	17,3	;volatile
  3713  00BC                     i1l103:	
  3714  00BC  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3715  00BD  0009               	retfie
  3716  00BE                     __end_of_isr:	
  3717                           
  3718                           	psect	text16
  3719  07E4                     __ptext16:	
  3720 ;; *************** function i1___wmul *****************
  3721 ;; Defined at:
  3722 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  multiplier      2    0[COMMON] unsigned int 
  3725 ;;  multiplicand    2    2[COMMON] unsigned int 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  __wmul          2    4[COMMON] unsigned int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  2    0[COMMON] unsigned int 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 1F/1
  3734 ;;		On exit  : 1F/1
  3735 ;;		Unchanged: 1F/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3737 ;;      Params:         4       0       0       0
  3738 ;;      Locals:         2       0       0       0
  3739 ;;      Temps:          0       0       0       0
  3740 ;;      Totals:         6       0       0       0
  3741 ;;Total ram usage:        6 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_isr
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           
  3751                           ;psect for function i1___wmul
  3752  07E4                     i1___wmul:	
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  3756  07E4  01F4               	clrf	i1___wmul@product
  3757  07E5  01F5               	clrf	i1___wmul@product+1
  3758  07E6                     i1l2039:	
  3759  07E6  1C70               	btfss	i1___wmul@multiplier,0
  3760  07E7  2FEC               	goto	i1l2043
  3761  07E8  0872               	movf	i1___wmul@multiplicand,w
  3762  07E9  07F4               	addwf	i1___wmul@product,f
  3763  07EA  0873               	movf	i1___wmul@multiplicand+1,w
  3764  07EB  3DF5               	addwfc	i1___wmul@product+1,f
  3765  07EC                     i1l2043:	
  3766  07EC  35F2               	lslf	i1___wmul@multiplicand,f
  3767  07ED  0DF3               	rlf	i1___wmul@multiplicand+1,f
  3768  07EE  36F1               	lsrf	i1___wmul@multiplier+1,f
  3769  07EF  0CF0               	rrf	i1___wmul@multiplier,f
  3770  07F0  0870               	movf	i1___wmul@multiplier,w
  3771  07F1  0471               	iorwf	i1___wmul@multiplier+1,w
  3772  07F2  1D03               	btfss	3,2
  3773  07F3  2FE6               	goto	i1l2039
  3774  07F4  0875               	movf	i1___wmul@product+1,w
  3775  07F5  00F1               	movwf	?i1___wmul+1
  3776  07F6  0874               	movf	i1___wmul@product,w
  3777  07F7  00F0               	movwf	?i1___wmul
  3778  07F8  0008               	return
  3779  07F9                     __end_ofi1___wmul:	
  3780                           
  3781                           	psect	text17
  3782  0F88                     __ptext17:	
  3783 ;; *************** function ___lwdiv *****************
  3784 ;; Defined at:
  3785 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  divisor         2    6[COMMON] unsigned int 
  3788 ;;  dividend        2    8[COMMON] unsigned int 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  quotient        2   10[COMMON] unsigned int 
  3791 ;;  counter         1   12[COMMON] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  2    6[COMMON] unsigned int 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0
  3796 ;; Tracked objects:
  3797 ;;		On entry : 1F/1
  3798 ;;		On exit  : 1F/1
  3799 ;;		Unchanged: 1F/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3801 ;;      Params:         4       0       0       0
  3802 ;;      Locals:         3       0       0       0
  3803 ;;      Temps:          0       0       0       0
  3804 ;;      Totals:         7       0       0       0
  3805 ;;Total ram usage:        7 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_isr
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           
  3815                           ;psect for function ___lwdiv
  3816  0F88                     ___lwdiv:	
  3817                           
  3818                           ;incstack = 0
  3819                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3820  0F88  01FA               	clrf	___lwdiv@quotient
  3821  0F89  01FB               	clrf	___lwdiv@quotient+1
  3822  0F8A  0876               	movf	___lwdiv@divisor,w
  3823  0F8B  0477               	iorwf	___lwdiv@divisor+1,w
  3824  0F8C  1903               	btfsc	3,2
  3825  0F8D  2FA8               	goto	i1l2033
  3826  0F8E  01FC               	clrf	___lwdiv@counter
  3827  0F8F                     L6:	
  3828  0F8F  0AFC               	incf	___lwdiv@counter,f
  3829  0F90  1BF7               	btfsc	___lwdiv@divisor+1,7
  3830  0F91  2F95               	goto	i1l2021
  3831  0F92  35F6               	lslf	___lwdiv@divisor,f
  3832  0F93  0DF7               	rlf	___lwdiv@divisor+1,f
  3833  0F94  2F8F               	goto	L6
  3834  0F95                     i1l2021:	
  3835  0F95  35FA               	lslf	___lwdiv@quotient,f
  3836  0F96  0DFB               	rlf	___lwdiv@quotient+1,f
  3837  0F97  0877               	movf	___lwdiv@divisor+1,w
  3838  0F98  0279               	subwf	___lwdiv@dividend+1,w
  3839  0F99  1D03               	skipz
  3840  0F9A  2F9D               	goto	u231_25
  3841  0F9B  0876               	movf	___lwdiv@divisor,w
  3842  0F9C  0278               	subwf	___lwdiv@dividend,w
  3843  0F9D                     u231_25:	
  3844  0F9D  1C03               	skipc
  3845  0F9E  2FA4               	goto	i1l2029
  3846  0F9F  0876               	movf	___lwdiv@divisor,w
  3847  0FA0  02F8               	subwf	___lwdiv@dividend,f
  3848  0FA1  0877               	movf	___lwdiv@divisor+1,w
  3849  0FA2  3BF9               	subwfb	___lwdiv@dividend+1,f
  3850  0FA3  147A               	bsf	___lwdiv@quotient,0
  3851  0FA4                     i1l2029:	
  3852  0FA4  36F7               	lsrf	___lwdiv@divisor+1,f
  3853  0FA5  0CF6               	rrf	___lwdiv@divisor,f
  3854  0FA6  0BFC               	decfsz	___lwdiv@counter,f
  3855  0FA7  2F95               	goto	i1l2021
  3856  0FA8                     i1l2033:	
  3857  0FA8  087B               	movf	___lwdiv@quotient+1,w
  3858  0FA9  00F7               	movwf	?___lwdiv+1
  3859  0FAA  087A               	movf	___lwdiv@quotient,w
  3860  0FAB  00F6               	movwf	?___lwdiv
  3861  0FAC  0008               	return
  3862  0FAD                     __end_of___lwdiv:	
  3863  007E                     btemp	set	126	;btemp
  3864  007E                     int$flags	set	126
  3865  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     68      71
    BANK1            80     14      69
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    ___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _main->_PID
    _PID->_calculate_pid
    _calculate_pid->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->__Umul8_16
    _M_control->___fltol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_PID
    _PID->_calculate_pid

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   15675
                                             67 BANK0      1     1      0
                                _PID
                           _PWM_Init
                       _PWM_set_duty
                    _init_I2C_buffer
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                  4     2      2   15222
                                             65 BANK0      2     2      0
                                             12 BANK1      2     0      2
                      _calculate_pid
 ---------------------------------------------------------------------------------
 (2) _calculate_pid                                       14    12      2   15008
                                             63 BANK0      2     0      2
                                              0 BANK1     12    12      0
                          _M_control
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     566
                                              2 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                              2 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3882
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3637
                                             35 BANK0     20    12      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4133
                                             10 BANK0     25    17      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            8     5      3    1419
                                              2 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     626
                                              2 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _M_control                                            3     1      2    1189
                                             12 BANK0      3     1      2
                       _PWM_set_duty
                            ___fltol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     426
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PWM_set_duty                                         4     2      2     453
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0     458
                                              0 BANK0      2     2      0
                            ___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     314
                                              6 COMMON     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID
     _calculate_pid
       _M_control
         _PWM_set_duty
         ___fltol (ARG)
         ___wmul (ARG)
       ___fladd
         ___flmul (ARG)
           __Umul8_16
       ___flge
       ___flmul
         __Umul8_16
       ___flsub
         ___fladd
           ___flmul (ARG)
             __Umul8_16
         ___flmul (ARG)
           __Umul8_16
       ___fltol
       ___xxtofl
   _PWM_Init
   _PWM_set_duty
   _init_I2C_buffer

 _isr (ROOT)
   ___lwdiv
     i1___wmul (ARG)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      99       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     44      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      E      45       8       86.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      99      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Sep 04 19:44:30 2018

             __CFG_CP$OFF 0000       ___wmul@multiplicand 0024          i1___wmul@product 0074  
     __Umul8_16@word_mpld 0028                       l124 01B2                       l505 076A  
                     l356 05C2                       l604 059B                       l358 05F0  
                     l550 03E8                       l470 069F                       l462 064D  
                     l551 03E6                       l471 06A5                       l463 064B  
                     l480 06CE                       l472 06A6                       l457 0632  
                     l554 03FE                       l490 0738                       l458 0630  
                     l555 03FC                       l572 054C                       l468 06B2  
                     l485 071F                       l479 06CD                       l592 07BF  
                     l579 078D                       _PR2 001B                       _PID 0181  
            __CFG_CPD$OFF 0000                       _isr 0004              __CFG_BORV$LO 0000  
                     wreg 0009        calculate_pid@error 00DB              ___flmul@aexp 0037  
            ___flmul@bexp 0038              ___flmul@sign 0036              ___flmul@temp 0041  
            ___flmul@prod 003D              __CFG_LVP$OFF 0000                      ?_PID 00E3  
            ___fltol@exp1 002B                      l2223 014D                      l2233 0174  
                    l2411 0766                      l2403 075A                      l2229 016E  
                    l2333 06AD                      l2415 076B                      l2351 06D6  
                    l2319 0677                      l2511 0FBC                      l2441 0573  
                    l2361 0717                      l2513 0FC1                      l2435 056B  
                    l2339 06BC                      l2531 0FE4                      l2453 0583  
                    l2429 0563                      l2381 073E                      l2447 057B  
                    l2391 0749                      l2375 0739                      l2367 072D  
                    l2527 0FDD                      l2711 07DB                      l2703 07C8  
                    l2473 0116                      l2465 0593                      l2289 0659  
                    l2537 0FE8                      l2483 0135                      l2459 058B  
                    l2635 0504                      l2387 0747                      l2379 073C  
                    l2539 0FF1                      l2715 022C                      l2477 0120  
                    l2493 05B1                      l2653 052B                      l2629 04F1  
                    l2581 040C                      l2565 03EC                      l2733 0399  
                    l2813 0105                      l2639 0506                      l2649 0518  
                    l2577 0402                      l2681 0798                      l2737 03BD  
                    l2753 01C9                      l2499 05D9                      l2659 053E  
                    l2747 01B5                      l2693 07AF                      l2685 079A  
                    l2677 0785                      l2687 07A4                      l2697 07BD  
                    l2699 07B4                      ?_isr 0070                      u3025 012A  
                    u3105 0FCA                      u2515 0156                      u3325 0521  
                    u3335 0535                      u2640 0696                      u2650 0697  
                    u2635 068B                      u3515 01AE                      u3470 018F  
                    u2743 06E8                      u3547 0110                      u3484 0191  
                    u3557 01BF                      u3495 019D                      _WPUA 020C  
            __CFG_WRT$OFF 0000                      _main 00CF                      _lset 00D3  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 00BE  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ??_PID 0061  
                   ??_isr 0020             __CFG_PLLEN$ON 0000     __size_of_PWM_set_duty 001F  
           ___fltol@sign1 002A           __end_of___fladd 0770                     ?_main 0070  
           __CFG_WDTE$OFF 0000           __end_of___flmul 0557           __end_of___flsub 061F  
         __end_of___fltol 1000                     _T1CON 0018                     _T2CON 001C  
         __end_of___lwdiv 0FAD                     i1l103 00BC                     _TRISA 008C  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000          __end_of_PWM_Init 01E3  
        __end_ofi1___wmul 07F9                     status 0003       i1___wmul@multiplier 0070  
                   wtemp0 007E              _PWM_set_duty 014D           __initialization 00C0  
            __end_of_main 0116                    ??_main 0063                    PID@set 00E3  
      __size_of_M_control 0037                    _CCPR1L 0291                    _ANSELA 018C  
                  i1l2021 0F95                    i1l2101 0072                    i1l2033 0FA8  
                  i1l2043 07EC                    i1l2029 0FA4                    i1l2141 00AB  
                  i1l2133 00A4                    i1l2109 0080                    i1l2039 07E6  
                  i1l2135 00A6                    i1l2127 0096                    i1l2119 008A  
                  i1l2143 00AC                    i1l2071 0021                    i1l2065 0017  
                  i1l2083 0058                    i1l2149 00B1                    i1l2089 005C  
                  u231_25 0F9D                    _INTCON 000B                    _OSCCON 0099  
        __end_of___xxtofl 07E4                    ___flge 05A0                 ??___fladd 004B  
                  ___wmul 016C            __CFG_STVREN$ON 0000                 ??___flmul 0032  
               ??___flsub 005F                 ??___fltol 0026                 ??___lwdiv 007A  
__size_of_init_I2C_buffer 0049        __size_of__Umul8_16 0049                ___flge@ff1 0022  
              ___flge@ff2 0026              ___xxtofl@arg 002C              ___xxtofl@exp 002B  
            ___xxtofl@val 0022   __end_of__initialization 00CC                ___fltol@f1 0022  
          __pcstackCOMMON 0070              __pidataBANK0 0000         __end_of_M_control 014D  
               ?_PWM_Init 0070                 ?i1___wmul 0070            _OPTION_REGbits 0095  
              __pbssBANK0 0065                __pbssBANK1 00A0         __end_of__Umul8_16 05A0  
              __pmaintext 00CF                   ?___flge 0022                   ?___wmul 0022  
              __pintentry 0004                   _CCP1CON 0293                ??_PWM_Init 0022  
              ??i1___wmul 0074    __size_of_calculate_pid 01A9                 ?___xxtofl 0022  
                 _SSP1ADD 0212                   _SSP1BUF 0211         ??_init_I2C_buffer 0022  
        PWM_set_duty@duty 0022           __size_of___flge 0062                   ___fladd 061F  
                 ___flmul 03D5                   ___flsub 0602                   ___fltol 0FAD  
         __size_of___wmul 0015                   ___lwdiv 0F88                   __ptext1 01E3  
                 __ptext2 01D7                   __ptext3 0181                   __ptext4 022C  
                 __ptext5 0770                   __ptext6 0FAD                   __ptext7 0602  
                 __ptext8 061F                   __ptext9 03D5              __size_of_PID 0056  
               _T1CONbits 0018                   _counter 00D5              __size_of_isr 00BA  
              ??___xxtofl 0026                 _IOCAFbits 0393                 _IOCANbits 0392  
                 clrloop0 07FA      end_of_initialization 00CC             _calculate_pid 022C  
   i1___wmul@multiplicand 0072               ___fladd@grs 0056          __CFG_FOSC$INTOSC 0000  
           ___xxtofl@sign 002A          calculate_pid@pid 00DF          calculate_pid@set 005F  
             ___flmul@grs 0039            ?_calculate_pid 005F                _zero_cross 0320  
          __end_of___flge 0602            __end_of___wmul 0181                 _M_control 0116  
           __pbitbssBANK0 0320         __size_of_PWM_Init 000C       start_initialization 00C0  
       __size_ofi1___wmul 0015               __end_of_PID 01D7               __end_of_isr 00BE  
             _accumulator 00CF                  ??___flge 002A                  ??___wmul 0026  
               __Umul8_16 0557               __pdataBANK0 0066                ?_M_control 002C  
         _init_I2C_buffer 01E3                 ___fladd@a 0047                 ___fladd@b 0043  
               ___flmul@a 002E                 ___flmul@b 002A                 ___flsub@a 0057  
               ___flsub@b 005B                 ___latbits 0001             __pcstackBANK0 0020  
           __pcstackBANK1 00D7         __size_of___xxtofl 0074           ??_calculate_pid 0061  
           ?_PWM_set_duty 0022          ___lwdiv@dividend 0078        _calculate_pid$1068 00D7  
                ?___fladd 0043                  ?___flmul 002A                  ?___flsub 0057  
                ?___fltol 0022                ?__Umul8_16 0022                  ?___lwdiv 0076  
               _first_i2c 0066                 _index_i2c 0065          ___lwdiv@quotient 007A  
               _lasterror 00CB            ___wmul@product 0026                  _LATAbits 010C  
               clear_ram0 07F9                  _PIE1bits 0091                  _PIE2bits 0092  
          ??_PWM_set_duty 0024                  _PIR1bits 0011                  _PIR2bits 0012  
 __end_of_init_I2C_buffer 022C                  _SSP1CON1 0215                  _SSP1STAT 0214  
             ??_M_control 002E                  _PWM_Init 01D7         ___wmul@multiplier 0022  
                i1___wmul 07E4                _I2C_buffer 00A0                _APFCONbits 011D  
             ??__Umul8_16 0025          __size_of___fladd 0151          __size_of___flmul 0182  
        __size_of___flsub 001D          __size_of___fltol 0053          __size_of___lwdiv 0025  
                ___xxtofl 0770           ___lwdiv@divisor 0076           ___lwdiv@counter 007C  
                __ptext10 0557                  __ptext11 05A0                  __ptext12 0116  
                __ptext13 016C                  __ptext14 014D                  __ptext16 07E4  
                __ptext17 0F88              _SSP1CON1bits 0215              _SSP1CON2bits 0216  
            _SSP1CON3bits 0217             __size_of_main 0047          ?_init_I2C_buffer 0070  
                int$flags 007E              _SSP1STATbits 0214                _INTCONbits 000B  
    __end_of_PWM_set_duty 016C                  intlevel1 0000         __CFG_CLKOUTEN$OFF 0000  
  __Umul8_16@multiplicand 0022             ___fladd@signs 0053              ___fladd@aexp 0054  
            ___fladd@bexp 0055              M_control@ctr 002C     __end_of_calculate_pid 03D5  
    __Umul8_16@multiplier 0027         __Umul8_16@product 0025  
