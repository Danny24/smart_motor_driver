

Microchip Technology PIC PRO Macro Assembler V1.43 build -156212558 
                                                                                               Wed Jul 11 15:05:49 2018

Microchip Technology Omniscient Code Generator v1.43 (PRO mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	pa_nodes0,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.43
    35                           ; Generated 25/07/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC12F1822 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  018C                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0216                     	;# 
   154  0216                     	;# 
   155  0217                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0391                     	;# 
   166  0392                     	;# 
   167  0393                     	;# 
   168  039A                     	;# 
   169  039C                     	;# 
   170  039D                     	;# 
   171  039E                     	;# 
   172  039F                     	;# 
   173  0FE4                     	;# 
   174  0FE5                     	;# 
   175  0FE6                     	;# 
   176  0FE7                     	;# 
   177  0FE8                     	;# 
   178  0FE9                     	;# 
   179  0FEA                     	;# 
   180  0FEB                     	;# 
   181  0FED                     	;# 
   182  0FEE                     	;# 
   183  0FEF                     	;# 
   184                           
   185                           	psect	stringtext1
   186  05A6                     __pstringtext1:	
   187  05A6                     _gear:	
   188  05A6  3496               	retlw	150
   189  05A7  3400               	retlw	0
   190  05A8                     __end_of_gear:	
   191  0018                     _T1CON	set	24
   192  000B                     _INTCON	set	11
   193  001C                     _T2CON	set	28
   194  001B                     _PR2	set	27
   195  0018                     _T1CONbits	set	24
   196  0011                     _PIR1bits	set	17
   197  000B                     _INTCONbits	set	11
   198  0091                     _PIE1bits	set	145
   199  0095                     _OPTION_REGbits	set	149
   200  008C                     _TRISA	set	140
   201  0099                     _OSCCON	set	153
   202  011D                     _APFCONbits	set	285
   203  010C                     _LATAbits	set	268
   204  018C                     _ANSELA	set	396
   205  020C                     _WPUA	set	524
   206  0291                     _CCPR1L	set	657
   207  0293                     _CCP1CON	set	659
   208  0392                     _IOCANbits	set	914
   209  0393                     _IOCAFbits	set	915
   210                           
   211                           ; #config settings
   212  0000                     
   213                           	psect	cinit
   214  004F                     start_initialization:	
   215  004F                     __initialization:	
   216                           
   217                           ; Clear objects allocated to BITBANK0
   218  004F  0020               	movlb	0	; select bank0
   219  0050  30A0               	movlw	low __pbssBANK1
   220  0051  01EE               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   221                           
   222                           ; Clear objects allocated to BANK1
   223  0052  0084               	movwf	4
   224  0053  3000               	movlw	high __pbssBANK1
   225  0054  0085               	movwf	5
   226  0055  300E               	movlw	14
   227  0056  25A0               	fcall	clear_ram0
   228  0057                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  0057                     __end_of__initialization:	
   232  0057  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   233  0058  0020               	movlb	0
   234  0059  2C17               	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bitbssBANK0
   237  0370                     __pbitbssBANK0:	
   238  0370                     _zero_cross:	
   239  0370                     	ds	1
   240                           
   241                           	psect	bssBANK1
   242  00A0                     __pbssBANK1:	
   243  00A0                     _lasterror:	
   244  00A0                     	ds	3
   245  00A3                     _accumulator:	
   246  00A3                     	ds	3
   247  00A6                     _lset:	
   248  00A6                     	ds	2
   249  00A8                     _rpm:	
   250  00A8                     	ds	2
   251  00AA                     _steps:	
   252  00AA                     	ds	2
   253  00AC                     _counter:	
   254  00AC                     	ds	2
   255                           
   256                           	psect	clrtext
   257  05A0                     clear_ram0:	
   258                           ;	Called with FSR0 containing the base address, and
   259                           ;	WREG with the size to clear
   260                           
   261  05A0  0064               	clrwdt	;clear the watchdog before getting into this loop
   262  05A1                     clrloop0:	
   263  05A1  0180               	clrf	0	;clear RAM location pointed to by FSR
   264  05A2  3101               	addfsr 0,1
   265  05A3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   266  05A4  2DA1               	goto	clrloop0	;have we reached the end yet?
   267  05A5  3400               	retlw	0	;all done for this memory range, return
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:	
   271  0070                     ?_isr:	
   272  0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_PWM_Init:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?i1___wmul:	
   279                           ; 2 bytes @ 0x0
   280                           
   281  0070                     i1___wmul@multiplier:	
   282                           ; 2 bytes @ 0x0
   283                           
   284                           
   285                           ; 2 bytes @ 0x0
   286  0070                     	ds	2
   287  0072                     i1___wmul@multiplicand:	
   288                           
   289                           ; 2 bytes @ 0x2
   290  0072                     	ds	2
   291  0074                     ??i1___wmul:	
   292  0074                     i1___wmul@product:	
   293                           ; 1 bytes @ 0x4
   294                           
   295                           
   296                           ; 2 bytes @ 0x4
   297  0074                     	ds	2
   298  0076                     ?___lwdiv:	
   299  0076                     ___lwdiv@divisor:	
   300                           ; 2 bytes @ 0x6
   301                           
   302                           
   303                           ; 2 bytes @ 0x6
   304  0076                     	ds	2
   305  0078                     ___lwdiv@dividend:	
   306                           
   307                           ; 2 bytes @ 0x8
   308  0078                     	ds	2
   309  007A                     ??___lwdiv:	
   310  007A                     ___lwdiv@counter:	
   311                           ; 1 bytes @ 0xA
   312                           
   313                           
   314                           ; 1 bytes @ 0xA
   315  007A                     	ds	1
   316  007B                     ___lwdiv@quotient:	
   317                           
   318                           ; 2 bytes @ 0xB
   319  007B                     	ds	2
   320  007D                     ??_isr:	
   321                           
   322                           	psect	cstackBANK0
   323  0020                     __pcstackBANK0:	
   324                           ; 1 bytes @ 0xD
   325                           
   326  0020                     ?___ftge:	
   327  0020                     ??_PWM_Init:	
   328                           ; 1 bit 
   329                           
   330  0020                     ?_PWM_set_duty:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0020                     ?___wmul:	
   334                           ; 2 bytes @ 0x0
   335                           
   336  0020                     ?___ftpack:	
   337                           ; 2 bytes @ 0x0
   338                           
   339  0020                     PWM_set_duty@duty:	
   340                           ; 3 bytes @ 0x0
   341                           
   342  0020                     ___wmul@multiplier:	
   343                           ; 2 bytes @ 0x0
   344                           
   345  0020                     ___ftpack@arg:	
   346                           ; 2 bytes @ 0x0
   347                           
   348  0020                     ___ftge@ff1:	
   349                           ; 3 bytes @ 0x0
   350                           
   351                           
   352                           ; 3 bytes @ 0x0
   353  0020                     	ds	2
   354  0022                     ??_PWM_set_duty:	
   355  0022                     ___wmul@multiplicand:	
   356                           ; 1 bytes @ 0x2
   357                           
   358                           
   359                           ; 2 bytes @ 0x2
   360  0022                     	ds	1
   361  0023                     ___ftpack@exp:	
   362  0023                     ___ftge@ff2:	
   363                           ; 1 bytes @ 0x3
   364                           
   365                           
   366                           ; 3 bytes @ 0x3
   367  0023                     	ds	1
   368  0024                     ??___wmul:	
   369  0024                     ___ftpack@sign:	
   370                           ; 1 bytes @ 0x4
   371                           
   372  0024                     ___wmul@product:	
   373                           ; 1 bytes @ 0x4
   374                           
   375                           
   376                           ; 2 bytes @ 0x4
   377  0024                     	ds	1
   378  0025                     ??___ftpack:	
   379                           
   380                           ; 1 bytes @ 0x5
   381  0025                     	ds	1
   382  0026                     ??___ftge:	
   383                           
   384                           ; 1 bytes @ 0x6
   385  0026                     	ds	2
   386  0028                     ?___awtoft:	
   387  0028                     ?___lwtoft:	
   388                           ; 3 bytes @ 0x8
   389                           
   390  0028                     ___awtoft@c:	
   391                           ; 3 bytes @ 0x8
   392                           
   393  0028                     ___lwtoft@c:	
   394                           ; 2 bytes @ 0x8
   395                           
   396                           
   397                           ; 2 bytes @ 0x8
   398  0028                     	ds	3
   399  002B                     ??___awtoft:	
   400  002B                     ??___lwtoft:	
   401                           ; 1 bytes @ 0xB
   402                           
   403  002B                     ?___ftdiv:	
   404                           ; 1 bytes @ 0xB
   405                           
   406  002B                     ___awtoft@sign:	
   407                           ; 3 bytes @ 0xB
   408                           
   409  002B                     ___ftdiv@f2:	
   410                           ; 1 bytes @ 0xB
   411                           
   412                           
   413                           ; 3 bytes @ 0xB
   414  002B                     	ds	3
   415  002E                     ___ftdiv@f1:	
   416                           
   417                           ; 3 bytes @ 0xE
   418  002E                     	ds	3
   419  0031                     ??___ftdiv:	
   420                           
   421                           ; 1 bytes @ 0x11
   422  0031                     	ds	3
   423  0034                     ___ftdiv@cntr:	
   424                           
   425                           ; 1 bytes @ 0x14
   426  0034                     	ds	1
   427  0035                     ___ftdiv@f3:	
   428                           
   429                           ; 3 bytes @ 0x15
   430  0035                     	ds	3
   431  0038                     ___ftdiv@exp:	
   432                           
   433                           ; 1 bytes @ 0x18
   434  0038                     	ds	1
   435  0039                     ___ftdiv@sign:	
   436                           
   437                           ; 1 bytes @ 0x19
   438  0039                     	ds	1
   439  003A                     ?___ftmul:	
   440  003A                     ___ftmul@f1:	
   441                           ; 3 bytes @ 0x1A
   442                           
   443                           
   444                           ; 3 bytes @ 0x1A
   445  003A                     	ds	3
   446  003D                     ___ftmul@f2:	
   447                           
   448                           ; 3 bytes @ 0x1D
   449  003D                     	ds	3
   450  0040                     ??___ftmul:	
   451                           
   452                           ; 1 bytes @ 0x20
   453  0040                     	ds	3
   454  0043                     ___ftmul@exp:	
   455                           
   456                           ; 1 bytes @ 0x23
   457  0043                     	ds	1
   458  0044                     ___ftmul@f3_as_product:	
   459                           
   460                           ; 3 bytes @ 0x24
   461  0044                     	ds	3
   462  0047                     ___ftmul@cntr:	
   463                           
   464                           ; 1 bytes @ 0x27
   465  0047                     	ds	1
   466  0048                     ___ftmul@sign:	
   467                           
   468                           ; 1 bytes @ 0x28
   469  0048                     	ds	1
   470  0049                     ?___ftadd:	
   471  0049                     ?___fttol:	
   472                           ; 3 bytes @ 0x29
   473                           
   474  0049                     ___ftadd@f1:	
   475                           ; 4 bytes @ 0x29
   476                           
   477  0049                     ___fttol@f1:	
   478                           ; 3 bytes @ 0x29
   479                           
   480                           
   481                           ; 3 bytes @ 0x29
   482  0049                     	ds	3
   483  004C                     ___ftadd@f2:	
   484                           
   485                           ; 3 bytes @ 0x2C
   486  004C                     	ds	1
   487  004D                     ??___fttol:	
   488                           
   489                           ; 1 bytes @ 0x2D
   490  004D                     	ds	2
   491  004F                     ??___ftadd:	
   492                           
   493                           ; 1 bytes @ 0x2F
   494  004F                     	ds	1
   495  0050                     ___fttol@sign1:	
   496                           
   497                           ; 1 bytes @ 0x30
   498  0050                     	ds	1
   499  0051                     ___fttol@lval:	
   500                           
   501                           ; 4 bytes @ 0x31
   502  0051                     	ds	1
   503  0052                     ___ftadd@sign:	
   504                           
   505                           ; 1 bytes @ 0x32
   506  0052                     	ds	1
   507  0053                     ___ftadd@exp2:	
   508                           
   509                           ; 1 bytes @ 0x33
   510  0053                     	ds	1
   511  0054                     ___ftadd@exp1:	
   512                           
   513                           ; 1 bytes @ 0x34
   514  0054                     	ds	1
   515  0055                     ?___ftsub:	
   516  0055                     ___fttol@exp1:	
   517                           ; 3 bytes @ 0x35
   518                           
   519  0055                     ___ftsub@f2:	
   520                           ; 1 bytes @ 0x35
   521                           
   522                           
   523                           ; 3 bytes @ 0x35
   524  0055                     	ds	1
   525  0056                     ?_M_control:	
   526  0056                     ?_auto_stop:	
   527                           ; 1 bytes @ 0x36
   528                           
   529  0056                     M_control@ctr:	
   530                           ; 1 bytes @ 0x36
   531                           
   532  0056                     auto_stop@distance:	
   533                           ; 2 bytes @ 0x36
   534                           
   535                           
   536                           ; 2 bytes @ 0x36
   537  0056                     	ds	2
   538  0058                     ??_M_control:	
   539  0058                     ??_auto_stop:	
   540                           ; 1 bytes @ 0x38
   541                           
   542  0058                     ___ftsub@f1:	
   543                           ; 1 bytes @ 0x38
   544                           
   545                           
   546                           ; 3 bytes @ 0x38
   547  0058                     	ds	3
   548  005B                     ?_calculate_pid:	
   549  005B                     ??___ftsub:	
   550                           ; 1 bytes @ 0x3B
   551                           
   552  005B                     calculate_pid@set:	
   553                           ; 1 bytes @ 0x3B
   554                           
   555                           
   556                           ; 2 bytes @ 0x3B
   557  005B                     	ds	2
   558  005D                     ??_calculate_pid:	
   559                           
   560                           ; 1 bytes @ 0x3D
   561  005D                     	ds	1
   562  005E                     _calculate_pid$766:	
   563                           
   564                           ; 3 bytes @ 0x3E
   565  005E                     	ds	3
   566  0061                     calculate_pid@rpm2:	
   567                           
   568                           ; 2 bytes @ 0x41
   569  0061                     	ds	2
   570  0063                     calculate_pid@error:	
   571                           
   572                           ; 3 bytes @ 0x43
   573  0063                     	ds	3
   574  0066                     calculate_pid@pid:	
   575                           
   576                           ; 3 bytes @ 0x46
   577  0066                     	ds	3
   578  0069                     ?_PID:	
   579  0069                     PID@set:	
   580                           ; 1 bytes @ 0x49
   581                           
   582                           
   583                           ; 2 bytes @ 0x49
   584  0069                     	ds	2
   585  006B                     ??_PID:	
   586                           
   587                           ; 1 bytes @ 0x4B
   588  006B                     	ds	2
   589  006D                     ??_main:	
   590                           
   591                           ; 1 bytes @ 0x4D
   592  006D                     	ds	1
   593                           
   594                           	psect	maintext
   595  0417                     __pmaintext:	
   596 ;;
   597 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   598 ;;
   599 ;; *************** function _main *****************
   600 ;; Defined at:
   601 ;;		line 215 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, pclath, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : B1F/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMMON   BANK0   BANK1
   615 ;;      Params:         0       0       0
   616 ;;      Locals:         0       0       0
   617 ;;      Temps:          0       1       0
   618 ;;      Totals:         0       1       0
   619 ;;Total ram usage:        1 bytes
   620 ;; Hardware stack levels required when called:    7
   621 ;; This function calls:
   622 ;;		_M_control
   623 ;;		_PID
   624 ;;		_PWM_Init
   625 ;;		_PWM_set_duty
   626 ;;		_auto_stop
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _main
   634  0417                     _main:	
   635                           
   636                           ;main.c: 217: OSCCON = 0b11110000;
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   640  0417  30F0               	movlw	240
   641  0418  0021               	movlb	1	; select bank1
   642  0419  0099               	movwf	25	;volatile
   643                           
   644                           ;main.c: 218: TRISA = 0b00011000;
   645  041A  3018               	movlw	24
   646  041B  008C               	movwf	12	;volatile
   647                           
   648                           ;main.c: 219: ANSELA = 0b00000000;
   649  041C  0023               	movlb	3	; select bank3
   650  041D  018C               	clrf	12	;volatile
   651                           
   652                           ;main.c: 220: WPUA = 0b00011110;
   653  041E  301E               	movlw	30
   654  041F  0024               	movlb	4	; select bank4
   655  0420  008C               	movwf	12	;volatile
   656                           
   657                           ;main.c: 221: OPTION_REGbits.nWPUEN = 0;
   658  0421  0021               	movlb	1	; select bank1
   659  0422  1395               	bcf	21,7	;volatile
   660                           
   661                           ;main.c: 222: APFCONbits.CCP1SEL = 1;
   662  0423  0022               	movlb	2	; select bank2
   663  0424  141D               	bsf	29,0	;volatile
   664                           
   665                           ;main.c: 223: LATAbits.LATA0 = 0;
   666  0425  100C               	bcf	12,0	;volatile
   667                           
   668                           ;main.c: 224: PWM_Init();
   669  0426  2594               	fcall	_PWM_Init
   670                           
   671                           ;main.c: 225: PWM_set_duty(0);
   672  0427  01A0               	clrf	PWM_set_duty@duty
   673  0428  01A1               	clrf	PWM_set_duty@duty+1
   674  0429  2505               	fcall	_PWM_set_duty
   675                           
   676                           ;main.c: 226: IOCANbits.IOCAN4 = 1;
   677  042A  0027               	movlb	7	; select bank7
   678  042B  1612               	bsf	18,4	;volatile
   679                           
   680                           ;main.c: 227: INTCON = 0b01001000;
   681  042C  3048               	movlw	72
   682  042D  008B               	movwf	11	;volatile
   683                           
   684                           ;main.c: 228: T1CON = 0b00110100;
   685  042E  3034               	movlw	52
   686  042F  0020               	movlb	0	; select bank0
   687  0430  0098               	movwf	24	;volatile
   688                           
   689                           ;main.c: 229: PIE1bits.TMR1IE = 1;
   690  0431  0021               	movlb	1	; select bank1
   691  0432  1411               	bsf	17,0	;volatile
   692                           
   693                           ;main.c: 230: T1CONbits.TMR1ON = 1;
   694  0433  0020               	movlb	0	; select bank0
   695  0434  1418               	bsf	24,0	;volatile
   696                           
   697                           ;main.c: 231: INTCONbits.GIE = 1;
   698  0435  178B               	bsf	11,7	;volatile
   699                           
   700                           ;main.c: 245: auto_stop(132);
   701  0436  3084               	movlw	132
   702  0437  00D6               	movwf	auto_stop@distance
   703  0438  01D7               	clrf	auto_stop@distance+1
   704  0439  2487               	fcall	_auto_stop
   705  043A                     l2083:	
   706                           ;main.c: 246: while(steps != 0)
   707                           
   708  043A  0021               	movlb	1	; select bank1
   709  043B  082A               	movf	_steps^(0+128),w
   710  043C  042B               	iorwf	(_steps+1)^(0+128),w
   711  043D  1903               	btfsc	3,2
   712  043E  2C4E               	goto	l2085
   713                           
   714                           ;main.c: 247: {
   715                           ;main.c: 248: PID(50);
   716  043F  3032               	movlw	50
   717  0440  0020               	movlb	0	; select bank0
   718  0441  00E9               	movwf	PID@set
   719  0442  01EA               	clrf	PID@set+1
   720  0443  2387               	fcall	_PID
   721                           
   722                           ;main.c: 249: _delay((unsigned long)((10)*(32000000/4000.0)));
   723  0444  3068               	movlw	104
   724  0445  0020               	movlb	0	; select bank0
   725  0446  00ED               	movwf	??_main
   726  0447  30E4               	movlw	228
   727  0448                     u2447:	
   728  0448  0B89               	decfsz	9,f
   729  0449  2C48               	goto	u2447
   730  044A  0BED               	decfsz	??_main,f
   731  044B  2C48               	goto	u2447
   732  044C  0000               	nop
   733  044D  2C3A               	goto	l2083
   734  044E                     l2085:	
   735                           
   736                           ;main.c: 252: {
   737                           ;main.c: 253: M_control(0);
   738  044E  0020               	movlb	0	; select bank0
   739  044F  01D6               	clrf	M_control@ctr
   740  0450  01D7               	clrf	M_control@ctr+1
   741  0451  2453               	fcall	_M_control
   742  0452  2C4E               	goto	l2085
   743  0453                     __end_of_main:	
   744                           
   745                           	psect	text1
   746  0487                     __ptext1:	
   747 ;; *************** function _auto_stop *****************
   748 ;; Defined at:
   749 ;;		line 208 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  distance        2   54[BANK0 ] unsigned int 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 1F/0
   760 ;;		On exit  : 1F/1
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1
   763 ;;      Params:         0       2       0
   764 ;;      Locals:         0       0       0
   765 ;;      Temps:          0       0       0
   766 ;;      Totals:         0       2       0
   767 ;;Total ram usage:        2 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    4
   770 ;; This function calls:
   771 ;;		___ftdiv
   772 ;;		___ftmul
   773 ;;		___fttol
   774 ;;		___lwtoft
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _auto_stop
   782  0487                     _auto_stop:	
   783                           
   784                           ;main.c: 210: steps = (unsigned int)(3*(float)gear*((float)distance/(3.1416*(float)diame
      +                          ter)));
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _auto_stop: [wreg+status,2+status,0+pclath+cstack]
   788  0487  0857               	movf	auto_stop@distance+1,w
   789  0488  00A9               	movwf	___lwtoft@c+1
   790  0489  0856               	movf	auto_stop@distance,w
   791  048A  00A8               	movwf	___lwtoft@c
   792  048B  2584               	fcall	___lwtoft
   793  048C  0828               	movf	?___lwtoft,w
   794  048D  00AE               	movwf	___ftdiv@f1
   795  048E  0829               	movf	?___lwtoft+1,w
   796  048F  00AF               	movwf	___ftdiv@f1+1
   797  0490  082A               	movf	?___lwtoft+2,w
   798  0491  00B0               	movwf	___ftdiv@f1+2
   799  0492  30F2               	movlw	242
   800  0493  00AB               	movwf	___ftdiv@f2
   801  0494  3003               	movlw	3
   802  0495  00AC               	movwf	___ftdiv@f2+1
   803  0496  3043               	movlw	67
   804  0497  00AD               	movwf	___ftdiv@f2+2
   805  0498  22C8               	fcall	___ftdiv
   806  0499  082B               	movf	?___ftdiv,w
   807  049A  00BD               	movwf	___ftmul@f2
   808  049B  082C               	movf	?___ftdiv+1,w
   809  049C  00BE               	movwf	___ftmul@f2+1
   810  049D  082D               	movf	?___ftdiv+2,w
   811  049E  00BF               	movwf	___ftmul@f2+2
   812  049F  30E1               	movlw	225
   813  04A0  01BA               	clrf	___ftmul@f1
   814  04A1  00BB               	movwf	___ftmul@f1+1
   815  04A2  3043               	movlw	67
   816  04A3  00BC               	movwf	___ftmul@f1+2
   817  04A4  225E               	fcall	___ftmul
   818  04A5  083A               	movf	?___ftmul,w
   819  04A6  00C9               	movwf	___fttol@f1
   820  04A7  083B               	movf	?___ftmul+1,w
   821  04A8  00CA               	movwf	___fttol@f1+1
   822  04A9  083C               	movf	?___ftmul+2,w
   823  04AA  00CB               	movwf	___fttol@f1+2
   824  04AB  232A               	fcall	___fttol
   825  04AC  084A               	movf	?___fttol+1,w
   826  04AD  0021               	movlb	1	; select bank1
   827  04AE  00AB               	movwf	(_steps+1)^(0+128)
   828  04AF  0020               	movlb	0	; select bank0
   829  04B0  0849               	movf	?___fttol,w
   830  04B1  0021               	movlb	1	; select bank1
   831  04B2  00AA               	movwf	_steps^(0+128)
   832  04B3  0008               	return
   833  04B4                     __end_of_auto_stop:	
   834                           
   835                           	psect	text2
   836  0584                     __ptext2:	
   837 ;; *************** function ___lwtoft *****************
   838 ;; Defined at:
   839 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwtoft.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  c               2    8[BANK0 ] unsigned int 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  3    8[BANK0 ] float 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 1F/0
   850 ;;		On exit  : 1F/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1
   853 ;;      Params:         0       3       0
   854 ;;      Locals:         0       0       0
   855 ;;      Temps:          0       0       0
   856 ;;      Totals:         0       3       0
   857 ;;Total ram usage:        3 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    3
   860 ;; This function calls:
   861 ;;		___ftpack
   862 ;; This function is called by:
   863 ;;		_auto_stop
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function ___lwtoft
   869  0584                     ___lwtoft:	
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   873  0584  0828               	movf	___lwtoft@c,w
   874  0585  00A0               	movwf	___ftpack@arg
   875  0586  0829               	movf	___lwtoft@c+1,w
   876  0587  00A1               	movwf	___ftpack@arg+1
   877  0588  308E               	movlw	142
   878  0589  01A2               	clrf	___ftpack@arg+2
   879  058A  00A3               	movwf	___ftpack@exp
   880  058B  01A4               	clrf	___ftpack@sign
   881  058C  23D9               	fcall	___ftpack
   882  058D  0820               	movf	?___ftpack,w
   883  058E  00A8               	movwf	?___lwtoft
   884  058F  0821               	movf	?___ftpack+1,w
   885  0590  00A9               	movwf	?___lwtoft+1
   886  0591  0822               	movf	?___ftpack+2,w
   887  0592  00AA               	movwf	?___lwtoft+2
   888  0593  0008               	return
   889  0594                     __end_of___lwtoft:	
   890                           
   891                           	psect	text3
   892  0594                     __ptext3:	
   893 ;; *************** function _PWM_Init *****************
   894 ;; Defined at:
   895 ;;		line 85 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2   75[None  ] int 
   902 ;; Registers used:
   903 ;;		wreg, status,2
   904 ;; Tracked objects:
   905 ;;		On entry : B1F/2
   906 ;;		On exit  : B1F/0
   907 ;;		Unchanged: B00/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1
   909 ;;      Params:         0       0       0
   910 ;;      Locals:         0       0       0
   911 ;;      Temps:          0       0       0
   912 ;;      Totals:         0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    2
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _PWM_Init
   925  0594                     _PWM_Init:	
   926                           
   927                           ;main.c: 106: PR2 = 0xFF;
   928                           
   929                           ;incstack = 0
   930                           ; Regs used in _PWM_Init: [wreg+status,2]
   931  0594  30FF               	movlw	255
   932  0595  0020               	movlb	0	; select bank0
   933  0596  009B               	movwf	27	;volatile
   934                           
   935                           ;main.c: 107: CCP1CON = 0b00001100;
   936  0597  300C               	movlw	12
   937  0598  0025               	movlb	5	; select bank5
   938  0599  0093               	movwf	19	;volatile
   939                           
   940                           ;main.c: 108: CCPR1L = 0b00000000;
   941  059A  0191               	clrf	17	;volatile
   942                           
   943                           ;main.c: 109: PIR1bits.TMR2IF = 0;
   944  059B  0020               	movlb	0	; select bank0
   945  059C  1091               	bcf	17,1	;volatile
   946                           
   947                           ;main.c: 110: T2CON = 0b00000100;
   948  059D  3004               	movlw	4
   949  059E  009C               	movwf	28	;volatile
   950  059F  0008               	return
   951  05A0                     __end_of_PWM_Init:	
   952                           
   953                           	psect	text4
   954  0387                     __ptext4:	
   955 ;; *************** function _PID *****************
   956 ;; Defined at:
   957 ;;		line 188 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  set             2   73[BANK0 ] int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 1F/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1
   971 ;;      Params:         0       2       0
   972 ;;      Locals:         0       0       0
   973 ;;      Temps:          0       2       0
   974 ;;      Totals:         0       4       0
   975 ;;Total ram usage:        4 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    6
   978 ;; This function calls:
   979 ;;		_calculate_pid
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           
   986                           ;psect for function _PID
   987  0387                     _PID:	
   988                           
   989                           ;main.c: 190: zero_cross = ((lset^set) < 0);
   990                           
   991                           ;incstack = 0
   992                           ; Regs used in _PID: [wreg+status,2+status,0+pclath+cstack]
   993  0387  0869               	movf	PID@set,w
   994  0388  0021               	movlb	1	; select bank1
   995  0389  0626               	xorwf	_lset^(0+128),w
   996  038A  0020               	movlb	0	; select bank0
   997  038B  00EB               	movwf	??_PID
   998  038C  086A               	movf	PID@set+1,w
   999  038D  0021               	movlb	1	; select bank1
  1000  038E  0627               	xorwf	(_lset+1)^(0+128),w
  1001  038F  0020               	movlb	0	; select bank0
  1002  0390  00EC               	movwf	??_PID+1
  1003  0391  1FEC               	btfss	??_PID+1,7
  1004  0392  2B96               	goto	u2250
  1005  0393  0020               	movlb	0	; select bank0
  1006  0394  146E               	bsf	_zero_cross/(0+8),_zero_cross& (0+7)
  1007  0395  2B98               	goto	u2264
  1008  0396                     u2250:	
  1009  0396  0020               	movlb	0	; select bank0
  1010  0397  106E               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
  1011  0398                     u2264:	
  1012                           
  1013                           ;main.c: 191: if (((zero_cross == 1) &(set <= 0) & (lset <= 0)))
  1014  0398  086A               	movf	PID@set+1,w
  1015  0399  3A80               	xorlw	128
  1016  039A  00EB               	movwf	??_PID
  1017  039B  3080               	movlw	128
  1018  039C  026B               	subwf	??_PID,w
  1019  039D  1D03               	skipz
  1020  039E  2BA1               	goto	u2275
  1021  039F  3001               	movlw	1
  1022  03A0  0269               	subwf	PID@set,w
  1023  03A1                     u2275:	
  1024  03A1  1803               	skipnc
  1025  03A2  2BB6               	goto	l98
  1026  03A3  0020               	movlb	0	; select bank0
  1027  03A4  1C6E               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
  1028  03A5  2BB6               	goto	l98
  1029  03A6  0021               	movlb	1	; select bank1
  1030  03A7  0827               	movf	(_lset+1)^(0+128),w
  1031  03A8  3A80               	xorlw	128
  1032  03A9  0020               	movlb	0	; select bank0
  1033  03AA  00EB               	movwf	??_PID
  1034  03AB  3080               	movlw	128
  1035  03AC  026B               	subwf	??_PID,w
  1036  03AD  1D03               	skipz
  1037  03AE  2BB2               	goto	u2295
  1038  03AF  3001               	movlw	1
  1039  03B0  0021               	movlb	1	; select bank1
  1040  03B1  0226               	subwf	_lset^(0+128),w
  1041  03B2                     u2295:	
  1042  03B2  1803               	skipnc
  1043  03B3  2BB6               	goto	l98
  1044                           
  1045                           ;main.c: 192: {
  1046                           ;main.c: 193: zero_cross = 0;
  1047  03B4  0020               	movlb	0	; select bank0
  1048  03B5  106E               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
  1049  03B6                     l98:	
  1050                           
  1051                           ;main.c: 194: }
  1052                           ;main.c: 195: if (zero_cross == 1)
  1053  03B6  0020               	movlb	0	; select bank0
  1054  03B7  1C6E               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
  1055  03B8  2BCB               	goto	l1967
  1056  03B9                     l1961:	
  1057                           
  1058                           ;main.c: 198: {
  1059                           ;main.c: 199: calculate_pid(0);
  1060  03B9  0020               	movlb	0	; select bank0
  1061  03BA  01DB               	clrf	calculate_pid@set
  1062  03BB  01DC               	clrf	calculate_pid@set+1
  1063  03BC  205A               	fcall	_calculate_pid
  1064                           
  1065                           ;main.c: 200: _delay((unsigned long)((10)*(32000000/4000.0)));
  1066  03BD  3068               	movlw	104
  1067  03BE  0020               	movlb	0	; select bank0
  1068  03BF  00EB               	movwf	??_PID
  1069  03C0  30E4               	movlw	228
  1070  03C1                     u2457:	
  1071  03C1  0B89               	decfsz	9,f
  1072  03C2  2BC1               	goto	u2457
  1073  03C3  0BEB               	decfsz	??_PID,f
  1074  03C4  2BC1               	goto	u2457
  1075  03C5  0000               	nop
  1076                           
  1077                           ;main.c: 201: }
  1078                           ;main.c: 202: while ((rpm != 0));
  1079  03C6  0021               	movlb	1	; select bank1
  1080  03C7  0828               	movf	_rpm^(0+128),w
  1081  03C8  0429               	iorwf	(_rpm+1)^(0+128),w
  1082  03C9  1D03               	btfss	3,2
  1083  03CA  2BB9               	goto	l1961
  1084  03CB                     l1967:	
  1085                           
  1086                           ;main.c: 203: }
  1087                           ;main.c: 204: lset = set;
  1088  03CB  0020               	movlb	0	; select bank0
  1089  03CC  086A               	movf	PID@set+1,w
  1090  03CD  0021               	movlb	1	; select bank1
  1091  03CE  00A7               	movwf	(_lset+1)^(0+128)
  1092  03CF  0020               	movlb	0	; select bank0
  1093  03D0  0869               	movf	PID@set,w
  1094  03D1  0021               	movlb	1	; select bank1
  1095  03D2  00A6               	movwf	_lset^(0+128)
  1096                           
  1097                           ;main.c: 205: calculate_pid(set);
  1098  03D3  0020               	movlb	0	; select bank0
  1099  03D4  086A               	movf	PID@set+1,w
  1100  03D5  00DC               	movwf	calculate_pid@set+1
  1101  03D6  0869               	movf	PID@set,w
  1102  03D7  00DB               	movwf	calculate_pid@set
  1103  03D8  285A               	ljmp	l1905
  1104  03D9                     __end_of_PID:	
  1105                           
  1106                           	psect	text5
  1107  005A                     __ptext5:	
  1108 ;; *************** function _calculate_pid *****************
  1109 ;; Defined at:
  1110 ;;		line 150 in file "main.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  set             2   59[BANK0 ] int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  pid             3   70[BANK0 ] float 
  1115 ;;  error           3   67[BANK0 ] float 
  1116 ;;  rpm2            2   65[BANK0 ] int 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 1F/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1
  1126 ;;      Params:         0       2       0
  1127 ;;      Locals:         0      11       0
  1128 ;;      Temps:          0       1       0
  1129 ;;      Totals:         0      14       0
  1130 ;;Total ram usage:       14 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    5
  1133 ;; This function calls:
  1134 ;;		_M_control
  1135 ;;		___awtoft
  1136 ;;		___ftadd
  1137 ;;		___ftdiv
  1138 ;;		___ftge
  1139 ;;		___ftmul
  1140 ;;		___ftsub
  1141 ;;		___fttol
  1142 ;; This function is called by:
  1143 ;;		_PID
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _calculate_pid
  1149  005A                     _calculate_pid:	
  1150  005A                     l1905:	
  1151                           ;incstack = 0
  1152                           ; Regs used in _calculate_pid: [wreg+status,2+status,0+pclath+cstack]
  1153                           
  1154                           
  1155                           ;main.c: 153: float pid = 0;
  1156  005A  01E6               	clrf	calculate_pid@pid
  1157  005B  01E7               	clrf	calculate_pid@pid+1
  1158  005C  01E8               	clrf	calculate_pid@pid+2
  1159                           
  1160                           ;main.c: 154: int rpm2 = rpm + 600;
  1161  005D  0021               	movlb	1	; select bank1
  1162  005E  0828               	movf	_rpm^(0+128),w
  1163  005F  3E58               	addlw	88
  1164  0060  0020               	movlb	0	; select bank0
  1165  0061  00E1               	movwf	calculate_pid@rpm2
  1166  0062  3002               	movlw	2
  1167  0063  0021               	movlb	1	; select bank1
  1168  0064  3D29               	addwfc	(_rpm+1)^(0+128),w
  1169  0065  0020               	movlb	0	; select bank0
  1170  0066  00E2               	movwf	calculate_pid@rpm2+1
  1171                           
  1172                           ;main.c: 155: set = set + 600;
  1173  0067  3058               	movlw	88
  1174  0068  07DB               	addwf	calculate_pid@set,f
  1175  0069  3002               	movlw	2
  1176  006A  3DDC               	addwfc	calculate_pid@set+1,f
  1177                           
  1178                           ;main.c: 156: error = set - rpm2;
  1179  006B  085C               	movf	calculate_pid@set+1,w
  1180  006C  00A9               	movwf	___awtoft@c+1
  1181  006D  085B               	movf	calculate_pid@set,w
  1182  006E  00A8               	movwf	___awtoft@c
  1183  006F  0861               	movf	calculate_pid@rpm2,w
  1184  0070  02A8               	subwf	___awtoft@c,f
  1185  0071  0862               	movf	calculate_pid@rpm2+1,w
  1186  0072  3BA9               	subwfb	___awtoft@c+1,f
  1187  0073  253F               	fcall	___awtoft
  1188  0074  0828               	movf	?___awtoft,w
  1189  0075  00E3               	movwf	calculate_pid@error
  1190  0076  0829               	movf	?___awtoft+1,w
  1191  0077  00E4               	movwf	calculate_pid@error+1
  1192  0078  082A               	movf	?___awtoft+2,w
  1193  0079  00E5               	movwf	calculate_pid@error+2
  1194                           
  1195                           ;main.c: 157: pid = error*kp;
  1196  007A  30CD               	movlw	205
  1197  007B  00BA               	movwf	___ftmul@f1
  1198  007C  30CC               	movlw	204
  1199  007D  00BB               	movwf	___ftmul@f1+1
  1200  007E  303D               	movlw	61
  1201  007F  00BC               	movwf	___ftmul@f1+2
  1202  0080  0863               	movf	calculate_pid@error,w
  1203  0081  00BD               	movwf	___ftmul@f2
  1204  0082  0864               	movf	calculate_pid@error+1,w
  1205  0083  00BE               	movwf	___ftmul@f2+1
  1206  0084  0865               	movf	calculate_pid@error+2,w
  1207  0085  00BF               	movwf	___ftmul@f2+2
  1208  0086  225E               	fcall	___ftmul
  1209  0087  083A               	movf	?___ftmul,w
  1210  0088  00E6               	movwf	calculate_pid@pid
  1211  0089  083B               	movf	?___ftmul+1,w
  1212  008A  00E7               	movwf	calculate_pid@pid+1
  1213  008B  083C               	movf	?___ftmul+2,w
  1214  008C  00E8               	movwf	calculate_pid@pid+2
  1215                           
  1216                           ;main.c: 158: accumulator += error;
  1217  008D  0863               	movf	calculate_pid@error,w
  1218  008E  00C9               	movwf	___ftadd@f1
  1219  008F  0864               	movf	calculate_pid@error+1,w
  1220  0090  00CA               	movwf	___ftadd@f1+1
  1221  0091  0865               	movf	calculate_pid@error+2,w
  1222  0092  00CB               	movwf	___ftadd@f1+2
  1223  0093  0021               	movlb	1	; select bank1
  1224  0094  0823               	movf	_accumulator^(0+128),w
  1225  0095  0020               	movlb	0	; select bank0
  1226  0096  00CC               	movwf	___ftadd@f2
  1227  0097  0021               	movlb	1	; select bank1
  1228  0098  0824               	movf	(_accumulator+1)^(0+128),w
  1229  0099  0020               	movlb	0	; select bank0
  1230  009A  00CD               	movwf	___ftadd@f2+1
  1231  009B  0021               	movlb	1	; select bank1
  1232  009C  0825               	movf	(_accumulator+2)^(0+128),w
  1233  009D  0020               	movlb	0	; select bank0
  1234  009E  00CE               	movwf	___ftadd@f2+2
  1235  009F  21AA               	fcall	___ftadd
  1236  00A0  0849               	movf	?___ftadd,w
  1237  00A1  0021               	movlb	1	; select bank1
  1238  00A2  00A3               	movwf	_accumulator^(0+128)
  1239  00A3  0020               	movlb	0	; select bank0
  1240  00A4  084A               	movf	?___ftadd+1,w
  1241  00A5  0021               	movlb	1	; select bank1
  1242  00A6  00A4               	movwf	(_accumulator+1)^(0+128)
  1243  00A7  0020               	movlb	0	; select bank0
  1244  00A8  084B               	movf	?___ftadd+2,w
  1245  00A9  0021               	movlb	1	; select bank1
  1246  00AA  00A5               	movwf	(_accumulator+2)^(0+128)
  1247                           
  1248                           ;main.c: 159: pid += ki*accumulator;
  1249  00AB  0823               	movf	_accumulator^(0+128),w
  1250  00AC  0020               	movlb	0	; select bank0
  1251  00AD  00BD               	movwf	___ftmul@f2
  1252  00AE  0021               	movlb	1	; select bank1
  1253  00AF  0824               	movf	(_accumulator+1)^(0+128),w
  1254  00B0  0020               	movlb	0	; select bank0
  1255  00B1  00BE               	movwf	___ftmul@f2+1
  1256  00B2  0021               	movlb	1	; select bank1
  1257  00B3  0825               	movf	(_accumulator+2)^(0+128),w
  1258  00B4  0020               	movlb	0	; select bank0
  1259  00B5  00BF               	movwf	___ftmul@f2+2
  1260  00B6  30D7               	movlw	215
  1261  00B7  00BA               	movwf	___ftmul@f1
  1262  00B8  3023               	movlw	35
  1263  00B9  00BB               	movwf	___ftmul@f1+1
  1264  00BA  303D               	movlw	61
  1265  00BB  00BC               	movwf	___ftmul@f1+2
  1266  00BC  225E               	fcall	___ftmul
  1267  00BD  083A               	movf	?___ftmul,w
  1268  00BE  00C9               	movwf	___ftadd@f1
  1269  00BF  083B               	movf	?___ftmul+1,w
  1270  00C0  00CA               	movwf	___ftadd@f1+1
  1271  00C1  083C               	movf	?___ftmul+2,w
  1272  00C2  00CB               	movwf	___ftadd@f1+2
  1273  00C3  0866               	movf	calculate_pid@pid,w
  1274  00C4  00CC               	movwf	___ftadd@f2
  1275  00C5  0867               	movf	calculate_pid@pid+1,w
  1276  00C6  00CD               	movwf	___ftadd@f2+1
  1277  00C7  0868               	movf	calculate_pid@pid+2,w
  1278  00C8  00CE               	movwf	___ftadd@f2+2
  1279  00C9  21AA               	fcall	___ftadd
  1280  00CA  0849               	movf	?___ftadd,w
  1281  00CB  00E6               	movwf	calculate_pid@pid
  1282  00CC  084A               	movf	?___ftadd+1,w
  1283  00CD  00E7               	movwf	calculate_pid@pid+1
  1284  00CE  084B               	movf	?___ftadd+2,w
  1285  00CF  00E8               	movwf	calculate_pid@pid+2
  1286                           
  1287                           ;main.c: 160: pid += kd * (error - lasterror);
  1288  00D0  0863               	movf	calculate_pid@error,w
  1289  00D1  00D8               	movwf	___ftsub@f1
  1290  00D2  0864               	movf	calculate_pid@error+1,w
  1291  00D3  00D9               	movwf	___ftsub@f1+1
  1292  00D4  0865               	movf	calculate_pid@error+2,w
  1293  00D5  00DA               	movwf	___ftsub@f1+2
  1294  00D6  0021               	movlb	1	; select bank1
  1295  00D7  0820               	movf	_lasterror^(0+128),w
  1296  00D8  0020               	movlb	0	; select bank0
  1297  00D9  00D5               	movwf	___ftsub@f2
  1298  00DA  0021               	movlb	1	; select bank1
  1299  00DB  0821               	movf	(_lasterror+1)^(0+128),w
  1300  00DC  0020               	movlb	0	; select bank0
  1301  00DD  00D6               	movwf	___ftsub@f2+1
  1302  00DE  0021               	movlb	1	; select bank1
  1303  00DF  0822               	movf	(_lasterror+2)^(0+128),w
  1304  00E0  0020               	movlb	0	; select bank0
  1305  00E1  00D7               	movwf	___ftsub@f2+2
  1306  00E2  2524               	fcall	___ftsub
  1307  00E3  0855               	movf	?___ftsub,w
  1308  00E4  00BD               	movwf	___ftmul@f2
  1309  00E5  0856               	movf	?___ftsub+1,w
  1310  00E6  00BE               	movwf	___ftmul@f2+1
  1311  00E7  0857               	movf	?___ftsub+2,w
  1312  00E8  00BF               	movwf	___ftmul@f2+2
  1313  00E9  30D7               	movlw	215
  1314  00EA  00BA               	movwf	___ftmul@f1
  1315  00EB  3023               	movlw	35
  1316  00EC  00BB               	movwf	___ftmul@f1+1
  1317  00ED  303C               	movlw	60
  1318  00EE  00BC               	movwf	___ftmul@f1+2
  1319  00EF  225E               	fcall	___ftmul
  1320  00F0  083A               	movf	?___ftmul,w
  1321  00F1  00DE               	movwf	_calculate_pid$766
  1322  00F2  083B               	movf	?___ftmul+1,w
  1323  00F3  00DF               	movwf	_calculate_pid$766+1
  1324  00F4  083C               	movf	?___ftmul+2,w
  1325  00F5  00E0               	movwf	_calculate_pid$766+2
  1326                           
  1327                           ;main.c: 160: pid += kd * (error - lasterror);
  1328  00F6  085E               	movf	_calculate_pid$766,w
  1329  00F7  00C9               	movwf	___ftadd@f1
  1330  00F8  085F               	movf	_calculate_pid$766+1,w
  1331  00F9  00CA               	movwf	___ftadd@f1+1
  1332  00FA  0860               	movf	_calculate_pid$766+2,w
  1333  00FB  00CB               	movwf	___ftadd@f1+2
  1334  00FC  0866               	movf	calculate_pid@pid,w
  1335  00FD  00CC               	movwf	___ftadd@f2
  1336  00FE  0867               	movf	calculate_pid@pid+1,w
  1337  00FF  00CD               	movwf	___ftadd@f2+1
  1338  0100  0868               	movf	calculate_pid@pid+2,w
  1339  0101  00CE               	movwf	___ftadd@f2+2
  1340  0102  21AA               	fcall	___ftadd
  1341  0103  0849               	movf	?___ftadd,w
  1342  0104  00E6               	movwf	calculate_pid@pid
  1343  0105  084A               	movf	?___ftadd+1,w
  1344  0106  00E7               	movwf	calculate_pid@pid+1
  1345  0107  084B               	movf	?___ftadd+2,w
  1346  0108  00E8               	movwf	calculate_pid@pid+2
  1347                           
  1348                           ;main.c: 161: lasterror = error;
  1349  0109  0863               	movf	calculate_pid@error,w
  1350  010A  0021               	movlb	1	; select bank1
  1351  010B  00A0               	movwf	_lasterror^(0+128)
  1352  010C  0020               	movlb	0	; select bank0
  1353  010D  0864               	movf	calculate_pid@error+1,w
  1354  010E  0021               	movlb	1	; select bank1
  1355  010F  00A1               	movwf	(_lasterror+1)^(0+128)
  1356  0110  0020               	movlb	0	; select bank0
  1357  0111  0865               	movf	calculate_pid@error+2,w
  1358  0112  0021               	movlb	1	; select bank1
  1359  0113  00A2               	movwf	(_lasterror+2)^(0+128)
  1360                           
  1361                           ;main.c: 162: if (pid >= 2047)
  1362  0114  0020               	movlb	0	; select bank0
  1363  0115  0866               	movf	calculate_pid@pid,w
  1364  0116  00A0               	movwf	___ftge@ff1
  1365  0117  0867               	movf	calculate_pid@pid+1,w
  1366  0118  00A1               	movwf	___ftge@ff1+1
  1367  0119  0868               	movf	calculate_pid@pid+2,w
  1368  011A  00A2               	movwf	___ftge@ff1+2
  1369  011B  30E0               	movlw	224
  1370  011C  00A3               	movwf	___ftge@ff2
  1371  011D  30FF               	movlw	255
  1372  011E  00A4               	movwf	___ftge@ff2+1
  1373  011F  3044               	movlw	68
  1374  0120  00A5               	movwf	___ftge@ff2+2
  1375  0121  24B4               	fcall	___ftge
  1376  0122  1C03               	btfss	3,0
  1377  0123  292A               	goto	l1929
  1378                           
  1379                           ;main.c: 163: {
  1380                           ;main.c: 164: pid = 2047;
  1381  0124  30E0               	movlw	224
  1382  0125  00E6               	movwf	calculate_pid@pid
  1383  0126  30FF               	movlw	255
  1384  0127  00E7               	movwf	calculate_pid@pid+1
  1385  0128  3044               	movlw	68
  1386  0129  00E8               	movwf	calculate_pid@pid+2
  1387  012A                     l1929:	
  1388                           
  1389                           ;main.c: 165: }
  1390                           ;main.c: 166: if (pid <= 0)
  1391  012A  01A0               	clrf	___ftge@ff1
  1392  012B  01A1               	clrf	___ftge@ff1+1
  1393  012C  01A2               	clrf	___ftge@ff1+2
  1394  012D  0866               	movf	calculate_pid@pid,w
  1395  012E  00A3               	movwf	___ftge@ff2
  1396  012F  0867               	movf	calculate_pid@pid+1,w
  1397  0130  00A4               	movwf	___ftge@ff2+1
  1398  0131  0868               	movf	calculate_pid@pid+2,w
  1399  0132  00A5               	movwf	___ftge@ff2+2
  1400  0133  24B4               	fcall	___ftge
  1401  0134  1C03               	btfss	3,0
  1402  0135  2939               	goto	l1933
  1403                           
  1404                           ;main.c: 167: {
  1405                           ;main.c: 168: pid = 0;
  1406  0136  01E6               	clrf	calculate_pid@pid
  1407  0137  01E7               	clrf	calculate_pid@pid+1
  1408  0138  01E8               	clrf	calculate_pid@pid+2
  1409  0139                     l1933:	
  1410                           
  1411                           ;main.c: 169: }
  1412                           ;main.c: 170: pid = (-1023 + ((2046)*((pid) / (2047))));
  1413  0139  30C0               	movlw	192
  1414  013A  00C9               	movwf	___ftadd@f1
  1415  013B  307F               	movlw	127
  1416  013C  00CA               	movwf	___ftadd@f1+1
  1417  013D  30C4               	movlw	196
  1418  013E  00CB               	movwf	___ftadd@f1+2
  1419  013F  30C0               	movlw	192
  1420  0140  00BA               	movwf	___ftmul@f1
  1421  0141  30FF               	movlw	255
  1422  0142  00BB               	movwf	___ftmul@f1+1
  1423  0143  3044               	movlw	68
  1424  0144  00BC               	movwf	___ftmul@f1+2
  1425  0145  30E0               	movlw	224
  1426  0146  00AB               	movwf	___ftdiv@f2
  1427  0147  30FF               	movlw	255
  1428  0148  00AC               	movwf	___ftdiv@f2+1
  1429  0149  3044               	movlw	68
  1430  014A  00AD               	movwf	___ftdiv@f2+2
  1431  014B  0866               	movf	calculate_pid@pid,w
  1432  014C  00AE               	movwf	___ftdiv@f1
  1433  014D  0867               	movf	calculate_pid@pid+1,w
  1434  014E  00AF               	movwf	___ftdiv@f1+1
  1435  014F  0868               	movf	calculate_pid@pid+2,w
  1436  0150  00B0               	movwf	___ftdiv@f1+2
  1437  0151  22C8               	fcall	___ftdiv
  1438  0152  082B               	movf	?___ftdiv,w
  1439  0153  00BD               	movwf	___ftmul@f2
  1440  0154  082C               	movf	?___ftdiv+1,w
  1441  0155  00BE               	movwf	___ftmul@f2+1
  1442  0156  082D               	movf	?___ftdiv+2,w
  1443  0157  00BF               	movwf	___ftmul@f2+2
  1444  0158  225E               	fcall	___ftmul
  1445  0159  083A               	movf	?___ftmul,w
  1446  015A  00CC               	movwf	___ftadd@f2
  1447  015B  083B               	movf	?___ftmul+1,w
  1448  015C  00CD               	movwf	___ftadd@f2+1
  1449  015D  083C               	movf	?___ftmul+2,w
  1450  015E  00CE               	movwf	___ftadd@f2+2
  1451  015F  21AA               	fcall	___ftadd
  1452  0160  0849               	movf	?___ftadd,w
  1453  0161  00E6               	movwf	calculate_pid@pid
  1454  0162  084A               	movf	?___ftadd+1,w
  1455  0163  00E7               	movwf	calculate_pid@pid+1
  1456  0164  084B               	movf	?___ftadd+2,w
  1457  0165  00E8               	movwf	calculate_pid@pid+2
  1458                           
  1459                           ;main.c: 171: if (set < 600)
  1460  0166  085C               	movf	calculate_pid@set+1,w
  1461  0167  3A80               	xorlw	128
  1462  0168  00DD               	movwf	??_calculate_pid
  1463  0169  3082               	movlw	130
  1464  016A  025D               	subwf	??_calculate_pid,w
  1465  016B  1D03               	skipz
  1466  016C  296F               	goto	u2215
  1467  016D  3058               	movlw	88
  1468  016E  025B               	subwf	calculate_pid@set,w
  1469  016F                     u2215:	
  1470  016F  1803               	skipnc
  1471  0170  2981               	goto	l1941
  1472                           
  1473                           ;main.c: 172: {
  1474                           ;main.c: 173: if (pid > 0)
  1475  0171  0020               	movlb	0	; select bank0
  1476  0172  01A0               	clrf	___ftge@ff1
  1477  0173  01A1               	clrf	___ftge@ff1+1
  1478  0174  01A2               	clrf	___ftge@ff1+2
  1479  0175  0866               	movf	calculate_pid@pid,w
  1480  0176  00A3               	movwf	___ftge@ff2
  1481  0177  0867               	movf	calculate_pid@pid+1,w
  1482  0178  00A4               	movwf	___ftge@ff2+1
  1483  0179  0868               	movf	calculate_pid@pid+2,w
  1484  017A  00A5               	movwf	___ftge@ff2+2
  1485  017B  24B4               	fcall	___ftge
  1486  017C  1803               	btfsc	3,0
  1487  017D  2981               	goto	l1941
  1488                           
  1489                           ;main.c: 174: {
  1490                           ;main.c: 175: pid = 0;
  1491  017E  01E6               	clrf	calculate_pid@pid
  1492  017F  01E7               	clrf	calculate_pid@pid+1
  1493  0180  01E8               	clrf	calculate_pid@pid+2
  1494  0181                     l1941:	
  1495                           
  1496                           ;main.c: 176: }
  1497                           ;main.c: 177: }
  1498                           ;main.c: 178: if (set > 600)
  1499  0181  0020               	movlb	0	; select bank0
  1500  0182  085C               	movf	calculate_pid@set+1,w
  1501  0183  3A80               	xorlw	128
  1502  0184  00DD               	movwf	??_calculate_pid
  1503  0185  3082               	movlw	130
  1504  0186  025D               	subwf	??_calculate_pid,w
  1505  0187  1D03               	skipz
  1506  0188  298B               	goto	u2235
  1507  0189  3059               	movlw	89
  1508  018A  025B               	subwf	calculate_pid@set,w
  1509  018B                     u2235:	
  1510  018B  1C03               	skipc
  1511  018C  299D               	goto	l1947
  1512                           
  1513                           ;main.c: 179: {
  1514                           ;main.c: 180: if (pid < 0)
  1515  018D  0020               	movlb	0	; select bank0
  1516  018E  0866               	movf	calculate_pid@pid,w
  1517  018F  00A0               	movwf	___ftge@ff1
  1518  0190  0867               	movf	calculate_pid@pid+1,w
  1519  0191  00A1               	movwf	___ftge@ff1+1
  1520  0192  0868               	movf	calculate_pid@pid+2,w
  1521  0193  00A2               	movwf	___ftge@ff1+2
  1522  0194  01A3               	clrf	___ftge@ff2
  1523  0195  01A4               	clrf	___ftge@ff2+1
  1524  0196  01A5               	clrf	___ftge@ff2+2
  1525  0197  24B4               	fcall	___ftge
  1526  0198  1803               	btfsc	3,0
  1527  0199  299D               	goto	l1947
  1528                           
  1529                           ;main.c: 181: {
  1530                           ;main.c: 182: pid = 0;
  1531  019A  01E6               	clrf	calculate_pid@pid
  1532  019B  01E7               	clrf	calculate_pid@pid+1
  1533  019C  01E8               	clrf	calculate_pid@pid+2
  1534  019D                     l1947:	
  1535                           
  1536                           ;main.c: 183: }
  1537                           ;main.c: 184: }
  1538                           ;main.c: 185: M_control((int) pid);
  1539  019D  0020               	movlb	0	; select bank0
  1540  019E  0866               	movf	calculate_pid@pid,w
  1541  019F  00C9               	movwf	___fttol@f1
  1542  01A0  0867               	movf	calculate_pid@pid+1,w
  1543  01A1  00CA               	movwf	___fttol@f1+1
  1544  01A2  0868               	movf	calculate_pid@pid+2,w
  1545  01A3  00CB               	movwf	___fttol@f1+2
  1546  01A4  232A               	fcall	___fttol
  1547  01A5  084A               	movf	?___fttol+1,w
  1548  01A6  00D7               	movwf	M_control@ctr+1
  1549  01A7  0849               	movf	?___fttol,w
  1550  01A8  00D6               	movwf	M_control@ctr
  1551  01A9  2C53               	ljmp	l1717
  1552  01AA                     __end_of_calculate_pid:	
  1553                           
  1554                           	psect	text6
  1555  032A                     __ptext6:	
  1556 ;; *************** function ___fttol *****************
  1557 ;; Defined at:
  1558 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  f1              3   41[BANK0 ] float 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  lval            4   49[BANK0 ] unsigned long 
  1563 ;;  exp1            1   53[BANK0 ] unsigned char 
  1564 ;;  sign1           1   48[BANK0 ] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  4   41[BANK0 ] long 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 1F/0
  1571 ;;		On exit  : 1F/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1
  1574 ;;      Params:         0       4       0
  1575 ;;      Locals:         0       6       0
  1576 ;;      Temps:          0       3       0
  1577 ;;      Totals:         0      13       0
  1578 ;;Total ram usage:       13 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    2
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_calculate_pid
  1585 ;;		_auto_stop
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function ___fttol
  1591  032A                     ___fttol:	
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1595  032A  0849               	movf	___fttol@f1,w
  1596  032B  00CD               	movwf	??___fttol
  1597  032C  084A               	movf	___fttol@f1+1,w
  1598  032D  00CE               	movwf	??___fttol+1
  1599  032E  084B               	movf	___fttol@f1+2,w
  1600  032F  00CF               	movwf	??___fttol+2
  1601  0330  1003               	clrc
  1602  0331  0D4E               	rlf	??___fttol+1,w
  1603  0332  0D4F               	rlf	??___fttol+2,w
  1604  0333  00D5               	movwf	___fttol@exp1
  1605  0334  0855               	movf	___fttol@exp1,w
  1606  0335  1D03               	btfss	3,2
  1607  0336  2B3C               	goto	l1869
  1608  0337                     l1867:	
  1609  0337  01C9               	clrf	?___fttol
  1610  0338  01CA               	clrf	?___fttol+1
  1611  0339  01CB               	clrf	?___fttol+2
  1612  033A  01CC               	clrf	?___fttol+3
  1613  033B  0008               	return
  1614  033C                     l1869:	
  1615  033C  0849               	movf	___fttol@f1,w
  1616  033D  00CD               	movwf	??___fttol
  1617  033E  084A               	movf	___fttol@f1+1,w
  1618  033F  00CE               	movwf	??___fttol+1
  1619  0340  084B               	movf	___fttol@f1+2,w
  1620  0341  00CF               	movwf	??___fttol+2
  1621  0342  3017               	movlw	23
  1622  0343                     u2125:	
  1623  0343  36CF               	lsrf	??___fttol+2,f
  1624  0344  0CCE               	rrf	??___fttol+1,f
  1625  0345  0CCD               	rrf	??___fttol,f
  1626  0346  0B89               	decfsz	9,f
  1627  0347  2B43               	goto	u2125
  1628  0348  084D               	movf	??___fttol,w
  1629  0349  00D0               	movwf	___fttol@sign1
  1630  034A  17CA               	bsf	___fttol@f1+1,7
  1631  034B  01CB               	clrf	___fttol@f1+2
  1632  034C  0849               	movf	___fttol@f1,w
  1633  034D  00D1               	movwf	___fttol@lval
  1634  034E  084A               	movf	___fttol@f1+1,w
  1635  034F  00D2               	movwf	___fttol@lval+1
  1636  0350  084B               	movf	___fttol@f1+2,w
  1637  0351  00D3               	movwf	___fttol@lval+2
  1638  0352  308E               	movlw	142
  1639  0353  01D4               	clrf	___fttol@lval+3
  1640  0354  02D5               	subwf	___fttol@exp1,f
  1641  0355  1FD5               	btfss	___fttol@exp1,7
  1642  0356  2B63               	goto	l1889
  1643  0357  0855               	movf	___fttol@exp1,w
  1644  0358  3A80               	xorlw	128
  1645  0359  3E8F               	addlw	143
  1646  035A  1C03               	btfss	3,0
  1647  035B  2B37               	goto	l1867
  1648  035C                     l1885:	
  1649  035C  36D4               	lsrf	___fttol@lval+3,f
  1650  035D  0CD3               	rrf	___fttol@lval+2,f
  1651  035E  0CD2               	rrf	___fttol@lval+1,f
  1652  035F  0CD1               	rrf	___fttol@lval,f
  1653  0360  0FD5               	incfsz	___fttol@exp1,f
  1654  0361  2B5C               	goto	l1885
  1655  0362  2B70               	goto	l1897
  1656  0363                     l1889:	
  1657  0363  3018               	movlw	24
  1658  0364  0255               	subwf	___fttol@exp1,w
  1659  0365  1803               	btfsc	3,0
  1660  0366  2B37               	goto	l1867
  1661  0367                     l1895:	
  1662  0367  0855               	movf	___fttol@exp1,w
  1663  0368  1903               	btfsc	3,2
  1664  0369  2B70               	goto	l1897
  1665  036A  35D1               	lslf	___fttol@lval,f
  1666  036B  0DD2               	rlf	___fttol@lval+1,f
  1667  036C  0DD3               	rlf	___fttol@lval+2,f
  1668  036D  0DD4               	rlf	___fttol@lval+3,f
  1669  036E  03D5               	decf	___fttol@exp1,f
  1670  036F  2B67               	goto	l1895
  1671  0370                     l1897:	
  1672  0370  0850               	movf	___fttol@sign1,w
  1673  0371  1903               	btfsc	3,2
  1674  0372  2B7E               	goto	l1901
  1675  0373  09D1               	comf	___fttol@lval,f
  1676  0374  09D2               	comf	___fttol@lval+1,f
  1677  0375  09D3               	comf	___fttol@lval+2,f
  1678  0376  09D4               	comf	___fttol@lval+3,f
  1679  0377  0AD1               	incf	___fttol@lval,f
  1680  0378  1903               	skipnz
  1681  0379  0AD2               	incf	___fttol@lval+1,f
  1682  037A  1903               	skipnz
  1683  037B  0AD3               	incf	___fttol@lval+2,f
  1684  037C  1903               	skipnz
  1685  037D  0AD4               	incf	___fttol@lval+3,f
  1686  037E                     l1901:	
  1687  037E  0854               	movf	___fttol@lval+3,w
  1688  037F  00CC               	movwf	?___fttol+3
  1689  0380  0853               	movf	___fttol@lval+2,w
  1690  0381  00CB               	movwf	?___fttol+2
  1691  0382  0852               	movf	___fttol@lval+1,w
  1692  0383  00CA               	movwf	?___fttol+1
  1693  0384  0851               	movf	___fttol@lval,w
  1694  0385  00C9               	movwf	?___fttol
  1695  0386  0008               	return
  1696  0387                     __end_of___fttol:	
  1697                           
  1698                           	psect	text7
  1699  0524                     __ptext7:	
  1700 ;; *************** function ___ftsub *****************
  1701 ;; Defined at:
  1702 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  f2              3   53[BANK0 ] float 
  1705 ;;  f1              3   56[BANK0 ] float 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  3   53[BANK0 ] float 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 1F/0
  1714 ;;		On exit  : 1F/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1
  1717 ;;      Params:         0       6       0
  1718 ;;      Locals:         0       0       0
  1719 ;;      Temps:          0       0       0
  1720 ;;      Totals:         0       6       0
  1721 ;;Total ram usage:        6 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    4
  1724 ;; This function calls:
  1725 ;;		___ftadd
  1726 ;; This function is called by:
  1727 ;;		_calculate_pid
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function ___ftsub
  1733  0524                     ___ftsub:	
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  1737  0524  0857               	movf	___ftsub@f2+2,w
  1738  0525  0456               	iorwf	___ftsub@f2+1,w
  1739  0526  0455               	iorwf	___ftsub@f2,w
  1740  0527  1903               	skipnz
  1741  0528  2D2B               	goto	l1861
  1742  0529  3080               	movlw	128
  1743  052A  06D7               	xorwf	___ftsub@f2+2,f
  1744  052B                     l1861:	
  1745  052B  0858               	movf	___ftsub@f1,w
  1746  052C  00C9               	movwf	___ftadd@f1
  1747  052D  0859               	movf	___ftsub@f1+1,w
  1748  052E  00CA               	movwf	___ftadd@f1+1
  1749  052F  085A               	movf	___ftsub@f1+2,w
  1750  0530  00CB               	movwf	___ftadd@f1+2
  1751  0531  0855               	movf	___ftsub@f2,w
  1752  0532  00CC               	movwf	___ftadd@f2
  1753  0533  0856               	movf	___ftsub@f2+1,w
  1754  0534  00CD               	movwf	___ftadd@f2+1
  1755  0535  0857               	movf	___ftsub@f2+2,w
  1756  0536  00CE               	movwf	___ftadd@f2+2
  1757  0537  21AA               	fcall	___ftadd
  1758  0538  0849               	movf	?___ftadd,w
  1759  0539  00D5               	movwf	?___ftsub
  1760  053A  084A               	movf	?___ftadd+1,w
  1761  053B  00D6               	movwf	?___ftsub+1
  1762  053C  084B               	movf	?___ftadd+2,w
  1763  053D  00D7               	movwf	?___ftsub+2
  1764  053E  0008               	return
  1765  053F                     __end_of___ftsub:	
  1766                           
  1767                           	psect	text8
  1768  01AA                     __ptext8:	
  1769 ;; *************** function ___ftadd *****************
  1770 ;; Defined at:
  1771 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  f1              3   41[BANK0 ] float 
  1774 ;;  f2              3   44[BANK0 ] float 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  exp1            1   52[BANK0 ] unsigned char 
  1777 ;;  exp2            1   51[BANK0 ] unsigned char 
  1778 ;;  sign            1   50[BANK0 ] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  3   41[BANK0 ] float 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 1F/0
  1785 ;;		On exit  : 1F/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1
  1788 ;;      Params:         0       6       0
  1789 ;;      Locals:         0       3       0
  1790 ;;      Temps:          0       3       0
  1791 ;;      Totals:         0      12       0
  1792 ;;Total ram usage:       12 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    3
  1795 ;; This function calls:
  1796 ;;		___ftpack
  1797 ;; This function is called by:
  1798 ;;		_calculate_pid
  1799 ;;		___ftsub
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function ___ftadd
  1805  01AA                     ___ftadd:	
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1809  01AA  0849               	movf	___ftadd@f1,w
  1810  01AB  00CF               	movwf	??___ftadd
  1811  01AC  084A               	movf	___ftadd@f1+1,w
  1812  01AD  00D0               	movwf	??___ftadd+1
  1813  01AE  084B               	movf	___ftadd@f1+2,w
  1814  01AF  00D1               	movwf	??___ftadd+2
  1815  01B0  1003               	clrc
  1816  01B1  0D50               	rlf	??___ftadd+1,w
  1817  01B2  0D51               	rlf	??___ftadd+2,w
  1818  01B3  00D4               	movwf	___ftadd@exp1
  1819  01B4  084C               	movf	___ftadd@f2,w
  1820  01B5  00CF               	movwf	??___ftadd
  1821  01B6  084D               	movf	___ftadd@f2+1,w
  1822  01B7  00D0               	movwf	??___ftadd+1
  1823  01B8  084E               	movf	___ftadd@f2+2,w
  1824  01B9  00D1               	movwf	??___ftadd+2
  1825  01BA  1003               	clrc
  1826  01BB  0D50               	rlf	??___ftadd+1,w
  1827  01BC  0D51               	rlf	??___ftadd+2,w
  1828  01BD  00D3               	movwf	___ftadd@exp2
  1829  01BE  0854               	movf	___ftadd@exp1,w
  1830  01BF  1903               	btfsc	3,2
  1831  01C0  29CD               	goto	l1647
  1832  01C1  0853               	movf	___ftadd@exp2,w
  1833  01C2  0254               	subwf	___ftadd@exp1,w
  1834  01C3  0853               	movf	___ftadd@exp2,w
  1835  01C4  1803               	skipnc
  1836  01C5  29D5               	goto	L1
  1837  01C6  00CF               	movwf	??___ftadd
  1838  01C7  0854               	movf	___ftadd@exp1,w
  1839  01C8  02CF               	subwf	??___ftadd,f
  1840  01C9  3019               	movlw	25
  1841  01CA  024F               	subwf	??___ftadd,w
  1842  01CB  1C03               	skipc
  1843  01CC  29D4               	goto	l1651
  1844  01CD                     l1647:	
  1845  01CD  084C               	movf	___ftadd@f2,w
  1846  01CE  00C9               	movwf	?___ftadd
  1847  01CF  084D               	movf	___ftadd@f2+1,w
  1848  01D0  00CA               	movwf	?___ftadd+1
  1849  01D1  084E               	movf	___ftadd@f2+2,w
  1850  01D2  00CB               	movwf	?___ftadd+2
  1851  01D3  0008               	return
  1852  01D4                     l1651:	
  1853  01D4  0853               	movf	___ftadd@exp2,w
  1854  01D5                     L1:	
  1855  01D5  1903               	btfsc	3,2
  1856  01D6  0008               	return
  1857  01D7  0854               	movf	___ftadd@exp1,w
  1858  01D8  0253               	subwf	___ftadd@exp2,w
  1859  01D9  1803               	skipnc
  1860  01DA  29E3               	goto	l1657
  1861  01DB  0854               	movf	___ftadd@exp1,w
  1862  01DC  00CF               	movwf	??___ftadd
  1863  01DD  0853               	movf	___ftadd@exp2,w
  1864  01DE  02CF               	subwf	??___ftadd,f
  1865  01DF  3019               	movlw	25
  1866  01E0  024F               	subwf	??___ftadd,w
  1867  01E1  1803               	btfsc	3,0
  1868  01E2  0008               	return
  1869  01E3                     l1657:	
  1870  01E3  3006               	movlw	6
  1871  01E4  00D2               	movwf	___ftadd@sign
  1872  01E5  1BCB               	btfsc	___ftadd@f1+2,7
  1873  01E6  17D2               	bsf	___ftadd@sign,7
  1874  01E7  1BCE               	btfsc	___ftadd@f2+2,7
  1875  01E8  1752               	bsf	___ftadd@sign,6
  1876  01E9  17CA               	bsf	___ftadd@f1+1,7
  1877  01EA  01CB               	clrf	___ftadd@f1+2
  1878  01EB  17CD               	bsf	___ftadd@f2+1,7
  1879  01EC  01CE               	clrf	___ftadd@f2+2
  1880  01ED  0853               	movf	___ftadd@exp2,w
  1881  01EE  0254               	subwf	___ftadd@exp1,w
  1882  01EF  1803               	skipnc
  1883  01F0  2A08               	goto	l1679
  1884  01F1                     l1669:	
  1885  01F1  35CC               	lslf	___ftadd@f2,f
  1886  01F2  0DCD               	rlf	___ftadd@f2+1,f
  1887  01F3  0DCE               	rlf	___ftadd@f2+2,f
  1888  01F4  03D3               	decf	___ftadd@exp2,f
  1889  01F5  0853               	movf	___ftadd@exp2,w
  1890  01F6  0654               	xorwf	___ftadd@exp1,w
  1891  01F7  1903               	skipnz
  1892  01F8  2A03               	goto	l1677
  1893  01F9  03D2               	decf	___ftadd@sign,f
  1894  01FA  0852               	movf	___ftadd@sign,w
  1895  01FB  3907               	andlw	7
  1896  01FC  1903               	btfsc	3,2
  1897  01FD  2A03               	goto	l1677
  1898  01FE  29F1               	goto	l1669
  1899  01FF                     l1675:	
  1900  01FF  36CB               	lsrf	___ftadd@f1+2,f
  1901  0200  0CCA               	rrf	___ftadd@f1+1,f
  1902  0201  0CC9               	rrf	___ftadd@f1,f
  1903  0202  0AD4               	incf	___ftadd@exp1,f
  1904  0203                     l1677:	
  1905  0203  0854               	movf	___ftadd@exp1,w
  1906  0204  0653               	xorwf	___ftadd@exp2,w
  1907  0205  1903               	btfsc	3,2
  1908  0206  2A22               	goto	l397
  1909  0207  29FF               	goto	l1675
  1910  0208                     l1679:	
  1911  0208  0854               	movf	___ftadd@exp1,w
  1912  0209  0253               	subwf	___ftadd@exp2,w
  1913  020A  1803               	skipnc
  1914  020B  2A22               	goto	l397
  1915  020C                     l1681:	
  1916  020C  35C9               	lslf	___ftadd@f1,f
  1917  020D  0DCA               	rlf	___ftadd@f1+1,f
  1918  020E  0DCB               	rlf	___ftadd@f1+2,f
  1919  020F  03D4               	decf	___ftadd@exp1,f
  1920  0210  0853               	movf	___ftadd@exp2,w
  1921  0211  0654               	xorwf	___ftadd@exp1,w
  1922  0212  1903               	skipnz
  1923  0213  2A1E               	goto	l1689
  1924  0214  03D2               	decf	___ftadd@sign,f
  1925  0215  0852               	movf	___ftadd@sign,w
  1926  0216  3907               	andlw	7
  1927  0217  1903               	btfsc	3,2
  1928  0218  2A1E               	goto	l1689
  1929  0219  2A0C               	goto	l1681
  1930  021A                     l1687:	
  1931  021A  36CE               	lsrf	___ftadd@f2+2,f
  1932  021B  0CCD               	rrf	___ftadd@f2+1,f
  1933  021C  0CCC               	rrf	___ftadd@f2,f
  1934  021D  0AD3               	incf	___ftadd@exp2,f
  1935  021E                     l1689:	
  1936  021E  0854               	movf	___ftadd@exp1,w
  1937  021F  0653               	xorwf	___ftadd@exp2,w
  1938  0220  1D03               	skipz
  1939  0221  2A1A               	goto	l1687
  1940  0222                     l397:	
  1941  0222  1FD2               	btfss	___ftadd@sign,7
  1942  0223  2A2D               	goto	l1695
  1943  0224  30FF               	movlw	255
  1944  0225  06C9               	xorwf	___ftadd@f1,f
  1945  0226  06CA               	xorwf	___ftadd@f1+1,f
  1946  0227  06CB               	xorwf	___ftadd@f1+2,f
  1947  0228  0AC9               	incf	___ftadd@f1,f
  1948  0229  1903               	skipnz
  1949  022A  0ACA               	incf	___ftadd@f1+1,f
  1950  022B  1903               	skipnz
  1951  022C  0ACB               	incf	___ftadd@f1+2,f
  1952  022D                     l1695:	
  1953  022D  1F52               	btfss	___ftadd@sign,6
  1954  022E  2A38               	goto	l1701
  1955  022F  30FF               	movlw	255
  1956  0230  06CC               	xorwf	___ftadd@f2,f
  1957  0231  06CD               	xorwf	___ftadd@f2+1,f
  1958  0232  06CE               	xorwf	___ftadd@f2+2,f
  1959  0233  0ACC               	incf	___ftadd@f2,f
  1960  0234  1903               	skipnz
  1961  0235  0ACD               	incf	___ftadd@f2+1,f
  1962  0236  1903               	skipnz
  1963  0237  0ACE               	incf	___ftadd@f2+2,f
  1964  0238                     l1701:	
  1965  0238  01D2               	clrf	___ftadd@sign
  1966  0239  0849               	movf	___ftadd@f1,w
  1967  023A  07CC               	addwf	___ftadd@f2,f
  1968  023B  084A               	movf	___ftadd@f1+1,w
  1969  023C  3DCD               	addwfc	___ftadd@f2+1,f
  1970  023D  084B               	movf	___ftadd@f1+2,w
  1971  023E  3DCE               	addwfc	___ftadd@f2+2,f
  1972  023F  1FCE               	btfss	___ftadd@f2+2,7
  1973  0240  2A4C               	goto	l1713
  1974  0241  30FF               	movlw	255
  1975  0242  06CC               	xorwf	___ftadd@f2,f
  1976  0243  06CD               	xorwf	___ftadd@f2+1,f
  1977  0244  06CE               	xorwf	___ftadd@f2+2,f
  1978  0245  0ACC               	incf	___ftadd@f2,f
  1979  0246  1903               	skipnz
  1980  0247  0ACD               	incf	___ftadd@f2+1,f
  1981  0248  1903               	skipnz
  1982  0249  0ACE               	incf	___ftadd@f2+2,f
  1983  024A  01D2               	clrf	___ftadd@sign
  1984  024B  0AD2               	incf	___ftadd@sign,f
  1985  024C                     l1713:	
  1986  024C  084C               	movf	___ftadd@f2,w
  1987  024D  00A0               	movwf	___ftpack@arg
  1988  024E  084D               	movf	___ftadd@f2+1,w
  1989  024F  00A1               	movwf	___ftpack@arg+1
  1990  0250  084E               	movf	___ftadd@f2+2,w
  1991  0251  00A2               	movwf	___ftpack@arg+2
  1992  0252  0854               	movf	___ftadd@exp1,w
  1993  0253  00A3               	movwf	___ftpack@exp
  1994  0254  0852               	movf	___ftadd@sign,w
  1995  0255  00A4               	movwf	___ftpack@sign
  1996  0256  23D9               	fcall	___ftpack
  1997  0257  0820               	movf	?___ftpack,w
  1998  0258  00C9               	movwf	?___ftadd
  1999  0259  0821               	movf	?___ftpack+1,w
  2000  025A  00CA               	movwf	?___ftadd+1
  2001  025B  0822               	movf	?___ftpack+2,w
  2002  025C  00CB               	movwf	?___ftadd+2
  2003  025D  0008               	return
  2004  025E                     __end_of___ftadd:	
  2005                           
  2006                           	psect	text9
  2007  025E                     __ptext9:	
  2008 ;; *************** function ___ftmul *****************
  2009 ;; Defined at:
  2010 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  f1              3   26[BANK0 ] float 
  2013 ;;  f2              3   29[BANK0 ] float 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  2016 ;;  sign            1   40[BANK0 ] unsigned char 
  2017 ;;  cntr            1   39[BANK0 ] unsigned char 
  2018 ;;  exp             1   35[BANK0 ] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  3   26[BANK0 ] float 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 1F/0
  2025 ;;		On exit  : 1F/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1
  2028 ;;      Params:         0       6       0
  2029 ;;      Locals:         0       6       0
  2030 ;;      Temps:          0       3       0
  2031 ;;      Totals:         0      15       0
  2032 ;;Total ram usage:       15 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    3
  2035 ;; This function calls:
  2036 ;;		___ftpack
  2037 ;; This function is called by:
  2038 ;;		_calculate_pid
  2039 ;;		_auto_stop
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function ___ftmul
  2045  025E                     ___ftmul:	
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2049  025E  083A               	movf	___ftmul@f1,w
  2050  025F  00C0               	movwf	??___ftmul
  2051  0260  083B               	movf	___ftmul@f1+1,w
  2052  0261  00C1               	movwf	??___ftmul+1
  2053  0262  083C               	movf	___ftmul@f1+2,w
  2054  0263  00C2               	movwf	??___ftmul+2
  2055  0264  1003               	clrc
  2056  0265  0D41               	rlf	??___ftmul+1,w
  2057  0266  0D42               	rlf	??___ftmul+2,w
  2058  0267  00C3               	movwf	___ftmul@exp
  2059  0268  0843               	movf	___ftmul@exp,w
  2060  0269  1D03               	btfss	3,2
  2061  026A  2A6F               	goto	l1809
  2062  026B  01BA               	clrf	?___ftmul
  2063  026C  01BB               	clrf	?___ftmul+1
  2064  026D  01BC               	clrf	?___ftmul+2
  2065  026E  0008               	return
  2066  026F                     l1809:	
  2067  026F  083D               	movf	___ftmul@f2,w
  2068  0270  00C0               	movwf	??___ftmul
  2069  0271  083E               	movf	___ftmul@f2+1,w
  2070  0272  00C1               	movwf	??___ftmul+1
  2071  0273  083F               	movf	___ftmul@f2+2,w
  2072  0274  00C2               	movwf	??___ftmul+2
  2073  0275  1003               	clrc
  2074  0276  0D41               	rlf	??___ftmul+1,w
  2075  0277  0D42               	rlf	??___ftmul+2,w
  2076  0278  00C8               	movwf	___ftmul@sign
  2077  0279  0848               	movf	___ftmul@sign,w
  2078  027A  1D03               	btfss	3,2
  2079  027B  2A80               	goto	l1813
  2080  027C  01BA               	clrf	?___ftmul
  2081  027D  01BB               	clrf	?___ftmul+1
  2082  027E  01BC               	clrf	?___ftmul+2
  2083  027F  0008               	return
  2084  0280                     l1813:	
  2085  0280  0848               	movf	___ftmul@sign,w
  2086  0281  3E7B               	addlw	123
  2087  0282  07C3               	addwf	___ftmul@exp,f
  2088  0283  083C               	movf	___ftmul@f1+2,w
  2089  0284  00C8               	movwf	___ftmul@sign
  2090  0285  083F               	movf	___ftmul@f2+2,w
  2091  0286  06C8               	xorwf	___ftmul@sign,f
  2092  0287  3080               	movlw	128
  2093  0288  05C8               	andwf	___ftmul@sign,f
  2094  0289  30FF               	movlw	255
  2095  028A  17BB               	bsf	___ftmul@f1+1,7
  2096  028B  17BE               	bsf	___ftmul@f2+1,7
  2097  028C  05BD               	andwf	___ftmul@f2,f
  2098  028D  05BE               	andwf	___ftmul@f2+1,f
  2099  028E  3007               	movlw	7
  2100  028F  01BF               	clrf	___ftmul@f2+2
  2101  0290  01C4               	clrf	___ftmul@f3_as_product
  2102  0291  01C5               	clrf	___ftmul@f3_as_product+1
  2103  0292  01C6               	clrf	___ftmul@f3_as_product+2
  2104  0293  00C7               	movwf	___ftmul@cntr
  2105  0294                     l1831:	
  2106  0294  1C3A               	btfss	___ftmul@f1,0
  2107  0295  2A9C               	goto	l1835
  2108  0296  083D               	movf	___ftmul@f2,w
  2109  0297  07C4               	addwf	___ftmul@f3_as_product,f
  2110  0298  083E               	movf	___ftmul@f2+1,w
  2111  0299  3DC5               	addwfc	___ftmul@f3_as_product+1,f
  2112  029A  083F               	movf	___ftmul@f2+2,w
  2113  029B  3DC6               	addwfc	___ftmul@f3_as_product+2,f
  2114  029C                     l1835:	
  2115  029C  36BC               	lsrf	___ftmul@f1+2,f
  2116  029D  0CBB               	rrf	___ftmul@f1+1,f
  2117  029E  0CBA               	rrf	___ftmul@f1,f
  2118  029F  35BD               	lslf	___ftmul@f2,f
  2119  02A0  0DBE               	rlf	___ftmul@f2+1,f
  2120  02A1  0DBF               	rlf	___ftmul@f2+2,f
  2121  02A2  0BC7               	decfsz	___ftmul@cntr,f
  2122  02A3  2A94               	goto	l1831
  2123  02A4  3009               	movlw	9
  2124  02A5  00C7               	movwf	___ftmul@cntr
  2125  02A6                     l1843:	
  2126  02A6  1C3A               	btfss	___ftmul@f1,0
  2127  02A7  2AAE               	goto	l1847
  2128  02A8  083D               	movf	___ftmul@f2,w
  2129  02A9  07C4               	addwf	___ftmul@f3_as_product,f
  2130  02AA  083E               	movf	___ftmul@f2+1,w
  2131  02AB  3DC5               	addwfc	___ftmul@f3_as_product+1,f
  2132  02AC  083F               	movf	___ftmul@f2+2,w
  2133  02AD  3DC6               	addwfc	___ftmul@f3_as_product+2,f
  2134  02AE                     l1847:	
  2135  02AE  36BC               	lsrf	___ftmul@f1+2,f
  2136  02AF  0CBB               	rrf	___ftmul@f1+1,f
  2137  02B0  0CBA               	rrf	___ftmul@f1,f
  2138  02B1  36C6               	lsrf	___ftmul@f3_as_product+2,f
  2139  02B2  0CC5               	rrf	___ftmul@f3_as_product+1,f
  2140  02B3  0CC4               	rrf	___ftmul@f3_as_product,f
  2141  02B4  0BC7               	decfsz	___ftmul@cntr,f
  2142  02B5  2AA6               	goto	l1843
  2143  02B6  0844               	movf	___ftmul@f3_as_product,w
  2144  02B7  00A0               	movwf	___ftpack@arg
  2145  02B8  0845               	movf	___ftmul@f3_as_product+1,w
  2146  02B9  00A1               	movwf	___ftpack@arg+1
  2147  02BA  0846               	movf	___ftmul@f3_as_product+2,w
  2148  02BB  00A2               	movwf	___ftpack@arg+2
  2149  02BC  0843               	movf	___ftmul@exp,w
  2150  02BD  00A3               	movwf	___ftpack@exp
  2151  02BE  0848               	movf	___ftmul@sign,w
  2152  02BF  00A4               	movwf	___ftpack@sign
  2153  02C0  23D9               	fcall	___ftpack
  2154  02C1  0820               	movf	?___ftpack,w
  2155  02C2  00BA               	movwf	?___ftmul
  2156  02C3  0821               	movf	?___ftpack+1,w
  2157  02C4  00BB               	movwf	?___ftmul+1
  2158  02C5  0822               	movf	?___ftpack+2,w
  2159  02C6  00BC               	movwf	?___ftmul+2
  2160  02C7  0008               	return
  2161  02C8                     __end_of___ftmul:	
  2162                           
  2163                           	psect	text10
  2164  04B4                     __ptext10:	
  2165 ;; *************** function ___ftge *****************
  2166 ;; Defined at:
  2167 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  ff1             3    0[BANK0 ] float 
  2170 ;;  ff2             3    3[BANK0 ] float 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0
  2177 ;; Tracked objects:
  2178 ;;		On entry : 1F/0
  2179 ;;		On exit  : 1F/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMMON   BANK0   BANK1
  2182 ;;      Params:         0       6       0
  2183 ;;      Locals:         0       0       0
  2184 ;;      Temps:          0       0       0
  2185 ;;      Totals:         0       6       0
  2186 ;;Total ram usage:        6 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    2
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_calculate_pid
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function ___ftge
  2198  04B4                     ___ftge:	
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2202  04B4  1FA2               	btfss	___ftge@ff1+2,7
  2203  04B5  2CC3               	goto	l1789
  2204  04B6  0820               	movf	___ftge@ff1,w
  2205  04B7  3C00               	sublw	0
  2206  04B8  00A0               	movwf	___ftge@ff1
  2207  04B9  0821               	movf	___ftge@ff1+1,w
  2208  04BA  1C03               	skipc
  2209  04BB  0F21               	incfsz	___ftge@ff1+1,w
  2210  04BC  3C00               	sublw	0
  2211  04BD  00A1               	movwf	___ftge@ff1+1
  2212  04BE  0822               	movf	___ftge@ff1+2,w
  2213  04BF  1C03               	skipc
  2214  04C0  0F22               	incfsz	___ftge@ff1+2,w
  2215  04C1  3C80               	sublw	128
  2216  04C2  00A2               	movwf	___ftge@ff1+2
  2217  04C3                     l1789:	
  2218  04C3  1FA5               	btfss	___ftge@ff2+2,7
  2219  04C4  2CD2               	goto	l1793
  2220  04C5  0823               	movf	___ftge@ff2,w
  2221  04C6  3C00               	sublw	0
  2222  04C7  00A3               	movwf	___ftge@ff2
  2223  04C8  0824               	movf	___ftge@ff2+1,w
  2224  04C9  1C03               	skipc
  2225  04CA  0F24               	incfsz	___ftge@ff2+1,w
  2226  04CB  3C00               	sublw	0
  2227  04CC  00A4               	movwf	___ftge@ff2+1
  2228  04CD  0825               	movf	___ftge@ff2+2,w
  2229  04CE  1C03               	skipc
  2230  04CF  0F25               	incfsz	___ftge@ff2+2,w
  2231  04D0  3C80               	sublw	128
  2232  04D1  00A5               	movwf	___ftge@ff2+2
  2233  04D2                     l1793:	
  2234  04D2  3080               	movlw	128
  2235  04D3  06A2               	xorwf	___ftge@ff1+2,f
  2236  04D4  06A5               	xorwf	___ftge@ff2+2,f
  2237  04D5  0825               	movf	___ftge@ff2+2,w
  2238  04D6  0222               	subwf	___ftge@ff1+2,w
  2239  04D7  1D03               	skipz
  2240  04D8  0008               	return
  2241  04D9  0824               	movf	___ftge@ff2+1,w
  2242  04DA  0221               	subwf	___ftge@ff1+1,w
  2243  04DB  1D03               	skipz
  2244  04DC  0008               	return
  2245  04DD  0823               	movf	___ftge@ff2,w
  2246  04DE  0220               	subwf	___ftge@ff1,w
  2247  04DF  0008               	return
  2248  04E0                     __end_of___ftge:	
  2249                           
  2250                           	psect	text11
  2251  02C8                     __ptext11:	
  2252 ;; *************** function ___ftdiv *****************
  2253 ;; Defined at:
  2254 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  f2              3   11[BANK0 ] float 
  2257 ;;  f1              3   14[BANK0 ] float 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  f3              3   21[BANK0 ] float 
  2260 ;;  sign            1   25[BANK0 ] unsigned char 
  2261 ;;  exp             1   24[BANK0 ] unsigned char 
  2262 ;;  cntr            1   20[BANK0 ] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  3   11[BANK0 ] float 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, pclath, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 1F/0
  2269 ;;		On exit  : 1F/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1
  2272 ;;      Params:         0       6       0
  2273 ;;      Locals:         0       6       0
  2274 ;;      Temps:          0       3       0
  2275 ;;      Totals:         0      15       0
  2276 ;;Total ram usage:       15 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    3
  2279 ;; This function calls:
  2280 ;;		___ftpack
  2281 ;; This function is called by:
  2282 ;;		_calculate_pid
  2283 ;;		_auto_stop
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           
  2288                           ;psect for function ___ftdiv
  2289  02C8                     ___ftdiv:	
  2290                           
  2291                           ;incstack = 0
  2292                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2293  02C8  082E               	movf	___ftdiv@f1,w
  2294  02C9  00B1               	movwf	??___ftdiv
  2295  02CA  082F               	movf	___ftdiv@f1+1,w
  2296  02CB  00B2               	movwf	??___ftdiv+1
  2297  02CC  0830               	movf	___ftdiv@f1+2,w
  2298  02CD  00B3               	movwf	??___ftdiv+2
  2299  02CE  1003               	clrc
  2300  02CF  0D32               	rlf	??___ftdiv+1,w
  2301  02D0  0D33               	rlf	??___ftdiv+2,w
  2302  02D1  00B8               	movwf	___ftdiv@exp
  2303  02D2  0838               	movf	___ftdiv@exp,w
  2304  02D3  1D03               	btfss	3,2
  2305  02D4  2AD9               	goto	l1749
  2306  02D5  01AB               	clrf	?___ftdiv
  2307  02D6  01AC               	clrf	?___ftdiv+1
  2308  02D7  01AD               	clrf	?___ftdiv+2
  2309  02D8  0008               	return
  2310  02D9                     l1749:	
  2311  02D9  082B               	movf	___ftdiv@f2,w
  2312  02DA  00B1               	movwf	??___ftdiv
  2313  02DB  082C               	movf	___ftdiv@f2+1,w
  2314  02DC  00B2               	movwf	??___ftdiv+1
  2315  02DD  082D               	movf	___ftdiv@f2+2,w
  2316  02DE  00B3               	movwf	??___ftdiv+2
  2317  02DF  1003               	clrc
  2318  02E0  0D32               	rlf	??___ftdiv+1,w
  2319  02E1  0D33               	rlf	??___ftdiv+2,w
  2320  02E2  00B9               	movwf	___ftdiv@sign
  2321  02E3  0839               	movf	___ftdiv@sign,w
  2322  02E4  1D03               	btfss	3,2
  2323  02E5  2AEA               	goto	l415
  2324  02E6  01AB               	clrf	?___ftdiv
  2325  02E7  01AC               	clrf	?___ftdiv+1
  2326  02E8  01AD               	clrf	?___ftdiv+2
  2327  02E9  0008               	return
  2328  02EA                     l415:	
  2329  02EA  3089               	movlw	137
  2330  02EB  01B5               	clrf	___ftdiv@f3
  2331  02EC  01B6               	clrf	___ftdiv@f3+1
  2332  02ED  01B7               	clrf	___ftdiv@f3+2
  2333  02EE  0739               	addwf	___ftdiv@sign,w
  2334  02EF  00B1               	movwf	??___ftdiv
  2335  02F0  02B8               	subwf	___ftdiv@exp,f
  2336  02F1  0830               	movf	___ftdiv@f1+2,w
  2337  02F2  00B9               	movwf	___ftdiv@sign
  2338  02F3  082D               	movf	___ftdiv@f2+2,w
  2339  02F4  06B9               	xorwf	___ftdiv@sign,f
  2340  02F5  3080               	movlw	128
  2341  02F6  05B9               	andwf	___ftdiv@sign,f
  2342  02F7  3018               	movlw	24
  2343  02F8  17AF               	bsf	___ftdiv@f1+1,7
  2344  02F9  01B0               	clrf	___ftdiv@f1+2
  2345  02FA  17AC               	bsf	___ftdiv@f2+1,7
  2346  02FB  01AD               	clrf	___ftdiv@f2+2
  2347  02FC  00B4               	movwf	___ftdiv@cntr
  2348  02FD                     l1771:	
  2349  02FD  35B5               	lslf	___ftdiv@f3,f
  2350  02FE  0DB6               	rlf	___ftdiv@f3+1,f
  2351  02FF  0DB7               	rlf	___ftdiv@f3+2,f
  2352  0300  082D               	movf	___ftdiv@f2+2,w
  2353  0301  0230               	subwf	___ftdiv@f1+2,w
  2354  0302  1D03               	skipz
  2355  0303  2B0A               	goto	u1995
  2356  0304  082C               	movf	___ftdiv@f2+1,w
  2357  0305  022F               	subwf	___ftdiv@f1+1,w
  2358  0306  1D03               	skipz
  2359  0307  2B0A               	goto	u1995
  2360  0308  082B               	movf	___ftdiv@f2,w
  2361  0309  022E               	subwf	___ftdiv@f1,w
  2362  030A                     u1995:	
  2363  030A  1C03               	skipc
  2364  030B  2B13               	goto	l1777
  2365  030C  082B               	movf	___ftdiv@f2,w
  2366  030D  02AE               	subwf	___ftdiv@f1,f
  2367  030E  082C               	movf	___ftdiv@f2+1,w
  2368  030F  3BAF               	subwfb	___ftdiv@f1+1,f
  2369  0310  082D               	movf	___ftdiv@f2+2,w
  2370  0311  3BB0               	subwfb	___ftdiv@f1+2,f
  2371  0312  1435               	bsf	___ftdiv@f3,0
  2372  0313                     l1777:	
  2373  0313  35AE               	lslf	___ftdiv@f1,f
  2374  0314  0DAF               	rlf	___ftdiv@f1+1,f
  2375  0315  0DB0               	rlf	___ftdiv@f1+2,f
  2376  0316  0BB4               	decfsz	___ftdiv@cntr,f
  2377  0317  2AFD               	goto	l1771
  2378  0318  0835               	movf	___ftdiv@f3,w
  2379  0319  00A0               	movwf	___ftpack@arg
  2380  031A  0836               	movf	___ftdiv@f3+1,w
  2381  031B  00A1               	movwf	___ftpack@arg+1
  2382  031C  0837               	movf	___ftdiv@f3+2,w
  2383  031D  00A2               	movwf	___ftpack@arg+2
  2384  031E  0838               	movf	___ftdiv@exp,w
  2385  031F  00A3               	movwf	___ftpack@exp
  2386  0320  0839               	movf	___ftdiv@sign,w
  2387  0321  00A4               	movwf	___ftpack@sign
  2388  0322  23D9               	fcall	___ftpack
  2389  0323  0820               	movf	?___ftpack,w
  2390  0324  00AB               	movwf	?___ftdiv
  2391  0325  0821               	movf	?___ftpack+1,w
  2392  0326  00AC               	movwf	?___ftdiv+1
  2393  0327  0822               	movf	?___ftpack+2,w
  2394  0328  00AD               	movwf	?___ftdiv+2
  2395  0329  0008               	return
  2396  032A                     __end_of___ftdiv:	
  2397                           
  2398                           	psect	text12
  2399  053F                     __ptext12:	
  2400 ;; *************** function ___awtoft *****************
  2401 ;; Defined at:
  2402 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  c               2    8[BANK0 ] int 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  sign            1   11[BANK0 ] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  3    8[BANK0 ] float 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 1F/0
  2413 ;;		On exit  : 1F/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1
  2416 ;;      Params:         0       3       0
  2417 ;;      Locals:         0       1       0
  2418 ;;      Temps:          0       0       0
  2419 ;;      Totals:         0       4       0
  2420 ;;Total ram usage:        4 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    3
  2423 ;; This function calls:
  2424 ;;		___ftpack
  2425 ;; This function is called by:
  2426 ;;		_calculate_pid
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           
  2431                           ;psect for function ___awtoft
  2432  053F                     ___awtoft:	
  2433                           
  2434                           ;incstack = 0
  2435                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2436  053F  01AB               	clrf	___awtoft@sign
  2437  0540  1FA9               	btfss	___awtoft@c+1,7
  2438  0541  2D49               	goto	l1741
  2439  0542  09A8               	comf	___awtoft@c,f
  2440  0543  09A9               	comf	___awtoft@c+1,f
  2441  0544  0AA8               	incf	___awtoft@c,f
  2442  0545  1903               	skipnz
  2443  0546  0AA9               	incf	___awtoft@c+1,f
  2444  0547  01AB               	clrf	___awtoft@sign
  2445  0548  0AAB               	incf	___awtoft@sign,f
  2446  0549                     l1741:	
  2447  0549  0828               	movf	___awtoft@c,w
  2448  054A  00A0               	movwf	___ftpack@arg
  2449  054B  0829               	movf	___awtoft@c+1,w
  2450  054C  00A1               	movwf	___ftpack@arg+1
  2451  054D  308E               	movlw	142
  2452  054E  01A2               	clrf	___ftpack@arg+2
  2453  054F  00A3               	movwf	___ftpack@exp
  2454  0550  082B               	movf	___awtoft@sign,w
  2455  0551  00A4               	movwf	___ftpack@sign
  2456  0552  23D9               	fcall	___ftpack
  2457  0553  0820               	movf	?___ftpack,w
  2458  0554  00A8               	movwf	?___awtoft
  2459  0555  0821               	movf	?___ftpack+1,w
  2460  0556  00A9               	movwf	?___awtoft+1
  2461  0557  0822               	movf	?___ftpack+2,w
  2462  0558  00AA               	movwf	?___awtoft+2
  2463  0559  0008               	return
  2464  055A                     __end_of___awtoft:	
  2465                           
  2466                           	psect	text13
  2467  03D9                     __ptext13:	
  2468 ;; *************** function ___ftpack *****************
  2469 ;; Defined at:
  2470 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  arg             3    0[BANK0 ] unsigned um
  2473 ;;  exp             1    3[BANK0 ] unsigned char 
  2474 ;;  sign            1    4[BANK0 ] unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  3    0[BANK0 ] float 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0
  2481 ;; Tracked objects:
  2482 ;;		On entry : 1F/0
  2483 ;;		On exit  : 1F/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1
  2486 ;;      Params:         0       5       0
  2487 ;;      Locals:         0       0       0
  2488 ;;      Temps:          0       3       0
  2489 ;;      Totals:         0       8       0
  2490 ;;Total ram usage:        8 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    2
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		___awtoft
  2497 ;;		___ftadd
  2498 ;;		___ftdiv
  2499 ;;		___ftmul
  2500 ;;		___lwtoft
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function ___ftpack
  2506  03D9                     ___ftpack:	
  2507                           
  2508                           ;incstack = 0
  2509                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2510  03D9  0823               	movf	___ftpack@exp,w
  2511  03DA  1903               	btfsc	3,2
  2512  03DB  2BE1               	goto	l361
  2513  03DC  0822               	movf	___ftpack@arg+2,w
  2514  03DD  0421               	iorwf	___ftpack@arg+1,w
  2515  03DE  0420               	iorwf	___ftpack@arg,w
  2516  03DF  1D03               	skipz
  2517  03E0  2BE9               	goto	l1603
  2518  03E1                     l361:	
  2519  03E1  01A0               	clrf	?___ftpack
  2520  03E2  01A1               	clrf	?___ftpack+1
  2521  03E3  01A2               	clrf	?___ftpack+2
  2522  03E4  0008               	return
  2523  03E5                     l1601:	
  2524  03E5  0AA3               	incf	___ftpack@exp,f
  2525  03E6  36A2               	lsrf	___ftpack@arg+2,f
  2526  03E7  0CA1               	rrf	___ftpack@arg+1,f
  2527  03E8  0CA0               	rrf	___ftpack@arg,f
  2528  03E9                     l1603:	
  2529  03E9  30FE               	movlw	254
  2530  03EA  0522               	andwf	___ftpack@arg+2,w
  2531  03EB  1903               	btfsc	3,2
  2532  03EC  2BF7               	goto	l1607
  2533  03ED  2BE5               	goto	l1601
  2534  03EE                     l1605:	
  2535  03EE  0AA3               	incf	___ftpack@exp,f
  2536  03EF  0AA0               	incf	___ftpack@arg,f
  2537  03F0  1903               	skipnz
  2538  03F1  0AA1               	incf	___ftpack@arg+1,f
  2539  03F2  1903               	skipnz
  2540  03F3  0AA2               	incf	___ftpack@arg+2,f
  2541  03F4  36A2               	lsrf	___ftpack@arg+2,f
  2542  03F5  0CA1               	rrf	___ftpack@arg+1,f
  2543  03F6  0CA0               	rrf	___ftpack@arg,f
  2544  03F7                     l1607:	
  2545  03F7  30FF               	movlw	255
  2546  03F8  0522               	andwf	___ftpack@arg+2,w
  2547  03F9  1903               	btfsc	3,2
  2548  03FA  2C04               	goto	l1611
  2549  03FB  2BEE               	goto	l1605
  2550  03FC                     l1613:	
  2551  03FC  3002               	movlw	2
  2552  03FD  0223               	subwf	___ftpack@exp,w
  2553  03FE  1C03               	btfss	3,0
  2554  03FF  2C06               	goto	l373
  2555  0400  03A3               	decf	___ftpack@exp,f
  2556  0401  35A0               	lslf	___ftpack@arg,f
  2557  0402  0DA1               	rlf	___ftpack@arg+1,f
  2558  0403  0DA2               	rlf	___ftpack@arg+2,f
  2559  0404                     l1611:	
  2560  0404  1FA1               	btfss	___ftpack@arg+1,7
  2561  0405  2BFC               	goto	l1613
  2562  0406                     l373:	
  2563  0406  1C23               	btfss	___ftpack@exp,0
  2564  0407  13A1               	bcf	___ftpack@arg+1,7
  2565  0408  36A3               	lsrf	___ftpack@exp,f
  2566  0409  0823               	movf	___ftpack@exp,w
  2567  040A  00A7               	movwf	??___ftpack+2
  2568  040B  01A6               	clrf	??___ftpack+1
  2569  040C  01A5               	clrf	??___ftpack
  2570  040D  0825               	movf	??___ftpack,w
  2571  040E  04A0               	iorwf	___ftpack@arg,f
  2572  040F  0826               	movf	??___ftpack+1,w
  2573  0410  04A1               	iorwf	___ftpack@arg+1,f
  2574  0411  0827               	movf	??___ftpack+2,w
  2575  0412  04A2               	iorwf	___ftpack@arg+2,f
  2576  0413  0824               	movf	___ftpack@sign,w
  2577  0414  1D03               	btfss	3,2
  2578  0415  17A2               	bsf	___ftpack@arg+2,7
  2579  0416  0008               	return
  2580  0417                     __end_of___ftpack:	
  2581                           
  2582                           	psect	text14
  2583  0453                     __ptext14:	
  2584 ;; *************** function _M_control *****************
  2585 ;; Defined at:
  2586 ;;		line 131 in file "main.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  ctr             2   54[BANK0 ] int 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, pclath, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 1F/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1
  2600 ;;      Params:         0       2       0
  2601 ;;      Locals:         0       0       0
  2602 ;;      Temps:          0       1       0
  2603 ;;      Totals:         0       3       0
  2604 ;;Total ram usage:        3 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    3
  2607 ;; This function calls:
  2608 ;;		_PWM_set_duty
  2609 ;;		___wmul
  2610 ;; This function is called by:
  2611 ;;		_calculate_pid
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function _M_control
  2618  0453                     _M_control:	
  2619  0453                     l1717:	
  2620                           ;incstack = 0
  2621                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
  2622                           
  2623                           
  2624                           ;main.c: 133: if (ctr == 0)
  2625  0453  0856               	movf	M_control@ctr,w
  2626  0454  0457               	iorwf	M_control@ctr+1,w
  2627  0455  1D03               	btfss	3,2
  2628  0456  2C5C               	goto	l1721
  2629                           
  2630                           ;main.c: 134: {
  2631                           ;main.c: 135: PWM_set_duty(ctr);
  2632  0457  0857               	movf	M_control@ctr+1,w
  2633  0458  00A1               	movwf	PWM_set_duty@duty+1
  2634  0459  0856               	movf	M_control@ctr,w
  2635  045A  00A0               	movwf	PWM_set_duty@duty
  2636  045B  2505               	fcall	_PWM_set_duty
  2637  045C                     l1721:	
  2638                           
  2639                           ;main.c: 136: }
  2640                           ;main.c: 137: if (ctr > 0)
  2641  045C  0020               	movlb	0	; select bank0
  2642  045D  0857               	movf	M_control@ctr+1,w
  2643  045E  3A80               	xorlw	128
  2644  045F  00D8               	movwf	??_M_control
  2645  0460  3080               	movlw	128
  2646  0461  0258               	subwf	??_M_control,w
  2647  0462  1D03               	skipz
  2648  0463  2C66               	goto	u1945
  2649  0464  3001               	movlw	1
  2650  0465  0256               	subwf	M_control@ctr,w
  2651  0466                     u1945:	
  2652  0466  1C03               	skipc
  2653  0467  2C70               	goto	l1727
  2654                           
  2655                           ;main.c: 138: {
  2656                           ;main.c: 139: LATAbits.LATA0 = 1;
  2657  0468  0022               	movlb	2	; select bank2
  2658  0469  140C               	bsf	12,0	;volatile
  2659                           
  2660                           ;main.c: 140: PWM_set_duty(ctr);
  2661  046A  0020               	movlb	0	; select bank0
  2662  046B  0857               	movf	M_control@ctr+1,w
  2663  046C  00A1               	movwf	PWM_set_duty@duty+1
  2664  046D  0856               	movf	M_control@ctr,w
  2665  046E  00A0               	movwf	PWM_set_duty@duty
  2666  046F  2505               	fcall	_PWM_set_duty
  2667  0470                     l1727:	
  2668                           
  2669                           ;main.c: 141: }
  2670                           ;main.c: 142: if (ctr < 0)
  2671  0470  0020               	movlb	0	; select bank0
  2672  0471  1FD7               	btfss	M_control@ctr+1,7
  2673  0472  0008               	return
  2674                           
  2675                           ;main.c: 143: {
  2676                           ;main.c: 144: LATAbits.LATA0 = 0;
  2677  0473  0022               	movlb	2	; select bank2
  2678  0474  100C               	bcf	12,0	;volatile
  2679                           
  2680                           ;main.c: 145: ctr = ctr * -1;
  2681  0475  30FF               	movlw	255
  2682  0476  0020               	movlb	0	; select bank0
  2683  0477  00A0               	movwf	___wmul@multiplier
  2684  0478  00A1               	movwf	___wmul@multiplier+1
  2685  0479  0857               	movf	M_control@ctr+1,w
  2686  047A  00A3               	movwf	___wmul@multiplicand+1
  2687  047B  0856               	movf	M_control@ctr,w
  2688  047C  00A2               	movwf	___wmul@multiplicand
  2689  047D  255A               	fcall	___wmul
  2690  047E  0821               	movf	?___wmul+1,w
  2691  047F  00D7               	movwf	M_control@ctr+1
  2692  0480  0820               	movf	?___wmul,w
  2693  0481  00D6               	movwf	M_control@ctr
  2694                           
  2695                           ;main.c: 146: PWM_set_duty(ctr);
  2696  0482  0857               	movf	M_control@ctr+1,w
  2697  0483  00A1               	movwf	PWM_set_duty@duty+1
  2698  0484  0856               	movf	M_control@ctr,w
  2699  0485  00A0               	movwf	PWM_set_duty@duty
  2700  0486  2D05               	ljmp	l1621
  2701  0487                     __end_of_M_control:	
  2702                           
  2703                           	psect	text15
  2704  055A                     __ptext15:	
  2705 ;; *************** function ___wmul *****************
  2706 ;; Defined at:
  2707 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2710 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  product         2    4[BANK0 ] unsigned int 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2    0[BANK0 ] unsigned int 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0
  2717 ;; Tracked objects:
  2718 ;;		On entry : 1F/0
  2719 ;;		On exit  : 1F/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1
  2722 ;;      Params:         0       4       0
  2723 ;;      Locals:         0       2       0
  2724 ;;      Temps:          0       0       0
  2725 ;;      Totals:         0       6       0
  2726 ;;Total ram usage:        6 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    2
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_M_control
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function ___wmul
  2738  055A                     ___wmul:	
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2742  055A  01A4               	clrf	___wmul@product
  2743  055B  01A5               	clrf	___wmul@product+1
  2744  055C                     l1627:	
  2745  055C  1C20               	btfss	___wmul@multiplier,0
  2746  055D  2D62               	goto	l1631
  2747  055E  0822               	movf	___wmul@multiplicand,w
  2748  055F  07A4               	addwf	___wmul@product,f
  2749  0560  0823               	movf	___wmul@multiplicand+1,w
  2750  0561  3DA5               	addwfc	___wmul@product+1,f
  2751  0562                     l1631:	
  2752  0562  35A2               	lslf	___wmul@multiplicand,f
  2753  0563  0DA3               	rlf	___wmul@multiplicand+1,f
  2754  0564  36A1               	lsrf	___wmul@multiplier+1,f
  2755  0565  0CA0               	rrf	___wmul@multiplier,f
  2756  0566  0820               	movf	___wmul@multiplier,w
  2757  0567  0421               	iorwf	___wmul@multiplier+1,w
  2758  0568  1D03               	btfss	3,2
  2759  0569  2D5C               	goto	l1627
  2760  056A  0825               	movf	___wmul@product+1,w
  2761  056B  00A1               	movwf	?___wmul+1
  2762  056C  0824               	movf	___wmul@product,w
  2763  056D  00A0               	movwf	?___wmul
  2764  056E  0008               	return
  2765  056F                     __end_of___wmul:	
  2766                           
  2767                           	psect	text16
  2768  0505                     __ptext16:	
  2769 ;; *************** function _PWM_set_duty *****************
  2770 ;; Defined at:
  2771 ;;		line 122 in file "main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  duty            2    0[BANK0 ] int 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  2    0[BANK0 ] int 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 1F/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1
  2785 ;;      Params:         0       2       0
  2786 ;;      Locals:         0       0       0
  2787 ;;      Temps:          0       2       0
  2788 ;;      Totals:         0       4       0
  2789 ;;Total ram usage:        4 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    2
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_M_control
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function _PWM_set_duty
  2802  0505                     _PWM_set_duty:	
  2803  0505                     l1621:	
  2804                           ;incstack = 0
  2805                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
  2806                           
  2807                           
  2808                           ;main.c: 124: if (duty < 1024) {
  2809  0505  0821               	movf	PWM_set_duty@duty+1,w
  2810  0506  3A80               	xorlw	128
  2811  0507  00A2               	movwf	??_PWM_set_duty
  2812  0508  3084               	movlw	132
  2813  0509  0222               	subwf	??_PWM_set_duty,w
  2814  050A  1D03               	skipz
  2815  050B  2D0E               	goto	u1715
  2816  050C  3000               	movlw	0
  2817  050D  0220               	subwf	PWM_set_duty@duty,w
  2818  050E                     u1715:	
  2819  050E  1803               	skipnc
  2820  050F  0008               	return
  2821                           
  2822                           ;main.c: 125: CCPR1L = (0xFF & ((unsigned int) duty >> 2));
  2823  0510  0020               	movlb	0	; select bank0
  2824  0511  0821               	movf	PWM_set_duty@duty+1,w
  2825  0512  00A3               	movwf	??_PWM_set_duty+1
  2826  0513  0820               	movf	PWM_set_duty@duty,w
  2827  0514  00A2               	movwf	??_PWM_set_duty
  2828  0515  36A3               	lsrf	??_PWM_set_duty+1,f
  2829  0516  0CA2               	rrf	??_PWM_set_duty,f
  2830  0517  36A3               	lsrf	??_PWM_set_duty+1,f
  2831  0518  0CA2               	rrf	??_PWM_set_duty,f
  2832  0519  0822               	movf	??_PWM_set_duty,w
  2833  051A  0025               	movlb	5	; select bank5
  2834  051B  0091               	movwf	17	;volatile
  2835                           
  2836                           ;main.c: 126: CCP1CON = (0x0C | (0x30 & ((unsigned int) duty << 4)));
  2837  051C  0020               	movlb	0	; select bank0
  2838  051D  0E20               	swapf	PWM_set_duty@duty,w
  2839  051E  39F0               	andlw	240
  2840  051F  3930               	andlw	48
  2841  0520  380C               	iorlw	12
  2842  0521  0025               	movlb	5	; select bank5
  2843  0522  0093               	movwf	19	;volatile
  2844  0523  0008               	return
  2845  0524                     __end_of_PWM_set_duty:	
  2846                           
  2847                           	psect	intentry
  2848  0004                     __pintentry:	
  2849 ;; *************** function _isr *****************
  2850 ;; Defined at:
  2851 ;;		line 54 in file "main.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, pclath, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 1F/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1
  2865 ;;      Params:         0       0       0
  2866 ;;      Locals:         0       0       0
  2867 ;;      Temps:          0       0       0
  2868 ;;      Totals:         0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    1
  2872 ;; This function calls:
  2873 ;;		___lwdiv
  2874 ;;		i1___wmul
  2875 ;; This function is called by:
  2876 ;;		Interrupt level 1
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880  0004                     _isr:	
  2881                           
  2882                           ;incstack = 0
  2883  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2884                           
  2885                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2886  0005  3180               	pagesel	$
  2887                           
  2888                           ;main.c: 56: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  2889  0006  1C0B               	btfss	11,0	;volatile
  2890  0007  281B               	goto	i1l2031
  2891  0008  0027               	movlb	7	; select bank7
  2892  0009  1E13               	btfss	19,4	;volatile
  2893  000A  281B               	goto	i1l2031
  2894                           
  2895                           ;main.c: 57: {
  2896                           ;main.c: 58: INTCONbits.IOCIE = 0;
  2897  000B  118B               	bcf	11,3	;volatile
  2898                           
  2899                           ;main.c: 59: counter++;
  2900  000C  0021               	movlb	1	; select bank1
  2901  000D  0AAC               	incf	_counter^(0+128),f
  2902  000E  1903               	skipnz
  2903  000F  0AAD               	incf	(_counter+1)^(0+128),f
  2904                           
  2905                           ;main.c: 60: if (steps > 0)
  2906  0010  082A               	movf	_steps^(0+128),w
  2907  0011  042B               	iorwf	(_steps+1)^(0+128),w
  2908  0012  1903               	btfsc	3,2
  2909  0013  2818               	goto	i1l2027
  2910                           
  2911                           ;main.c: 61: {
  2912                           ;main.c: 62: steps--;
  2913  0014  3001               	movlw	1
  2914  0015  02AA               	subwf	_steps^(0+128),f
  2915  0016  3000               	movlw	0
  2916  0017  3BAB               	subwfb	(_steps+1)^(0+128),f
  2917  0018                     i1l2027:	
  2918                           
  2919                           ;main.c: 63: }
  2920                           ;main.c: 64: IOCAFbits.IOCAF4 = 0;
  2921  0018  0027               	movlb	7	; select bank7
  2922  0019  1213               	bcf	19,4	;volatile
  2923                           
  2924                           ;main.c: 65: INTCONbits.IOCIE = 1;
  2925  001A  158B               	bsf	11,3	;volatile
  2926  001B                     i1l2031:	
  2927                           
  2928                           ;main.c: 66: }
  2929                           ;main.c: 67: if (PIR1bits.TMR1IF == 1)
  2930  001B  0020               	movlb	0	; select bank0
  2931  001C  1C11               	btfss	17,0	;volatile
  2932  001D  284C               	goto	i1l73
  2933                           
  2934                           ;main.c: 68: {
  2935                           ;main.c: 69: INTCONbits.IOCIE = 0;
  2936  001E  118B               	bcf	11,3	;volatile
  2937                           
  2938                           ;main.c: 70: T1CONbits.TMR1ON = 0;
  2939  001F  1018               	bcf	24,0	;volatile
  2940                           
  2941                           ;main.c: 71: rpm = (counter * 300) / gear;
  2942  0020  3096               	movlw	150
  2943  0021  00F6               	movwf	___lwdiv@divisor
  2944  0022  01F7               	clrf	___lwdiv@divisor+1
  2945  0023  0021               	movlb	1	; select bank1
  2946  0024  082D               	movf	(_counter+1)^(0+128),w
  2947  0025  00F1               	movwf	i1___wmul@multiplier+1
  2948  0026  082C               	movf	_counter^(0+128),w
  2949  0027  00F0               	movwf	i1___wmul@multiplier
  2950  0028  302C               	movlw	44
  2951  0029  00F2               	movwf	i1___wmul@multiplicand
  2952  002A  3001               	movlw	1
  2953  002B  00F3               	movwf	i1___wmul@multiplicand+1
  2954  002C  256F               	fcall	i1___wmul
  2955  002D  0871               	movf	?i1___wmul+1,w
  2956  002E  00F9               	movwf	___lwdiv@dividend+1
  2957  002F  0870               	movf	?i1___wmul,w
  2958  0030  00F8               	movwf	___lwdiv@dividend
  2959  0031  24E0               	fcall	___lwdiv
  2960  0032  0877               	movf	?___lwdiv+1,w
  2961  0033  00A9               	movwf	(_rpm+1)^(0+128)
  2962  0034  0876               	movf	?___lwdiv,w
  2963  0035  00A8               	movwf	_rpm^(0+128)
  2964                           
  2965                           ;main.c: 72: counter = 0;
  2966  0036  01AC               	clrf	_counter^(0+128)
  2967  0037  01AD               	clrf	(_counter+1)^(0+128)
  2968                           
  2969                           ;main.c: 73: if (LATAbits.LATA0 == 0)
  2970  0038  0022               	movlb	2	; select bank2
  2971  0039  180C               	btfsc	12,0	;volatile
  2972  003A  2848               	goto	i1l2043
  2973                           
  2974                           ;main.c: 74: {
  2975                           ;main.c: 75: rpm = rpm *-1;
  2976  003B  30FF               	movlw	255
  2977  003C  00F0               	movwf	i1___wmul@multiplier
  2978  003D  00F1               	movwf	i1___wmul@multiplier+1
  2979  003E  0021               	movlb	1	; select bank1
  2980  003F  0829               	movf	(_rpm+1)^(0+128),w
  2981  0040  00F3               	movwf	i1___wmul@multiplicand+1
  2982  0041  0828               	movf	_rpm^(0+128),w
  2983  0042  00F2               	movwf	i1___wmul@multiplicand
  2984  0043  256F               	fcall	i1___wmul
  2985  0044  0871               	movf	?i1___wmul+1,w
  2986  0045  00A9               	movwf	(_rpm+1)^(0+128)
  2987  0046  0870               	movf	?i1___wmul,w
  2988  0047  00A8               	movwf	_rpm^(0+128)
  2989  0048                     i1l2043:	
  2990                           
  2991                           ;main.c: 76: }
  2992                           ;main.c: 77: INTCONbits.IOCIE = 1;
  2993  0048  158B               	bsf	11,3	;volatile
  2994                           
  2995                           ;main.c: 78: PIR1bits.TMR1IF = 0;
  2996  0049  0020               	movlb	0	; select bank0
  2997  004A  1011               	bcf	17,0	;volatile
  2998                           
  2999                           ;main.c: 79: T1CONbits.TMR1ON = 1;
  3000  004B  1418               	bsf	24,0	;volatile
  3001  004C                     i1l73:	
  3002  004C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3003  004D  0009               	retfie
  3004  004E                     __end_of_isr:	
  3005                           
  3006                           	psect	text18
  3007  056F                     __ptext18:	
  3008 ;; *************** function i1___wmul *****************
  3009 ;; Defined at:
  3010 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  multiplier      2    0[COMMON] unsigned int 
  3013 ;;  multiplicand    2    2[COMMON] unsigned int 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  __wmul          2    4[COMMON] unsigned int 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  2    0[COMMON] unsigned int 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 1F/1
  3022 ;;		On exit  : 1F/1
  3023 ;;		Unchanged: 1F/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1
  3025 ;;      Params:         4       0       0
  3026 ;;      Locals:         2       0       0
  3027 ;;      Temps:          0       0       0
  3028 ;;      Totals:         6       0       0
  3029 ;;Total ram usage:        6 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_isr
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function i1___wmul
  3040  056F                     i1___wmul:	
  3041                           
  3042                           ;incstack = 0
  3043                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  3044  056F  01F4               	clrf	i1___wmul@product
  3045  0570  01F5               	clrf	i1___wmul@product+1
  3046  0571                     i1l2001:	
  3047  0571  1C70               	btfss	i1___wmul@multiplier,0
  3048  0572  2D77               	goto	i1l2005
  3049  0573  0872               	movf	i1___wmul@multiplicand,w
  3050  0574  07F4               	addwf	i1___wmul@product,f
  3051  0575  0873               	movf	i1___wmul@multiplicand+1,w
  3052  0576  3DF5               	addwfc	i1___wmul@product+1,f
  3053  0577                     i1l2005:	
  3054  0577  35F2               	lslf	i1___wmul@multiplicand,f
  3055  0578  0DF3               	rlf	i1___wmul@multiplicand+1,f
  3056  0579  36F1               	lsrf	i1___wmul@multiplier+1,f
  3057  057A  0CF0               	rrf	i1___wmul@multiplier,f
  3058  057B  0870               	movf	i1___wmul@multiplier,w
  3059  057C  0471               	iorwf	i1___wmul@multiplier+1,w
  3060  057D  1D03               	btfss	3,2
  3061  057E  2D71               	goto	i1l2001
  3062  057F  0875               	movf	i1___wmul@product+1,w
  3063  0580  00F1               	movwf	?i1___wmul+1
  3064  0581  0874               	movf	i1___wmul@product,w
  3065  0582  00F0               	movwf	?i1___wmul
  3066  0583  0008               	return
  3067  0584                     __end_ofi1___wmul:	
  3068                           
  3069                           	psect	text19
  3070  04E0                     __ptext19:	
  3071 ;; *************** function ___lwdiv *****************
  3072 ;; Defined at:
  3073 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  divisor         2    6[COMMON] unsigned int 
  3076 ;;  dividend        2    8[COMMON] unsigned int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  quotient        2   11[COMMON] unsigned int 
  3079 ;;  counter         1   10[COMMON] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  2    6[COMMON] unsigned int 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 1F/1
  3086 ;;		On exit  : 1F/1
  3087 ;;		Unchanged: 1F/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1
  3089 ;;      Params:         4       0       0
  3090 ;;      Locals:         3       0       0
  3091 ;;      Temps:          0       0       0
  3092 ;;      Totals:         7       0       0
  3093 ;;Total ram usage:        7 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_isr
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function ___lwdiv
  3104  04E0                     ___lwdiv:	
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3108  04E0  01FB               	clrf	___lwdiv@quotient
  3109  04E1  01FC               	clrf	___lwdiv@quotient+1
  3110  04E2  0876               	movf	___lwdiv@divisor,w
  3111  04E3  0477               	iorwf	___lwdiv@divisor+1,w
  3112  04E4  1903               	btfsc	3,2
  3113  04E5  2D00               	goto	i1l1995
  3114  04E6  01FA               	clrf	___lwdiv@counter
  3115  04E7                     L3:	
  3116  04E7  0AFA               	incf	___lwdiv@counter,f
  3117  04E8  1BF7               	btfsc	___lwdiv@divisor+1,7
  3118  04E9  2CED               	goto	i1l1983
  3119  04EA  35F6               	lslf	___lwdiv@divisor,f
  3120  04EB  0DF7               	rlf	___lwdiv@divisor+1,f
  3121  04EC  2CE7               	goto	L3
  3122  04ED                     i1l1983:	
  3123  04ED  35FB               	lslf	___lwdiv@quotient,f
  3124  04EE  0DFC               	rlf	___lwdiv@quotient+1,f
  3125  04EF  0877               	movf	___lwdiv@divisor+1,w
  3126  04F0  0279               	subwf	___lwdiv@dividend+1,w
  3127  04F1  1D03               	skipz
  3128  04F2  2CF5               	goto	u234_25
  3129  04F3  0876               	movf	___lwdiv@divisor,w
  3130  04F4  0278               	subwf	___lwdiv@dividend,w
  3131  04F5                     u234_25:	
  3132  04F5  1C03               	skipc
  3133  04F6  2CFC               	goto	i1l1991
  3134  04F7  0876               	movf	___lwdiv@divisor,w
  3135  04F8  02F8               	subwf	___lwdiv@dividend,f
  3136  04F9  0877               	movf	___lwdiv@divisor+1,w
  3137  04FA  3BF9               	subwfb	___lwdiv@dividend+1,f
  3138  04FB  147B               	bsf	___lwdiv@quotient,0
  3139  04FC                     i1l1991:	
  3140  04FC  36F7               	lsrf	___lwdiv@divisor+1,f
  3141  04FD  0CF6               	rrf	___lwdiv@divisor,f
  3142  04FE  0BFA               	decfsz	___lwdiv@counter,f
  3143  04FF  2CED               	goto	i1l1983
  3144  0500                     i1l1995:	
  3145  0500  087C               	movf	___lwdiv@quotient+1,w
  3146  0501  00F7               	movwf	?___lwdiv+1
  3147  0502  087B               	movf	___lwdiv@quotient,w
  3148  0503  00F6               	movwf	?___lwdiv
  3149  0504  0008               	return
  3150  0505                     __end_of___lwdiv:	
  3151  007E                     btemp	set	126	;btemp
  3152  007E                     int$flags	set	126
  3153  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    2
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     78      79
    BANK1            32      0      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    ___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _main->_PID
    _auto_stop->___fttol
    ___lwtoft->___ftpack
    _PID->_calculate_pid
    _calculate_pid->___ftsub
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___awtoft->___ftpack
    _M_control->___fttol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   30478
                                             77 BANK0      1     1      0
                          _M_control
                                _PID
                           _PWM_Init
                       _PWM_set_duty
                          _auto_stop
 ---------------------------------------------------------------------------------
 (1) _auto_stop                                            2     0      2    9063
                                             54 BANK0      2     0      2
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2275
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                  4     2      2   19973
                                             73 BANK0      4     2      2
                      _calculate_pid
 ---------------------------------------------------------------------------------
 (2) _calculate_pid                                       14    12      2   19784
                                             59 BANK0     14    12      2
                          _M_control
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     501
                                             41 BANK0     13     9      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4229
                                             53 BANK0      6     0      6
                            ___ftadd
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4003
                                             41 BANK0     12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3374
                                             26 BANK0     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2814
                                             11 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2357
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2128
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _M_control                                            3     1      2    1089
                                             54 BANK0      3     1      2
                       _PWM_set_duty
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PWM_set_duty                                         4     2      2     353
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  0     0      0     647
                            ___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1___wmul                                             6     2      4     276
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     371
                                              6 COMMON     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _M_control
     _PWM_set_duty
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___wmul (ARG)
   _PID
     _calculate_pid
       _M_control
         _PWM_set_duty
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___wmul (ARG)
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
   _PWM_Init
   _PWM_set_duty
   _auto_stop
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack

 _isr (ROOT)
   ___lwdiv
     i1___wmul (ARG)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6A       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       E       8       43.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      6A       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Jul 11 15:05:49 2018

            __CFG_CP$OFF 0000                       l98 03B6      ___wmul@multiplicand 0022  
      calculate_pid@rpm2 0061         i1___wmul@product 0074             ___ftadd@exp1 0054  
           ___ftadd@exp2 0053             ___ftadd@sign 0052                      l415 02EA  
                    l361 03E1                      l373 0406                      l397 0222  
                    _PR2 001B                      _PID 0387             __CFG_CPD$OFF 0000  
                    _isr 0004                      _rpm 00A8             __CFG_BORV$LO 0000  
                    wreg 0009       calculate_pid@error 0063             __CFG_LVP$OFF 0000  
                   ?_PID 0069             ___ftdiv@cntr 0034             ___ftdiv@sign 0039  
                   l1601 03E5                     l1611 0404                     l1603 03E9  
                   l2083 043A                     l1621 0505                     l1613 03FC  
                   l1605 03EE                     l1701 0238                     l2085 044E  
                   l1631 0562                     l1607 03F7                     l1721 045C  
                   l1713 024C                     l1627 055C                     l1651 01D4  
                   l1717 0453                     l1741 0549                     l1813 0280  
                   l1901 037E                     l1727 0470                     l1831 0294  
                   l1647 01CD                     l1809 026F                     l1681 020C  
                   l1657 01E3                     l1905 005A                     l1771 02FD  
                   l1843 02A6                     l1835 029C                     l1675 01FF  
                   l1749 02D9                     l1677 0203                     l1669 01F1  
                   l1861 052B                     l1941 0181                     l1933 0139  
                   l1847 02AE                     l1695 022D                     l1687 021A  
                   l1679 0208                     l1777 0313                     l1793 04D2  
                   l1689 021E                     l1929 012A                     l1961 03B9  
                   l1867 0337                     l1947 019D                     l1789 04C3  
                   l1885 035C                     l1869 033C                     l1895 0367  
                   l1967 03CB                     l1897 0370                     l1889 0363  
                   ?_isr 0070                     u2125 0343                     u2215 016F  
                   u2250 0396                     u2235 018B                     u2264 0398  
                   u1715 050E                     u2275 03A1                     u2295 03B2  
                   u2447 0448                     u2457 03C1                     u1945 0466  
                   u1995 030A                     i1l73 004C                     _WPUA 020C  
           __CFG_WRT$OFF 0000                     _gear 05A6                     _main 0417  
           ___ftpack@arg 0020                     _lset 00A6             ___ftpack@exp 0023  
                   fsr0h 0005                     indf0 0000                     fsr0l 0004  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 004E  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000             ___ftmul@cntr 0047  
           ___ftmul@sign 0048                    ??_PID 006B             ___fttol@exp1 0055  
           ___fttol@lval 0051                    ??_isr 007D            __CFG_PLLEN$ON 0000  
  __size_of_PWM_set_duty 001F                    ?_main 0070          __end_of___ftadd 025E  
          __CFG_WDTE$OFF 0000          __end_of___ftdiv 032A          __end_of___ftmul 02C8  
                  _T1CON 0018          __end_of___ftsub 053F          __end_of___fttol 0387  
                  _T2CON 001C          __end_of___lwdiv 0505                    _TRISA 008C  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000            ___awtoft@sign 002B  
          ___ftpack@sign 0024                    _steps 00AA         __end_of_PWM_Init 05A0  
       __end_ofi1___wmul 0584                    status 0003      i1___wmul@multiplier 0070  
                  wtemp0 007E             _PWM_set_duty 0505          __initialization 004F  
           __end_of_gear 05A8             __end_of_main 0453                   ??_main 006D  
          ___fttol@sign1 0050                   PID@set 0069       __size_of_M_control 0034  
                 _CCPR1L 0291         __end_of___awtoft 055A                   _ANSELA 018C  
       __end_of___ftpack 0417                   i1l2001 0571                   i1l2005 0577  
                 i1l2031 001B                   i1l2043 0048                   i1l2027 0018  
                 i1l1991 04FC                   i1l1983 04ED                   i1l1995 0500  
                 _INTCON 000B                   u234_25 04F5         __end_of___lwtoft 0594  
                 _OSCCON 0099                   ___ftge 04B4                   ___wmul 055A  
              ??___ftadd 004F           __CFG_STVREN$ON 0000                ??___ftdiv 0031  
              ??___ftmul 0040                ??___ftsub 005B                ??___fttol 004D  
              ??___lwdiv 007A    ___ftmul@f3_as_product 0044  __end_of__initialization 0057  
             ___ftadd@f1 0049               ___ftadd@f2 004C               ___ftge@ff1 0020  
             ___ftge@ff2 0023               ___ftdiv@f1 002E               ___ftdiv@f2 002B  
             ___ftdiv@f3 0035               ___awtoft@c 0028               ___ftmul@f1 003A  
             ___ftmul@f2 003D               ___ftsub@f1 0058               ___ftsub@f2 0055  
             ___fttol@f1 0049           __pcstackCOMMON 0070        __end_of_M_control 0487  
             ___lwtoft@c 0028                ?_PWM_Init 0070                ?i1___wmul 0070  
         _OPTION_REGbits 0095               __pbssBANK1 00A0       __size_of_auto_stop 002D  
             __pmaintext 0417        _calculate_pid$766 005E                  ?___ftge 0020  
                ?___wmul 0020               __pintentry 0004                  _CCP1CON 0293  
              ?___awtoft 0028                ?___ftpack 0020               ??_PWM_Init 0020  
             ??i1___wmul 0074                ?___lwtoft 0028   __size_of_calculate_pid 0150  
       PWM_set_duty@duty 0020          __size_of___ftge 002C                  ___ftadd 01AA  
                ___ftdiv 02C8          __size_of___wmul 0015                  ___ftmul 025E  
                ___ftsub 0524                  ___fttol 032A                  ___lwdiv 04E0  
             ??___awtoft 002B               ??___ftpack 0025                  __ptext1 0487  
                __ptext2 0584                  __ptext3 0594                  __ptext4 0387  
                __ptext5 005A                  __ptext6 032A                  __ptext7 0524  
                __ptext8 01AA                  __ptext9 025E        __end_of_auto_stop 04B4  
             ??___lwtoft 002B             __size_of_PID 0052                _T1CONbits 0018  
                _counter 00AC             __size_of_isr 004A                _IOCAFbits 0393  
              _IOCANbits 0392                  clrloop0 05A1     end_of_initialization 0057  
          _calculate_pid 005A    i1___wmul@multiplicand 0072         __CFG_FOSC$INTOSC 0000  
       calculate_pid@pid 0066         calculate_pid@set 005B              ___ftdiv@exp 0038  
         ?_calculate_pid 005B               _zero_cross 0370              ___ftmul@exp 0043  
         __end_of___ftge 04E0           __end_of___wmul 056F                _M_control 0453  
          __pbitbssBANK0 0370        __size_of_PWM_Init 000C      start_initialization 004F  
      __size_ofi1___wmul 0015              __end_of_PID 03D9              __end_of_isr 004E  
            _accumulator 00A3                 ??___ftge 0026                 ??___wmul 0024  
             ?_M_control 0056        __size_of___awtoft 001B        __size_of___ftpack 003E  
              ___latbits 0000        __size_of___lwtoft 0010            __pcstackBANK0 0020  
        ??_calculate_pid 005D            ?_PWM_set_duty 0020         ___lwdiv@dividend 0078  
               ?___ftadd 0049                 ?___ftdiv 002B                 ?___ftmul 003A  
               ?___ftsub 0055                 ?___fttol 0049                 ?___lwdiv 0076  
              _auto_stop 0487         ___lwdiv@quotient 007B                _lasterror 00A0  
         ___wmul@product 0024                 _LATAbits 010C                clear_ram0 05A0  
               _PIE1bits 0091           ??_PWM_set_duty 0022                 _PIR1bits 0011  
            ??_M_control 0058                 _PWM_Init 0594        ___wmul@multiplier 0020  
               i1___wmul 056F               ?_auto_stop 0056               _APFCONbits 011D  
       __size_of___ftadd 00B4         __size_of___ftdiv 0062         __size_of___ftmul 006A  
       __size_of___ftsub 001B         __size_of___fttol 005D         __size_of___lwdiv 0025  
               ___awtoft 053F                 ___ftpack 03D9                 ___lwtoft 0584  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007A                 __ptext10 04B4  
               __ptext11 02C8                 __ptext12 053F                 __ptext13 03D9  
               __ptext14 0453                 __ptext15 055A                 __ptext16 0505  
               __ptext18 056F                 __ptext19 04E0            __size_of_main 003C  
               int$flags 007E               _INTCONbits 000B     __end_of_PWM_set_duty 0524  
            ??_auto_stop 0058                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
      auto_stop@distance 0056            __pstringtext1 05A6             M_control@ctr 0056  
  __end_of_calculate_pid 01AA  
