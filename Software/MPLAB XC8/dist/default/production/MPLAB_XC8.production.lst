

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Sep 25 12:39:12 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	swtext1,local,class=CONST,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.00
    42                           ; Generated 27/05/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC12F1840 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011D                     	;# 
   127  018C                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0197                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0294                     	;# 
   170  0295                     	;# 
   171  0295                     	;# 
   172  0296                     	;# 
   173  0391                     	;# 
   174  0392                     	;# 
   175  0393                     	;# 
   176  039A                     	;# 
   177  039C                     	;# 
   178  039D                     	;# 
   179  039E                     	;# 
   180  039F                     	;# 
   181  0FE4                     	;# 
   182  0FE5                     	;# 
   183  0FE6                     	;# 
   184  0FE7                     	;# 
   185  0FE8                     	;# 
   186  0FE9                     	;# 
   187  0FEA                     	;# 
   188  0FEB                     	;# 
   189  0FED                     	;# 
   190  0FEE                     	;# 
   191  0FEF                     	;# 
   192                           
   193                           	psect	eeprom_data
   194  0000' 0024 0001 0001 0000 0001 0000 00FF 00FF 	db	36,1,1,0,1,0,255,255	;# 
   195  0008' 0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   196  0010' 0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   197  0018' 0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  008C                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  0111                     	;# 
   240  0112                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  0118                     	;# 
   245  0119                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011D                     	;# 
   249  011D                     	;# 
   250  018C                     	;# 
   251  0191                     	;# 
   252  0191                     	;# 
   253  0192                     	;# 
   254  0193                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0194                     	;# 
   258  0195                     	;# 
   259  0196                     	;# 
   260  0197                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  0211                     	;# 
   274  0211                     	;# 
   275  0212                     	;# 
   276  0212                     	;# 
   277  0213                     	;# 
   278  0213                     	;# 
   279  0214                     	;# 
   280  0214                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0216                     	;# 
   285  0216                     	;# 
   286  0217                     	;# 
   287  0217                     	;# 
   288  0291                     	;# 
   289  0291                     	;# 
   290  0292                     	;# 
   291  0293                     	;# 
   292  0294                     	;# 
   293  0295                     	;# 
   294  0295                     	;# 
   295  0296                     	;# 
   296  0391                     	;# 
   297  0392                     	;# 
   298  0393                     	;# 
   299  039A                     	;# 
   300  039C                     	;# 
   301  039D                     	;# 
   302  039E                     	;# 
   303  039F                     	;# 
   304  0FE4                     	;# 
   305  0FE5                     	;# 
   306  0FE6                     	;# 
   307  0FE7                     	;# 
   308  0FE8                     	;# 
   309  0FE9                     	;# 
   310  0FEA                     	;# 
   311  0FEB                     	;# 
   312  0FED                     	;# 
   313  0FEE                     	;# 
   314  0FEF                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  008C                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  010C                     	;# 
   356  0111                     	;# 
   357  0112                     	;# 
   358  0115                     	;# 
   359  0116                     	;# 
   360  0117                     	;# 
   361  0118                     	;# 
   362  0119                     	;# 
   363  011A                     	;# 
   364  011B                     	;# 
   365  011D                     	;# 
   366  011D                     	;# 
   367  018C                     	;# 
   368  0191                     	;# 
   369  0191                     	;# 
   370  0192                     	;# 
   371  0193                     	;# 
   372  0193                     	;# 
   373  0193                     	;# 
   374  0194                     	;# 
   375  0195                     	;# 
   376  0196                     	;# 
   377  0197                     	;# 
   378  0199                     	;# 
   379  019A                     	;# 
   380  019B                     	;# 
   381  019B                     	;# 
   382  019B                     	;# 
   383  019B                     	;# 
   384  019C                     	;# 
   385  019C                     	;# 
   386  019D                     	;# 
   387  019E                     	;# 
   388  019F                     	;# 
   389  020C                     	;# 
   390  0211                     	;# 
   391  0211                     	;# 
   392  0212                     	;# 
   393  0212                     	;# 
   394  0213                     	;# 
   395  0213                     	;# 
   396  0214                     	;# 
   397  0214                     	;# 
   398  0215                     	;# 
   399  0215                     	;# 
   400  0215                     	;# 
   401  0216                     	;# 
   402  0216                     	;# 
   403  0217                     	;# 
   404  0217                     	;# 
   405  0291                     	;# 
   406  0291                     	;# 
   407  0292                     	;# 
   408  0293                     	;# 
   409  0294                     	;# 
   410  0295                     	;# 
   411  0295                     	;# 
   412  0296                     	;# 
   413  0391                     	;# 
   414  0392                     	;# 
   415  0393                     	;# 
   416  039A                     	;# 
   417  039C                     	;# 
   418  039D                     	;# 
   419  039E                     	;# 
   420  039F                     	;# 
   421  0FE4                     	;# 
   422  0FE5                     	;# 
   423  0FE6                     	;# 
   424  0FE7                     	;# 
   425  0FE8                     	;# 
   426  0FE9                     	;# 
   427  0FEA                     	;# 
   428  0FEB                     	;# 
   429  0FED                     	;# 
   430  0FEE                     	;# 
   431  0FEF                     	;# 
   432  0000                     	;# 
   433  0001                     	;# 
   434  0002                     	;# 
   435  0003                     	;# 
   436  0004                     	;# 
   437  0005                     	;# 
   438  0006                     	;# 
   439  0007                     	;# 
   440  0008                     	;# 
   441  0009                     	;# 
   442  000A                     	;# 
   443  000B                     	;# 
   444  000C                     	;# 
   445  0011                     	;# 
   446  0012                     	;# 
   447  0015                     	;# 
   448  0016                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001C                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  008C                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0095                     	;# 
   462  0096                     	;# 
   463  0097                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009A                     	;# 
   467  009B                     	;# 
   468  009B                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  010C                     	;# 
   473  0111                     	;# 
   474  0112                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011D                     	;# 
   483  011D                     	;# 
   484  018C                     	;# 
   485  0191                     	;# 
   486  0191                     	;# 
   487  0192                     	;# 
   488  0193                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0194                     	;# 
   492  0195                     	;# 
   493  0196                     	;# 
   494  0197                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  020C                     	;# 
   507  0211                     	;# 
   508  0211                     	;# 
   509  0212                     	;# 
   510  0212                     	;# 
   511  0213                     	;# 
   512  0213                     	;# 
   513  0214                     	;# 
   514  0214                     	;# 
   515  0215                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0216                     	;# 
   519  0216                     	;# 
   520  0217                     	;# 
   521  0217                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0391                     	;# 
   531  0392                     	;# 
   532  0393                     	;# 
   533  039A                     	;# 
   534  039C                     	;# 
   535  039D                     	;# 
   536  039E                     	;# 
   537  039F                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549                           
   550                           	psect	idataBANK0
   551  0000'                    __pidataBANK0:	
   552                           
   553                           ;initializer for _first_i2c
   554  0000' 3401               	retlw	1
   555                           
   556                           	psect	stringtext1
   557  0000'                    __pstringtext1:	
   558  0000'                    _RX_ELMNTS:	
   559  0000' 342B               	retlw	43
   560  0001'                    __end_of_RX_ELMNTS:	
   561  0003                     _STATUSbits	set	3
   562  000C                     _PORTAbits	set	12
   563  0018                     _T1CON	set	24
   564  000B                     _INTCON	set	11
   565  001C                     _T2CON	set	28
   566  001B                     _PR2	set	27
   567  0012                     _PIR2bits	set	18
   568  0018                     _T1CONbits	set	24
   569  0011                     _PIR1bits	set	17
   570  000B                     _INTCONbits	set	11
   571  0092                     _PIE2bits	set	146
   572  0095                     _OPTION_REGbits	set	149
   573  008C                     _TRISA	set	140
   574  0099                     _OSCCON	set	153
   575  0091                     _PIE1bits	set	145
   576  011D                     _APFCONbits	set	285
   577  010C                     _LATAbits	set	268
   578  0191                     _EEADR	set	401
   579  0196                     _EECON2	set	406
   580  0193                     _EEDATA	set	403
   581  0195                     _EECON1	set	405
   582  0195                     _EECON1bits	set	405
   583  018C                     _ANSELA	set	396
   584  0212                     _SSP1ADD	set	530
   585  0217                     _SSP1CON3bits	set	535
   586  0216                     _SSP1CON2bits	set	534
   587  0215                     _SSP1CON1	set	533
   588  0214                     _SSP1STAT	set	532
   589  020C                     _WPUA	set	524
   590  0215                     _SSP1CON1bits	set	533
   591  0211                     _SSP1BUF	set	529
   592  0214                     _SSP1STATbits	set	532
   593  0291                     _CCPR1L	set	657
   594  0293                     _CCP1CON	set	659
   595  0392                     _IOCANbits	set	914
   596  0393                     _IOCAFbits	set	915
   597                           
   598                           ; #config settings
   599  0000                     
   600                           	psect	cinit
   601  0000'                    start_initialization:	
   602  0000'                    __initialization:	
   603                           
   604                           ; Initialize objects allocated to BANK0
   605  0000' 3180' 2000' 3180'  	fcall	__pidataBANK0	;fetch initializer
   606  0003' 0080'              	movwf	__pdataBANK0& (0+127)
   607                           
   608                           ; Clear objects allocated to BITBANK0
   609  0004' 0180'              	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   610                           
   611                           ; Clear objects allocated to BANK0
   612  0005' 0180'              	clrf	__pbssBANK0& (0+127)
   613                           
   614                           ; Clear objects allocated to BANK1
   615  0006' 3000'              	movlw	low __pbssBANK1
   616  0007' 0084               	movwf	4
   617  0008' 3000'              	movlw	high __pbssBANK1
   618  0009' 0085               	movwf	5
   619  000A' 302F               	movlw	47
   620  000B' 3180' 2000' 3180'  	fcall	clear_ram0
   621                           
   622                           ; Clear objects allocated to BANK2
   623  000E' 3000'              	movlw	low __pbssBANK2
   624  000F' 0084               	movwf	4
   625  0010' 3000'              	movlw	high __pbssBANK2
   626  0011' 0085               	movwf	5
   627  0012' 3017               	movlw	23
   628  0013' 3180' 2000'        	fcall	clear_ram0
   629  0015'                    end_of_initialization:	
   630                           ;End of C runtime variable initialization code
   631                           
   632  0015'                    __end_of__initialization:	
   633  0015' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   634  0016' 0020               	movlb	0
   635  0017' 3180' 2800'        	ljmp	_main	;jump to C main() function
   636                           
   637                           	psect	bitbssBANK0
   638  0000'                    __pbitbssBANK0:	
   639  0000'                    _loadDistance:	
   640  0000'                    	ds	1
   641  0001'                    _zero_cross:	
   642  0001'                    	ds	1
   643                           
   644                           	psect	bssBANK0
   645  0000'                    __pbssBANK0:	
   646  0000'                    _index_i2c:	
   647  0000'                    	ds	1
   648                           
   649                           	psect	dataBANK0
   650  0000'                    __pdataBANK0:	
   651  0000'                    _first_i2c:	
   652  0000'                    	ds	1
   653                           
   654                           	psect	bssBANK1
   655  0000'                    __pbssBANK1:	
   656  0000'                    _I2C_buffer:	
   657  0000'                    	ds	43
   658  002B'                    _auxDistance:	
   659  002B'                    	ds	4
   660                           
   661                           	psect	bssBANK2
   662  0000'                    __pbssBANK2:	
   663  0000'                    _lasterrorA:	
   664  0000'                    	ds	4
   665  0004'                    _accumulatorA:	
   666  0004'                    	ds	4
   667  0008'                    _lasterrorM:	
   668  0008'                    	ds	4
   669  000C'                    _accumulatorM:	
   670  000C'                    	ds	4
   671  0010'                    _stable:	
   672  0010'                    	ds	2
   673  0012'                    _lset:	
   674  0012'                    	ds	2
   675  0014'                    _counter:	
   676  0014'                    	ds	2
   677  0016'                    isr@junk:	
   678  0016'                    	ds	1
   679                           
   680                           	psect	clrtext
   681  0000'                    clear_ram0:	
   682                           ;	Called with FSR0 containing the base address, and
   683                           ;	WREG with the size to clear
   684                           
   685  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   686  0001'                    clrloop0:	
   687  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   688  0002' 3101               	addfsr 0,1
   689  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   690  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
   691  0005' 3400               	retlw	0	;all done for this memory range, return
   692                           
   693                           	psect	cstackBANK1
   694  0000'                    __pcstackBANK1:	
   695  0000'                    _calculate_pidA$1318:	
   696                           
   697                           ; 4 bytes @ 0x0
   698  0000'                    	ds	4
   699  0004'                    calculate_pidA@error:	
   700                           
   701                           ; 4 bytes @ 0x4
   702  0004'                    	ds	4
   703  0008'                    calculate_pidA@pid:	
   704                           
   705                           ; 4 bytes @ 0x8
   706  0008'                    	ds	4
   707  000C'                    _calculate_pidM$1319:	
   708                           
   709                           ; 4 bytes @ 0xC
   710  000C'                    	ds	4
   711  0010'                    calculate_pidM@error:	
   712                           
   713                           ; 4 bytes @ 0x10
   714  0010'                    	ds	4
   715  0014'                    calculate_pidM@pid:	
   716                           
   717                           ; 4 bytes @ 0x14
   718  0014'                    	ds	4
   719  0018'                    ?_pre_pidM:	
   720  0018'                    pre_pidM@set:	
   721                           ; 1 bytes @ 0x18
   722                           
   723                           
   724                           ; 2 bytes @ 0x18
   725  0018'                    	ds	2
   726  001A'                    ??_pre_pidM:	
   727                           
   728                           ; 1 bytes @ 0x1A
   729  001A'                    	ds	2
   730  001C'                    ??_main:	
   731                           
   732                           ; 1 bytes @ 0x1C
   733  001C'                    	ds	5
   734                           
   735                           	psect	cstackCOMMON
   736  0000'                    __pcstackCOMMON:	
   737  0000'                    ?_eeprom_read:	
   738  0000'                    ?_isr:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0000'                    ?_init_I2C_buffer:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0000'                    ?_main:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0000'                    ?_PWM_Init:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0000'                    ?___wmul:	
   751                           ; 2 bytes @ 0x0
   752                           
   753  0000'                    ___wmul@multiplier:	
   754                           ; 2 bytes @ 0x0
   755                           
   756                           
   757                           ; 2 bytes @ 0x0
   758  0000'                    	ds	2
   759  0002'                    ___wmul@multiplicand:	
   760                           
   761                           ; 2 bytes @ 0x2
   762  0002'                    	ds	2
   763  0004'                    ??___wmul:	
   764  0004'                    ___wmul@product:	
   765                           ; 1 bytes @ 0x4
   766                           
   767                           
   768                           ; 2 bytes @ 0x4
   769  0004'                    	ds	2
   770  0006'                    ?___lwdiv:	
   771  0006'                    ___lwdiv@divisor:	
   772                           ; 2 bytes @ 0x6
   773                           
   774                           
   775                           ; 2 bytes @ 0x6
   776  0006'                    	ds	2
   777  0008'                    ___lwdiv@dividend:	
   778                           
   779                           ; 2 bytes @ 0x8
   780  0008'                    	ds	2
   781  000A'                    ??___lwdiv:	
   782                           
   783                           ; 1 bytes @ 0xA
   784  000A'                    	ds	1
   785  000B'                    ___lwdiv@quotient:	
   786                           
   787                           ; 2 bytes @ 0xB
   788  000B'                    	ds	2
   789  000D'                    ___lwdiv@counter:	
   790                           
   791                           ; 1 bytes @ 0xD
   792  000D'                    	ds	1
   793                           
   794                           	psect	cstackBANK0
   795  0000'                    __pcstackBANK0:	
   796  0000'                    ??_isr:	
   797                           
   798                           ; 1 bytes @ 0x0
   799  0000'                    	ds	2
   800  0002'                    ??_eeprom_read:	
   801  0002'                    ?_eeprom_write:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0002'                    ??_PWM_Init:	
   805                           ; 1 bytes @ 0x2
   806                           
   807  0002'                    ?_abs:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0002'                    ?__Umul8_16:	
   811                           ; 2 bytes @ 0x2
   812                           
   813  0002'                    ?_PWM_set_duty:	
   814                           ; 2 bytes @ 0x2
   815                           
   816  0002'                    ?___flneg:	
   817                           ; 2 bytes @ 0x2
   818                           
   819  0002'                    ?___fltol:	
   820                           ; 4 bytes @ 0x2
   821                           
   822  0002'                    eeprom_write@value:	
   823                           ; 4 bytes @ 0x2
   824                           
   825  0002'                    __Umul8_16@multiplicand:	
   826                           ; 1 bytes @ 0x2
   827                           
   828  0002'                    PWM_set_duty@duty:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0002'                    abs@a:	
   832                           ; 2 bytes @ 0x2
   833                           
   834  0002'                    ___flneg@f1:	
   835                           ; 2 bytes @ 0x2
   836                           
   837  0002'                    ___fltol@f1:	
   838                           ; 4 bytes @ 0x2
   839                           
   840                           
   841                           ; 4 bytes @ 0x2
   842  0002'                    	ds	1
   843  0003'                    ??_eeprom_write:	
   844                           
   845                           ; 1 bytes @ 0x3
   846  0003'                    	ds	1
   847  0004'                    ??_abs:	
   848  0004'                    ??__Umul8_16:	
   849                           ; 1 bytes @ 0x4
   850                           
   851  0004'                    ??_PWM_set_duty:	
   852                           ; 1 bytes @ 0x4
   853                           
   854                           
   855                           ; 1 bytes @ 0x4
   856  0004'                    	ds	1
   857  0005'                    eeprom_read@addr:	
   858  0005'                    eeprom_write@addr:	
   859                           ; 1 bytes @ 0x5
   860                           
   861                           
   862                           ; 1 bytes @ 0x5
   863  0005'                    	ds	1
   864  0006'                    ??_init_I2C_buffer:	
   865  0006'                    ??___flneg:	
   866                           ; 1 bytes @ 0x6
   867                           
   868  0006'                    ??___fltol:	
   869                           ; 1 bytes @ 0x6
   870                           
   871  0006'                    ?___xxtofl:	
   872                           ; 1 bytes @ 0x6
   873                           
   874  0006'                    __Umul8_16@product:	
   875                           ; 4 bytes @ 0x6
   876                           
   877  0006'                    ___xxtofl@val:	
   878                           ; 2 bytes @ 0x6
   879                           
   880                           
   881                           ; 4 bytes @ 0x6
   882  0006'                    	ds	2
   883  0008'                    __Umul8_16@word_mpld:	
   884                           
   885                           ; 2 bytes @ 0x8
   886  0008'                    	ds	2
   887  000A'                    ??___xxtofl:	
   888  000A'                    __Umul8_16@multiplier:	
   889                           ; 1 bytes @ 0xA
   890                           
   891                           
   892                           ; 1 bytes @ 0xA
   893  000A'                    	ds	1
   894  000B'                    ?___flmul:	
   895  000B'                    ___fltol@sign1:	
   896                           ; 4 bytes @ 0xB
   897                           
   898  000B'                    ___flmul@b:	
   899                           ; 1 bytes @ 0xB
   900                           
   901                           
   902                           ; 4 bytes @ 0xB
   903  000B'                    	ds	1
   904  000C'                    ___fltol@exp1:	
   905                           
   906                           ; 1 bytes @ 0xC
   907  000C'                    	ds	1
   908  000D'                    ?_M_control:	
   909  000D'                    M_control@ctr:	
   910                           ; 1 bytes @ 0xD
   911                           
   912                           
   913                           ; 2 bytes @ 0xD
   914  000D'                    	ds	1
   915  000E'                    ___xxtofl@sign:	
   916                           
   917                           ; 1 bytes @ 0xE
   918  000E'                    	ds	1
   919  000F'                    ??_M_control:	
   920  000F'                    ___xxtofl@exp:	
   921                           ; 1 bytes @ 0xF
   922                           
   923  000F'                    ___flmul@a:	
   924                           ; 1 bytes @ 0xF
   925                           
   926                           
   927                           ; 4 bytes @ 0xF
   928  000F'                    	ds	1
   929  0010'                    ___xxtofl@arg:	
   930                           
   931                           ; 4 bytes @ 0x10
   932  0010'                    	ds	3
   933  0013'                    ??___flmul:	
   934                           
   935                           ; 1 bytes @ 0x13
   936  0013'                    	ds	1
   937  0014'                    ?___flge:	
   938  0014'                    ___flge@ff1:	
   939                           ; 1 bit 
   940                           
   941                           
   942                           ; 4 bytes @ 0x14
   943  0014'                    	ds	4
   944  0018'                    ___flmul@sign:	
   945  0018'                    ___flge@ff2:	
   946                           ; 1 bytes @ 0x18
   947                           
   948                           
   949                           ; 4 bytes @ 0x18
   950  0018'                    	ds	1
   951  0019'                    ___flmul@grs:	
   952                           
   953                           ; 4 bytes @ 0x19
   954  0019'                    	ds	3
   955  001C'                    ??___flge:	
   956                           
   957                           ; 1 bytes @ 0x1C
   958  001C'                    	ds	1
   959  001D'                    ___flmul@aexp:	
   960                           
   961                           ; 1 bytes @ 0x1D
   962  001D'                    	ds	1
   963  001E'                    ___flmul@bexp:	
   964                           
   965                           ; 1 bytes @ 0x1E
   966  001E'                    	ds	1
   967  001F'                    ___flmul@prod:	
   968                           
   969                           ; 4 bytes @ 0x1F
   970  001F'                    	ds	4
   971  0023'                    ___flmul@temp:	
   972                           
   973                           ; 2 bytes @ 0x23
   974  0023'                    	ds	2
   975  0025'                    ?___fladd:	
   976  0025'                    ___fladd@b:	
   977                           ; 4 bytes @ 0x25
   978                           
   979                           
   980                           ; 4 bytes @ 0x25
   981  0025'                    	ds	4
   982  0029'                    ___fladd@a:	
   983                           
   984                           ; 4 bytes @ 0x29
   985  0029'                    	ds	4
   986  002D'                    ??___fladd:	
   987                           
   988                           ; 1 bytes @ 0x2D
   989  002D'                    	ds	12
   990  0039'                    ___fladd@signs:	
   991                           
   992                           ; 1 bytes @ 0x39
   993  0039'                    	ds	1
   994  003A'                    ___fladd@aexp:	
   995                           
   996                           ; 1 bytes @ 0x3A
   997  003A'                    	ds	1
   998  003B'                    ___fladd@bexp:	
   999                           
  1000                           ; 1 bytes @ 0x3B
  1001  003B'                    	ds	1
  1002  003C'                    ___fladd@grs:	
  1003                           
  1004                           ; 1 bytes @ 0x3C
  1005  003C'                    	ds	1
  1006  003D'                    ?_calculate_pidA:	
  1007  003D'                    calculate_pidA@set:	
  1008                           ; 2 bytes @ 0x3D
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x3D
  1012  003D'                    	ds	4
  1013  0041'                    ??_calculate_pidA:	
  1014                           
  1015                           ; 1 bytes @ 0x41
  1016  0041'                    	ds	8
  1017  0049'                    ?_calculate_pidM:	
  1018  0049'                    calculate_pidM@set:	
  1019                           ; 1 bytes @ 0x49
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x49
  1023  0049'                    	ds	2
  1024  004B'                    ??_calculate_pidM:	
  1025                           
  1026                           ; 1 bytes @ 0x4B
  1027  004B'                    	ds	2
  1028                           
  1029                           	psect	maintext
  1030  0000'                    __pmaintext:	
  1031 ;;
  1032 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1033 ;;
  1034 ;; *************** function _main *****************
  1035 ;; Defined at:
  1036 ;;		line 362 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : B1F/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1050 ;;      Params:         0       0       0       0
  1051 ;;      Locals:         0       0       0       0
  1052 ;;      Temps:          0       0       5       0
  1053 ;;      Totals:         0       0       5       0
  1054 ;;Total ram usage:        5 bytes
  1055 ;; Hardware stack levels required when called:    6
  1056 ;; This function calls:
  1057 ;;		_M_control
  1058 ;;		_PWM_Init
  1059 ;;		_PWM_set_duty
  1060 ;;		_abs
  1061 ;;		_calculate_pidA
  1062 ;;		_calculate_pidM
  1063 ;;		_eeprom_write
  1064 ;;		_init_I2C_buffer
  1065 ;;		_pre_pidM
  1066 ;; This function is called by:
  1067 ;;		Startup code after reset
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _main
  1073  0000'                    _main:	
  1074                           
  1075                           ;main.c: 363: OSCCON = 0b11110000;
  1076                           
  1077                           ;incstack = 0
  1078                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1079  0000' 30F0               	movlw	240
  1080  0001' 0021               	movlb	1	; select bank1
  1081  0002' 0099               	movwf	25	;volatile
  1082                           
  1083                           ;main.c: 364: init_I2C_buffer();
  1084  0003' 3180' 2000' 3180'  	fcall	_init_I2C_buffer
  1085                           
  1086                           ;main.c: 365: TRISA = 0b00011110;
  1087  0006' 301E               	movlw	30
  1088  0007' 0021               	movlb	1	; select bank1
  1089  0008' 008C               	movwf	12	;volatile
  1090                           
  1091                           ;main.c: 366: ANSELA = 0b00000000;
  1092  0009' 0023               	movlb	3	; select bank3
  1093  000A' 018C               	clrf	12	;volatile
  1094                           
  1095                           ;main.c: 367: WPUA = 0b00011110;
  1096  000B' 301E               	movlw	30
  1097  000C' 0024               	movlb	4	; select bank4
  1098  000D' 008C               	movwf	12	;volatile
  1099                           
  1100                           ;main.c: 368: OPTION_REGbits.nWPUEN = (char) !(I2C_buffer.data.IOWPU & 0x01);
  1101  000E' 0021               	movlb	1	; select bank1
  1102  000F' 1803'              	btfsc	(_I2C_buffer^(0+128)+3),0	;volatile
  1103  0010' 2800'              	goto	u3290
  1104  0011' 0021               	movlb	1	; select bank1
  1105  0012' 1795               	bsf	21,7	;volatile
  1106  0013' 2800'              	goto	l2728
  1107  0014'                    u3290:	
  1108  0014' 0021               	movlb	1	; select bank1
  1109  0015' 1395               	bcf	21,7	;volatile
  1110  0016'                    l2728:	
  1111                           
  1112                           ;main.c: 369: APFCONbits.CCP1SEL = 1;
  1113  0016' 0022               	movlb	2	; select bank2
  1114  0017' 141D               	bsf	29,0	;volatile
  1115                           
  1116                           ;main.c: 370: LATAbits.LATA0 = 0;
  1117  0018' 100C               	bcf	12,0	;volatile
  1118                           
  1119                           ;main.c: 371: SSP1STAT = 0b10000000;
  1120  0019' 3080               	movlw	128
  1121  001A' 0024               	movlb	4	; select bank4
  1122  001B' 0094               	movwf	20	;volatile
  1123                           
  1124                           ;main.c: 372: SSP1CON1 = 0b00110110;
  1125  001C' 3036               	movlw	54
  1126  001D' 0095               	movwf	21	;volatile
  1127                           
  1128                           ;main.c: 373: SSP1CON2bits.SEN = 1;
  1129  001E' 1416               	bsf	22,0	;volatile
  1130                           
  1131                           ;main.c: 374: SSP1CON3bits.BOEN = 1;
  1132  001F' 1617               	bsf	23,4	;volatile
  1133                           
  1134                           ;main.c: 375: SSP1CON3bits.SDAHT = 1;
  1135  0020' 1597               	bsf	23,3	;volatile
  1136                           
  1137                           ;main.c: 376: SSP1CON3bits.SBCDE = 1;
  1138  0021' 1517               	bsf	23,2	;volatile
  1139                           
  1140                           ;main.c: 377: SSP1ADD = (char) (I2C_buffer.data.ADDRESS << 1);
  1141  0022' 0021               	movlb	1	; select bank1
  1142  0023' 3501'              	lslf	(_I2C_buffer^(0+128)+1),w	;volatile
  1143  0024' 0024               	movlb	4	; select bank4
  1144  0025' 0092               	movwf	18	;volatile
  1145                           
  1146                           ;main.c: 378: PIR1bits.SSP1IF = 0;
  1147  0026' 0020               	movlb	0	; select bank0
  1148  0027' 1191               	bcf	17,3	;volatile
  1149                           
  1150                           ;main.c: 379: PIR2bits.BCL1IF = 0;
  1151  0028' 1192               	bcf	18,3	;volatile
  1152                           
  1153                           ;main.c: 380: PIE2bits.BCL1IE = 1;
  1154  0029' 0021               	movlb	1	; select bank1
  1155  002A' 1592               	bsf	18,3	;volatile
  1156                           
  1157                           ;main.c: 381: PIE1bits.SSP1IE = 1;
  1158  002B' 1591               	bsf	17,3	;volatile
  1159                           
  1160                           ;main.c: 382: INTCONbits.PEIE = 1;
  1161  002C' 170B               	bsf	11,6	;volatile
  1162                           
  1163                           ;main.c: 383: PWM_Init();
  1164  002D' 3180' 2000' 3180'  	fcall	_PWM_Init
  1165                           
  1166                           ;main.c: 384: PWM_set_duty(0);
  1167  0030' 3000               	movlw	0
  1168  0031' 0020               	movlb	0	; select bank0
  1169  0032' 0082'              	movwf	PWM_set_duty@duty
  1170  0033' 0083'              	movwf	PWM_set_duty@duty+1
  1171  0034' 3180' 2000' 3180'  	fcall	_PWM_set_duty
  1172                           
  1173                           ;main.c: 385: IOCANbits.IOCAN4 = 1;
  1174  0037' 0027               	movlb	7	; select bank7
  1175  0038' 1612               	bsf	18,4	;volatile
  1176                           
  1177                           ;main.c: 386: INTCON = 0b01001000;
  1178  0039' 3048               	movlw	72
  1179  003A' 008B               	movwf	11	;volatile
  1180                           
  1181                           ;main.c: 387: T1CON = 0b00110100;
  1182  003B' 3034               	movlw	52
  1183  003C' 0020               	movlb	0	; select bank0
  1184  003D' 0098               	movwf	24	;volatile
  1185                           
  1186                           ;main.c: 388: PIE1bits.TMR1IE = 1;
  1187  003E' 0021               	movlb	1	; select bank1
  1188  003F' 1411               	bsf	17,0	;volatile
  1189                           
  1190                           ;main.c: 389: T1CONbits.TMR1ON = 1;
  1191  0040' 0020               	movlb	0	; select bank0
  1192  0041' 1418               	bsf	24,0	;volatile
  1193                           
  1194                           ;main.c: 390: INTCONbits.GIE = 1;
  1195  0042' 178B               	bsf	11,7	;volatile
  1196                           
  1197                           ;main.c: 392: _delay((unsigned long)((5)*(32000000/4000.0)));
  1198  0043' 3034               	movlw	52
  1199  0044' 0021               	movlb	1	; select bank1
  1200  0045' 0080'              	movwf	??_main^(0+128)
  1201  0046' 30F1               	movlw	241
  1202  0047'                    u3577:	
  1203  0047' 0B89               	decfsz	9,f
  1204  0048' 2800'              	goto	u3577
  1205  0049' 0B80'              	decfsz	??_main^(0+128),f
  1206  004A' 2800'              	goto	u3577
  1207  004B' 3200               	nop2
  1208                           
  1209                           ;main.c: 394: if (PORTAbits.RA3 == 0) {
  1210  004C' 0020               	movlb	0	; select bank0
  1211  004D' 198C               	btfsc	12,3	;volatile
  1212  004E' 2800'              	goto	l160
  1213                           
  1214                           ;main.c: 395: eeprom_write(0, 0x24);
  1215  004F' 3024               	movlw	36
  1216  0050' 0021               	movlb	1	; select bank1
  1217  0051' 0080'              	movwf	??_main^(0+128)
  1218  0052' 0800'              	movf	??_main^(0+128),w
  1219  0053' 0020               	movlb	0	; select bank0
  1220  0054' 0082'              	movwf	eeprom_write@value
  1221  0055' 3000               	movlw	0
  1222  0056' 3180' 2000' 3180'  	fcall	_eeprom_write
  1223                           
  1224                           ;main.c: 396: _delay((unsigned long)((5)*(32000000/4000.0)));
  1225  0059' 3034               	movlw	52
  1226  005A' 0021               	movlb	1	; select bank1
  1227  005B' 0080'              	movwf	??_main^(0+128)
  1228  005C' 30F1               	movlw	241
  1229  005D'                    u3587:	
  1230  005D' 0B89               	decfsz	9,f
  1231  005E' 2800'              	goto	u3587
  1232  005F' 0B80'              	decfsz	??_main^(0+128),f
  1233  0060' 2800'              	goto	u3587
  1234  0061' 3200               	nop2
  1235  0062'                    l160:	
  1236                           ;main.c: 397: };main.c: 399: while (1) {
  1237                           
  1238  0062' 0064               	clrwdt	;# 
  1239                           
  1240                           ;main.c: 401: if (I2C_buffer.data.START_STOP == 1) {
  1241  0063' 0021               	movlb	1	; select bank1
  1242  0064' 0302'              	decf	(_I2C_buffer^(0+128)+2),w	;volatile
  1243  0065' 1903               	btfsc	3,2
  1244  0066' 2800'              	goto	l2920
  1245  0067' 2800'              	goto	l2924
  1246  0068'                    l2784:	
  1247                           ;main.c: 403: case 0:
  1248                           
  1249                           ;main.c: 402: switch (I2C_buffer.data.MODE) {
  1250                           
  1251                           
  1252                           ;main.c: 404: M_control(0);
  1253  0068' 3000               	movlw	0
  1254  0069' 0020               	movlb	0	; select bank0
  1255  006A' 008D'              	movwf	M_control@ctr
  1256  006B' 008E'              	movwf	M_control@ctr+1
  1257  006C' 3180' 2000' 3180'  	fcall	_M_control
  1258                           
  1259                           ;main.c: 405: break;
  1260  006F' 2800'              	goto	l2922
  1261  0070'                    l2786:	
  1262                           ;main.c: 406: case 1:
  1263                           
  1264                           
  1265                           ;main.c: 407: M_control(I2C_buffer.data.SPEED);
  1266  0070' 0021               	movlb	1	; select bank1
  1267  0071' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1268  0072' 0020               	movlb	0	; select bank0
  1269  0073' 008E'              	movwf	M_control@ctr+1
  1270  0074' 0021               	movlb	1	; select bank1
  1271  0075' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1272  0076' 0020               	movlb	0	; select bank0
  1273  0077' 008D'              	movwf	M_control@ctr
  1274  0078' 3180' 2000' 3180'  	fcall	_M_control
  1275                           
  1276                           ;main.c: 408: break;
  1277  007B' 2800'              	goto	l2922
  1278  007C'                    l2788:	
  1279                           ;main.c: 409: case 2:
  1280                           
  1281                           
  1282                           ;main.c: 410: calculate_pidM(I2C_buffer.data.SPEED);
  1283  007C' 0021               	movlb	1	; select bank1
  1284  007D' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1285  007E' 0020               	movlb	0	; select bank0
  1286  007F' 00CA'              	movwf	calculate_pidM@set+1
  1287  0080' 0021               	movlb	1	; select bank1
  1288  0081' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1289  0082' 0020               	movlb	0	; select bank0
  1290  0083' 00C9'              	movwf	calculate_pidM@set
  1291  0084' 3180' 2000' 3180'  	fcall	_calculate_pidM
  1292                           
  1293                           ;main.c: 411: break;
  1294  0087' 2800'              	goto	l2922
  1295  0088'                    l2790:	
  1296                           ;main.c: 412: case 3:
  1297                           
  1298                           
  1299                           ;main.c: 413: if (I2C_buffer.data.DISTANCE != 0 && loadDistance == 0) {
  1300  0088' 0021               	movlb	1	; select bank1
  1301  0089' 080F'              	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1302  008A' 040F'              	iorwf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1303  008B' 040F'              	iorwf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1304  008C' 040F'              	iorwf	(_I2C_buffer^(0+128)+15),w	;volatile
  1305  008D' 1903               	skipnz
  1306  008E' 2800'              	goto	l2800
  1307  008F' 0020               	movlb	0	; select bank0
  1308  0090' 1800'              	btfsc	_loadDistance/(0+8),_loadDistance& (0+7)
  1309  0091' 2800'              	goto	l2800
  1310                           
  1311                           ;main.c: 414: loadDistance = 1;
  1312  0092' 1400'              	bsf	_loadDistance/(0+8),_loadDistance& (0+7)
  1313                           
  1314                           ;main.c: 415: auxDistance = I2C_buffer.data.DISTANCE;
  1315  0093' 300F               	movlw	15
  1316  0094' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  1317  0095' 0086               	movwf	6
  1318  0096' 0187               	clrf	7
  1319  0097' 3F40               	moviw [0]fsr1
  1320  0098' 0021               	movlb	1	; select bank1
  1321  0099' 0080'              	movwf	_auxDistance^(0+128)
  1322  009A' 3F41               	moviw [1]fsr1
  1323  009B' 0080'              	movwf	(_auxDistance+1)^(0+128)
  1324  009C' 3F42               	moviw [2]fsr1
  1325  009D' 0080'              	movwf	(_auxDistance+2)^(0+128)
  1326  009E' 3F43               	moviw [3]fsr1
  1327  009F' 2800'              	goto	L1
  1328  00A0'                    l2800:	
  1329                           ;main.c: 417: } else {
  1330                           
  1331                           ;main.c: 416: I2C_buffer.data.DISTANCE = 0;
  1332                           
  1333                           
  1334                           ;main.c: 418: if (auxDistance > 0) {
  1335  00A0' 0021               	movlb	1	; select bank1
  1336  00A1' 1B80'              	btfsc	(_auxDistance+3)^(0+128),7
  1337  00A2' 2800'              	goto	l2812
  1338  00A3' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1339  00A4' 1D03               	btfss	3,2
  1340  00A5' 2800'              	goto	l2802
  1341  00A6' 0800'              	movf	(_auxDistance+2)^(0+128),w
  1342  00A7' 1D03               	btfss	3,2
  1343  00A8' 2800'              	goto	l2802
  1344  00A9' 0800'              	movf	(_auxDistance+1)^(0+128),w
  1345  00AA' 1D03               	btfss	3,2
  1346  00AB' 2800'              	goto	l2802
  1347  00AC' 3001               	movlw	1
  1348  00AD' 0200'              	subwf	_auxDistance^(0+128),w
  1349  00AE' 1C03               	btfss	3,0
  1350  00AF' 2800'              	goto	l2812
  1351  00B0'                    l2802:	
  1352                           
  1353                           ;main.c: 419: calculate_pidM(abs(I2C_buffer.data.SPEED));
  1354  00B0' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1355  00B1' 0020               	movlb	0	; select bank0
  1356  00B2' 0083'              	movwf	abs@a+1
  1357  00B3' 0021               	movlb	1	; select bank1
  1358  00B4' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1359  00B5' 0020               	movlb	0	; select bank0
  1360  00B6' 0082'              	movwf	abs@a
  1361  00B7' 3180' 2000' 3180'  	fcall	_abs
  1362  00BA' 0020               	movlb	0	; select bank0
  1363  00BB' 0803'              	movf	?_abs+1,w
  1364  00BC' 00CA'              	movwf	calculate_pidM@set+1
  1365  00BD' 0802'              	movf	?_abs,w
  1366  00BE' 00C9'              	movwf	calculate_pidM@set
  1367  00BF' 3180' 2000' 3180'  	fcall	_calculate_pidM
  1368                           
  1369                           ;main.c: 420: if (auxDistance <= I2C_buffer.data.DISTANCE) {
  1370  00C2' 0021               	movlb	1	; select bank1
  1371  00C3' 080F'              	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1372  00C4' 3A80               	xorlw	128
  1373  00C5' 0080'              	movwf	??_main^(0+128)
  1374  00C6' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1375  00C7' 3A80               	xorlw	128
  1376  00C8' 0200'              	subwf	??_main^(0+128),w
  1377  00C9' 1D03               	skipz
  1378  00CA' 2800'              	goto	u3363
  1379  00CB' 0800'              	movf	(_auxDistance+2)^(0+128),w
  1380  00CC' 020F'              	subwf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1381  00CD' 1D03               	skipz
  1382  00CE' 2800'              	goto	u3363
  1383  00CF' 0800'              	movf	(_auxDistance+1)^(0+128),w
  1384  00D0' 020F'              	subwf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1385  00D1' 1D03               	skipz
  1386  00D2' 2800'              	goto	u3363
  1387  00D3' 0800'              	movf	_auxDistance^(0+128),w
  1388  00D4' 020F'              	subwf	(_I2C_buffer^(0+128)+15),w	;volatile
  1389  00D5'                    u3363:	
  1390  00D5' 1C03               	skipc
  1391  00D6' 2800'              	goto	l2812
  1392                           
  1393                           ;main.c: 421: loadDistance = 0;
  1394  00D7' 0020               	movlb	0	; select bank0
  1395  00D8' 1000'              	bcf	_loadDistance/(0+8),_loadDistance& (0+7)
  1396                           
  1397                           ;main.c: 422: M_control(0);
  1398  00D9' 3000               	movlw	0
  1399  00DA' 008D'              	movwf	M_control@ctr
  1400  00DB' 008E'              	movwf	M_control@ctr+1
  1401  00DC' 3180' 2000' 3180'  	fcall	_M_control
  1402                           
  1403                           ;main.c: 423: I2C_buffer.data.START_STOP = 0;
  1404  00DF' 0021               	movlb	1	; select bank1
  1405  00E0' 0182'              	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  1406  00E1'                    l2812:	
  1407                           
  1408                           ;main.c: 424: };main.c: 425: };main.c: 426: if (auxDistance < 0) {
  1409  00E1' 1F80'              	btfss	(_auxDistance+3)^(0+128),7
  1410  00E2' 2800'              	goto	l2922
  1411                           
  1412                           ;main.c: 427: calculate_pidM(abs(I2C_buffer.data.SPEED)*-1);
  1413  00E3' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1414  00E4' 0020               	movlb	0	; select bank0
  1415  00E5' 0083'              	movwf	abs@a+1
  1416  00E6' 0021               	movlb	1	; select bank1
  1417  00E7' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1418  00E8' 0020               	movlb	0	; select bank0
  1419  00E9' 0082'              	movwf	abs@a
  1420  00EA' 3180' 2000' 3180'  	fcall	_abs
  1421  00ED' 0020               	movlb	0	; select bank0
  1422  00EE' 0902'              	comf	?_abs,w
  1423  00EF' 0021               	movlb	1	; select bank1
  1424  00F0' 0080'              	movwf	??_main^(0+128)
  1425  00F1' 0020               	movlb	0	; select bank0
  1426  00F2' 0903'              	comf	?_abs+1,w
  1427  00F3' 0021               	movlb	1	; select bank1
  1428  00F4' 0081'              	movwf	(??_main^(0+128)+1)
  1429  00F5' 0A80'              	incf	??_main^(0+128),f
  1430  00F6' 1903               	skipnz
  1431  00F7' 0A81'              	incf	(??_main^(0+128)+1),f
  1432  00F8' 0800'              	movf	??_main^(0+128),w
  1433  00F9' 0020               	movlb	0	; select bank0
  1434  00FA' 00C9'              	movwf	calculate_pidM@set
  1435  00FB' 0021               	movlb	1	; select bank1
  1436  00FC' 0800'              	movf	(??_main+1)^(0+128),w
  1437  00FD' 0020               	movlb	0	; select bank0
  1438  00FE' 00CA'              	movwf	calculate_pidM@set+1
  1439  00FF' 3180' 2000' 3180'  	fcall	_calculate_pidM
  1440  0102' 2800'              	goto	L3
  1441  0103'                    l2824:	
  1442                           ;main.c: 436: case 4:
  1443                           
  1444                           ;main.c: 432: };main.c: 433: };main.c: 434: };main.c: 435: break;
  1445                           
  1446                           ;main.c: 431: I2C_buffer.data.START_STOP = 0;
  1447                           
  1448                           ;main.c: 430: M_control(0);
  1449                           
  1450                           ;main.c: 429: loadDistance = 0;
  1451                           
  1452                           ;main.c: 428: if (auxDistance >= I2C_buffer.data.DISTANCE) {
  1453                           
  1454                           
  1455                           ;main.c: 437: if (I2C_buffer.data.DISTANCE != 0 && loadDistance == 0) {
  1456  0103' 080F'              	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1457  0104' 040F'              	iorwf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1458  0105' 040F'              	iorwf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1459  0106' 040F'              	iorwf	(_I2C_buffer^(0+128)+15),w	;volatile
  1460  0107' 1903               	skipnz
  1461  0108' 2800'              	goto	l2836
  1462  0109' 0020               	movlb	0	; select bank0
  1463  010A' 1800'              	btfsc	_loadDistance/(0+8),_loadDistance& (0+7)
  1464  010B' 2800'              	goto	l2836
  1465                           
  1466                           ;main.c: 438: loadDistance = 1;
  1467  010C' 1400'              	bsf	_loadDistance/(0+8),_loadDistance& (0+7)
  1468                           
  1469                           ;main.c: 439: auxDistance = I2C_buffer.data.DISTANCE;
  1470  010D' 300F               	movlw	15
  1471  010E' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  1472  010F' 0086               	movwf	6
  1473  0110' 0187               	clrf	7
  1474  0111' 3F40               	moviw [0]fsr1
  1475  0112' 0021               	movlb	1	; select bank1
  1476  0113' 0080'              	movwf	_auxDistance^(0+128)
  1477  0114' 3F41               	moviw [1]fsr1
  1478  0115' 0080'              	movwf	(_auxDistance+1)^(0+128)
  1479  0116' 3F42               	moviw [2]fsr1
  1480  0117' 0080'              	movwf	(_auxDistance+2)^(0+128)
  1481  0118' 3F43               	moviw [3]fsr1
  1482  0119' 2800'              	goto	L2
  1483  011A'                    l2836:	
  1484                           ;main.c: 442: } else {
  1485                           
  1486                           ;main.c: 441: stable = 0;
  1487                           
  1488                           ;main.c: 440: I2C_buffer.data.DISTANCE = 0;
  1489                           
  1490                           
  1491                           ;main.c: 443: calculate_pidM(calculate_pidA(auxDistance));
  1492  011A' 0021               	movlb	1	; select bank1
  1493  011B' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1494  011C' 0020               	movlb	0	; select bank0
  1495  011D' 00C0'              	movwf	calculate_pidA@set+3
  1496  011E' 0021               	movlb	1	; select bank1
  1497  011F' 0800'              	movf	(_auxDistance+2)^(0+128),w
  1498  0120' 0020               	movlb	0	; select bank0
  1499  0121' 00BF'              	movwf	calculate_pidA@set+2
  1500  0122' 0021               	movlb	1	; select bank1
  1501  0123' 0800'              	movf	(_auxDistance+1)^(0+128),w
  1502  0124' 0020               	movlb	0	; select bank0
  1503  0125' 00BE'              	movwf	calculate_pidA@set+1
  1504  0126' 0021               	movlb	1	; select bank1
  1505  0127' 0800'              	movf	_auxDistance^(0+128),w
  1506  0128' 0020               	movlb	0	; select bank0
  1507  0129' 00BD'              	movwf	calculate_pidA@set
  1508  012A' 3180' 2000' 3180'  	fcall	_calculate_pidA
  1509  012D' 0020               	movlb	0	; select bank0
  1510  012E' 083E'              	movf	?_calculate_pidA+1,w
  1511  012F' 00CA'              	movwf	calculate_pidM@set+1
  1512  0130' 083D'              	movf	?_calculate_pidA,w
  1513  0131' 00C9'              	movwf	calculate_pidM@set
  1514  0132' 3180' 2000' 3180'  	fcall	_calculate_pidM
  1515                           
  1516                           ;main.c: 444: if (auxDistance >= I2C_buffer.data.DISTANCE - 10 && auxDistance <= I2C_buf
      +                          fer.data.DISTANCE + 10) {
  1517  0135' 30F6               	movlw	246
  1518  0136' 0021               	movlb	1	; select bank1
  1519  0137' 0080'              	movwf	??_main^(0+128)
  1520  0138' 30FF               	movlw	255
  1521  0139' 0081'              	movwf	(??_main^(0+128)+1)
  1522  013A' 30FF               	movlw	255
  1523  013B' 0082'              	movwf	(??_main^(0+128)+2)
  1524  013C' 30FF               	movlw	255
  1525  013D' 0083'              	movwf	(??_main^(0+128)+3)
  1526  013E' 300F               	movlw	15
  1527  013F' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  1528  0140' 0086               	movwf	6
  1529  0141' 0187               	clrf	7
  1530  0142' 3F40               	moviw [0]fsr1
  1531  0143' 0780'              	addwf	??_main^(0+128),f
  1532  0144' 3F41               	moviw [1]fsr1
  1533  0145' 3D81'              	addwfc	(??_main^(0+128)+1),f
  1534  0146' 3F42               	moviw [2]fsr1
  1535  0147' 3D82'              	addwfc	(??_main^(0+128)+2),f
  1536  0148' 3F43               	moviw [3]fsr1
  1537  0149' 3D83'              	addwfc	(??_main^(0+128)+3),f
  1538  014A' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1539  014B' 3A80               	xorlw	128
  1540  014C' 0080'              	movwf	(??_main+4)^(0+128)
  1541  014D' 0800'              	movf	(??_main+3)^(0+128),w
  1542  014E' 3A80               	xorlw	128
  1543  014F' 0200'              	subwf	(??_main+4)^(0+128),w
  1544  0150' 1D03               	skipz
  1545  0151' 2800'              	goto	u3413
  1546  0152' 0800'              	movf	(??_main+2)^(0+128),w
  1547  0153' 0200'              	subwf	(_auxDistance+2)^(0+128),w
  1548  0154' 1D03               	skipz
  1549  0155' 2800'              	goto	u3413
  1550  0156' 0800'              	movf	(??_main+1)^(0+128),w
  1551  0157' 0200'              	subwf	(_auxDistance+1)^(0+128),w
  1552  0158' 1D03               	skipz
  1553  0159' 2800'              	goto	u3413
  1554  015A' 0800'              	movf	??_main^(0+128),w
  1555  015B' 0200'              	subwf	_auxDistance^(0+128),w
  1556  015C'                    u3413:	
  1557  015C' 1C03               	skipc
  1558  015D' 2800'              	goto	l2914
  1559  015E' 300A               	movlw	10
  1560  015F' 0080'              	movwf	??_main^(0+128)
  1561  0160' 3000               	movlw	0
  1562  0161' 0081'              	movwf	(??_main^(0+128)+1)
  1563  0162' 3000               	movlw	0
  1564  0163' 0082'              	movwf	(??_main^(0+128)+2)
  1565  0164' 3000               	movlw	0
  1566  0165' 0083'              	movwf	(??_main^(0+128)+3)
  1567  0166' 300F               	movlw	15
  1568  0167' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  1569  0168' 0086               	movwf	6
  1570  0169' 0187               	clrf	7
  1571  016A' 3F40               	moviw [0]fsr1
  1572  016B' 0780'              	addwf	??_main^(0+128),f
  1573  016C' 3F41               	moviw [1]fsr1
  1574  016D' 3D81'              	addwfc	(??_main^(0+128)+1),f
  1575  016E' 3F42               	moviw [2]fsr1
  1576  016F' 3D82'              	addwfc	(??_main^(0+128)+2),f
  1577  0170' 3F43               	moviw [3]fsr1
  1578  0171' 2800'              	goto	L4
  1579  0172'                    l2852:	
  1580                           ;main.c: 457: case 5:
  1581                           
  1582                           ;main.c: 454: };main.c: 455: };main.c: 456: break;
  1583                           
  1584                           ;main.c: 453: stable = 0;
  1585                           
  1586                           ;main.c: 451: };main.c: 452: } else {
  1587                           
  1588                           ;main.c: 450: I2C_buffer.data.START_STOP = 0;
  1589                           
  1590                           ;main.c: 449: M_control(0);
  1591                           
  1592                           ;main.c: 447: {;main.c: 448: loadDistance = 0;
  1593                           
  1594                           ;main.c: 446: if (stable > 50)
  1595                           
  1596                           ;main.c: 445: stable++;
  1597                           
  1598                           
  1599                           ;main.c: 458: pre_pidM(I2C_buffer.data.SPEED);
  1600  0172' 0021               	movlb	1	; select bank1
  1601  0173' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1602  0174' 0080'              	movwf	(pre_pidM@set+1)^(0+128)
  1603  0175' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1604  0176' 0080'              	movwf	pre_pidM@set^(0+128)
  1605  0177' 3180' 2000' 3180'  	fcall	_pre_pidM
  1606                           
  1607                           ;main.c: 459: break;
  1608  017A' 2800'              	goto	l2922
  1609  017B'                    l2854:	
  1610                           ;main.c: 460: case 6:
  1611                           
  1612                           
  1613                           ;main.c: 461: if (I2C_buffer.data.DISTANCE != 0 && loadDistance == 0) {
  1614  017B' 0021               	movlb	1	; select bank1
  1615  017C' 080F'              	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1616  017D' 040F'              	iorwf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1617  017E' 040F'              	iorwf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1618  017F' 040F'              	iorwf	(_I2C_buffer^(0+128)+15),w	;volatile
  1619  0180' 1903               	skipnz
  1620  0181' 2800'              	goto	l2864
  1621  0182' 0020               	movlb	0	; select bank0
  1622  0183' 1800'              	btfsc	_loadDistance/(0+8),_loadDistance& (0+7)
  1623  0184' 2800'              	goto	l2864
  1624                           
  1625                           ;main.c: 462: loadDistance = 1;
  1626  0185' 1400'              	bsf	_loadDistance/(0+8),_loadDistance& (0+7)
  1627                           
  1628                           ;main.c: 463: auxDistance = I2C_buffer.data.DISTANCE;
  1629  0186' 300F               	movlw	15
  1630  0187' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  1631  0188' 0086               	movwf	6
  1632  0189' 0187               	clrf	7
  1633  018A' 3F40               	moviw [0]fsr1
  1634  018B' 0021               	movlb	1	; select bank1
  1635  018C' 0080'              	movwf	_auxDistance^(0+128)
  1636  018D' 3F41               	moviw [1]fsr1
  1637  018E' 0080'              	movwf	(_auxDistance+1)^(0+128)
  1638  018F' 3F42               	moviw [2]fsr1
  1639  0190' 0080'              	movwf	(_auxDistance+2)^(0+128)
  1640  0191' 3F43               	moviw [3]fsr1
  1641  0192'                    L1:	
  1642  0192' 0080'              	movwf	(_auxDistance+3)^(0+128)
  1643                           
  1644                           ;main.c: 464: I2C_buffer.data.DISTANCE = 0;
  1645  0193' 3000               	movlw	0
  1646  0194' 008F'              	movwf	((_I2C_buffer+3)^(0+128)+15)	;volatile
  1647  0195' 3000               	movlw	0
  1648  0196' 008F'              	movwf	((_I2C_buffer+2)^(0+128)+15)	;volatile
  1649  0197' 3000               	movlw	0
  1650  0198' 008F'              	movwf	((_I2C_buffer+1)^(0+128)+15)	;volatile
  1651  0199' 3000               	movlw	0
  1652  019A' 008F'              	movwf	(_I2C_buffer^(0+128)+15)	;volatile
  1653                           
  1654                           ;main.c: 465: } else {
  1655  019B' 2800'              	goto	l2922
  1656  019C'                    l2864:	
  1657                           
  1658                           ;main.c: 466: if (auxDistance > 0) {
  1659  019C' 0021               	movlb	1	; select bank1
  1660  019D' 1B80'              	btfsc	(_auxDistance+3)^(0+128),7
  1661  019E' 2800'              	goto	l2876
  1662  019F' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1663  01A0' 1D03               	btfss	3,2
  1664  01A1' 2800'              	goto	l2866
  1665  01A2' 0800'              	movf	(_auxDistance+2)^(0+128),w
  1666  01A3' 1D03               	btfss	3,2
  1667  01A4' 2800'              	goto	l2866
  1668  01A5' 0800'              	movf	(_auxDistance+1)^(0+128),w
  1669  01A6' 1D03               	btfss	3,2
  1670  01A7' 2800'              	goto	l2866
  1671  01A8' 3001               	movlw	1
  1672  01A9' 0200'              	subwf	_auxDistance^(0+128),w
  1673  01AA' 1C03               	btfss	3,0
  1674  01AB' 2800'              	goto	l2876
  1675  01AC'                    l2866:	
  1676                           
  1677                           ;main.c: 467: pre_pidM(abs(I2C_buffer.data.SPEED));
  1678  01AC' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1679  01AD' 0020               	movlb	0	; select bank0
  1680  01AE' 0083'              	movwf	abs@a+1
  1681  01AF' 0021               	movlb	1	; select bank1
  1682  01B0' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1683  01B1' 0020               	movlb	0	; select bank0
  1684  01B2' 0082'              	movwf	abs@a
  1685  01B3' 3180' 2000' 3180'  	fcall	_abs
  1686  01B6' 0020               	movlb	0	; select bank0
  1687  01B7' 0803'              	movf	?_abs+1,w
  1688  01B8' 0021               	movlb	1	; select bank1
  1689  01B9' 0080'              	movwf	(pre_pidM@set+1)^(0+128)
  1690  01BA' 0020               	movlb	0	; select bank0
  1691  01BB' 0802'              	movf	?_abs,w
  1692  01BC' 0021               	movlb	1	; select bank1
  1693  01BD' 0080'              	movwf	pre_pidM@set^(0+128)
  1694  01BE' 3180' 2000' 3180'  	fcall	_pre_pidM
  1695                           
  1696                           ;main.c: 468: if (auxDistance <= I2C_buffer.data.DISTANCE) {
  1697  01C1' 0021               	movlb	1	; select bank1
  1698  01C2' 080F'              	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1699  01C3' 3A80               	xorlw	128
  1700  01C4' 0080'              	movwf	??_main^(0+128)
  1701  01C5' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1702  01C6' 3A80               	xorlw	128
  1703  01C7' 0200'              	subwf	??_main^(0+128),w
  1704  01C8' 1D03               	skipz
  1705  01C9' 2800'              	goto	u3473
  1706  01CA' 0800'              	movf	(_auxDistance+2)^(0+128),w
  1707  01CB' 020F'              	subwf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1708  01CC' 1D03               	skipz
  1709  01CD' 2800'              	goto	u3473
  1710  01CE' 0800'              	movf	(_auxDistance+1)^(0+128),w
  1711  01CF' 020F'              	subwf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1712  01D0' 1D03               	skipz
  1713  01D1' 2800'              	goto	u3473
  1714  01D2' 0800'              	movf	_auxDistance^(0+128),w
  1715  01D3' 020F'              	subwf	(_I2C_buffer^(0+128)+15),w	;volatile
  1716  01D4'                    u3473:	
  1717  01D4' 1C03               	skipc
  1718  01D5' 2800'              	goto	l2876
  1719                           
  1720                           ;main.c: 469: loadDistance = 0;
  1721  01D6' 0020               	movlb	0	; select bank0
  1722  01D7' 1000'              	bcf	_loadDistance/(0+8),_loadDistance& (0+7)
  1723                           
  1724                           ;main.c: 470: M_control(0);
  1725  01D8' 3000               	movlw	0
  1726  01D9' 008D'              	movwf	M_control@ctr
  1727  01DA' 008E'              	movwf	M_control@ctr+1
  1728  01DB' 3180' 2000' 3180'  	fcall	_M_control
  1729                           
  1730                           ;main.c: 471: I2C_buffer.data.START_STOP = 0;
  1731  01DE' 0021               	movlb	1	; select bank1
  1732  01DF' 0182'              	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  1733  01E0'                    l2876:	
  1734                           
  1735                           ;main.c: 472: };main.c: 473: };main.c: 474: if (auxDistance < 0) {
  1736  01E0' 1F80'              	btfss	(_auxDistance+3)^(0+128),7
  1737  01E1' 2800'              	goto	l2922
  1738                           
  1739                           ;main.c: 475: pre_pidM(abs(I2C_buffer.data.SPEED)*-1);
  1740  01E2' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  1741  01E3' 0020               	movlb	0	; select bank0
  1742  01E4' 0083'              	movwf	abs@a+1
  1743  01E5' 0021               	movlb	1	; select bank1
  1744  01E6' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  1745  01E7' 0020               	movlb	0	; select bank0
  1746  01E8' 0082'              	movwf	abs@a
  1747  01E9' 3180' 2000' 3180'  	fcall	_abs
  1748  01EC' 0020               	movlb	0	; select bank0
  1749  01ED' 0902'              	comf	?_abs,w
  1750  01EE' 0021               	movlb	1	; select bank1
  1751  01EF' 0080'              	movwf	??_main^(0+128)
  1752  01F0' 0020               	movlb	0	; select bank0
  1753  01F1' 0903'              	comf	?_abs+1,w
  1754  01F2' 0021               	movlb	1	; select bank1
  1755  01F3' 0081'              	movwf	(??_main^(0+128)+1)
  1756  01F4' 0A80'              	incf	??_main^(0+128),f
  1757  01F5' 1903               	skipnz
  1758  01F6' 0A81'              	incf	(??_main^(0+128)+1),f
  1759  01F7' 0800'              	movf	??_main^(0+128),w
  1760  01F8' 0080'              	movwf	pre_pidM@set^(0+128)
  1761  01F9' 0800'              	movf	(??_main+1)^(0+128),w
  1762  01FA' 0080'              	movwf	(pre_pidM@set+1)^(0+128)
  1763  01FB' 3180' 2000' 3180'  	fcall	_pre_pidM
  1764  01FE'                    L3:	
  1765                           
  1766                           ;main.c: 476: if (auxDistance >= I2C_buffer.data.DISTANCE) {
  1767  01FE' 0021               	movlb	1	; select bank1
  1768  01FF' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1769  0200' 3A80               	xorlw	128
  1770  0201' 0080'              	movwf	??_main^(0+128)
  1771  0202' 080F'              	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1772  0203' 3A80               	xorlw	128
  1773  0204' 0200'              	subwf	??_main^(0+128),w
  1774  0205' 1D03               	skipz
  1775  0206' 2800'              	goto	u3545
  1776  0207' 080F'              	movf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1777  0208' 0200'              	subwf	(_auxDistance+2)^(0+128),w
  1778  0209' 1D03               	skipz
  1779  020A' 2800'              	goto	u3545
  1780  020B' 080F'              	movf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1781  020C' 0200'              	subwf	(_auxDistance+1)^(0+128),w
  1782  020D' 1D03               	skipz
  1783  020E' 2800'              	goto	u3545
  1784  020F' 080F'              	movf	(_I2C_buffer^(0+128)+15),w	;volatile
  1785  0210' 0200'              	subwf	_auxDistance^(0+128),w
  1786  0211' 2800'              	goto	u3545
  1787  0212'                    l2888:	
  1788                           ;main.c: 484: case 7:
  1789                           
  1790                           ;main.c: 480: };main.c: 481: };main.c: 482: };main.c: 483: break;
  1791                           
  1792                           ;main.c: 479: I2C_buffer.data.START_STOP = 0;
  1793                           
  1794                           ;main.c: 478: M_control(0);
  1795                           
  1796                           ;main.c: 477: loadDistance = 0;
  1797                           
  1798                           
  1799                           ;main.c: 485: if (I2C_buffer.data.DISTANCE != 0 && loadDistance == 0) {
  1800  0212' 080F'              	movf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  1801  0213' 040F'              	iorwf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  1802  0214' 040F'              	iorwf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  1803  0215' 040F'              	iorwf	(_I2C_buffer^(0+128)+15),w	;volatile
  1804  0216' 1903               	skipnz
  1805  0217' 2800'              	goto	l2900
  1806  0218' 0020               	movlb	0	; select bank0
  1807  0219' 1800'              	btfsc	_loadDistance/(0+8),_loadDistance& (0+7)
  1808  021A' 2800'              	goto	l2900
  1809                           
  1810                           ;main.c: 486: loadDistance = 1;
  1811  021B' 1400'              	bsf	_loadDistance/(0+8),_loadDistance& (0+7)
  1812                           
  1813                           ;main.c: 487: auxDistance = I2C_buffer.data.DISTANCE;
  1814  021C' 300F               	movlw	15
  1815  021D' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  1816  021E' 0086               	movwf	6
  1817  021F' 0187               	clrf	7
  1818  0220' 3F40               	moviw [0]fsr1
  1819  0221' 0021               	movlb	1	; select bank1
  1820  0222' 0080'              	movwf	_auxDistance^(0+128)
  1821  0223' 3F41               	moviw [1]fsr1
  1822  0224' 0080'              	movwf	(_auxDistance+1)^(0+128)
  1823  0225' 3F42               	moviw [2]fsr1
  1824  0226' 0080'              	movwf	(_auxDistance+2)^(0+128)
  1825  0227' 3F43               	moviw [3]fsr1
  1826  0228'                    L2:	
  1827  0228' 0080'              	movwf	(_auxDistance+3)^(0+128)
  1828                           
  1829                           ;main.c: 488: I2C_buffer.data.DISTANCE = 0;
  1830  0229' 3000               	movlw	0
  1831  022A' 008F'              	movwf	((_I2C_buffer+3)^(0+128)+15)	;volatile
  1832  022B' 3000               	movlw	0
  1833  022C' 008F'              	movwf	((_I2C_buffer+2)^(0+128)+15)	;volatile
  1834  022D' 3000               	movlw	0
  1835  022E' 008F'              	movwf	((_I2C_buffer+1)^(0+128)+15)	;volatile
  1836  022F' 3000               	movlw	0
  1837  0230' 008F'              	movwf	(_I2C_buffer^(0+128)+15)	;volatile
  1838  0231' 2800'              	goto	l2914
  1839  0232'                    l2900:	
  1840                           ;main.c: 490: } else {
  1841                           
  1842                           ;main.c: 489: stable = 0;
  1843                           
  1844                           
  1845                           ;main.c: 491: pre_pidM(calculate_pidA(auxDistance));
  1846  0232' 0021               	movlb	1	; select bank1
  1847  0233' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1848  0234' 0020               	movlb	0	; select bank0
  1849  0235' 00C0'              	movwf	calculate_pidA@set+3
  1850  0236' 0021               	movlb	1	; select bank1
  1851  0237' 0800'              	movf	(_auxDistance+2)^(0+128),w
  1852  0238' 0020               	movlb	0	; select bank0
  1853  0239' 00BF'              	movwf	calculate_pidA@set+2
  1854  023A' 0021               	movlb	1	; select bank1
  1855  023B' 0800'              	movf	(_auxDistance+1)^(0+128),w
  1856  023C' 0020               	movlb	0	; select bank0
  1857  023D' 00BE'              	movwf	calculate_pidA@set+1
  1858  023E' 0021               	movlb	1	; select bank1
  1859  023F' 0800'              	movf	_auxDistance^(0+128),w
  1860  0240' 0020               	movlb	0	; select bank0
  1861  0241' 00BD'              	movwf	calculate_pidA@set
  1862  0242' 3180' 2000' 3180'  	fcall	_calculate_pidA
  1863  0245' 0020               	movlb	0	; select bank0
  1864  0246' 083E'              	movf	?_calculate_pidA+1,w
  1865  0247' 0021               	movlb	1	; select bank1
  1866  0248' 0080'              	movwf	(pre_pidM@set+1)^(0+128)
  1867  0249' 0020               	movlb	0	; select bank0
  1868  024A' 083D'              	movf	?_calculate_pidA,w
  1869  024B' 0021               	movlb	1	; select bank1
  1870  024C' 0080'              	movwf	pre_pidM@set^(0+128)
  1871  024D' 3180' 2000' 3180'  	fcall	_pre_pidM
  1872                           
  1873                           ;main.c: 492: if (auxDistance >= I2C_buffer.data.DISTANCE - 10 && auxDistance <= I2C_buf
      +                          fer.data.DISTANCE + 10) {
  1874  0250' 30F6               	movlw	246
  1875  0251' 0021               	movlb	1	; select bank1
  1876  0252' 0080'              	movwf	??_main^(0+128)
  1877  0253' 30FF               	movlw	255
  1878  0254' 0081'              	movwf	(??_main^(0+128)+1)
  1879  0255' 30FF               	movlw	255
  1880  0256' 0082'              	movwf	(??_main^(0+128)+2)
  1881  0257' 30FF               	movlw	255
  1882  0258' 0083'              	movwf	(??_main^(0+128)+3)
  1883  0259' 300F               	movlw	15
  1884  025A' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  1885  025B' 0086               	movwf	6
  1886  025C' 0187               	clrf	7
  1887  025D' 3F40               	moviw [0]fsr1
  1888  025E' 0780'              	addwf	??_main^(0+128),f
  1889  025F' 3F41               	moviw [1]fsr1
  1890  0260' 3D81'              	addwfc	(??_main^(0+128)+1),f
  1891  0261' 3F42               	moviw [2]fsr1
  1892  0262' 3D82'              	addwfc	(??_main^(0+128)+2),f
  1893  0263' 3F43               	moviw [3]fsr1
  1894  0264' 3D83'              	addwfc	(??_main^(0+128)+3),f
  1895  0265' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1896  0266' 3A80               	xorlw	128
  1897  0267' 0080'              	movwf	(??_main+4)^(0+128)
  1898  0268' 0800'              	movf	(??_main+3)^(0+128),w
  1899  0269' 3A80               	xorlw	128
  1900  026A' 0200'              	subwf	(??_main+4)^(0+128),w
  1901  026B' 1D03               	skipz
  1902  026C' 2800'              	goto	u3523
  1903  026D' 0800'              	movf	(??_main+2)^(0+128),w
  1904  026E' 0200'              	subwf	(_auxDistance+2)^(0+128),w
  1905  026F' 1D03               	skipz
  1906  0270' 2800'              	goto	u3523
  1907  0271' 0800'              	movf	(??_main+1)^(0+128),w
  1908  0272' 0200'              	subwf	(_auxDistance+1)^(0+128),w
  1909  0273' 1D03               	skipz
  1910  0274' 2800'              	goto	u3523
  1911  0275' 0800'              	movf	??_main^(0+128),w
  1912  0276' 0200'              	subwf	_auxDistance^(0+128),w
  1913  0277'                    u3523:	
  1914  0277' 1C03               	skipc
  1915  0278' 2800'              	goto	l2914
  1916  0279' 300A               	movlw	10
  1917  027A' 0080'              	movwf	??_main^(0+128)
  1918  027B' 3000               	movlw	0
  1919  027C' 0081'              	movwf	(??_main^(0+128)+1)
  1920  027D' 3000               	movlw	0
  1921  027E' 0082'              	movwf	(??_main^(0+128)+2)
  1922  027F' 3000               	movlw	0
  1923  0280' 0083'              	movwf	(??_main^(0+128)+3)
  1924  0281' 300F               	movlw	15
  1925  0282' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  1926  0283' 0086               	movwf	6
  1927  0284' 0187               	clrf	7
  1928  0285' 3F40               	moviw [0]fsr1
  1929  0286' 0780'              	addwf	??_main^(0+128),f
  1930  0287' 3F41               	moviw [1]fsr1
  1931  0288' 3D81'              	addwfc	(??_main^(0+128)+1),f
  1932  0289' 3F42               	moviw [2]fsr1
  1933  028A' 3D82'              	addwfc	(??_main^(0+128)+2),f
  1934  028B' 3F43               	moviw [3]fsr1
  1935  028C'                    L4:	
  1936  028C' 3D83'              	addwfc	(??_main^(0+128)+3),f
  1937  028D' 0800'              	movf	(??_main+3)^(0+128),w
  1938  028E' 3A80               	xorlw	128
  1939  028F' 0080'              	movwf	(??_main+4)^(0+128)
  1940  0290' 0800'              	movf	(_auxDistance+3)^(0+128),w
  1941  0291' 3A80               	xorlw	128
  1942  0292' 0200'              	subwf	(??_main+4)^(0+128),w
  1943  0293' 1D03               	skipz
  1944  0294' 2800'              	goto	u3533
  1945  0295' 0800'              	movf	(_auxDistance+2)^(0+128),w
  1946  0296' 0200'              	subwf	(??_main+2)^(0+128),w
  1947  0297' 1D03               	skipz
  1948  0298' 2800'              	goto	u3533
  1949  0299' 0800'              	movf	(_auxDistance+1)^(0+128),w
  1950  029A' 0200'              	subwf	(??_main+1)^(0+128),w
  1951  029B' 1D03               	skipz
  1952  029C' 2800'              	goto	u3533
  1953  029D' 0800'              	movf	_auxDistance^(0+128),w
  1954  029E' 0200'              	subwf	??_main^(0+128),w
  1955  029F'                    u3533:	
  1956  029F' 1C03               	skipc
  1957  02A0' 2800'              	goto	l2914
  1958                           
  1959                           ;main.c: 493: stable++;
  1960  02A1' 3001               	movlw	1
  1961  02A2' 0022               	movlb	2	; select bank2
  1962  02A3' 0780'              	addwf	_stable^(0+256),f
  1963  02A4' 3000               	movlw	0
  1964  02A5' 3D80'              	addwfc	(_stable+1)^(0+256),f
  1965                           
  1966                           ;main.c: 494: if (stable > 50)
  1967  02A6' 0800'              	movf	(_stable+1)^(0+256),w
  1968  02A7' 3A80               	xorlw	128
  1969  02A8' 0021               	movlb	1	; select bank1
  1970  02A9' 0080'              	movwf	??_main^(0+128)
  1971  02AA' 3080               	movlw	128
  1972  02AB' 0200'              	subwf	??_main^(0+128),w
  1973  02AC' 1D03               	skipz
  1974  02AD' 2800'              	goto	u3545
  1975  02AE' 3033               	movlw	51
  1976  02AF' 0022               	movlb	2	; select bank2
  1977  02B0' 0200'              	subwf	_stable^(0+256),w
  1978  02B1'                    u3545:	
  1979  02B1' 1C03               	skipc
  1980  02B2' 2800'              	goto	l2922
  1981                           
  1982                           ;main.c: 495: {;main.c: 496: loadDistance = 0;
  1983  02B3' 0020               	movlb	0	; select bank0
  1984  02B4' 1000'              	bcf	_loadDistance/(0+8),_loadDistance& (0+7)
  1985                           
  1986                           ;main.c: 497: M_control(0);
  1987  02B5' 3000               	movlw	0
  1988  02B6' 008D'              	movwf	M_control@ctr
  1989  02B7' 008E'              	movwf	M_control@ctr+1
  1990  02B8' 3180' 2000' 3180'  	fcall	_M_control
  1991                           
  1992                           ;main.c: 498: I2C_buffer.data.START_STOP = 0;
  1993  02BB' 0021               	movlb	1	; select bank1
  1994  02BC' 0182'              	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  1995                           
  1996                           ;main.c: 499: };main.c: 500: } else {
  1997  02BD' 2800'              	goto	l2922
  1998  02BE'                    l2914:	
  1999                           
  2000                           ;main.c: 501: stable = 0;
  2001  02BE' 0022               	movlb	2	; select bank2
  2002  02BF' 0180'              	clrf	_stable^(0+256)
  2003  02C0' 0180'              	clrf	(_stable+1)^(0+256)
  2004                           
  2005                           ;main.c: 502: };main.c: 503: };main.c: 504: break;
  2006  02C1' 2800'              	goto	l2922
  2007  02C2'                    l2916:	
  2008                           ;main.c: 505: default:
  2009                           
  2010                           
  2011                           ;main.c: 506: M_control(0);
  2012  02C2' 3000               	movlw	0
  2013  02C3' 0020               	movlb	0	; select bank0
  2014  02C4' 008D'              	movwf	M_control@ctr
  2015  02C5' 008E'              	movwf	M_control@ctr+1
  2016  02C6' 3180' 2000' 3180'  	fcall	_M_control
  2017                           
  2018                           ;main.c: 508: }
  2019                           
  2020                           ;main.c: 507: break;
  2021  02C9' 2800'              	goto	l2922
  2022  02CA'                    l2920:	
  2023  02CA' 0021               	movlb	1	; select bank1
  2024  02CB' 0804'              	movf	(_I2C_buffer^(0+128)+4),w	;volatile
  2025                           
  2026                           ; Switch size 1, requested type "space"
  2027                           ; Number of cases is 8, Range of values is 0 to 7
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; direct_byte           22     6 (fixed)
  2031                           ; simple_byte           25    13 (average)
  2032                           ; jumptable            260     6 (fixed)
  2033                           ;	Chosen strategy is direct_byte
  2034  02CC' 0084               	movwf	4
  2035  02CD' 3008               	movlw	8
  2036  02CE' 0204               	subwf	4,w
  2037  02CF' 1803               	skipnc
  2038  02D0' 2800'              	goto	l2916
  2039  02D1' 3180'              	movlp	high S2982
  2040  02D2' 3504               	lslf	4,w
  2041  02D3' 3E00'              	addlw	low S2982
  2042  02D4' 0082               	movwf	2
  2043  02D5'                    l2922:	
  2044                           
  2045                           ;main.c: 509: _delay((unsigned long)((5)*(32000000/4000.0)));
  2046  02D5' 3034               	movlw	52
  2047  02D6' 0021               	movlb	1	; select bank1
  2048  02D7' 0080'              	movwf	??_main^(0+128)
  2049  02D8' 30F1               	movlw	241
  2050  02D9'                    u3597:	
  2051  02D9' 0B89               	decfsz	9,f
  2052  02DA' 2800'              	goto	u3597
  2053  02DB' 0B80'              	decfsz	??_main^(0+128),f
  2054  02DC' 2800'              	goto	u3597
  2055  02DD' 3200               	nop2
  2056                           
  2057                           ;main.c: 510: } else {
  2058  02DE' 2800'              	goto	l2934
  2059  02DF'                    l2924:	
  2060                           
  2061                           ;main.c: 511: M_control(0);
  2062  02DF' 3000               	movlw	0
  2063  02E0' 0020               	movlb	0	; select bank0
  2064  02E1' 008D'              	movwf	M_control@ctr
  2065  02E2' 008E'              	movwf	M_control@ctr+1
  2066  02E3' 3180' 2000' 3180'  	fcall	_M_control
  2067                           
  2068                           ;main.c: 512: accumulatorM = 0;
  2069  02E6' 3000               	movlw	0
  2070  02E7' 0022               	movlb	2	; select bank2
  2071  02E8' 0080'              	movwf	(_accumulatorM+3)^(0+256)
  2072  02E9' 3000               	movlw	0
  2073  02EA' 0080'              	movwf	(_accumulatorM+2)^(0+256)
  2074  02EB' 3000               	movlw	0
  2075  02EC' 0080'              	movwf	(_accumulatorM+1)^(0+256)
  2076  02ED' 3000               	movlw	0
  2077  02EE' 0080'              	movwf	_accumulatorM^(0+256)
  2078                           
  2079                           ;main.c: 513: lasterrorM = 0;
  2080  02EF' 3000               	movlw	0
  2081  02F0' 0080'              	movwf	(_lasterrorM+3)^(0+256)
  2082  02F1' 3000               	movlw	0
  2083  02F2' 0080'              	movwf	(_lasterrorM+2)^(0+256)
  2084  02F3' 3000               	movlw	0
  2085  02F4' 0080'              	movwf	(_lasterrorM+1)^(0+256)
  2086  02F5' 3000               	movlw	0
  2087  02F6' 0080'              	movwf	_lasterrorM^(0+256)
  2088                           
  2089                           ;main.c: 514: accumulatorA = 0;
  2090  02F7' 3000               	movlw	0
  2091  02F8' 0080'              	movwf	(_accumulatorA+3)^(0+256)
  2092  02F9' 3000               	movlw	0
  2093  02FA' 0080'              	movwf	(_accumulatorA+2)^(0+256)
  2094  02FB' 3000               	movlw	0
  2095  02FC' 0080'              	movwf	(_accumulatorA+1)^(0+256)
  2096  02FD' 3000               	movlw	0
  2097  02FE' 0080'              	movwf	_accumulatorA^(0+256)
  2098                           
  2099                           ;main.c: 515: lasterrorA = 0;
  2100  02FF' 3000               	movlw	0
  2101  0300' 0080'              	movwf	(_lasterrorA+3)^(0+256)
  2102  0301' 3000               	movlw	0
  2103  0302' 0080'              	movwf	(_lasterrorA+2)^(0+256)
  2104  0303' 3000               	movlw	0
  2105  0304' 0080'              	movwf	(_lasterrorA+1)^(0+256)
  2106  0305' 3000               	movlw	0
  2107  0306' 0080'              	movwf	_lasterrorA^(0+256)
  2108  0307'                    l2934:	
  2109                           
  2110                           ;main.c: 516: };main.c: 517: if (I2C_buffer.data.RESET == 1) {
  2111  0307' 0021               	movlb	1	; select bank1
  2112  0308' 0306'              	decf	(_I2C_buffer^(0+128)+6),w	;volatile
  2113  0309' 1903               	btfsc	3,2
  2114  030A' 0001               	reset	;# 
  2115                           
  2116                           ;main.c: 519: };main.c: 520: if (I2C_buffer.data.SAVE == 1) {
  2117  030B' 0021               	movlb	1	; select bank1
  2118  030C' 0305'              	decf	(_I2C_buffer^(0+128)+5),w	;volatile
  2119  030D' 1D03               	btfss	3,2
  2120  030E' 2800'              	goto	l160
  2121                           
  2122                           ;main.c: 521: eeprom_write(0, I2C_buffer.data.ADDRESS);
  2123  030F' 0801'              	movf	(_I2C_buffer^(0+128)+1),w	;volatile
  2124  0310' 0080'              	movwf	??_main^(0+128)
  2125  0311' 0800'              	movf	??_main^(0+128),w
  2126  0312' 0020               	movlb	0	; select bank0
  2127  0313' 0082'              	movwf	eeprom_write@value
  2128  0314' 3000               	movlw	0
  2129  0315' 3180' 2000' 3180'  	fcall	_eeprom_write
  2130                           
  2131                           ;main.c: 522: eeprom_write(1, I2C_buffer.data.IOWPU);
  2132  0318' 0021               	movlb	1	; select bank1
  2133  0319' 0803'              	movf	(_I2C_buffer^(0+128)+3),w	;volatile
  2134  031A' 0080'              	movwf	??_main^(0+128)
  2135  031B' 0800'              	movf	??_main^(0+128),w
  2136  031C' 0020               	movlb	0	; select bank0
  2137  031D' 0082'              	movwf	eeprom_write@value
  2138  031E' 3001               	movlw	1
  2139  031F' 3180' 2000' 3180'  	fcall	_eeprom_write
  2140                           
  2141                           ;main.c: 523: eeprom_write(2, I2C_buffer.byte[0x07]);
  2142  0322' 0021               	movlb	1	; select bank1
  2143  0323' 0807'              	movf	(_I2C_buffer^(0+128)+7),w	;volatile
  2144  0324' 0080'              	movwf	??_main^(0+128)
  2145  0325' 0800'              	movf	??_main^(0+128),w
  2146  0326' 0020               	movlb	0	; select bank0
  2147  0327' 0082'              	movwf	eeprom_write@value
  2148  0328' 3002               	movlw	2
  2149  0329' 3180' 2000' 3180'  	fcall	_eeprom_write
  2150                           
  2151                           ;main.c: 524: eeprom_write(3, I2C_buffer.byte[0x08]);
  2152  032C' 0021               	movlb	1	; select bank1
  2153  032D' 0808'              	movf	(_I2C_buffer^(0+128)+8),w	;volatile
  2154  032E' 0080'              	movwf	??_main^(0+128)
  2155  032F' 0800'              	movf	??_main^(0+128),w
  2156  0330' 0020               	movlb	0	; select bank0
  2157  0331' 0082'              	movwf	eeprom_write@value
  2158  0332' 3003               	movlw	3
  2159  0333' 3180' 2000' 3180'  	fcall	_eeprom_write
  2160                           
  2161                           ;main.c: 525: eeprom_write(4, I2C_buffer.byte[0x09]);
  2162  0336' 0021               	movlb	1	; select bank1
  2163  0337' 0809'              	movf	(_I2C_buffer^(0+128)+9),w	;volatile
  2164  0338' 0080'              	movwf	??_main^(0+128)
  2165  0339' 0800'              	movf	??_main^(0+128),w
  2166  033A' 0020               	movlb	0	; select bank0
  2167  033B' 0082'              	movwf	eeprom_write@value
  2168  033C' 3004               	movlw	4
  2169  033D' 3180' 2000' 3180'  	fcall	_eeprom_write
  2170                           
  2171                           ;main.c: 526: eeprom_write(5, I2C_buffer.byte[0x0A]);
  2172  0340' 0021               	movlb	1	; select bank1
  2173  0341' 080A'              	movf	(_I2C_buffer^(0+128)+10),w	;volatile
  2174  0342' 0080'              	movwf	??_main^(0+128)
  2175  0343' 0800'              	movf	??_main^(0+128),w
  2176  0344' 0020               	movlb	0	; select bank0
  2177  0345' 0082'              	movwf	eeprom_write@value
  2178  0346' 3005               	movlw	5
  2179  0347' 3180' 2000' 3180'  	fcall	_eeprom_write
  2180                           
  2181                           ;main.c: 527: eeprom_write(8, I2C_buffer.byte[0x13]);
  2182  034A' 0021               	movlb	1	; select bank1
  2183  034B' 0813'              	movf	(_I2C_buffer^(0+128)+19),w	;volatile
  2184  034C' 0080'              	movwf	??_main^(0+128)
  2185  034D' 0800'              	movf	??_main^(0+128),w
  2186  034E' 0020               	movlb	0	; select bank0
  2187  034F' 0082'              	movwf	eeprom_write@value
  2188  0350' 3008               	movlw	8
  2189  0351' 3180' 2000' 3180'  	fcall	_eeprom_write
  2190                           
  2191                           ;main.c: 528: eeprom_write(9, I2C_buffer.byte[0x14]);
  2192  0354' 0021               	movlb	1	; select bank1
  2193  0355' 0814'              	movf	(_I2C_buffer^(0+128)+20),w	;volatile
  2194  0356' 0080'              	movwf	??_main^(0+128)
  2195  0357' 0800'              	movf	??_main^(0+128),w
  2196  0358' 0020               	movlb	0	; select bank0
  2197  0359' 0082'              	movwf	eeprom_write@value
  2198  035A' 3009               	movlw	9
  2199  035B' 3180' 2000' 3180'  	fcall	_eeprom_write
  2200                           
  2201                           ;main.c: 529: eeprom_write(10, I2C_buffer.byte[0x15]);
  2202  035E' 0021               	movlb	1	; select bank1
  2203  035F' 0815'              	movf	(_I2C_buffer^(0+128)+21),w	;volatile
  2204  0360' 0080'              	movwf	??_main^(0+128)
  2205  0361' 0800'              	movf	??_main^(0+128),w
  2206  0362' 0020               	movlb	0	; select bank0
  2207  0363' 0082'              	movwf	eeprom_write@value
  2208  0364' 300A               	movlw	10
  2209  0365' 3180' 2000' 3180'  	fcall	_eeprom_write
  2210                           
  2211                           ;main.c: 530: eeprom_write(11, I2C_buffer.byte[0x16]);
  2212  0368' 0021               	movlb	1	; select bank1
  2213  0369' 0816'              	movf	(_I2C_buffer^(0+128)+22),w	;volatile
  2214  036A' 0080'              	movwf	??_main^(0+128)
  2215  036B' 0800'              	movf	??_main^(0+128),w
  2216  036C' 0020               	movlb	0	; select bank0
  2217  036D' 0082'              	movwf	eeprom_write@value
  2218  036E' 300B               	movlw	11
  2219  036F' 3180' 2000' 3180'  	fcall	_eeprom_write
  2220                           
  2221                           ;main.c: 531: eeprom_write(12, I2C_buffer.byte[0x17]);
  2222  0372' 0021               	movlb	1	; select bank1
  2223  0373' 0817'              	movf	(_I2C_buffer^(0+128)+23),w	;volatile
  2224  0374' 0080'              	movwf	??_main^(0+128)
  2225  0375' 0800'              	movf	??_main^(0+128),w
  2226  0376' 0020               	movlb	0	; select bank0
  2227  0377' 0082'              	movwf	eeprom_write@value
  2228  0378' 300C               	movlw	12
  2229  0379' 3180' 2000' 3180'  	fcall	_eeprom_write
  2230                           
  2231                           ;main.c: 532: eeprom_write(13, I2C_buffer.byte[0x18]);
  2232  037C' 0021               	movlb	1	; select bank1
  2233  037D' 0818'              	movf	(_I2C_buffer^(0+128)+24),w	;volatile
  2234  037E' 0080'              	movwf	??_main^(0+128)
  2235  037F' 0800'              	movf	??_main^(0+128),w
  2236  0380' 0020               	movlb	0	; select bank0
  2237  0381' 0082'              	movwf	eeprom_write@value
  2238  0382' 300D               	movlw	13
  2239  0383' 3180' 2000' 3180'  	fcall	_eeprom_write
  2240                           
  2241                           ;main.c: 533: eeprom_write(14, I2C_buffer.byte[0x19]);
  2242  0386' 0021               	movlb	1	; select bank1
  2243  0387' 0819'              	movf	(_I2C_buffer^(0+128)+25),w	;volatile
  2244  0388' 0080'              	movwf	??_main^(0+128)
  2245  0389' 0800'              	movf	??_main^(0+128),w
  2246  038A' 0020               	movlb	0	; select bank0
  2247  038B' 0082'              	movwf	eeprom_write@value
  2248  038C' 300E               	movlw	14
  2249  038D' 3180' 2000' 3180'  	fcall	_eeprom_write
  2250                           
  2251                           ;main.c: 534: eeprom_write(15, I2C_buffer.byte[0x1A]);
  2252  0390' 0021               	movlb	1	; select bank1
  2253  0391' 081A'              	movf	(_I2C_buffer^(0+128)+26),w	;volatile
  2254  0392' 0080'              	movwf	??_main^(0+128)
  2255  0393' 0800'              	movf	??_main^(0+128),w
  2256  0394' 0020               	movlb	0	; select bank0
  2257  0395' 0082'              	movwf	eeprom_write@value
  2258  0396' 300F               	movlw	15
  2259  0397' 3180' 2000' 3180'  	fcall	_eeprom_write
  2260                           
  2261                           ;main.c: 535: eeprom_write(16, I2C_buffer.byte[0x1B]);
  2262  039A' 0021               	movlb	1	; select bank1
  2263  039B' 081B'              	movf	(_I2C_buffer^(0+128)+27),w	;volatile
  2264  039C' 0080'              	movwf	??_main^(0+128)
  2265  039D' 0800'              	movf	??_main^(0+128),w
  2266  039E' 0020               	movlb	0	; select bank0
  2267  039F' 0082'              	movwf	eeprom_write@value
  2268  03A0' 3010               	movlw	16
  2269  03A1' 3180' 2000' 3180'  	fcall	_eeprom_write
  2270                           
  2271                           ;main.c: 536: eeprom_write(17, I2C_buffer.byte[0x1C]);
  2272  03A4' 0021               	movlb	1	; select bank1
  2273  03A5' 081C'              	movf	(_I2C_buffer^(0+128)+28),w	;volatile
  2274  03A6' 0080'              	movwf	??_main^(0+128)
  2275  03A7' 0800'              	movf	??_main^(0+128),w
  2276  03A8' 0020               	movlb	0	; select bank0
  2277  03A9' 0082'              	movwf	eeprom_write@value
  2278  03AA' 3011               	movlw	17
  2279  03AB' 3180' 2000' 3180'  	fcall	_eeprom_write
  2280                           
  2281                           ;main.c: 537: eeprom_write(18, I2C_buffer.byte[0x1D]);
  2282  03AE' 0021               	movlb	1	; select bank1
  2283  03AF' 081D'              	movf	(_I2C_buffer^(0+128)+29),w	;volatile
  2284  03B0' 0080'              	movwf	??_main^(0+128)
  2285  03B1' 0800'              	movf	??_main^(0+128),w
  2286  03B2' 0020               	movlb	0	; select bank0
  2287  03B3' 0082'              	movwf	eeprom_write@value
  2288  03B4' 3012               	movlw	18
  2289  03B5' 3180' 2000' 3180'  	fcall	_eeprom_write
  2290                           
  2291                           ;main.c: 538: eeprom_write(19, I2C_buffer.byte[0x1E]);
  2292  03B8' 0021               	movlb	1	; select bank1
  2293  03B9' 081E'              	movf	(_I2C_buffer^(0+128)+30),w	;volatile
  2294  03BA' 0080'              	movwf	??_main^(0+128)
  2295  03BB' 0800'              	movf	??_main^(0+128),w
  2296  03BC' 0020               	movlb	0	; select bank0
  2297  03BD' 0082'              	movwf	eeprom_write@value
  2298  03BE' 3013               	movlw	19
  2299  03BF' 3180' 2000' 3180'  	fcall	_eeprom_write
  2300                           
  2301                           ;main.c: 539: eeprom_write(20, I2C_buffer.byte[0x1F]);
  2302  03C2' 0021               	movlb	1	; select bank1
  2303  03C3' 081F'              	movf	(_I2C_buffer^(0+128)+31),w	;volatile
  2304  03C4' 0080'              	movwf	??_main^(0+128)
  2305  03C5' 0800'              	movf	??_main^(0+128),w
  2306  03C6' 0020               	movlb	0	; select bank0
  2307  03C7' 0082'              	movwf	eeprom_write@value
  2308  03C8' 3014               	movlw	20
  2309  03C9' 3180' 2000' 3180'  	fcall	_eeprom_write
  2310                           
  2311                           ;main.c: 540: eeprom_write(21, I2C_buffer.byte[0x20]);
  2312  03CC' 0021               	movlb	1	; select bank1
  2313  03CD' 0820'              	movf	(_I2C_buffer^(0+128)+32),w	;volatile
  2314  03CE' 0080'              	movwf	??_main^(0+128)
  2315  03CF' 0800'              	movf	??_main^(0+128),w
  2316  03D0' 0020               	movlb	0	; select bank0
  2317  03D1' 0082'              	movwf	eeprom_write@value
  2318  03D2' 3015               	movlw	21
  2319  03D3' 3180' 2000' 3180'  	fcall	_eeprom_write
  2320                           
  2321                           ;main.c: 541: eeprom_write(22, I2C_buffer.byte[0x21]);
  2322  03D6' 0021               	movlb	1	; select bank1
  2323  03D7' 0821'              	movf	(_I2C_buffer^(0+128)+33),w	;volatile
  2324  03D8' 0080'              	movwf	??_main^(0+128)
  2325  03D9' 0800'              	movf	??_main^(0+128),w
  2326  03DA' 0020               	movlb	0	; select bank0
  2327  03DB' 0082'              	movwf	eeprom_write@value
  2328  03DC' 3016               	movlw	22
  2329  03DD' 3180' 2000' 3180'  	fcall	_eeprom_write
  2330                           
  2331                           ;main.c: 542: eeprom_write(23, I2C_buffer.byte[0x22]);
  2332  03E0' 0021               	movlb	1	; select bank1
  2333  03E1' 0822'              	movf	(_I2C_buffer^(0+128)+34),w	;volatile
  2334  03E2' 0080'              	movwf	??_main^(0+128)
  2335  03E3' 0800'              	movf	??_main^(0+128),w
  2336  03E4' 0020               	movlb	0	; select bank0
  2337  03E5' 0082'              	movwf	eeprom_write@value
  2338  03E6' 3017               	movlw	23
  2339  03E7' 3180' 2000' 3180'  	fcall	_eeprom_write
  2340                           
  2341                           ;main.c: 543: eeprom_write(24, I2C_buffer.byte[0x23]);
  2342  03EA' 0021               	movlb	1	; select bank1
  2343  03EB' 0823'              	movf	(_I2C_buffer^(0+128)+35),w	;volatile
  2344  03EC' 0080'              	movwf	??_main^(0+128)
  2345  03ED' 0800'              	movf	??_main^(0+128),w
  2346  03EE' 0020               	movlb	0	; select bank0
  2347  03EF' 0082'              	movwf	eeprom_write@value
  2348  03F0' 3018               	movlw	24
  2349  03F1' 3180' 2000' 3180'  	fcall	_eeprom_write
  2350                           
  2351                           ;main.c: 544: eeprom_write(25, I2C_buffer.byte[0x24]);
  2352  03F4' 0021               	movlb	1	; select bank1
  2353  03F5' 0824'              	movf	(_I2C_buffer^(0+128)+36),w	;volatile
  2354  03F6' 0080'              	movwf	??_main^(0+128)
  2355  03F7' 0800'              	movf	??_main^(0+128),w
  2356  03F8' 0020               	movlb	0	; select bank0
  2357  03F9' 0082'              	movwf	eeprom_write@value
  2358  03FA' 3019               	movlw	25
  2359  03FB' 3180' 2000' 3180'  	fcall	_eeprom_write
  2360                           
  2361                           ;main.c: 545: eeprom_write(26, I2C_buffer.byte[0x25]);
  2362  03FE' 0021               	movlb	1	; select bank1
  2363  03FF' 0825'              	movf	(_I2C_buffer^(0+128)+37),w	;volatile
  2364  0400' 0080'              	movwf	??_main^(0+128)
  2365  0401' 0800'              	movf	??_main^(0+128),w
  2366  0402' 0020               	movlb	0	; select bank0
  2367  0403' 0082'              	movwf	eeprom_write@value
  2368  0404' 301A               	movlw	26
  2369  0405' 3180' 2000' 3180'  	fcall	_eeprom_write
  2370                           
  2371                           ;main.c: 546: eeprom_write(27, I2C_buffer.byte[0x26]);
  2372  0408' 0021               	movlb	1	; select bank1
  2373  0409' 0826'              	movf	(_I2C_buffer^(0+128)+38),w	;volatile
  2374  040A' 0080'              	movwf	??_main^(0+128)
  2375  040B' 0800'              	movf	??_main^(0+128),w
  2376  040C' 0020               	movlb	0	; select bank0
  2377  040D' 0082'              	movwf	eeprom_write@value
  2378  040E' 301B               	movlw	27
  2379  040F' 3180' 2000' 3180'  	fcall	_eeprom_write
  2380                           
  2381                           ;main.c: 547: eeprom_write(28, I2C_buffer.byte[0x27]);
  2382  0412' 0021               	movlb	1	; select bank1
  2383  0413' 0827'              	movf	(_I2C_buffer^(0+128)+39),w	;volatile
  2384  0414' 0080'              	movwf	??_main^(0+128)
  2385  0415' 0800'              	movf	??_main^(0+128),w
  2386  0416' 0020               	movlb	0	; select bank0
  2387  0417' 0082'              	movwf	eeprom_write@value
  2388  0418' 301C               	movlw	28
  2389  0419' 3180' 2000' 3180'  	fcall	_eeprom_write
  2390                           
  2391                           ;main.c: 548: eeprom_write(29, I2C_buffer.byte[0x28]);
  2392  041C' 0021               	movlb	1	; select bank1
  2393  041D' 0828'              	movf	(_I2C_buffer^(0+128)+40),w	;volatile
  2394  041E' 0080'              	movwf	??_main^(0+128)
  2395  041F' 0800'              	movf	??_main^(0+128),w
  2396  0420' 0020               	movlb	0	; select bank0
  2397  0421' 0082'              	movwf	eeprom_write@value
  2398  0422' 301D               	movlw	29
  2399  0423' 3180' 2000' 3180'  	fcall	_eeprom_write
  2400                           
  2401                           ;main.c: 549: eeprom_write(30, I2C_buffer.byte[0x29]);
  2402  0426' 0021               	movlb	1	; select bank1
  2403  0427' 0829'              	movf	(_I2C_buffer^(0+128)+41),w	;volatile
  2404  0428' 0080'              	movwf	??_main^(0+128)
  2405  0429' 0800'              	movf	??_main^(0+128),w
  2406  042A' 0020               	movlb	0	; select bank0
  2407  042B' 0082'              	movwf	eeprom_write@value
  2408  042C' 301E               	movlw	30
  2409  042D' 3180' 2000' 3180'  	fcall	_eeprom_write
  2410                           
  2411                           ;main.c: 550: eeprom_write(31, I2C_buffer.byte[0x2A]);
  2412  0430' 0021               	movlb	1	; select bank1
  2413  0431' 082A'              	movf	(_I2C_buffer^(0+128)+42),w	;volatile
  2414  0432' 0080'              	movwf	??_main^(0+128)
  2415  0433' 0800'              	movf	??_main^(0+128),w
  2416  0434' 0020               	movlb	0	; select bank0
  2417  0435' 0082'              	movwf	eeprom_write@value
  2418  0436' 301F               	movlw	31
  2419  0437' 3180' 2000' 3180'  	fcall	_eeprom_write
  2420                           
  2421                           ;main.c: 551: _delay((unsigned long)((5)*(32000000/4000.0)));
  2422  043A' 3034               	movlw	52
  2423  043B' 0021               	movlb	1	; select bank1
  2424  043C' 0080'              	movwf	??_main^(0+128)
  2425  043D' 30F1               	movlw	241
  2426  043E'                    u3607:	
  2427  043E' 0B89               	decfsz	9,f
  2428  043F' 2800'              	goto	u3607
  2429  0440' 0B80'              	decfsz	??_main^(0+128),f
  2430  0441' 2800'              	goto	u3607
  2431  0442' 3200               	nop2
  2432                           
  2433                           ;main.c: 552: I2C_buffer.data.SAVE = 0;
  2434  0443' 0021               	movlb	1	; select bank1
  2435  0444' 0185'              	clrf	(_I2C_buffer^(0+128)+5)	;volatile
  2436  0445' 2800'              	goto	l160
  2437  0446'                    __end_of_main:	
  2438                           
  2439                           	psect	swtext1
  2440  0000'                    __pswtext1:	
  2441  0000'                    S2982:	
  2442  0000' 3180' 2800'        	ljmp	l2784
  2443  0002' 3180' 2800'        	ljmp	l2786
  2444  0004' 3180' 2800'        	ljmp	l2788
  2445  0006' 3180' 2800'        	ljmp	l2790
  2446  0008' 3180' 2800'        	ljmp	l2824
  2447  000A' 3180' 2800'        	ljmp	l2852
  2448  000C' 3180' 2800'        	ljmp	l2854
  2449  000E' 3180' 2800'        	ljmp	l2888
  2450                           
  2451                           	psect	text1
  2452  0000'                    __ptext1:	
  2453 ;; *************** function _pre_pidM *****************
  2454 ;; Defined at:
  2455 ;;		line 293 in file "main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  set             2   24[BANK1 ] int 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2469 ;;      Params:         0       0       2       0
  2470 ;;      Locals:         0       0       0       0
  2471 ;;      Temps:          0       0       2       0
  2472 ;;      Totals:         0       0       4       0
  2473 ;;Total ram usage:        4 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    5
  2476 ;; This function calls:
  2477 ;;		_calculate_pidM
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function _pre_pidM
  2485  0000'                    _pre_pidM:	
  2486                           
  2487                           ;main.c: 295: zero_cross = ((lset^set) < 0);
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _pre_pidM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2491  0000' 0021               	movlb	1	; select bank1
  2492  0001' 0800'              	movf	pre_pidM@set^(0+128),w
  2493  0002' 0022               	movlb	2	; select bank2
  2494  0003' 0600'              	xorwf	_lset^(0+256),w
  2495  0004' 0021               	movlb	1	; select bank1
  2496  0005' 0080'              	movwf	??_pre_pidM^(0+128)
  2497  0006' 0800'              	movf	(pre_pidM@set+1)^(0+128),w
  2498  0007' 0022               	movlb	2	; select bank2
  2499  0008' 0600'              	xorwf	(_lset+1)^(0+256),w
  2500  0009' 0021               	movlb	1	; select bank1
  2501  000A' 0080'              	movwf	(??_pre_pidM+1)^(0+128)
  2502  000B' 1F80'              	btfss	(??_pre_pidM+1)^(0+128),7
  2503  000C' 2800'              	goto	u2920
  2504  000D' 0020               	movlb	0	; select bank0
  2505  000E' 1400'              	bsf	_zero_cross/(0+8),_zero_cross& (0+7)
  2506  000F' 2800'              	goto	u2934
  2507  0010'                    u2920:	
  2508  0010' 0020               	movlb	0	; select bank0
  2509  0011' 1000'              	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
  2510  0012'                    u2934:	
  2511                           
  2512                           ;main.c: 296: if (((zero_cross == 1) &(set <= 0) & (lset <= 0)))
  2513  0012' 0021               	movlb	1	; select bank1
  2514  0013' 0800'              	movf	(pre_pidM@set+1)^(0+128),w
  2515  0014' 3A80               	xorlw	128
  2516  0015' 0080'              	movwf	??_pre_pidM^(0+128)
  2517  0016' 3080               	movlw	128
  2518  0017' 0200'              	subwf	??_pre_pidM^(0+128),w
  2519  0018' 1D03               	skipz
  2520  0019' 2800'              	goto	u2945
  2521  001A' 3001               	movlw	1
  2522  001B' 0200'              	subwf	pre_pidM@set^(0+128),w
  2523  001C'                    u2945:	
  2524  001C' 1803               	skipnc
  2525  001D' 2800'              	goto	l147
  2526  001E' 0020               	movlb	0	; select bank0
  2527  001F' 1C00'              	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
  2528  0020' 2800'              	goto	l147
  2529  0021' 0022               	movlb	2	; select bank2
  2530  0022' 0800'              	movf	(_lset+1)^(0+256),w
  2531  0023' 3A80               	xorlw	128
  2532  0024' 0021               	movlb	1	; select bank1
  2533  0025' 0080'              	movwf	??_pre_pidM^(0+128)
  2534  0026' 3080               	movlw	128
  2535  0027' 0200'              	subwf	??_pre_pidM^(0+128),w
  2536  0028' 1D03               	skipz
  2537  0029' 2800'              	goto	u2965
  2538  002A' 3001               	movlw	1
  2539  002B' 0022               	movlb	2	; select bank2
  2540  002C' 0200'              	subwf	_lset^(0+256),w
  2541  002D'                    u2965:	
  2542  002D' 1803               	skipnc
  2543  002E' 2800'              	goto	l147
  2544                           
  2545                           ;main.c: 297: {;main.c: 298: zero_cross = 0;
  2546  002F' 0020               	movlb	0	; select bank0
  2547  0030' 1000'              	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
  2548  0031'                    l147:	
  2549                           
  2550                           ;main.c: 299: };main.c: 300: if (zero_cross == 1) {
  2551  0031' 0020               	movlb	0	; select bank0
  2552  0032' 1C00'              	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
  2553  0033' 2800'              	goto	l2472
  2554  0034'                    l2466:	
  2555                           ;main.c: 301: do {
  2556                           
  2557                           
  2558                           ;main.c: 302: calculate_pidM(0);
  2559  0034' 3000               	movlw	0
  2560  0035' 0020               	movlb	0	; select bank0
  2561  0036' 00C9'              	movwf	calculate_pidM@set
  2562  0037' 00CA'              	movwf	calculate_pidM@set+1
  2563  0038' 3180' 2000' 3180'  	fcall	_calculate_pidM
  2564  003B' 0064               	clrwdt	;# 
  2565                           
  2566                           ;main.c: 304: _delay((unsigned long)((5)*(32000000/4000.0)));
  2567  003C' 3034               	movlw	52
  2568  003D' 0021               	movlb	1	; select bank1
  2569  003E' 0080'              	movwf	??_pre_pidM^(0+128)
  2570  003F' 30F1               	movlw	241
  2571  0040'                    u3617:	
  2572  0040' 0B89               	decfsz	9,f
  2573  0041' 2800'              	goto	u3617
  2574  0042' 0B80'              	decfsz	??_pre_pidM^(0+128),f
  2575  0043' 2800'              	goto	u3617
  2576  0044' 3200               	nop2
  2577                           
  2578                           ;main.c: 305: } while ((I2C_buffer.data.RPM != 0));
  2579  0045' 0021               	movlb	1	; select bank1
  2580  0046' 080B'              	movf	(_I2C_buffer^(0+128)+11),w	;volatile
  2581  0047' 040B'              	iorwf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  2582  0048' 1D03               	btfss	3,2
  2583  0049' 2800'              	goto	l2466
  2584  004A'                    l2472:	
  2585                           
  2586                           ;main.c: 306: };main.c: 307: lset = set;
  2587  004A' 0021               	movlb	1	; select bank1
  2588  004B' 0800'              	movf	(pre_pidM@set+1)^(0+128),w
  2589  004C' 0022               	movlb	2	; select bank2
  2590  004D' 0080'              	movwf	(_lset+1)^(0+256)
  2591  004E' 0021               	movlb	1	; select bank1
  2592  004F' 0800'              	movf	pre_pidM@set^(0+128),w
  2593  0050' 0022               	movlb	2	; select bank2
  2594  0051' 0080'              	movwf	_lset^(0+256)
  2595                           
  2596                           ;main.c: 308: calculate_pidM(set);
  2597  0052' 0021               	movlb	1	; select bank1
  2598  0053' 0800'              	movf	(pre_pidM@set+1)^(0+128),w
  2599  0054' 0020               	movlb	0	; select bank0
  2600  0055' 00CA'              	movwf	calculate_pidM@set+1
  2601  0056' 0021               	movlb	1	; select bank1
  2602  0057' 0800'              	movf	pre_pidM@set^(0+128),w
  2603  0058' 0020               	movlb	0	; select bank0
  2604  0059' 00C9'              	movwf	calculate_pidM@set
  2605  005A' 3180' 2000'        	fcall	_calculate_pidM
  2606  005C' 0008               	return
  2607  005D'                    __end_of_pre_pidM:	
  2608                           
  2609                           	psect	text2
  2610  0000'                    __ptext2:	
  2611 ;; *************** function _calculate_pidM *****************
  2612 ;; Defined at:
  2613 ;;		line 273 in file "main.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  set             2   73[BANK0 ] int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  pid             4   20[BANK1 ] float 
  2618 ;;  error           4   16[BANK1 ] float 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2628 ;;      Params:         0       2       0       0
  2629 ;;      Locals:         0       0      12       0
  2630 ;;      Temps:          0       2       0       0
  2631 ;;      Totals:         0       4      12       0
  2632 ;;Total ram usage:       16 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    4
  2635 ;; This function calls:
  2636 ;;		_M_control
  2637 ;;		___fladd
  2638 ;;		___flge
  2639 ;;		___flmul
  2640 ;;		___flneg
  2641 ;;		___fltol
  2642 ;;		___xxtofl
  2643 ;; This function is called by:
  2644 ;;		_pre_pidM
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _calculate_pidM
  2651  0000'                    _calculate_pidM:	
  2652                           
  2653                           ;main.c: 275: float error = 0;
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in _calculate_pidM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2657  0000' 3000               	movlw	0
  2658  0001' 0021               	movlb	1	; select bank1
  2659  0002' 0080'              	movwf	(calculate_pidM@error+3)^(0+128)
  2660  0003' 3000               	movlw	0
  2661  0004' 0080'              	movwf	(calculate_pidM@error+2)^(0+128)
  2662  0005' 3000               	movlw	0
  2663  0006' 0080'              	movwf	(calculate_pidM@error+1)^(0+128)
  2664  0007' 3000               	movlw	0
  2665  0008' 0080'              	movwf	calculate_pidM@error^(0+128)
  2666                           
  2667                           ;main.c: 276: float pid = 0;
  2668  0009' 3000               	movlw	0
  2669  000A' 0080'              	movwf	(calculate_pidM@pid+3)^(0+128)
  2670  000B' 3000               	movlw	0
  2671  000C' 0080'              	movwf	(calculate_pidM@pid+2)^(0+128)
  2672  000D' 3000               	movlw	0
  2673  000E' 0080'              	movwf	(calculate_pidM@pid+1)^(0+128)
  2674  000F' 3000               	movlw	0
  2675  0010' 0080'              	movwf	calculate_pidM@pid^(0+128)
  2676                           
  2677                           ;main.c: 277: error = set - I2C_buffer.data.RPM;
  2678  0011' 090B'              	comf	(_I2C_buffer^(0+128)+11),w	;volatile
  2679  0012' 0020               	movlb	0	; select bank0
  2680  0013' 00CB'              	movwf	??_calculate_pidM
  2681  0014' 0021               	movlb	1	; select bank1
  2682  0015' 090B'              	comf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  2683  0016' 0020               	movlb	0	; select bank0
  2684  0017' 00CC'              	movwf	??_calculate_pidM+1
  2685  0018' 0ACB'              	incf	??_calculate_pidM,f
  2686  0019' 1903               	skipnz
  2687  001A' 0ACC'              	incf	??_calculate_pidM+1,f
  2688  001B' 0849'              	movf	calculate_pidM@set,w
  2689  001C' 074B'              	addwf	??_calculate_pidM,w
  2690  001D' 0086'              	movwf	___xxtofl@val
  2691  001E' 084A'              	movf	calculate_pidM@set+1,w
  2692  001F' 3D4C'              	addwfc	??_calculate_pidM+1,w
  2693  0020' 0087'              	movwf	___xxtofl@val+1
  2694  0021' 0188'              	clrf	___xxtofl@val+2
  2695  0022' 1B87'              	btfsc	___xxtofl@val+1,7
  2696  0023' 0388'              	decf	___xxtofl@val+2,f
  2697  0024' 0808'              	movf	___xxtofl@val+2,w
  2698  0025' 0089'              	movwf	___xxtofl@val+3
  2699  0026' 3001               	movlw	1
  2700  0027' 3180' 2000' 3180'  	fcall	___xxtofl
  2701  002A' 0020               	movlb	0	; select bank0
  2702  002B' 0809'              	movf	?___xxtofl+3,w
  2703  002C' 0021               	movlb	1	; select bank1
  2704  002D' 0080'              	movwf	(calculate_pidM@error+3)^(0+128)
  2705  002E' 0020               	movlb	0	; select bank0
  2706  002F' 0808'              	movf	?___xxtofl+2,w
  2707  0030' 0021               	movlb	1	; select bank1
  2708  0031' 0080'              	movwf	(calculate_pidM@error+2)^(0+128)
  2709  0032' 0020               	movlb	0	; select bank0
  2710  0033' 0807'              	movf	?___xxtofl+1,w
  2711  0034' 0021               	movlb	1	; select bank1
  2712  0035' 0080'              	movwf	(calculate_pidM@error+1)^(0+128)
  2713  0036' 0020               	movlb	0	; select bank0
  2714  0037' 0806'              	movf	?___xxtofl,w
  2715  0038' 0021               	movlb	1	; select bank1
  2716  0039' 0080'              	movwf	calculate_pidM@error^(0+128)
  2717                           
  2718                           ;main.c: 278: pid = error * I2C_buffer.data.RPM_PID_KP;
  2719  003A' 0800'              	movf	(calculate_pidM@error+3)^(0+128),w
  2720  003B' 0020               	movlb	0	; select bank0
  2721  003C' 008E'              	movwf	___flmul@b+3
  2722  003D' 0021               	movlb	1	; select bank1
  2723  003E' 0800'              	movf	(calculate_pidM@error+2)^(0+128),w
  2724  003F' 0020               	movlb	0	; select bank0
  2725  0040' 008D'              	movwf	___flmul@b+2
  2726  0041' 0021               	movlb	1	; select bank1
  2727  0042' 0800'              	movf	(calculate_pidM@error+1)^(0+128),w
  2728  0043' 0020               	movlb	0	; select bank0
  2729  0044' 008C'              	movwf	___flmul@b+1
  2730  0045' 0021               	movlb	1	; select bank1
  2731  0046' 0800'              	movf	calculate_pidM@error^(0+128),w
  2732  0047' 0020               	movlb	0	; select bank0
  2733  0048' 008B'              	movwf	___flmul@b
  2734  0049' 3013               	movlw	19
  2735  004A' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  2736  004B' 0086               	movwf	6
  2737  004C' 0187               	clrf	7
  2738  004D' 3F40               	moviw [0]fsr1
  2739  004E' 008F'              	movwf	___flmul@a
  2740  004F' 3F41               	moviw [1]fsr1
  2741  0050' 0090'              	movwf	___flmul@a+1
  2742  0051' 3F42               	moviw [2]fsr1
  2743  0052' 0091'              	movwf	___flmul@a+2
  2744  0053' 3F43               	moviw [3]fsr1
  2745  0054' 0092'              	movwf	___flmul@a+3
  2746  0055' 3180' 2000' 3180'  	fcall	___flmul
  2747  0058' 0020               	movlb	0	; select bank0
  2748  0059' 080E'              	movf	?___flmul+3,w
  2749  005A' 0021               	movlb	1	; select bank1
  2750  005B' 0080'              	movwf	(calculate_pidM@pid+3)^(0+128)
  2751  005C' 0020               	movlb	0	; select bank0
  2752  005D' 080D'              	movf	?___flmul+2,w
  2753  005E' 0021               	movlb	1	; select bank1
  2754  005F' 0080'              	movwf	(calculate_pidM@pid+2)^(0+128)
  2755  0060' 0020               	movlb	0	; select bank0
  2756  0061' 080C'              	movf	?___flmul+1,w
  2757  0062' 0021               	movlb	1	; select bank1
  2758  0063' 0080'              	movwf	(calculate_pidM@pid+1)^(0+128)
  2759  0064' 0020               	movlb	0	; select bank0
  2760  0065' 080B'              	movf	?___flmul,w
  2761  0066' 0021               	movlb	1	; select bank1
  2762  0067' 0080'              	movwf	calculate_pidM@pid^(0+128)
  2763                           
  2764                           ;main.c: 279: accumulatorM += error;
  2765  0068' 0800'              	movf	(calculate_pidM@error+3)^(0+128),w
  2766  0069' 0020               	movlb	0	; select bank0
  2767  006A' 00A8'              	movwf	___fladd@b+3
  2768  006B' 0021               	movlb	1	; select bank1
  2769  006C' 0800'              	movf	(calculate_pidM@error+2)^(0+128),w
  2770  006D' 0020               	movlb	0	; select bank0
  2771  006E' 00A7'              	movwf	___fladd@b+2
  2772  006F' 0021               	movlb	1	; select bank1
  2773  0070' 0800'              	movf	(calculate_pidM@error+1)^(0+128),w
  2774  0071' 0020               	movlb	0	; select bank0
  2775  0072' 00A6'              	movwf	___fladd@b+1
  2776  0073' 0021               	movlb	1	; select bank1
  2777  0074' 0800'              	movf	calculate_pidM@error^(0+128),w
  2778  0075' 0020               	movlb	0	; select bank0
  2779  0076' 00A5'              	movwf	___fladd@b
  2780  0077' 0022               	movlb	2	; select bank2
  2781  0078' 0800'              	movf	(_accumulatorM+3)^(0+256),w
  2782  0079' 0020               	movlb	0	; select bank0
  2783  007A' 00AC'              	movwf	___fladd@a+3
  2784  007B' 0022               	movlb	2	; select bank2
  2785  007C' 0800'              	movf	(_accumulatorM+2)^(0+256),w
  2786  007D' 0020               	movlb	0	; select bank0
  2787  007E' 00AB'              	movwf	___fladd@a+2
  2788  007F' 0022               	movlb	2	; select bank2
  2789  0080' 0800'              	movf	(_accumulatorM+1)^(0+256),w
  2790  0081' 0020               	movlb	0	; select bank0
  2791  0082' 00AA'              	movwf	___fladd@a+1
  2792  0083' 0022               	movlb	2	; select bank2
  2793  0084' 0800'              	movf	_accumulatorM^(0+256),w
  2794  0085' 0020               	movlb	0	; select bank0
  2795  0086' 00A9'              	movwf	___fladd@a
  2796  0087' 3180' 2000' 3180'  	fcall	___fladd
  2797  008A' 0020               	movlb	0	; select bank0
  2798  008B' 0828'              	movf	?___fladd+3,w
  2799  008C' 0022               	movlb	2	; select bank2
  2800  008D' 0080'              	movwf	(_accumulatorM+3)^(0+256)
  2801  008E' 0020               	movlb	0	; select bank0
  2802  008F' 0827'              	movf	?___fladd+2,w
  2803  0090' 0022               	movlb	2	; select bank2
  2804  0091' 0080'              	movwf	(_accumulatorM+2)^(0+256)
  2805  0092' 0020               	movlb	0	; select bank0
  2806  0093' 0826'              	movf	?___fladd+1,w
  2807  0094' 0022               	movlb	2	; select bank2
  2808  0095' 0080'              	movwf	(_accumulatorM+1)^(0+256)
  2809  0096' 0020               	movlb	0	; select bank0
  2810  0097' 0825'              	movf	?___fladd,w
  2811  0098' 0022               	movlb	2	; select bank2
  2812  0099' 0080'              	movwf	_accumulatorM^(0+256)
  2813                           
  2814                           ;main.c: 280: pid += I2C_buffer.data.RPM_PID_KI*accumulatorM;
  2815  009A' 301B               	movlw	27
  2816  009B' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  2817  009C' 0086               	movwf	6
  2818  009D' 0187               	clrf	7
  2819  009E' 3F40               	moviw [0]fsr1
  2820  009F' 0020               	movlb	0	; select bank0
  2821  00A0' 008F'              	movwf	___flmul@a
  2822  00A1' 3F41               	moviw [1]fsr1
  2823  00A2' 0090'              	movwf	___flmul@a+1
  2824  00A3' 3F42               	moviw [2]fsr1
  2825  00A4' 0091'              	movwf	___flmul@a+2
  2826  00A5' 3F43               	moviw [3]fsr1
  2827  00A6' 0092'              	movwf	___flmul@a+3
  2828  00A7' 0022               	movlb	2	; select bank2
  2829  00A8' 0800'              	movf	(_accumulatorM+3)^(0+256),w
  2830  00A9' 0020               	movlb	0	; select bank0
  2831  00AA' 008E'              	movwf	___flmul@b+3
  2832  00AB' 0022               	movlb	2	; select bank2
  2833  00AC' 0800'              	movf	(_accumulatorM+2)^(0+256),w
  2834  00AD' 0020               	movlb	0	; select bank0
  2835  00AE' 008D'              	movwf	___flmul@b+2
  2836  00AF' 0022               	movlb	2	; select bank2
  2837  00B0' 0800'              	movf	(_accumulatorM+1)^(0+256),w
  2838  00B1' 0020               	movlb	0	; select bank0
  2839  00B2' 008C'              	movwf	___flmul@b+1
  2840  00B3' 0022               	movlb	2	; select bank2
  2841  00B4' 0800'              	movf	_accumulatorM^(0+256),w
  2842  00B5' 0020               	movlb	0	; select bank0
  2843  00B6' 008B'              	movwf	___flmul@b
  2844  00B7' 3180' 2000' 3180'  	fcall	___flmul
  2845  00BA' 0020               	movlb	0	; select bank0
  2846  00BB' 080E'              	movf	?___flmul+3,w
  2847  00BC' 00A8'              	movwf	___fladd@b+3
  2848  00BD' 080D'              	movf	?___flmul+2,w
  2849  00BE' 00A7'              	movwf	___fladd@b+2
  2850  00BF' 080C'              	movf	?___flmul+1,w
  2851  00C0' 00A6'              	movwf	___fladd@b+1
  2852  00C1' 080B'              	movf	?___flmul,w
  2853  00C2' 00A5'              	movwf	___fladd@b
  2854  00C3' 0021               	movlb	1	; select bank1
  2855  00C4' 0800'              	movf	(calculate_pidM@pid+3)^(0+128),w
  2856  00C5' 0020               	movlb	0	; select bank0
  2857  00C6' 00AC'              	movwf	___fladd@a+3
  2858  00C7' 0021               	movlb	1	; select bank1
  2859  00C8' 0800'              	movf	(calculate_pidM@pid+2)^(0+128),w
  2860  00C9' 0020               	movlb	0	; select bank0
  2861  00CA' 00AB'              	movwf	___fladd@a+2
  2862  00CB' 0021               	movlb	1	; select bank1
  2863  00CC' 0800'              	movf	(calculate_pidM@pid+1)^(0+128),w
  2864  00CD' 0020               	movlb	0	; select bank0
  2865  00CE' 00AA'              	movwf	___fladd@a+1
  2866  00CF' 0021               	movlb	1	; select bank1
  2867  00D0' 0800'              	movf	calculate_pidM@pid^(0+128),w
  2868  00D1' 0020               	movlb	0	; select bank0
  2869  00D2' 00A9'              	movwf	___fladd@a
  2870  00D3' 3180' 2000' 3180'  	fcall	___fladd
  2871  00D6' 0020               	movlb	0	; select bank0
  2872  00D7' 0828'              	movf	?___fladd+3,w
  2873  00D8' 0021               	movlb	1	; select bank1
  2874  00D9' 0080'              	movwf	(calculate_pidM@pid+3)^(0+128)
  2875  00DA' 0020               	movlb	0	; select bank0
  2876  00DB' 0827'              	movf	?___fladd+2,w
  2877  00DC' 0021               	movlb	1	; select bank1
  2878  00DD' 0080'              	movwf	(calculate_pidM@pid+2)^(0+128)
  2879  00DE' 0020               	movlb	0	; select bank0
  2880  00DF' 0826'              	movf	?___fladd+1,w
  2881  00E0' 0021               	movlb	1	; select bank1
  2882  00E1' 0080'              	movwf	(calculate_pidM@pid+1)^(0+128)
  2883  00E2' 0020               	movlb	0	; select bank0
  2884  00E3' 0825'              	movf	?___fladd,w
  2885  00E4' 0021               	movlb	1	; select bank1
  2886  00E5' 0080'              	movwf	calculate_pidM@pid^(0+128)
  2887                           
  2888                           ;main.c: 281: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterrorM);
  2889  00E6' 0022               	movlb	2	; select bank2
  2890  00E7' 0800'              	movf	(_lasterrorM+3)^(0+256),w
  2891  00E8' 0020               	movlb	0	; select bank0
  2892  00E9' 0085'              	movwf	___flneg@f1+3
  2893  00EA' 0022               	movlb	2	; select bank2
  2894  00EB' 0800'              	movf	(_lasterrorM+2)^(0+256),w
  2895  00EC' 0020               	movlb	0	; select bank0
  2896  00ED' 0084'              	movwf	___flneg@f1+2
  2897  00EE' 0022               	movlb	2	; select bank2
  2898  00EF' 0800'              	movf	(_lasterrorM+1)^(0+256),w
  2899  00F0' 0020               	movlb	0	; select bank0
  2900  00F1' 0083'              	movwf	___flneg@f1+1
  2901  00F2' 0022               	movlb	2	; select bank2
  2902  00F3' 0800'              	movf	_lasterrorM^(0+256),w
  2903  00F4' 0020               	movlb	0	; select bank0
  2904  00F5' 0082'              	movwf	___flneg@f1
  2905  00F6' 3180' 2000' 3180'  	fcall	___flneg
  2906  00F9' 0020               	movlb	0	; select bank0
  2907  00FA' 0805'              	movf	?___flneg+3,w
  2908  00FB' 00AC'              	movwf	___fladd@a+3
  2909  00FC' 0804'              	movf	?___flneg+2,w
  2910  00FD' 00AB'              	movwf	___fladd@a+2
  2911  00FE' 0803'              	movf	?___flneg+1,w
  2912  00FF' 00AA'              	movwf	___fladd@a+1
  2913  0100' 0802'              	movf	?___flneg,w
  2914  0101' 00A9'              	movwf	___fladd@a
  2915  0102' 0021               	movlb	1	; select bank1
  2916  0103' 0800'              	movf	(calculate_pidM@error+3)^(0+128),w
  2917  0104' 0020               	movlb	0	; select bank0
  2918  0105' 00A8'              	movwf	___fladd@b+3
  2919  0106' 0021               	movlb	1	; select bank1
  2920  0107' 0800'              	movf	(calculate_pidM@error+2)^(0+128),w
  2921  0108' 0020               	movlb	0	; select bank0
  2922  0109' 00A7'              	movwf	___fladd@b+2
  2923  010A' 0021               	movlb	1	; select bank1
  2924  010B' 0800'              	movf	(calculate_pidM@error+1)^(0+128),w
  2925  010C' 0020               	movlb	0	; select bank0
  2926  010D' 00A6'              	movwf	___fladd@b+1
  2927  010E' 0021               	movlb	1	; select bank1
  2928  010F' 0800'              	movf	calculate_pidM@error^(0+128),w
  2929  0110' 0020               	movlb	0	; select bank0
  2930  0111' 00A5'              	movwf	___fladd@b
  2931  0112' 3180' 2000' 3180'  	fcall	___fladd
  2932  0115' 0020               	movlb	0	; select bank0
  2933  0116' 0828'              	movf	?___fladd+3,w
  2934  0117' 0092'              	movwf	___flmul@a+3
  2935  0118' 0827'              	movf	?___fladd+2,w
  2936  0119' 0091'              	movwf	___flmul@a+2
  2937  011A' 0826'              	movf	?___fladd+1,w
  2938  011B' 0090'              	movwf	___flmul@a+1
  2939  011C' 0825'              	movf	?___fladd,w
  2940  011D' 008F'              	movwf	___flmul@a
  2941  011E' 3017               	movlw	23
  2942  011F' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  2943  0120' 0086               	movwf	6
  2944  0121' 0187               	clrf	7
  2945  0122' 3F40               	moviw [0]fsr1
  2946  0123' 008B'              	movwf	___flmul@b
  2947  0124' 3F41               	moviw [1]fsr1
  2948  0125' 008C'              	movwf	___flmul@b+1
  2949  0126' 3F42               	moviw [2]fsr1
  2950  0127' 008D'              	movwf	___flmul@b+2
  2951  0128' 3F43               	moviw [3]fsr1
  2952  0129' 008E'              	movwf	___flmul@b+3
  2953  012A' 3180' 2000' 3180'  	fcall	___flmul
  2954  012D' 0020               	movlb	0	; select bank0
  2955  012E' 080E'              	movf	?___flmul+3,w
  2956  012F' 0021               	movlb	1	; select bank1
  2957  0130' 0080'              	movwf	(_calculate_pidM$1319+3)^(0+128)
  2958  0131' 0020               	movlb	0	; select bank0
  2959  0132' 080D'              	movf	?___flmul+2,w
  2960  0133' 0021               	movlb	1	; select bank1
  2961  0134' 0080'              	movwf	(_calculate_pidM$1319+2)^(0+128)
  2962  0135' 0020               	movlb	0	; select bank0
  2963  0136' 080C'              	movf	?___flmul+1,w
  2964  0137' 0021               	movlb	1	; select bank1
  2965  0138' 0080'              	movwf	(_calculate_pidM$1319+1)^(0+128)
  2966  0139' 0020               	movlb	0	; select bank0
  2967  013A' 080B'              	movf	?___flmul,w
  2968  013B' 0021               	movlb	1	; select bank1
  2969  013C' 0080'              	movwf	_calculate_pidM$1319^(0+128)
  2970                           
  2971                           ;main.c: 281: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterrorM);
  2972  013D' 0800'              	movf	(_calculate_pidM$1319+3)^(0+128),w
  2973  013E' 0020               	movlb	0	; select bank0
  2974  013F' 00A8'              	movwf	___fladd@b+3
  2975  0140' 0021               	movlb	1	; select bank1
  2976  0141' 0800'              	movf	(_calculate_pidM$1319+2)^(0+128),w
  2977  0142' 0020               	movlb	0	; select bank0
  2978  0143' 00A7'              	movwf	___fladd@b+2
  2979  0144' 0021               	movlb	1	; select bank1
  2980  0145' 0800'              	movf	(_calculate_pidM$1319+1)^(0+128),w
  2981  0146' 0020               	movlb	0	; select bank0
  2982  0147' 00A6'              	movwf	___fladd@b+1
  2983  0148' 0021               	movlb	1	; select bank1
  2984  0149' 0800'              	movf	_calculate_pidM$1319^(0+128),w
  2985  014A' 0020               	movlb	0	; select bank0
  2986  014B' 00A5'              	movwf	___fladd@b
  2987  014C' 0021               	movlb	1	; select bank1
  2988  014D' 0800'              	movf	(calculate_pidM@pid+3)^(0+128),w
  2989  014E' 0020               	movlb	0	; select bank0
  2990  014F' 00AC'              	movwf	___fladd@a+3
  2991  0150' 0021               	movlb	1	; select bank1
  2992  0151' 0800'              	movf	(calculate_pidM@pid+2)^(0+128),w
  2993  0152' 0020               	movlb	0	; select bank0
  2994  0153' 00AB'              	movwf	___fladd@a+2
  2995  0154' 0021               	movlb	1	; select bank1
  2996  0155' 0800'              	movf	(calculate_pidM@pid+1)^(0+128),w
  2997  0156' 0020               	movlb	0	; select bank0
  2998  0157' 00AA'              	movwf	___fladd@a+1
  2999  0158' 0021               	movlb	1	; select bank1
  3000  0159' 0800'              	movf	calculate_pidM@pid^(0+128),w
  3001  015A' 0020               	movlb	0	; select bank0
  3002  015B' 00A9'              	movwf	___fladd@a
  3003  015C' 3180' 2000' 3180'  	fcall	___fladd
  3004  015F' 0020               	movlb	0	; select bank0
  3005  0160' 0828'              	movf	?___fladd+3,w
  3006  0161' 0021               	movlb	1	; select bank1
  3007  0162' 0080'              	movwf	(calculate_pidM@pid+3)^(0+128)
  3008  0163' 0020               	movlb	0	; select bank0
  3009  0164' 0827'              	movf	?___fladd+2,w
  3010  0165' 0021               	movlb	1	; select bank1
  3011  0166' 0080'              	movwf	(calculate_pidM@pid+2)^(0+128)
  3012  0167' 0020               	movlb	0	; select bank0
  3013  0168' 0826'              	movf	?___fladd+1,w
  3014  0169' 0021               	movlb	1	; select bank1
  3015  016A' 0080'              	movwf	(calculate_pidM@pid+1)^(0+128)
  3016  016B' 0020               	movlb	0	; select bank0
  3017  016C' 0825'              	movf	?___fladd,w
  3018  016D' 0021               	movlb	1	; select bank1
  3019  016E' 0080'              	movwf	calculate_pidM@pid^(0+128)
  3020                           
  3021                           ;main.c: 282: lasterrorM = error;
  3022  016F' 0800'              	movf	(calculate_pidM@error+3)^(0+128),w
  3023  0170' 0022               	movlb	2	; select bank2
  3024  0171' 0080'              	movwf	(_lasterrorM+3)^(0+256)
  3025  0172' 0021               	movlb	1	; select bank1
  3026  0173' 0800'              	movf	(calculate_pidM@error+2)^(0+128),w
  3027  0174' 0022               	movlb	2	; select bank2
  3028  0175' 0080'              	movwf	(_lasterrorM+2)^(0+256)
  3029  0176' 0021               	movlb	1	; select bank1
  3030  0177' 0800'              	movf	(calculate_pidM@error+1)^(0+128),w
  3031  0178' 0022               	movlb	2	; select bank2
  3032  0179' 0080'              	movwf	(_lasterrorM+1)^(0+256)
  3033  017A' 0021               	movlb	1	; select bank1
  3034  017B' 0800'              	movf	calculate_pidM@error^(0+128),w
  3035  017C' 0022               	movlb	2	; select bank2
  3036  017D' 0080'              	movwf	_lasterrorM^(0+256)
  3037                           
  3038                           ;main.c: 283: if (pid >= 1023)
  3039  017E' 0021               	movlb	1	; select bank1
  3040  017F' 0800'              	movf	(calculate_pidM@pid+3)^(0+128),w
  3041  0180' 0020               	movlb	0	; select bank0
  3042  0181' 0097'              	movwf	___flge@ff1+3
  3043  0182' 0021               	movlb	1	; select bank1
  3044  0183' 0800'              	movf	(calculate_pidM@pid+2)^(0+128),w
  3045  0184' 0020               	movlb	0	; select bank0
  3046  0185' 0096'              	movwf	___flge@ff1+2
  3047  0186' 0021               	movlb	1	; select bank1
  3048  0187' 0800'              	movf	(calculate_pidM@pid+1)^(0+128),w
  3049  0188' 0020               	movlb	0	; select bank0
  3050  0189' 0095'              	movwf	___flge@ff1+1
  3051  018A' 0021               	movlb	1	; select bank1
  3052  018B' 0800'              	movf	calculate_pidM@pid^(0+128),w
  3053  018C' 0020               	movlb	0	; select bank0
  3054  018D' 0094'              	movwf	___flge@ff1
  3055  018E' 3044               	movlw	68
  3056  018F' 009B'              	movwf	___flge@ff2+3
  3057  0190' 307F               	movlw	127
  3058  0191' 009A'              	movwf	___flge@ff2+2
  3059  0192' 30C0               	movlw	192
  3060  0193' 0099'              	movwf	___flge@ff2+1
  3061  0194' 3000               	movlw	0
  3062  0195' 0098'              	movwf	___flge@ff2
  3063  0196' 3180' 2000' 3180'  	fcall	___flge
  3064  0199' 1C03               	btfss	3,0
  3065  019A' 2800'              	goto	l2416
  3066                           
  3067                           ;main.c: 284: {;main.c: 285: pid = 1023;
  3068  019B' 3044               	movlw	68
  3069  019C' 0021               	movlb	1	; select bank1
  3070  019D' 0080'              	movwf	(calculate_pidM@pid+3)^(0+128)
  3071  019E' 307F               	movlw	127
  3072  019F' 0080'              	movwf	(calculate_pidM@pid+2)^(0+128)
  3073  01A0' 30C0               	movlw	192
  3074  01A1' 0080'              	movwf	(calculate_pidM@pid+1)^(0+128)
  3075  01A2' 3000               	movlw	0
  3076  01A3' 0080'              	movwf	calculate_pidM@pid^(0+128)
  3077  01A4'                    l2416:	
  3078                           
  3079                           ;main.c: 286: };main.c: 287: if (pid <= -1023) {
  3080  01A4' 30C4               	movlw	196
  3081  01A5' 0020               	movlb	0	; select bank0
  3082  01A6' 0097'              	movwf	___flge@ff1+3
  3083  01A7' 307F               	movlw	127
  3084  01A8' 0096'              	movwf	___flge@ff1+2
  3085  01A9' 30C0               	movlw	192
  3086  01AA' 0095'              	movwf	___flge@ff1+1
  3087  01AB' 3000               	movlw	0
  3088  01AC' 0094'              	movwf	___flge@ff1
  3089  01AD' 0021               	movlb	1	; select bank1
  3090  01AE' 0800'              	movf	(calculate_pidM@pid+3)^(0+128),w
  3091  01AF' 0020               	movlb	0	; select bank0
  3092  01B0' 009B'              	movwf	___flge@ff2+3
  3093  01B1' 0021               	movlb	1	; select bank1
  3094  01B2' 0800'              	movf	(calculate_pidM@pid+2)^(0+128),w
  3095  01B3' 0020               	movlb	0	; select bank0
  3096  01B4' 009A'              	movwf	___flge@ff2+2
  3097  01B5' 0021               	movlb	1	; select bank1
  3098  01B6' 0800'              	movf	(calculate_pidM@pid+1)^(0+128),w
  3099  01B7' 0020               	movlb	0	; select bank0
  3100  01B8' 0099'              	movwf	___flge@ff2+1
  3101  01B9' 0021               	movlb	1	; select bank1
  3102  01BA' 0800'              	movf	calculate_pidM@pid^(0+128),w
  3103  01BB' 0020               	movlb	0	; select bank0
  3104  01BC' 0098'              	movwf	___flge@ff2
  3105  01BD' 3180' 2000' 3180'  	fcall	___flge
  3106  01C0' 1C03               	btfss	3,0
  3107  01C1' 2800'              	goto	l2420
  3108                           
  3109                           ;main.c: 288: pid = -1023;
  3110  01C2' 30C4               	movlw	196
  3111  01C3' 0021               	movlb	1	; select bank1
  3112  01C4' 0080'              	movwf	(calculate_pidM@pid+3)^(0+128)
  3113  01C5' 307F               	movlw	127
  3114  01C6' 0080'              	movwf	(calculate_pidM@pid+2)^(0+128)
  3115  01C7' 30C0               	movlw	192
  3116  01C8' 0080'              	movwf	(calculate_pidM@pid+1)^(0+128)
  3117  01C9' 3000               	movlw	0
  3118  01CA' 0080'              	movwf	calculate_pidM@pid^(0+128)
  3119  01CB'                    l2420:	
  3120                           
  3121                           ;main.c: 289: };main.c: 290: M_control((int) pid);
  3122  01CB' 0021               	movlb	1	; select bank1
  3123  01CC' 0800'              	movf	(calculate_pidM@pid+3)^(0+128),w
  3124  01CD' 0020               	movlb	0	; select bank0
  3125  01CE' 0085'              	movwf	___fltol@f1+3
  3126  01CF' 0021               	movlb	1	; select bank1
  3127  01D0' 0800'              	movf	(calculate_pidM@pid+2)^(0+128),w
  3128  01D1' 0020               	movlb	0	; select bank0
  3129  01D2' 0084'              	movwf	___fltol@f1+2
  3130  01D3' 0021               	movlb	1	; select bank1
  3131  01D4' 0800'              	movf	(calculate_pidM@pid+1)^(0+128),w
  3132  01D5' 0020               	movlb	0	; select bank0
  3133  01D6' 0083'              	movwf	___fltol@f1+1
  3134  01D7' 0021               	movlb	1	; select bank1
  3135  01D8' 0800'              	movf	calculate_pidM@pid^(0+128),w
  3136  01D9' 0020               	movlb	0	; select bank0
  3137  01DA' 0082'              	movwf	___fltol@f1
  3138  01DB' 3180' 2000' 3180'  	fcall	___fltol
  3139  01DE' 0020               	movlb	0	; select bank0
  3140  01DF' 0803'              	movf	?___fltol+1,w
  3141  01E0' 008E'              	movwf	M_control@ctr+1
  3142  01E1' 0802'              	movf	?___fltol,w
  3143  01E2' 008D'              	movwf	M_control@ctr
  3144  01E3' 3180' 2000'        	fcall	_M_control
  3145  01E5' 0008               	return
  3146  01E6'                    __end_of_calculate_pidM:	
  3147                           
  3148                           	psect	text3
  3149  0000'                    __ptext3:	
  3150 ;; *************** function _M_control *****************
  3151 ;; Defined at:
  3152 ;;		line 234 in file "main.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  ctr             2   13[BANK0 ] int 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3166 ;;      Params:         0       2       0       0
  3167 ;;      Locals:         0       0       0       0
  3168 ;;      Temps:          0       1       0       0
  3169 ;;      Totals:         0       3       0       0
  3170 ;;Total ram usage:        3 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    3
  3173 ;; This function calls:
  3174 ;;		_PWM_set_duty
  3175 ;; This function is called by:
  3176 ;;		_calculate_pidM
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function _M_control
  3183  0000'                    _M_control:	
  3184                           
  3185                           ;main.c: 236: if (ctr == 0)
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
  3189  0000' 0020               	movlb	0	; select bank0
  3190  0001' 080D'              	movf	M_control@ctr,w
  3191  0002' 040E'              	iorwf	M_control@ctr+1,w
  3192  0003' 1D03               	btfss	3,2
  3193  0004' 2800'              	goto	l1928
  3194                           
  3195                           ;main.c: 237: {;main.c: 238: PWM_set_duty(ctr);
  3196  0005' 080E'              	movf	M_control@ctr+1,w
  3197  0006' 0083'              	movwf	PWM_set_duty@duty+1
  3198  0007' 080D'              	movf	M_control@ctr,w
  3199  0008' 0082'              	movwf	PWM_set_duty@duty
  3200  0009' 3180' 2000' 3180'  	fcall	_PWM_set_duty
  3201  000C'                    l1928:	
  3202                           
  3203                           ;main.c: 239: };main.c: 240: if (ctr > 0)
  3204  000C' 0020               	movlb	0	; select bank0
  3205  000D' 080E'              	movf	M_control@ctr+1,w
  3206  000E' 3A80               	xorlw	128
  3207  000F' 008F'              	movwf	??_M_control
  3208  0010' 3080               	movlw	128
  3209  0011' 020F'              	subwf	??_M_control,w
  3210  0012' 1D03               	skipz
  3211  0013' 2800'              	goto	u1855
  3212  0014' 3001               	movlw	1
  3213  0015' 020D'              	subwf	M_control@ctr,w
  3214  0016'                    u1855:	
  3215  0016' 1C03               	skipc
  3216  0017' 2800'              	goto	l1934
  3217                           
  3218                           ;main.c: 241: {;main.c: 242: LATAbits.LATA0 = 1;
  3219  0018' 0022               	movlb	2	; select bank2
  3220  0019' 140C               	bsf	12,0	;volatile
  3221                           
  3222                           ;main.c: 243: PWM_set_duty(ctr);
  3223  001A' 0020               	movlb	0	; select bank0
  3224  001B' 080E'              	movf	M_control@ctr+1,w
  3225  001C' 0083'              	movwf	PWM_set_duty@duty+1
  3226  001D' 080D'              	movf	M_control@ctr,w
  3227  001E' 0082'              	movwf	PWM_set_duty@duty
  3228  001F' 3180' 2000' 3180'  	fcall	_PWM_set_duty
  3229  0022'                    l1934:	
  3230                           
  3231                           ;main.c: 244: };main.c: 245: if (ctr < 0)
  3232  0022' 0020               	movlb	0	; select bank0
  3233  0023' 1F8E'              	btfss	M_control@ctr+1,7
  3234  0024' 0008               	return
  3235                           
  3236                           ;main.c: 246: {;main.c: 247: LATAbits.LATA0 = 0;
  3237  0025' 0022               	movlb	2	; select bank2
  3238  0026' 100C               	bcf	12,0	;volatile
  3239                           
  3240                           ;main.c: 248: ctr = ctr * -1;
  3241  0027' 0020               	movlb	0	; select bank0
  3242  0028' 098D'              	comf	M_control@ctr,f
  3243  0029' 098E'              	comf	M_control@ctr+1,f
  3244  002A' 0A8D'              	incf	M_control@ctr,f
  3245  002B' 1903               	skipnz
  3246  002C' 0A8E'              	incf	M_control@ctr+1,f
  3247                           
  3248                           ;main.c: 249: PWM_set_duty(ctr);
  3249  002D' 080E'              	movf	M_control@ctr+1,w
  3250  002E' 0083'              	movwf	PWM_set_duty@duty+1
  3251  002F' 080D'              	movf	M_control@ctr,w
  3252  0030' 0082'              	movwf	PWM_set_duty@duty
  3253  0031' 3180' 2000'        	fcall	_PWM_set_duty
  3254  0033' 0008               	return
  3255  0034'                    __end_of_M_control:	
  3256                           
  3257                           	psect	text4
  3258  0000'                    __ptext4:	
  3259 ;; *************** function _PWM_set_duty *****************
  3260 ;; Defined at:
  3261 ;;		line 225 in file "main.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  duty            2    2[BANK0 ] int 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  2    2[BANK0 ] int 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3275 ;;      Params:         0       2       0       0
  3276 ;;      Locals:         0       0       0       0
  3277 ;;      Temps:          0       2       0       0
  3278 ;;      Totals:         0       4       0       0
  3279 ;;Total ram usage:        4 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    2
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_M_control
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _PWM_set_duty
  3292  0000'                    _PWM_set_duty:	
  3293                           
  3294                           ;main.c: 227: if (duty < 1024) {
  3295                           
  3296                           ;incstack = 0
  3297                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
  3298  0000' 0020               	movlb	0	; select bank0
  3299  0001' 0803'              	movf	PWM_set_duty@duty+1,w
  3300  0002' 3A80               	xorlw	128
  3301  0003' 0084'              	movwf	??_PWM_set_duty
  3302  0004' 3084               	movlw	132
  3303  0005' 0204'              	subwf	??_PWM_set_duty,w
  3304  0006' 1D03               	skipz
  3305  0007' 2800'              	goto	u1795
  3306  0008' 3000               	movlw	0
  3307  0009' 0202'              	subwf	PWM_set_duty@duty,w
  3308  000A'                    u1795:	
  3309  000A' 1803               	skipnc
  3310  000B' 0008               	return
  3311                           
  3312                           ;main.c: 228: CCPR1L = (0xFF & ((unsigned int) duty >> 2));
  3313  000C' 0020               	movlb	0	; select bank0
  3314  000D' 0803'              	movf	PWM_set_duty@duty+1,w
  3315  000E' 0085'              	movwf	??_PWM_set_duty+1
  3316  000F' 0802'              	movf	PWM_set_duty@duty,w
  3317  0010' 0084'              	movwf	??_PWM_set_duty
  3318  0011' 3685'              	lsrf	??_PWM_set_duty+1,f
  3319  0012' 0C84'              	rrf	??_PWM_set_duty,f
  3320  0013' 3685'              	lsrf	??_PWM_set_duty+1,f
  3321  0014' 0C84'              	rrf	??_PWM_set_duty,f
  3322  0015' 0804'              	movf	??_PWM_set_duty,w
  3323  0016' 0025               	movlb	5	; select bank5
  3324  0017' 0091               	movwf	17	;volatile
  3325                           
  3326                           ;main.c: 229: CCP1CON = (0x0C | (0x30 & ((unsigned int) duty << 4)));
  3327  0018' 0020               	movlb	0	; select bank0
  3328  0019' 0802'              	movf	PWM_set_duty@duty,w
  3329  001A' 0084'              	movwf	??_PWM_set_duty
  3330  001B' 3003               	movlw	3
  3331  001C'                    u1805:	
  3332  001C' 3584'              	lslf	??_PWM_set_duty,f
  3333  001D' 3EFF               	addlw	-1
  3334  001E' 1D03               	skipz
  3335  001F' 2800'              	goto	u1805
  3336  0020' 3504'              	lslf	??_PWM_set_duty,w
  3337  0021' 3930               	andlw	48
  3338  0022' 380C               	iorlw	12
  3339  0023' 0025               	movlb	5	; select bank5
  3340  0024' 0093               	movwf	19	;volatile
  3341  0025' 0008               	return
  3342  0026'                    __end_of_PWM_set_duty:	
  3343                           
  3344                           	psect	text5
  3345  0000'                    __ptext5:	
  3346 ;; *************** function _init_I2C_buffer *****************
  3347 ;; Defined at:
  3348 ;;		line 311 in file "main.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, pclath, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3362 ;;      Params:         0       0       0       0
  3363 ;;      Locals:         0       0       0       0
  3364 ;;      Temps:          0       1       0       0
  3365 ;;      Totals:         0       1       0       0
  3366 ;;Total ram usage:        1 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:    3
  3369 ;; This function calls:
  3370 ;;		_eeprom_read
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function _init_I2C_buffer
  3378  0000'                    _init_I2C_buffer:	
  3379                           
  3380                           ;main.c: 312: I2C_buffer.data.ID = 0xF3;
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _init_I2C_buffer: [wreg+status,2+status,0+pclath+cstack]
  3384  0000' 30F3               	movlw	243
  3385  0001' 0020               	movlb	0	; select bank0
  3386  0002' 0086'              	movwf	??_init_I2C_buffer
  3387  0003' 0806'              	movf	??_init_I2C_buffer,w
  3388  0004' 0021               	movlb	1	; select bank1
  3389  0005' 0080'              	movwf	_I2C_buffer^(0+128)	;volatile
  3390                           
  3391                           ;main.c: 313: I2C_buffer.data.ADDRESS = eeprom_read(0);
  3392  0006' 3000               	movlw	0
  3393  0007' 3180' 2000' 3180'  	fcall	_eeprom_read
  3394  000A' 0020               	movlb	0	; select bank0
  3395  000B' 0086'              	movwf	??_init_I2C_buffer
  3396  000C' 0806'              	movf	??_init_I2C_buffer,w
  3397  000D' 0021               	movlb	1	; select bank1
  3398  000E' 0081'              	movwf	(_I2C_buffer^(0+128)+1)	;volatile
  3399                           
  3400                           ;main.c: 314: I2C_buffer.data.START_STOP = 0;
  3401  000F' 0182'              	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  3402                           
  3403                           ;main.c: 315: I2C_buffer.data.IOWPU = eeprom_read(1);
  3404  0010' 3001               	movlw	1
  3405  0011' 3180' 2000' 3180'  	fcall	_eeprom_read
  3406  0014' 0020               	movlb	0	; select bank0
  3407  0015' 0086'              	movwf	??_init_I2C_buffer
  3408  0016' 0806'              	movf	??_init_I2C_buffer,w
  3409  0017' 0021               	movlb	1	; select bank1
  3410  0018' 0083'              	movwf	(_I2C_buffer^(0+128)+3)	;volatile
  3411                           
  3412                           ;main.c: 316: I2C_buffer.data.MODE = 0;
  3413  0019' 0184'              	clrf	(_I2C_buffer^(0+128)+4)	;volatile
  3414                           
  3415                           ;main.c: 317: I2C_buffer.data.SAVE = 0;
  3416  001A' 0185'              	clrf	(_I2C_buffer^(0+128)+5)	;volatile
  3417                           
  3418                           ;main.c: 318: I2C_buffer.data.RESET = 0;
  3419  001B' 0186'              	clrf	(_I2C_buffer^(0+128)+6)	;volatile
  3420                           
  3421                           ;main.c: 320: I2C_buffer.byte[0x07] = eeprom_read(2);
  3422  001C' 3002               	movlw	2
  3423  001D' 3180' 2000' 3180'  	fcall	_eeprom_read
  3424  0020' 0020               	movlb	0	; select bank0
  3425  0021' 0086'              	movwf	??_init_I2C_buffer
  3426  0022' 0806'              	movf	??_init_I2C_buffer,w
  3427  0023' 0021               	movlb	1	; select bank1
  3428  0024' 0087'              	movwf	(_I2C_buffer^(0+128)+7)	;volatile
  3429                           
  3430                           ;main.c: 321: I2C_buffer.byte[0x08] = eeprom_read(3);
  3431  0025' 3003               	movlw	3
  3432  0026' 3180' 2000' 3180'  	fcall	_eeprom_read
  3433  0029' 0020               	movlb	0	; select bank0
  3434  002A' 0086'              	movwf	??_init_I2C_buffer
  3435  002B' 0806'              	movf	??_init_I2C_buffer,w
  3436  002C' 0021               	movlb	1	; select bank1
  3437  002D' 0088'              	movwf	(_I2C_buffer^(0+128)+8)	;volatile
  3438                           
  3439                           ;main.c: 323: I2C_buffer.byte[0x09] = eeprom_read(4);
  3440  002E' 3004               	movlw	4
  3441  002F' 3180' 2000' 3180'  	fcall	_eeprom_read
  3442  0032' 0020               	movlb	0	; select bank0
  3443  0033' 0086'              	movwf	??_init_I2C_buffer
  3444  0034' 0806'              	movf	??_init_I2C_buffer,w
  3445  0035' 0021               	movlb	1	; select bank1
  3446  0036' 0089'              	movwf	(_I2C_buffer^(0+128)+9)	;volatile
  3447                           
  3448                           ;main.c: 324: I2C_buffer.byte[0x0A] = eeprom_read(5);
  3449  0037' 3005               	movlw	5
  3450  0038' 3180' 2000' 3180'  	fcall	_eeprom_read
  3451  003B' 0020               	movlb	0	; select bank0
  3452  003C' 0086'              	movwf	??_init_I2C_buffer
  3453  003D' 0806'              	movf	??_init_I2C_buffer,w
  3454  003E' 0021               	movlb	1	; select bank1
  3455  003F' 008A'              	movwf	(_I2C_buffer^(0+128)+10)	;volatile
  3456                           
  3457                           ;main.c: 325: I2C_buffer.data.RPM = 0;
  3458  0040' 018B'              	clrf	(_I2C_buffer^(0+128)+11)	;volatile
  3459  0041' 018B'              	clrf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  3460                           
  3461                           ;main.c: 326: I2C_buffer.data.SPEED = 0;
  3462  0042' 018D'              	clrf	(_I2C_buffer^(0+128)+13)	;volatile
  3463  0043' 018D'              	clrf	((_I2C_buffer+1)^(0+128)+13)	;volatile
  3464                           
  3465                           ;main.c: 327: I2C_buffer.data.DISTANCE = 0;
  3466  0044' 3000               	movlw	0
  3467  0045' 008F'              	movwf	((_I2C_buffer+3)^(0+128)+15)	;volatile
  3468  0046' 3000               	movlw	0
  3469  0047' 008F'              	movwf	((_I2C_buffer+2)^(0+128)+15)	;volatile
  3470  0048' 3000               	movlw	0
  3471  0049' 008F'              	movwf	((_I2C_buffer+1)^(0+128)+15)	;volatile
  3472  004A' 3000               	movlw	0
  3473  004B' 008F'              	movwf	(_I2C_buffer^(0+128)+15)	;volatile
  3474                           
  3475                           ;main.c: 329: I2C_buffer.byte[0x13] = eeprom_read(8);
  3476  004C' 3008               	movlw	8
  3477  004D' 3180' 2000' 3180'  	fcall	_eeprom_read
  3478  0050' 0020               	movlb	0	; select bank0
  3479  0051' 0086'              	movwf	??_init_I2C_buffer
  3480  0052' 0806'              	movf	??_init_I2C_buffer,w
  3481  0053' 0021               	movlb	1	; select bank1
  3482  0054' 0093'              	movwf	(_I2C_buffer^(0+128)+19)	;volatile
  3483                           
  3484                           ;main.c: 330: I2C_buffer.byte[0x14] = eeprom_read(9);
  3485  0055' 3009               	movlw	9
  3486  0056' 3180' 2000' 3180'  	fcall	_eeprom_read
  3487  0059' 0020               	movlb	0	; select bank0
  3488  005A' 0086'              	movwf	??_init_I2C_buffer
  3489  005B' 0806'              	movf	??_init_I2C_buffer,w
  3490  005C' 0021               	movlb	1	; select bank1
  3491  005D' 0094'              	movwf	(_I2C_buffer^(0+128)+20)	;volatile
  3492                           
  3493                           ;main.c: 331: I2C_buffer.byte[0x15] = eeprom_read(10);
  3494  005E' 300A               	movlw	10
  3495  005F' 3180' 2000' 3180'  	fcall	_eeprom_read
  3496  0062' 0020               	movlb	0	; select bank0
  3497  0063' 0086'              	movwf	??_init_I2C_buffer
  3498  0064' 0806'              	movf	??_init_I2C_buffer,w
  3499  0065' 0021               	movlb	1	; select bank1
  3500  0066' 0095'              	movwf	(_I2C_buffer^(0+128)+21)	;volatile
  3501                           
  3502                           ;main.c: 332: I2C_buffer.byte[0x16] = eeprom_read(11);
  3503  0067' 300B               	movlw	11
  3504  0068' 3180' 2000' 3180'  	fcall	_eeprom_read
  3505  006B' 0020               	movlb	0	; select bank0
  3506  006C' 0086'              	movwf	??_init_I2C_buffer
  3507  006D' 0806'              	movf	??_init_I2C_buffer,w
  3508  006E' 0021               	movlb	1	; select bank1
  3509  006F' 0096'              	movwf	(_I2C_buffer^(0+128)+22)	;volatile
  3510                           
  3511                           ;main.c: 334: I2C_buffer.byte[0x17] = eeprom_read(12);
  3512  0070' 300C               	movlw	12
  3513  0071' 3180' 2000' 3180'  	fcall	_eeprom_read
  3514  0074' 0020               	movlb	0	; select bank0
  3515  0075' 0086'              	movwf	??_init_I2C_buffer
  3516  0076' 0806'              	movf	??_init_I2C_buffer,w
  3517  0077' 0021               	movlb	1	; select bank1
  3518  0078' 0097'              	movwf	(_I2C_buffer^(0+128)+23)	;volatile
  3519                           
  3520                           ;main.c: 335: I2C_buffer.byte[0x18] = eeprom_read(13);
  3521  0079' 300D               	movlw	13
  3522  007A' 3180' 2000' 3180'  	fcall	_eeprom_read
  3523  007D' 0020               	movlb	0	; select bank0
  3524  007E' 0086'              	movwf	??_init_I2C_buffer
  3525  007F' 0806'              	movf	??_init_I2C_buffer,w
  3526  0080' 0021               	movlb	1	; select bank1
  3527  0081' 0098'              	movwf	(_I2C_buffer^(0+128)+24)	;volatile
  3528                           
  3529                           ;main.c: 336: I2C_buffer.byte[0x19] = eeprom_read(14);
  3530  0082' 300E               	movlw	14
  3531  0083' 3180' 2000' 3180'  	fcall	_eeprom_read
  3532  0086' 0020               	movlb	0	; select bank0
  3533  0087' 0086'              	movwf	??_init_I2C_buffer
  3534  0088' 0806'              	movf	??_init_I2C_buffer,w
  3535  0089' 0021               	movlb	1	; select bank1
  3536  008A' 0099'              	movwf	(_I2C_buffer^(0+128)+25)	;volatile
  3537                           
  3538                           ;main.c: 337: I2C_buffer.byte[0x1A] = eeprom_read(15);
  3539  008B' 300F               	movlw	15
  3540  008C' 3180' 2000' 3180'  	fcall	_eeprom_read
  3541  008F' 0020               	movlb	0	; select bank0
  3542  0090' 0086'              	movwf	??_init_I2C_buffer
  3543  0091' 0806'              	movf	??_init_I2C_buffer,w
  3544  0092' 0021               	movlb	1	; select bank1
  3545  0093' 009A'              	movwf	(_I2C_buffer^(0+128)+26)	;volatile
  3546                           
  3547                           ;main.c: 339: I2C_buffer.byte[0x1B] = eeprom_read(16);
  3548  0094' 3010               	movlw	16
  3549  0095' 3180' 2000' 3180'  	fcall	_eeprom_read
  3550  0098' 0020               	movlb	0	; select bank0
  3551  0099' 0086'              	movwf	??_init_I2C_buffer
  3552  009A' 0806'              	movf	??_init_I2C_buffer,w
  3553  009B' 0021               	movlb	1	; select bank1
  3554  009C' 009B'              	movwf	(_I2C_buffer^(0+128)+27)	;volatile
  3555                           
  3556                           ;main.c: 340: I2C_buffer.byte[0x1C] = eeprom_read(17);
  3557  009D' 3011               	movlw	17
  3558  009E' 3180' 2000' 3180'  	fcall	_eeprom_read
  3559  00A1' 0020               	movlb	0	; select bank0
  3560  00A2' 0086'              	movwf	??_init_I2C_buffer
  3561  00A3' 0806'              	movf	??_init_I2C_buffer,w
  3562  00A4' 0021               	movlb	1	; select bank1
  3563  00A5' 009C'              	movwf	(_I2C_buffer^(0+128)+28)	;volatile
  3564                           
  3565                           ;main.c: 341: I2C_buffer.byte[0x1D] = eeprom_read(18);
  3566  00A6' 3012               	movlw	18
  3567  00A7' 3180' 2000' 3180'  	fcall	_eeprom_read
  3568  00AA' 0020               	movlb	0	; select bank0
  3569  00AB' 0086'              	movwf	??_init_I2C_buffer
  3570  00AC' 0806'              	movf	??_init_I2C_buffer,w
  3571  00AD' 0021               	movlb	1	; select bank1
  3572  00AE' 009D'              	movwf	(_I2C_buffer^(0+128)+29)	;volatile
  3573                           
  3574                           ;main.c: 342: I2C_buffer.byte[0x1E] = eeprom_read(19);
  3575  00AF' 3013               	movlw	19
  3576  00B0' 3180' 2000' 3180'  	fcall	_eeprom_read
  3577  00B3' 0020               	movlb	0	; select bank0
  3578  00B4' 0086'              	movwf	??_init_I2C_buffer
  3579  00B5' 0806'              	movf	??_init_I2C_buffer,w
  3580  00B6' 0021               	movlb	1	; select bank1
  3581  00B7' 009E'              	movwf	(_I2C_buffer^(0+128)+30)	;volatile
  3582                           
  3583                           ;main.c: 344: I2C_buffer.byte[0x1F] = eeprom_read(20);
  3584  00B8' 3014               	movlw	20
  3585  00B9' 3180' 2000' 3180'  	fcall	_eeprom_read
  3586  00BC' 0020               	movlb	0	; select bank0
  3587  00BD' 0086'              	movwf	??_init_I2C_buffer
  3588  00BE' 0806'              	movf	??_init_I2C_buffer,w
  3589  00BF' 0021               	movlb	1	; select bank1
  3590  00C0' 009F'              	movwf	(_I2C_buffer^(0+128)+31)	;volatile
  3591                           
  3592                           ;main.c: 345: I2C_buffer.byte[0x20] = eeprom_read(21);
  3593  00C1' 3015               	movlw	21
  3594  00C2' 3180' 2000' 3180'  	fcall	_eeprom_read
  3595  00C5' 0020               	movlb	0	; select bank0
  3596  00C6' 0086'              	movwf	??_init_I2C_buffer
  3597  00C7' 0806'              	movf	??_init_I2C_buffer,w
  3598  00C8' 0021               	movlb	1	; select bank1
  3599  00C9' 00A0'              	movwf	(_I2C_buffer^(0+128)+32)	;volatile
  3600                           
  3601                           ;main.c: 346: I2C_buffer.byte[0x21] = eeprom_read(22);
  3602  00CA' 3016               	movlw	22
  3603  00CB' 3180' 2000' 3180'  	fcall	_eeprom_read
  3604  00CE' 0020               	movlb	0	; select bank0
  3605  00CF' 0086'              	movwf	??_init_I2C_buffer
  3606  00D0' 0806'              	movf	??_init_I2C_buffer,w
  3607  00D1' 0021               	movlb	1	; select bank1
  3608  00D2' 00A1'              	movwf	(_I2C_buffer^(0+128)+33)	;volatile
  3609                           
  3610                           ;main.c: 347: I2C_buffer.byte[0x22] = eeprom_read(23);
  3611  00D3' 3017               	movlw	23
  3612  00D4' 3180' 2000' 3180'  	fcall	_eeprom_read
  3613  00D7' 0020               	movlb	0	; select bank0
  3614  00D8' 0086'              	movwf	??_init_I2C_buffer
  3615  00D9' 0806'              	movf	??_init_I2C_buffer,w
  3616  00DA' 0021               	movlb	1	; select bank1
  3617  00DB' 00A2'              	movwf	(_I2C_buffer^(0+128)+34)	;volatile
  3618                           
  3619                           ;main.c: 349: I2C_buffer.byte[0x23] = eeprom_read(24);
  3620  00DC' 3018               	movlw	24
  3621  00DD' 3180' 2000' 3180'  	fcall	_eeprom_read
  3622  00E0' 0020               	movlb	0	; select bank0
  3623  00E1' 0086'              	movwf	??_init_I2C_buffer
  3624  00E2' 0806'              	movf	??_init_I2C_buffer,w
  3625  00E3' 0021               	movlb	1	; select bank1
  3626  00E4' 00A3'              	movwf	(_I2C_buffer^(0+128)+35)	;volatile
  3627                           
  3628                           ;main.c: 350: I2C_buffer.byte[0x24] = eeprom_read(25);
  3629  00E5' 3019               	movlw	25
  3630  00E6' 3180' 2000' 3180'  	fcall	_eeprom_read
  3631  00E9' 0020               	movlb	0	; select bank0
  3632  00EA' 0086'              	movwf	??_init_I2C_buffer
  3633  00EB' 0806'              	movf	??_init_I2C_buffer,w
  3634  00EC' 0021               	movlb	1	; select bank1
  3635  00ED' 00A4'              	movwf	(_I2C_buffer^(0+128)+36)	;volatile
  3636                           
  3637                           ;main.c: 351: I2C_buffer.byte[0x25] = eeprom_read(26);
  3638  00EE' 301A               	movlw	26
  3639  00EF' 3180' 2000' 3180'  	fcall	_eeprom_read
  3640  00F2' 0020               	movlb	0	; select bank0
  3641  00F3' 0086'              	movwf	??_init_I2C_buffer
  3642  00F4' 0806'              	movf	??_init_I2C_buffer,w
  3643  00F5' 0021               	movlb	1	; select bank1
  3644  00F6' 00A5'              	movwf	(_I2C_buffer^(0+128)+37)	;volatile
  3645                           
  3646                           ;main.c: 352: I2C_buffer.byte[0x26] = eeprom_read(27);
  3647  00F7' 301B               	movlw	27
  3648  00F8' 3180' 2000' 3180'  	fcall	_eeprom_read
  3649  00FB' 0020               	movlb	0	; select bank0
  3650  00FC' 0086'              	movwf	??_init_I2C_buffer
  3651  00FD' 0806'              	movf	??_init_I2C_buffer,w
  3652  00FE' 0021               	movlb	1	; select bank1
  3653  00FF' 00A6'              	movwf	(_I2C_buffer^(0+128)+38)	;volatile
  3654                           
  3655                           ;main.c: 354: I2C_buffer.byte[0x27] = eeprom_read(28);
  3656  0100' 301C               	movlw	28
  3657  0101' 3180' 2000' 3180'  	fcall	_eeprom_read
  3658  0104' 0020               	movlb	0	; select bank0
  3659  0105' 0086'              	movwf	??_init_I2C_buffer
  3660  0106' 0806'              	movf	??_init_I2C_buffer,w
  3661  0107' 0021               	movlb	1	; select bank1
  3662  0108' 00A7'              	movwf	(_I2C_buffer^(0+128)+39)	;volatile
  3663                           
  3664                           ;main.c: 355: I2C_buffer.byte[0x28] = eeprom_read(29);
  3665  0109' 301D               	movlw	29
  3666  010A' 3180' 2000' 3180'  	fcall	_eeprom_read
  3667  010D' 0020               	movlb	0	; select bank0
  3668  010E' 0086'              	movwf	??_init_I2C_buffer
  3669  010F' 0806'              	movf	??_init_I2C_buffer,w
  3670  0110' 0021               	movlb	1	; select bank1
  3671  0111' 00A8'              	movwf	(_I2C_buffer^(0+128)+40)	;volatile
  3672                           
  3673                           ;main.c: 356: I2C_buffer.byte[0x29] = eeprom_read(30);
  3674  0112' 301E               	movlw	30
  3675  0113' 3180' 2000' 3180'  	fcall	_eeprom_read
  3676  0116' 0020               	movlb	0	; select bank0
  3677  0117' 0086'              	movwf	??_init_I2C_buffer
  3678  0118' 0806'              	movf	??_init_I2C_buffer,w
  3679  0119' 0021               	movlb	1	; select bank1
  3680  011A' 00A9'              	movwf	(_I2C_buffer^(0+128)+41)	;volatile
  3681                           
  3682                           ;main.c: 357: I2C_buffer.byte[0x2A] = eeprom_read(31);
  3683  011B' 301F               	movlw	31
  3684  011C' 3180' 2000'        	fcall	_eeprom_read
  3685  011E' 0020               	movlb	0	; select bank0
  3686  011F' 0086'              	movwf	??_init_I2C_buffer
  3687  0120' 0806'              	movf	??_init_I2C_buffer,w
  3688  0121' 0021               	movlb	1	; select bank1
  3689  0122' 00AA'              	movwf	(_I2C_buffer^(0+128)+42)	;volatile
  3690  0123' 0008               	return
  3691  0124'                    __end_of_init_I2C_buffer:	
  3692                           
  3693                           	psect	text6
  3694  0000'                    __ptext6:	
  3695 ;; *************** function _eeprom_read *****************
  3696 ;; Defined at:
  3697 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\pic\__eeread.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  addr            1    wreg     unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  addr            1    5[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      unsigned char 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3711 ;;      Params:         0       0       0       0
  3712 ;;      Locals:         0       1       0       0
  3713 ;;      Temps:          0       3       0       0
  3714 ;;      Totals:         0       4       0       0
  3715 ;;Total ram usage:        4 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    2
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_init_I2C_buffer
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _eeprom_read
  3727  0000'                    _eeprom_read:	
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3731                           ;eeprom_read@addr stored from wreg
  3732  0000' 0020               	movlb	0	; select bank0
  3733  0001' 0085'              	movwf	eeprom_read@addr
  3734  0002' 2800'              	goto	l293
  3735  0003'                    u2891:	
  3736  0003' 0020               	movlb	0	; select bank0
  3737  0004'                    l293:	
  3738                           ;__eeread.c: 8: do
  3739                           
  3740  0004' 0064               	clrwdt	;# 
  3741                           
  3742                           ;__eeread.c: 12: while(EECON1bits.WR);
  3743  0005' 0023               	movlb	3	; select bank3
  3744  0006' 1895               	btfsc	21,1	;volsfr
  3745  0007' 2800'              	goto	u2891
  3746                           
  3747                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  3748  0008' 0020               	movlb	0	; select bank0
  3749  0009' 0805'              	movf	eeprom_read@addr,w
  3750  000A' 0082'              	movwf	??_eeprom_read
  3751  000B' 0183'              	clrf	??_eeprom_read+1
  3752  000C' 0802'              	movf	??_eeprom_read,w
  3753  000D' 0023               	movlb	3	; select bank3
  3754  000E' 0091               	movwf	17	;volatile
  3755  000F' 0020               	movlb	0	; select bank0
  3756  0010' 0803'              	movf	??_eeprom_read+1,w
  3757  0011' 0023               	movlb	3	; select bank3
  3758  0012' 0092               	movwf	18	;volatile
  3759  0013' 303F               	movlw	63
  3760  0014' 0020               	movlb	0	; select bank0
  3761  0015' 0084'              	movwf	??_eeprom_read+2
  3762  0016' 0804'              	movf	??_eeprom_read+2,w
  3763  0017' 0023               	movlb	3	; select bank3
  3764  0018' 0595               	andwf	21,f	;volsfr
  3765  0019' 1415               	bsf	21,0	;volsfr
  3766  001A' 0813               	movf	19,w	;volatile
  3767  001B' 0008               	return
  3768  001C'                    __end_of_eeprom_read:	
  3769                           
  3770                           	psect	text7
  3771  0000'                    __ptext7:	
  3772 ;; *************** function _eeprom_write *****************
  3773 ;; Defined at:
  3774 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\pic\__eewrite.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  addr            1    wreg     unsigned char 
  3777 ;;  value           1    2[BANK0 ] unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  addr            1    5[BANK0 ] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3789 ;;      Params:         0       1       0       0
  3790 ;;      Locals:         0       1       0       0
  3791 ;;      Temps:          0       2       0       0
  3792 ;;      Totals:         0       4       0       0
  3793 ;;Total ram usage:        4 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    2
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_main
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           
  3804                           ;psect for function _eeprom_write
  3805  0000'                    _eeprom_write:	
  3806                           
  3807                           ;incstack = 0
  3808                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3809                           ;eeprom_write@addr stored from wreg
  3810  0000' 0020               	movlb	0	; select bank0
  3811  0001' 0085'              	movwf	eeprom_write@addr
  3812  0002'                    l313:	
  3813                           ;__eewrite.c: 8: do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value
      +                          ); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } I
      +                          NTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1;
      +                           EE
  3814                           
  3815  0002' 0023               	movlb	3	; select bank3
  3816  0003' 1895               	btfsc	21,1	;volsfr
  3817  0004' 2800'              	goto	l313
  3818  0005' 0020               	movlb	0	; select bank0
  3819  0006' 0805'              	movf	eeprom_write@addr,w
  3820  0007' 0083'              	movwf	??_eeprom_write
  3821  0008' 0184'              	clrf	??_eeprom_write+1
  3822  0009' 0803'              	movf	??_eeprom_write,w
  3823  000A' 0023               	movlb	3	; select bank3
  3824  000B' 0091               	movwf	17	;volatile
  3825  000C' 0020               	movlb	0	; select bank0
  3826  000D' 0804'              	movf	??_eeprom_write+1,w
  3827  000E' 0023               	movlb	3	; select bank3
  3828  000F' 0092               	movwf	18	;volatile
  3829  0010' 0020               	movlb	0	; select bank0
  3830  0011' 0802'              	movf	eeprom_write@value,w
  3831  0012' 0023               	movlb	3	; select bank3
  3832  0013' 0093               	movwf	19	;volatile
  3833  0014' 303F               	movlw	63
  3834  0015' 0020               	movlb	0	; select bank0
  3835  0016' 0083'              	movwf	??_eeprom_write
  3836  0017' 0803'              	movf	??_eeprom_write,w
  3837  0018' 0023               	movlb	3	; select bank3
  3838  0019' 0595               	andwf	21,f	;volsfr
  3839  001A' 0020               	movlb	0	; select bank0
  3840  001B' 1003               	bcf	3,0	;volatile
  3841  001C' 1B8B               	btfsc	11,7	;volatile
  3842  001D' 1403               	bsf	3,0	;volatile
  3843  001E' 138B               	bcf	11,7	;volatile
  3844  001F' 0023               	movlb	3	; select bank3
  3845  0020' 1515               	bsf	21,2	;volsfr
  3846  0021' 3055               	movlw	85
  3847  0022' 0096               	movwf	22	;volsfr
  3848  0023' 30AA               	movlw	170
  3849  0024' 0096               	movwf	22	;volsfr
  3850  0025' 1495               	bsf	21,1	;volsfr
  3851  0026' 1115               	bcf	21,2	;volsfr
  3852  0027' 0020               	movlb	0	; select bank0
  3853  0028' 1C03               	btfss	3,0	;volatile
  3854  0029' 0008               	return
  3855  002A' 178B               	bsf	11,7	;volatile
  3856  002B' 0008               	return
  3857  002C'                    __end_of_eeprom_write:	
  3858                           
  3859                           	psect	text8
  3860  0000'                    __ptext8:	
  3861 ;; *************** function _calculate_pidA *****************
  3862 ;; Defined at:
  3863 ;;		line 253 in file "main.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  set             4   61[BANK0 ] long 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  pid             4    8[BANK1 ] float 
  3868 ;;  error           4    4[BANK1 ] float 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  2   61[BANK0 ] int 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3878 ;;      Params:         0       4       0       0
  3879 ;;      Locals:         0       0      12       0
  3880 ;;      Temps:          0       8       0       0
  3881 ;;      Totals:         0      12      12       0
  3882 ;;Total ram usage:       24 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    4
  3885 ;; This function calls:
  3886 ;;		___fladd
  3887 ;;		___flge
  3888 ;;		___flmul
  3889 ;;		___flneg
  3890 ;;		___fltol
  3891 ;;		___xxtofl
  3892 ;;		_abs
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _calculate_pidA
  3900  0000'                    _calculate_pidA:	
  3901                           
  3902                           ;main.c: 255: float error = 0;
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _calculate_pidA: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3906  0000' 3000               	movlw	0
  3907  0001' 0021               	movlb	1	; select bank1
  3908  0002' 0080'              	movwf	(calculate_pidA@error+3)^(0+128)
  3909  0003' 3000               	movlw	0
  3910  0004' 0080'              	movwf	(calculate_pidA@error+2)^(0+128)
  3911  0005' 3000               	movlw	0
  3912  0006' 0080'              	movwf	(calculate_pidA@error+1)^(0+128)
  3913  0007' 3000               	movlw	0
  3914  0008' 0080'              	movwf	calculate_pidA@error^(0+128)
  3915                           
  3916                           ;main.c: 256: float pid = 0;
  3917  0009' 3000               	movlw	0
  3918  000A' 0080'              	movwf	(calculate_pidA@pid+3)^(0+128)
  3919  000B' 3000               	movlw	0
  3920  000C' 0080'              	movwf	(calculate_pidA@pid+2)^(0+128)
  3921  000D' 3000               	movlw	0
  3922  000E' 0080'              	movwf	(calculate_pidA@pid+1)^(0+128)
  3923  000F' 3000               	movlw	0
  3924  0010' 0080'              	movwf	calculate_pidA@pid^(0+128)
  3925                           
  3926                           ;main.c: 257: error = set - I2C_buffer.data.DISTANCE;
  3927  0011' 0020               	movlb	0	; select bank0
  3928  0012' 083D'              	movf	calculate_pidA@set,w
  3929  0013' 00C1'              	movwf	??_calculate_pidA
  3930  0014' 083E'              	movf	calculate_pidA@set+1,w
  3931  0015' 00C2'              	movwf	??_calculate_pidA+1
  3932  0016' 083F'              	movf	calculate_pidA@set+2,w
  3933  0017' 00C3'              	movwf	??_calculate_pidA+2
  3934  0018' 0840'              	movf	calculate_pidA@set+3,w
  3935  0019' 00C4'              	movwf	??_calculate_pidA+3
  3936  001A' 0021               	movlb	1	; select bank1
  3937  001B' 090F'              	comf	(_I2C_buffer^(0+128)+15),w	;volatile
  3938  001C' 0020               	movlb	0	; select bank0
  3939  001D' 00C5'              	movwf	??_calculate_pidA+4
  3940  001E' 0021               	movlb	1	; select bank1
  3941  001F' 090F'              	comf	((_I2C_buffer+1)^(0+128)+15),w	;volatile
  3942  0020' 0020               	movlb	0	; select bank0
  3943  0021' 00C6'              	movwf	??_calculate_pidA+5
  3944  0022' 0021               	movlb	1	; select bank1
  3945  0023' 090F'              	comf	((_I2C_buffer+2)^(0+128)+15),w	;volatile
  3946  0024' 0020               	movlb	0	; select bank0
  3947  0025' 00C7'              	movwf	??_calculate_pidA+6
  3948  0026' 0021               	movlb	1	; select bank1
  3949  0027' 090F'              	comf	((_I2C_buffer+3)^(0+128)+15),w	;volatile
  3950  0028' 0020               	movlb	0	; select bank0
  3951  0029' 00C8'              	movwf	??_calculate_pidA+7
  3952  002A' 0AC5'              	incf	??_calculate_pidA+4,f
  3953  002B' 1903               	skipnz
  3954  002C' 0AC6'              	incf	??_calculate_pidA+5,f
  3955  002D' 1903               	skipnz
  3956  002E' 0AC7'              	incf	??_calculate_pidA+6,f
  3957  002F' 1903               	skipnz
  3958  0030' 0AC8'              	incf	??_calculate_pidA+7,f
  3959  0031' 0845'              	movf	??_calculate_pidA+4,w
  3960  0032' 07C1'              	addwf	??_calculate_pidA,f
  3961  0033' 0846'              	movf	??_calculate_pidA+5,w
  3962  0034' 3DC2'              	addwfc	??_calculate_pidA+1,f
  3963  0035' 0847'              	movf	??_calculate_pidA+6,w
  3964  0036' 3DC3'              	addwfc	??_calculate_pidA+2,f
  3965  0037' 0848'              	movf	??_calculate_pidA+7,w
  3966  0038' 3DC4'              	addwfc	??_calculate_pidA+3,f
  3967  0039' 0844'              	movf	??_calculate_pidA+3,w
  3968  003A' 0089'              	movwf	___xxtofl@val+3
  3969  003B' 0843'              	movf	??_calculate_pidA+2,w
  3970  003C' 0088'              	movwf	___xxtofl@val+2
  3971  003D' 0842'              	movf	??_calculate_pidA+1,w
  3972  003E' 0087'              	movwf	___xxtofl@val+1
  3973  003F' 0841'              	movf	??_calculate_pidA,w
  3974  0040' 0086'              	movwf	___xxtofl@val
  3975  0041' 3001               	movlw	1
  3976  0042' 3180' 2000' 3180'  	fcall	___xxtofl
  3977  0045' 0020               	movlb	0	; select bank0
  3978  0046' 0809'              	movf	?___xxtofl+3,w
  3979  0047' 0021               	movlb	1	; select bank1
  3980  0048' 0080'              	movwf	(calculate_pidA@error+3)^(0+128)
  3981  0049' 0020               	movlb	0	; select bank0
  3982  004A' 0808'              	movf	?___xxtofl+2,w
  3983  004B' 0021               	movlb	1	; select bank1
  3984  004C' 0080'              	movwf	(calculate_pidA@error+2)^(0+128)
  3985  004D' 0020               	movlb	0	; select bank0
  3986  004E' 0807'              	movf	?___xxtofl+1,w
  3987  004F' 0021               	movlb	1	; select bank1
  3988  0050' 0080'              	movwf	(calculate_pidA@error+1)^(0+128)
  3989  0051' 0020               	movlb	0	; select bank0
  3990  0052' 0806'              	movf	?___xxtofl,w
  3991  0053' 0021               	movlb	1	; select bank1
  3992  0054' 0080'              	movwf	calculate_pidA@error^(0+128)
  3993                           
  3994                           ;main.c: 258: pid = error * I2C_buffer.data.ATS_PID_KP;
  3995  0055' 0800'              	movf	(calculate_pidA@error+3)^(0+128),w
  3996  0056' 0020               	movlb	0	; select bank0
  3997  0057' 008E'              	movwf	___flmul@b+3
  3998  0058' 0021               	movlb	1	; select bank1
  3999  0059' 0800'              	movf	(calculate_pidA@error+2)^(0+128),w
  4000  005A' 0020               	movlb	0	; select bank0
  4001  005B' 008D'              	movwf	___flmul@b+2
  4002  005C' 0021               	movlb	1	; select bank1
  4003  005D' 0800'              	movf	(calculate_pidA@error+1)^(0+128),w
  4004  005E' 0020               	movlb	0	; select bank0
  4005  005F' 008C'              	movwf	___flmul@b+1
  4006  0060' 0021               	movlb	1	; select bank1
  4007  0061' 0800'              	movf	calculate_pidA@error^(0+128),w
  4008  0062' 0020               	movlb	0	; select bank0
  4009  0063' 008B'              	movwf	___flmul@b
  4010  0064' 301F               	movlw	31
  4011  0065' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  4012  0066' 0086               	movwf	6
  4013  0067' 0187               	clrf	7
  4014  0068' 3F40               	moviw [0]fsr1
  4015  0069' 008F'              	movwf	___flmul@a
  4016  006A' 3F41               	moviw [1]fsr1
  4017  006B' 0090'              	movwf	___flmul@a+1
  4018  006C' 3F42               	moviw [2]fsr1
  4019  006D' 0091'              	movwf	___flmul@a+2
  4020  006E' 3F43               	moviw [3]fsr1
  4021  006F' 0092'              	movwf	___flmul@a+3
  4022  0070' 3180' 2000' 3180'  	fcall	___flmul
  4023  0073' 0020               	movlb	0	; select bank0
  4024  0074' 080E'              	movf	?___flmul+3,w
  4025  0075' 0021               	movlb	1	; select bank1
  4026  0076' 0080'              	movwf	(calculate_pidA@pid+3)^(0+128)
  4027  0077' 0020               	movlb	0	; select bank0
  4028  0078' 080D'              	movf	?___flmul+2,w
  4029  0079' 0021               	movlb	1	; select bank1
  4030  007A' 0080'              	movwf	(calculate_pidA@pid+2)^(0+128)
  4031  007B' 0020               	movlb	0	; select bank0
  4032  007C' 080C'              	movf	?___flmul+1,w
  4033  007D' 0021               	movlb	1	; select bank1
  4034  007E' 0080'              	movwf	(calculate_pidA@pid+1)^(0+128)
  4035  007F' 0020               	movlb	0	; select bank0
  4036  0080' 080B'              	movf	?___flmul,w
  4037  0081' 0021               	movlb	1	; select bank1
  4038  0082' 0080'              	movwf	calculate_pidA@pid^(0+128)
  4039                           
  4040                           ;main.c: 259: accumulatorA += error;
  4041  0083' 0800'              	movf	(calculate_pidA@error+3)^(0+128),w
  4042  0084' 0020               	movlb	0	; select bank0
  4043  0085' 00A8'              	movwf	___fladd@b+3
  4044  0086' 0021               	movlb	1	; select bank1
  4045  0087' 0800'              	movf	(calculate_pidA@error+2)^(0+128),w
  4046  0088' 0020               	movlb	0	; select bank0
  4047  0089' 00A7'              	movwf	___fladd@b+2
  4048  008A' 0021               	movlb	1	; select bank1
  4049  008B' 0800'              	movf	(calculate_pidA@error+1)^(0+128),w
  4050  008C' 0020               	movlb	0	; select bank0
  4051  008D' 00A6'              	movwf	___fladd@b+1
  4052  008E' 0021               	movlb	1	; select bank1
  4053  008F' 0800'              	movf	calculate_pidA@error^(0+128),w
  4054  0090' 0020               	movlb	0	; select bank0
  4055  0091' 00A5'              	movwf	___fladd@b
  4056  0092' 0022               	movlb	2	; select bank2
  4057  0093' 0800'              	movf	(_accumulatorA+3)^(0+256),w
  4058  0094' 0020               	movlb	0	; select bank0
  4059  0095' 00AC'              	movwf	___fladd@a+3
  4060  0096' 0022               	movlb	2	; select bank2
  4061  0097' 0800'              	movf	(_accumulatorA+2)^(0+256),w
  4062  0098' 0020               	movlb	0	; select bank0
  4063  0099' 00AB'              	movwf	___fladd@a+2
  4064  009A' 0022               	movlb	2	; select bank2
  4065  009B' 0800'              	movf	(_accumulatorA+1)^(0+256),w
  4066  009C' 0020               	movlb	0	; select bank0
  4067  009D' 00AA'              	movwf	___fladd@a+1
  4068  009E' 0022               	movlb	2	; select bank2
  4069  009F' 0800'              	movf	_accumulatorA^(0+256),w
  4070  00A0' 0020               	movlb	0	; select bank0
  4071  00A1' 00A9'              	movwf	___fladd@a
  4072  00A2' 3180' 2000' 3180'  	fcall	___fladd
  4073  00A5' 0020               	movlb	0	; select bank0
  4074  00A6' 0828'              	movf	?___fladd+3,w
  4075  00A7' 0022               	movlb	2	; select bank2
  4076  00A8' 0080'              	movwf	(_accumulatorA+3)^(0+256)
  4077  00A9' 0020               	movlb	0	; select bank0
  4078  00AA' 0827'              	movf	?___fladd+2,w
  4079  00AB' 0022               	movlb	2	; select bank2
  4080  00AC' 0080'              	movwf	(_accumulatorA+2)^(0+256)
  4081  00AD' 0020               	movlb	0	; select bank0
  4082  00AE' 0826'              	movf	?___fladd+1,w
  4083  00AF' 0022               	movlb	2	; select bank2
  4084  00B0' 0080'              	movwf	(_accumulatorA+1)^(0+256)
  4085  00B1' 0020               	movlb	0	; select bank0
  4086  00B2' 0825'              	movf	?___fladd,w
  4087  00B3' 0022               	movlb	2	; select bank2
  4088  00B4' 0080'              	movwf	_accumulatorA^(0+256)
  4089                           
  4090                           ;main.c: 260: pid += I2C_buffer.data.ATS_PID_KI*accumulatorA;
  4091  00B5' 3027               	movlw	39
  4092  00B6' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  4093  00B7' 0086               	movwf	6
  4094  00B8' 0187               	clrf	7
  4095  00B9' 3F40               	moviw [0]fsr1
  4096  00BA' 0020               	movlb	0	; select bank0
  4097  00BB' 008F'              	movwf	___flmul@a
  4098  00BC' 3F41               	moviw [1]fsr1
  4099  00BD' 0090'              	movwf	___flmul@a+1
  4100  00BE' 3F42               	moviw [2]fsr1
  4101  00BF' 0091'              	movwf	___flmul@a+2
  4102  00C0' 3F43               	moviw [3]fsr1
  4103  00C1' 0092'              	movwf	___flmul@a+3
  4104  00C2' 0022               	movlb	2	; select bank2
  4105  00C3' 0800'              	movf	(_accumulatorA+3)^(0+256),w
  4106  00C4' 0020               	movlb	0	; select bank0
  4107  00C5' 008E'              	movwf	___flmul@b+3
  4108  00C6' 0022               	movlb	2	; select bank2
  4109  00C7' 0800'              	movf	(_accumulatorA+2)^(0+256),w
  4110  00C8' 0020               	movlb	0	; select bank0
  4111  00C9' 008D'              	movwf	___flmul@b+2
  4112  00CA' 0022               	movlb	2	; select bank2
  4113  00CB' 0800'              	movf	(_accumulatorA+1)^(0+256),w
  4114  00CC' 0020               	movlb	0	; select bank0
  4115  00CD' 008C'              	movwf	___flmul@b+1
  4116  00CE' 0022               	movlb	2	; select bank2
  4117  00CF' 0800'              	movf	_accumulatorA^(0+256),w
  4118  00D0' 0020               	movlb	0	; select bank0
  4119  00D1' 008B'              	movwf	___flmul@b
  4120  00D2' 3180' 2000' 3180'  	fcall	___flmul
  4121  00D5' 0020               	movlb	0	; select bank0
  4122  00D6' 080E'              	movf	?___flmul+3,w
  4123  00D7' 00A8'              	movwf	___fladd@b+3
  4124  00D8' 080D'              	movf	?___flmul+2,w
  4125  00D9' 00A7'              	movwf	___fladd@b+2
  4126  00DA' 080C'              	movf	?___flmul+1,w
  4127  00DB' 00A6'              	movwf	___fladd@b+1
  4128  00DC' 080B'              	movf	?___flmul,w
  4129  00DD' 00A5'              	movwf	___fladd@b
  4130  00DE' 0021               	movlb	1	; select bank1
  4131  00DF' 0800'              	movf	(calculate_pidA@pid+3)^(0+128),w
  4132  00E0' 0020               	movlb	0	; select bank0
  4133  00E1' 00AC'              	movwf	___fladd@a+3
  4134  00E2' 0021               	movlb	1	; select bank1
  4135  00E3' 0800'              	movf	(calculate_pidA@pid+2)^(0+128),w
  4136  00E4' 0020               	movlb	0	; select bank0
  4137  00E5' 00AB'              	movwf	___fladd@a+2
  4138  00E6' 0021               	movlb	1	; select bank1
  4139  00E7' 0800'              	movf	(calculate_pidA@pid+1)^(0+128),w
  4140  00E8' 0020               	movlb	0	; select bank0
  4141  00E9' 00AA'              	movwf	___fladd@a+1
  4142  00EA' 0021               	movlb	1	; select bank1
  4143  00EB' 0800'              	movf	calculate_pidA@pid^(0+128),w
  4144  00EC' 0020               	movlb	0	; select bank0
  4145  00ED' 00A9'              	movwf	___fladd@a
  4146  00EE' 3180' 2000' 3180'  	fcall	___fladd
  4147  00F1' 0020               	movlb	0	; select bank0
  4148  00F2' 0828'              	movf	?___fladd+3,w
  4149  00F3' 0021               	movlb	1	; select bank1
  4150  00F4' 0080'              	movwf	(calculate_pidA@pid+3)^(0+128)
  4151  00F5' 0020               	movlb	0	; select bank0
  4152  00F6' 0827'              	movf	?___fladd+2,w
  4153  00F7' 0021               	movlb	1	; select bank1
  4154  00F8' 0080'              	movwf	(calculate_pidA@pid+2)^(0+128)
  4155  00F9' 0020               	movlb	0	; select bank0
  4156  00FA' 0826'              	movf	?___fladd+1,w
  4157  00FB' 0021               	movlb	1	; select bank1
  4158  00FC' 0080'              	movwf	(calculate_pidA@pid+1)^(0+128)
  4159  00FD' 0020               	movlb	0	; select bank0
  4160  00FE' 0825'              	movf	?___fladd,w
  4161  00FF' 0021               	movlb	1	; select bank1
  4162  0100' 0080'              	movwf	calculate_pidA@pid^(0+128)
  4163                           
  4164                           ;main.c: 261: pid += I2C_buffer.data.ATS_PID_KD * (error - lasterrorA);
  4165  0101' 0022               	movlb	2	; select bank2
  4166  0102' 0800'              	movf	(_lasterrorA+3)^(0+256),w
  4167  0103' 0020               	movlb	0	; select bank0
  4168  0104' 0085'              	movwf	___flneg@f1+3
  4169  0105' 0022               	movlb	2	; select bank2
  4170  0106' 0800'              	movf	(_lasterrorA+2)^(0+256),w
  4171  0107' 0020               	movlb	0	; select bank0
  4172  0108' 0084'              	movwf	___flneg@f1+2
  4173  0109' 0022               	movlb	2	; select bank2
  4174  010A' 0800'              	movf	(_lasterrorA+1)^(0+256),w
  4175  010B' 0020               	movlb	0	; select bank0
  4176  010C' 0083'              	movwf	___flneg@f1+1
  4177  010D' 0022               	movlb	2	; select bank2
  4178  010E' 0800'              	movf	_lasterrorA^(0+256),w
  4179  010F' 0020               	movlb	0	; select bank0
  4180  0110' 0082'              	movwf	___flneg@f1
  4181  0111' 3180' 2000' 3180'  	fcall	___flneg
  4182  0114' 0020               	movlb	0	; select bank0
  4183  0115' 0805'              	movf	?___flneg+3,w
  4184  0116' 00AC'              	movwf	___fladd@a+3
  4185  0117' 0804'              	movf	?___flneg+2,w
  4186  0118' 00AB'              	movwf	___fladd@a+2
  4187  0119' 0803'              	movf	?___flneg+1,w
  4188  011A' 00AA'              	movwf	___fladd@a+1
  4189  011B' 0802'              	movf	?___flneg,w
  4190  011C' 00A9'              	movwf	___fladd@a
  4191  011D' 0021               	movlb	1	; select bank1
  4192  011E' 0800'              	movf	(calculate_pidA@error+3)^(0+128),w
  4193  011F' 0020               	movlb	0	; select bank0
  4194  0120' 00A8'              	movwf	___fladd@b+3
  4195  0121' 0021               	movlb	1	; select bank1
  4196  0122' 0800'              	movf	(calculate_pidA@error+2)^(0+128),w
  4197  0123' 0020               	movlb	0	; select bank0
  4198  0124' 00A7'              	movwf	___fladd@b+2
  4199  0125' 0021               	movlb	1	; select bank1
  4200  0126' 0800'              	movf	(calculate_pidA@error+1)^(0+128),w
  4201  0127' 0020               	movlb	0	; select bank0
  4202  0128' 00A6'              	movwf	___fladd@b+1
  4203  0129' 0021               	movlb	1	; select bank1
  4204  012A' 0800'              	movf	calculate_pidA@error^(0+128),w
  4205  012B' 0020               	movlb	0	; select bank0
  4206  012C' 00A5'              	movwf	___fladd@b
  4207  012D' 3180' 2000' 3180'  	fcall	___fladd
  4208  0130' 0020               	movlb	0	; select bank0
  4209  0131' 0828'              	movf	?___fladd+3,w
  4210  0132' 0092'              	movwf	___flmul@a+3
  4211  0133' 0827'              	movf	?___fladd+2,w
  4212  0134' 0091'              	movwf	___flmul@a+2
  4213  0135' 0826'              	movf	?___fladd+1,w
  4214  0136' 0090'              	movwf	___flmul@a+1
  4215  0137' 0825'              	movf	?___fladd,w
  4216  0138' 008F'              	movwf	___flmul@a
  4217  0139' 3023               	movlw	35
  4218  013A' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  4219  013B' 0086               	movwf	6
  4220  013C' 0187               	clrf	7
  4221  013D' 3F40               	moviw [0]fsr1
  4222  013E' 008B'              	movwf	___flmul@b
  4223  013F' 3F41               	moviw [1]fsr1
  4224  0140' 008C'              	movwf	___flmul@b+1
  4225  0141' 3F42               	moviw [2]fsr1
  4226  0142' 008D'              	movwf	___flmul@b+2
  4227  0143' 3F43               	moviw [3]fsr1
  4228  0144' 008E'              	movwf	___flmul@b+3
  4229  0145' 3180' 2000' 3180'  	fcall	___flmul
  4230  0148' 0020               	movlb	0	; select bank0
  4231  0149' 080E'              	movf	?___flmul+3,w
  4232  014A' 0021               	movlb	1	; select bank1
  4233  014B' 0080'              	movwf	(_calculate_pidA$1318+3)^(0+128)
  4234  014C' 0020               	movlb	0	; select bank0
  4235  014D' 080D'              	movf	?___flmul+2,w
  4236  014E' 0021               	movlb	1	; select bank1
  4237  014F' 0080'              	movwf	(_calculate_pidA$1318+2)^(0+128)
  4238  0150' 0020               	movlb	0	; select bank0
  4239  0151' 080C'              	movf	?___flmul+1,w
  4240  0152' 0021               	movlb	1	; select bank1
  4241  0153' 0080'              	movwf	(_calculate_pidA$1318+1)^(0+128)
  4242  0154' 0020               	movlb	0	; select bank0
  4243  0155' 080B'              	movf	?___flmul,w
  4244  0156' 0021               	movlb	1	; select bank1
  4245  0157' 0080'              	movwf	_calculate_pidA$1318^(0+128)
  4246                           
  4247                           ;main.c: 261: pid += I2C_buffer.data.ATS_PID_KD * (error - lasterrorA);
  4248  0158' 0800'              	movf	(_calculate_pidA$1318+3)^(0+128),w
  4249  0159' 0020               	movlb	0	; select bank0
  4250  015A' 00A8'              	movwf	___fladd@b+3
  4251  015B' 0021               	movlb	1	; select bank1
  4252  015C' 0800'              	movf	(_calculate_pidA$1318+2)^(0+128),w
  4253  015D' 0020               	movlb	0	; select bank0
  4254  015E' 00A7'              	movwf	___fladd@b+2
  4255  015F' 0021               	movlb	1	; select bank1
  4256  0160' 0800'              	movf	(_calculate_pidA$1318+1)^(0+128),w
  4257  0161' 0020               	movlb	0	; select bank0
  4258  0162' 00A6'              	movwf	___fladd@b+1
  4259  0163' 0021               	movlb	1	; select bank1
  4260  0164' 0800'              	movf	_calculate_pidA$1318^(0+128),w
  4261  0165' 0020               	movlb	0	; select bank0
  4262  0166' 00A5'              	movwf	___fladd@b
  4263  0167' 0021               	movlb	1	; select bank1
  4264  0168' 0800'              	movf	(calculate_pidA@pid+3)^(0+128),w
  4265  0169' 0020               	movlb	0	; select bank0
  4266  016A' 00AC'              	movwf	___fladd@a+3
  4267  016B' 0021               	movlb	1	; select bank1
  4268  016C' 0800'              	movf	(calculate_pidA@pid+2)^(0+128),w
  4269  016D' 0020               	movlb	0	; select bank0
  4270  016E' 00AB'              	movwf	___fladd@a+2
  4271  016F' 0021               	movlb	1	; select bank1
  4272  0170' 0800'              	movf	(calculate_pidA@pid+1)^(0+128),w
  4273  0171' 0020               	movlb	0	; select bank0
  4274  0172' 00AA'              	movwf	___fladd@a+1
  4275  0173' 0021               	movlb	1	; select bank1
  4276  0174' 0800'              	movf	calculate_pidA@pid^(0+128),w
  4277  0175' 0020               	movlb	0	; select bank0
  4278  0176' 00A9'              	movwf	___fladd@a
  4279  0177' 3180' 2000' 3180'  	fcall	___fladd
  4280  017A' 0020               	movlb	0	; select bank0
  4281  017B' 0828'              	movf	?___fladd+3,w
  4282  017C' 0021               	movlb	1	; select bank1
  4283  017D' 0080'              	movwf	(calculate_pidA@pid+3)^(0+128)
  4284  017E' 0020               	movlb	0	; select bank0
  4285  017F' 0827'              	movf	?___fladd+2,w
  4286  0180' 0021               	movlb	1	; select bank1
  4287  0181' 0080'              	movwf	(calculate_pidA@pid+2)^(0+128)
  4288  0182' 0020               	movlb	0	; select bank0
  4289  0183' 0826'              	movf	?___fladd+1,w
  4290  0184' 0021               	movlb	1	; select bank1
  4291  0185' 0080'              	movwf	(calculate_pidA@pid+1)^(0+128)
  4292  0186' 0020               	movlb	0	; select bank0
  4293  0187' 0825'              	movf	?___fladd,w
  4294  0188' 0021               	movlb	1	; select bank1
  4295  0189' 0080'              	movwf	calculate_pidA@pid^(0+128)
  4296                           
  4297                           ;main.c: 262: lasterrorA = error;
  4298  018A' 0800'              	movf	(calculate_pidA@error+3)^(0+128),w
  4299  018B' 0022               	movlb	2	; select bank2
  4300  018C' 0080'              	movwf	(_lasterrorA+3)^(0+256)
  4301  018D' 0021               	movlb	1	; select bank1
  4302  018E' 0800'              	movf	(calculate_pidA@error+2)^(0+128),w
  4303  018F' 0022               	movlb	2	; select bank2
  4304  0190' 0080'              	movwf	(_lasterrorA+2)^(0+256)
  4305  0191' 0021               	movlb	1	; select bank1
  4306  0192' 0800'              	movf	(calculate_pidA@error+1)^(0+128),w
  4307  0193' 0022               	movlb	2	; select bank2
  4308  0194' 0080'              	movwf	(_lasterrorA+1)^(0+256)
  4309  0195' 0021               	movlb	1	; select bank1
  4310  0196' 0800'              	movf	calculate_pidA@error^(0+128),w
  4311  0197' 0022               	movlb	2	; select bank2
  4312  0198' 0080'              	movwf	_lasterrorA^(0+256)
  4313                           
  4314                           ;main.c: 263: if (pid >= abs(I2C_buffer.data.SPEED))
  4315  0199' 0021               	movlb	1	; select bank1
  4316  019A' 0800'              	movf	(calculate_pidA@pid+3)^(0+128),w
  4317  019B' 0020               	movlb	0	; select bank0
  4318  019C' 0097'              	movwf	___flge@ff1+3
  4319  019D' 0021               	movlb	1	; select bank1
  4320  019E' 0800'              	movf	(calculate_pidA@pid+2)^(0+128),w
  4321  019F' 0020               	movlb	0	; select bank0
  4322  01A0' 0096'              	movwf	___flge@ff1+2
  4323  01A1' 0021               	movlb	1	; select bank1
  4324  01A2' 0800'              	movf	(calculate_pidA@pid+1)^(0+128),w
  4325  01A3' 0020               	movlb	0	; select bank0
  4326  01A4' 0095'              	movwf	___flge@ff1+1
  4327  01A5' 0021               	movlb	1	; select bank1
  4328  01A6' 0800'              	movf	calculate_pidA@pid^(0+128),w
  4329  01A7' 0020               	movlb	0	; select bank0
  4330  01A8' 0094'              	movwf	___flge@ff1
  4331  01A9' 0021               	movlb	1	; select bank1
  4332  01AA' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  4333  01AB' 0020               	movlb	0	; select bank0
  4334  01AC' 0083'              	movwf	abs@a+1
  4335  01AD' 0021               	movlb	1	; select bank1
  4336  01AE' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  4337  01AF' 0020               	movlb	0	; select bank0
  4338  01B0' 0082'              	movwf	abs@a
  4339  01B1' 3180' 2000' 3180'  	fcall	_abs
  4340  01B4' 0020               	movlb	0	; select bank0
  4341  01B5' 0802'              	movf	?_abs,w
  4342  01B6' 0086'              	movwf	___xxtofl@val
  4343  01B7' 0803'              	movf	?_abs+1,w
  4344  01B8' 0087'              	movwf	___xxtofl@val+1
  4345  01B9' 0D89               	rlf	9,f
  4346  01BA' 3B89               	subwfb	9,f
  4347  01BB' 0989               	comf	9,f
  4348  01BC' 0088'              	movwf	___xxtofl@val+2
  4349  01BD' 0089'              	movwf	___xxtofl@val+3
  4350  01BE' 3001               	movlw	1
  4351  01BF' 3180' 2000' 3180'  	fcall	___xxtofl
  4352  01C2' 0020               	movlb	0	; select bank0
  4353  01C3' 0809'              	movf	?___xxtofl+3,w
  4354  01C4' 009B'              	movwf	___flge@ff2+3
  4355  01C5' 0808'              	movf	?___xxtofl+2,w
  4356  01C6' 009A'              	movwf	___flge@ff2+2
  4357  01C7' 0807'              	movf	?___xxtofl+1,w
  4358  01C8' 0099'              	movwf	___flge@ff2+1
  4359  01C9' 0806'              	movf	?___xxtofl,w
  4360  01CA' 0098'              	movwf	___flge@ff2
  4361  01CB' 3180' 2000' 3180'  	fcall	___flge
  4362  01CE' 1C03               	btfss	3,0
  4363  01CF' 2800'              	goto	l137
  4364                           
  4365                           ;main.c: 264: {;main.c: 265: pid = abs(I2C_buffer.data.SPEED);
  4366  01D0' 0021               	movlb	1	; select bank1
  4367  01D1' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  4368  01D2' 0020               	movlb	0	; select bank0
  4369  01D3' 0083'              	movwf	abs@a+1
  4370  01D4' 0021               	movlb	1	; select bank1
  4371  01D5' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  4372  01D6' 0020               	movlb	0	; select bank0
  4373  01D7' 0082'              	movwf	abs@a
  4374  01D8' 3180' 2000' 3180'  	fcall	_abs
  4375  01DB' 0020               	movlb	0	; select bank0
  4376  01DC' 0802'              	movf	?_abs,w
  4377  01DD' 0086'              	movwf	___xxtofl@val
  4378  01DE' 0803'              	movf	?_abs+1,w
  4379  01DF' 0087'              	movwf	___xxtofl@val+1
  4380  01E0' 0D89               	rlf	9,f
  4381  01E1' 3B89               	subwfb	9,f
  4382  01E2' 0989               	comf	9,f
  4383  01E3' 0088'              	movwf	___xxtofl@val+2
  4384  01E4' 0089'              	movwf	___xxtofl@val+3
  4385  01E5' 3001               	movlw	1
  4386  01E6' 3180' 2000' 3180'  	fcall	___xxtofl
  4387  01E9' 0020               	movlb	0	; select bank0
  4388  01EA' 0809'              	movf	?___xxtofl+3,w
  4389  01EB' 0021               	movlb	1	; select bank1
  4390  01EC' 0080'              	movwf	(calculate_pidA@pid+3)^(0+128)
  4391  01ED' 0020               	movlb	0	; select bank0
  4392  01EE' 0808'              	movf	?___xxtofl+2,w
  4393  01EF' 0021               	movlb	1	; select bank1
  4394  01F0' 0080'              	movwf	(calculate_pidA@pid+2)^(0+128)
  4395  01F1' 0020               	movlb	0	; select bank0
  4396  01F2' 0807'              	movf	?___xxtofl+1,w
  4397  01F3' 0021               	movlb	1	; select bank1
  4398  01F4' 0080'              	movwf	(calculate_pidA@pid+1)^(0+128)
  4399  01F5' 0020               	movlb	0	; select bank0
  4400  01F6' 0806'              	movf	?___xxtofl,w
  4401  01F7' 0021               	movlb	1	; select bank1
  4402  01F8' 0080'              	movwf	calculate_pidA@pid^(0+128)
  4403  01F9'                    l137:	
  4404                           
  4405                           ;main.c: 266: };main.c: 267: if (pid <= abs(I2C_buffer.data.SPEED)*-1) {
  4406  01F9' 0021               	movlb	1	; select bank1
  4407  01FA' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  4408  01FB' 0020               	movlb	0	; select bank0
  4409  01FC' 0083'              	movwf	abs@a+1
  4410  01FD' 0021               	movlb	1	; select bank1
  4411  01FE' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  4412  01FF' 0020               	movlb	0	; select bank0
  4413  0200' 0082'              	movwf	abs@a
  4414  0201' 3180' 2000' 3180'  	fcall	_abs
  4415  0204' 0020               	movlb	0	; select bank0
  4416  0205' 0902'              	comf	?_abs,w
  4417  0206' 00C1'              	movwf	??_calculate_pidA
  4418  0207' 0903'              	comf	?_abs+1,w
  4419  0208' 00C2'              	movwf	??_calculate_pidA+1
  4420  0209' 0AC1'              	incf	??_calculate_pidA,f
  4421  020A' 1903               	skipnz
  4422  020B' 0AC2'              	incf	??_calculate_pidA+1,f
  4423  020C' 0841'              	movf	??_calculate_pidA,w
  4424  020D' 0086'              	movwf	___xxtofl@val
  4425  020E' 0842'              	movf	??_calculate_pidA+1,w
  4426  020F' 0087'              	movwf	___xxtofl@val+1
  4427  0210' 0D89               	rlf	9,f
  4428  0211' 3B89               	subwfb	9,f
  4429  0212' 0989               	comf	9,f
  4430  0213' 0088'              	movwf	___xxtofl@val+2
  4431  0214' 0089'              	movwf	___xxtofl@val+3
  4432  0215' 3001               	movlw	1
  4433  0216' 3180' 2000' 3180'  	fcall	___xxtofl
  4434  0219' 0020               	movlb	0	; select bank0
  4435  021A' 0809'              	movf	?___xxtofl+3,w
  4436  021B' 0097'              	movwf	___flge@ff1+3
  4437  021C' 0808'              	movf	?___xxtofl+2,w
  4438  021D' 0096'              	movwf	___flge@ff1+2
  4439  021E' 0807'              	movf	?___xxtofl+1,w
  4440  021F' 0095'              	movwf	___flge@ff1+1
  4441  0220' 0806'              	movf	?___xxtofl,w
  4442  0221' 0094'              	movwf	___flge@ff1
  4443  0222' 0021               	movlb	1	; select bank1
  4444  0223' 0800'              	movf	(calculate_pidA@pid+3)^(0+128),w
  4445  0224' 0020               	movlb	0	; select bank0
  4446  0225' 009B'              	movwf	___flge@ff2+3
  4447  0226' 0021               	movlb	1	; select bank1
  4448  0227' 0800'              	movf	(calculate_pidA@pid+2)^(0+128),w
  4449  0228' 0020               	movlb	0	; select bank0
  4450  0229' 009A'              	movwf	___flge@ff2+2
  4451  022A' 0021               	movlb	1	; select bank1
  4452  022B' 0800'              	movf	(calculate_pidA@pid+1)^(0+128),w
  4453  022C' 0020               	movlb	0	; select bank0
  4454  022D' 0099'              	movwf	___flge@ff2+1
  4455  022E' 0021               	movlb	1	; select bank1
  4456  022F' 0800'              	movf	calculate_pidA@pid^(0+128),w
  4457  0230' 0020               	movlb	0	; select bank0
  4458  0231' 0098'              	movwf	___flge@ff2
  4459  0232' 3180' 2000' 3180'  	fcall	___flge
  4460  0235' 1C03               	btfss	3,0
  4461  0236' 2800'              	goto	l138
  4462                           
  4463                           ;main.c: 268: pid = abs(I2C_buffer.data.SPEED)*-1;
  4464  0237' 0021               	movlb	1	; select bank1
  4465  0238' 080D'              	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
  4466  0239' 0020               	movlb	0	; select bank0
  4467  023A' 0083'              	movwf	abs@a+1
  4468  023B' 0021               	movlb	1	; select bank1
  4469  023C' 080D'              	movf	(_I2C_buffer^(0+128)+13),w	;volatile
  4470  023D' 0020               	movlb	0	; select bank0
  4471  023E' 0082'              	movwf	abs@a
  4472  023F' 3180' 2000' 3180'  	fcall	_abs
  4473  0242' 0020               	movlb	0	; select bank0
  4474  0243' 0902'              	comf	?_abs,w
  4475  0244' 00C1'              	movwf	??_calculate_pidA
  4476  0245' 0903'              	comf	?_abs+1,w
  4477  0246' 00C2'              	movwf	??_calculate_pidA+1
  4478  0247' 0AC1'              	incf	??_calculate_pidA,f
  4479  0248' 1903               	skipnz
  4480  0249' 0AC2'              	incf	??_calculate_pidA+1,f
  4481  024A' 0841'              	movf	??_calculate_pidA,w
  4482  024B' 0086'              	movwf	___xxtofl@val
  4483  024C' 0842'              	movf	??_calculate_pidA+1,w
  4484  024D' 0087'              	movwf	___xxtofl@val+1
  4485  024E' 0D89               	rlf	9,f
  4486  024F' 3B89               	subwfb	9,f
  4487  0250' 0989               	comf	9,f
  4488  0251' 0088'              	movwf	___xxtofl@val+2
  4489  0252' 0089'              	movwf	___xxtofl@val+3
  4490  0253' 3001               	movlw	1
  4491  0254' 3180' 2000' 3180'  	fcall	___xxtofl
  4492  0257' 0020               	movlb	0	; select bank0
  4493  0258' 0809'              	movf	?___xxtofl+3,w
  4494  0259' 0021               	movlb	1	; select bank1
  4495  025A' 0080'              	movwf	(calculate_pidA@pid+3)^(0+128)
  4496  025B' 0020               	movlb	0	; select bank0
  4497  025C' 0808'              	movf	?___xxtofl+2,w
  4498  025D' 0021               	movlb	1	; select bank1
  4499  025E' 0080'              	movwf	(calculate_pidA@pid+2)^(0+128)
  4500  025F' 0020               	movlb	0	; select bank0
  4501  0260' 0807'              	movf	?___xxtofl+1,w
  4502  0261' 0021               	movlb	1	; select bank1
  4503  0262' 0080'              	movwf	(calculate_pidA@pid+1)^(0+128)
  4504  0263' 0020               	movlb	0	; select bank0
  4505  0264' 0806'              	movf	?___xxtofl,w
  4506  0265' 0021               	movlb	1	; select bank1
  4507  0266' 0080'              	movwf	calculate_pidA@pid^(0+128)
  4508  0267'                    l138:	
  4509                           
  4510                           ;main.c: 269: };main.c: 270: return ((int) pid);
  4511  0267' 0021               	movlb	1	; select bank1
  4512  0268' 0800'              	movf	(calculate_pidA@pid+3)^(0+128),w
  4513  0269' 0020               	movlb	0	; select bank0
  4514  026A' 0085'              	movwf	___fltol@f1+3
  4515  026B' 0021               	movlb	1	; select bank1
  4516  026C' 0800'              	movf	(calculate_pidA@pid+2)^(0+128),w
  4517  026D' 0020               	movlb	0	; select bank0
  4518  026E' 0084'              	movwf	___fltol@f1+2
  4519  026F' 0021               	movlb	1	; select bank1
  4520  0270' 0800'              	movf	(calculate_pidA@pid+1)^(0+128),w
  4521  0271' 0020               	movlb	0	; select bank0
  4522  0272' 0083'              	movwf	___fltol@f1+1
  4523  0273' 0021               	movlb	1	; select bank1
  4524  0274' 0800'              	movf	calculate_pidA@pid^(0+128),w
  4525  0275' 0020               	movlb	0	; select bank0
  4526  0276' 0082'              	movwf	___fltol@f1
  4527  0277' 3180' 2000'        	fcall	___fltol
  4528  0279' 0020               	movlb	0	; select bank0
  4529  027A' 0803'              	movf	?___fltol+1,w
  4530  027B' 00BE'              	movwf	?_calculate_pidA+1
  4531  027C' 0802'              	movf	?___fltol,w
  4532  027D' 00BD'              	movwf	?_calculate_pidA
  4533  027E' 0008               	return
  4534  027F'                    __end_of_calculate_pidA:	
  4535                           
  4536                           	psect	text9
  4537  0000'                    __ptext9:	
  4538 ;; *************** function _abs *****************
  4539 ;; Defined at:
  4540 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\abs.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  a               2    2[BANK0 ] int 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  2    2[BANK0 ] int 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4554 ;;      Params:         0       2       0       0
  4555 ;;      Locals:         0       0       0       0
  4556 ;;      Temps:          0       2       0       0
  4557 ;;      Totals:         0       4       0       0
  4558 ;;Total ram usage:        4 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    2
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_calculate_pidA
  4565 ;;		_main
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           
  4570                           ;psect for function _abs
  4571  0000'                    _abs:	
  4572                           
  4573                           ;incstack = 0
  4574                           ; Regs used in _abs: [wreg+status,2+status,0]
  4575  0000' 0020               	movlb	0	; select bank0
  4576  0001' 1F83'              	btfss	abs@a+1,7
  4577  0002' 0008               	return
  4578  0003' 0902'              	comf	abs@a,w
  4579  0004' 0084'              	movwf	??_abs
  4580  0005' 0903'              	comf	abs@a+1,w
  4581  0006' 0085'              	movwf	??_abs+1
  4582  0007' 0A84'              	incf	??_abs,f
  4583  0008' 1903               	skipnz
  4584  0009' 0A85'              	incf	??_abs+1,f
  4585  000A' 0804'              	movf	??_abs,w
  4586  000B' 0082'              	movwf	?_abs
  4587  000C' 0805'              	movf	??_abs+1,w
  4588  000D' 0083'              	movwf	?_abs+1
  4589  000E' 0008               	return
  4590  000F'                    __end_of_abs:	
  4591                           
  4592                           	psect	text10
  4593  0000'                    __ptext10:	
  4594 ;; *************** function ___xxtofl *****************
  4595 ;; Defined at:
  4596 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  sign            1    wreg     unsigned char 
  4599 ;;  val             4    6[BANK0 ] long 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  sign            1   14[BANK0 ] unsigned char 
  4602 ;;  arg             4   16[BANK0 ] unsigned long 
  4603 ;;  exp             1   15[BANK0 ] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  4    6[BANK0 ] unsigned char 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4613 ;;      Params:         0       4       0       0
  4614 ;;      Locals:         0       6       0       0
  4615 ;;      Temps:          0       4       0       0
  4616 ;;      Totals:         0      14       0       0
  4617 ;;Total ram usage:       14 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    2
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_calculate_pidA
  4624 ;;		_calculate_pidM
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           
  4629                           ;psect for function ___xxtofl
  4630  0000'                    ___xxtofl:	
  4631                           
  4632                           ;incstack = 0
  4633                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4634                           ;___xxtofl@sign stored from wreg
  4635  0000' 0020               	movlb	0	; select bank0
  4636  0001' 008E'              	movwf	___xxtofl@sign
  4637  0002' 080E'              	movf	___xxtofl@sign,w
  4638  0003' 1D03               	btfss	3,2
  4639  0004' 1F89'              	btfss	___xxtofl@val+3,7
  4640  0005' 2800'              	goto	l2352
  4641  0006' 0906'              	comf	___xxtofl@val,w
  4642  0007' 0090'              	movwf	___xxtofl@arg
  4643  0008' 0907'              	comf	___xxtofl@val+1,w
  4644  0009' 0091'              	movwf	___xxtofl@arg+1
  4645  000A' 0908'              	comf	___xxtofl@val+2,w
  4646  000B' 0092'              	movwf	___xxtofl@arg+2
  4647  000C' 0909'              	comf	___xxtofl@val+3,w
  4648  000D' 0093'              	movwf	___xxtofl@arg+3
  4649  000E' 0A90'              	incf	___xxtofl@arg,f
  4650  000F' 1903               	skipnz
  4651  0010' 0A91'              	incf	___xxtofl@arg+1,f
  4652  0011' 1903               	skipnz
  4653  0012' 0A92'              	incf	___xxtofl@arg+2,f
  4654  0013' 1903               	skipnz
  4655  0014' 0A93'              	incf	___xxtofl@arg+3,f
  4656  0015' 2800'              	goto	l731
  4657  0016'                    l2352:	
  4658  0016' 0809'              	movf	___xxtofl@val+3,w
  4659  0017' 0093'              	movwf	___xxtofl@arg+3
  4660  0018' 0808'              	movf	___xxtofl@val+2,w
  4661  0019' 0092'              	movwf	___xxtofl@arg+2
  4662  001A' 0807'              	movf	___xxtofl@val+1,w
  4663  001B' 0091'              	movwf	___xxtofl@arg+1
  4664  001C' 0806'              	movf	___xxtofl@val,w
  4665  001D' 0090'              	movwf	___xxtofl@arg
  4666  001E'                    l731:	
  4667  001E' 0809'              	movf	___xxtofl@val+3,w
  4668  001F' 0408'              	iorwf	___xxtofl@val+2,w
  4669  0020' 0407'              	iorwf	___xxtofl@val+1,w
  4670  0021' 0406'              	iorwf	___xxtofl@val,w
  4671  0022' 1D03               	skipz
  4672  0023' 2800'              	goto	l2358
  4673  0024' 3000               	movlw	0
  4674  0025' 0089'              	movwf	?___xxtofl+3
  4675  0026' 3000               	movlw	0
  4676  0027' 0088'              	movwf	?___xxtofl+2
  4677  0028' 3000               	movlw	0
  4678  0029' 0087'              	movwf	?___xxtofl+1
  4679  002A' 3000               	movlw	0
  4680  002B' 0086'              	movwf	?___xxtofl
  4681  002C' 0008               	return
  4682  002D'                    l2358:	
  4683  002D' 3096               	movlw	150
  4684  002E' 008A'              	movwf	??___xxtofl
  4685  002F' 080A'              	movf	??___xxtofl,w
  4686  0030' 008F'              	movwf	___xxtofl@exp
  4687  0031'                    l2362:	
  4688  0031' 30FE               	movlw	254
  4689  0032' 0513'              	andwf	___xxtofl@arg+3,w
  4690  0033' 1903               	btfsc	3,2
  4691  0034' 2800'              	goto	l737
  4692  0035' 3001               	movlw	1
  4693  0036' 008A'              	movwf	??___xxtofl
  4694  0037' 080A'              	movf	??___xxtofl,w
  4695  0038' 078F'              	addwf	___xxtofl@exp,f
  4696  0039' 3001               	movlw	1
  4697  003A'                    u2755:	
  4698  003A' 3693'              	lsrf	___xxtofl@arg+3,f
  4699  003B' 0C92'              	rrf	___xxtofl@arg+2,f
  4700  003C' 0C91'              	rrf	___xxtofl@arg+1,f
  4701  003D' 0C90'              	rrf	___xxtofl@arg,f
  4702  003E' 0B89               	decfsz	9,f
  4703  003F' 2800'              	goto	u2755
  4704  0040' 2800'              	goto	l2362
  4705  0041'                    l2364:	
  4706  0041' 3001               	movlw	1
  4707  0042' 008A'              	movwf	??___xxtofl
  4708  0043' 080A'              	movf	??___xxtofl,w
  4709  0044' 078F'              	addwf	___xxtofl@exp,f
  4710  0045' 3001               	movlw	1
  4711  0046' 0790'              	addwf	___xxtofl@arg,f
  4712  0047' 3000               	movlw	0
  4713  0048' 3D91'              	addwfc	___xxtofl@arg+1,f
  4714  0049' 3000               	movlw	0
  4715  004A' 3D92'              	addwfc	___xxtofl@arg+2,f
  4716  004B' 3000               	movlw	0
  4717  004C' 3D93'              	addwfc	___xxtofl@arg+3,f
  4718  004D' 3001               	movlw	1
  4719  004E'                    u2775:	
  4720  004E' 3693'              	lsrf	___xxtofl@arg+3,f
  4721  004F' 0C92'              	rrf	___xxtofl@arg+2,f
  4722  0050' 0C91'              	rrf	___xxtofl@arg+1,f
  4723  0051' 0C90'              	rrf	___xxtofl@arg,f
  4724  0052' 0B89               	decfsz	9,f
  4725  0053' 2800'              	goto	u2775
  4726  0054'                    l737:	
  4727  0054' 30FF               	movlw	255
  4728  0055' 0513'              	andwf	___xxtofl@arg+3,w
  4729  0056' 1903               	btfsc	3,2
  4730  0057' 2800'              	goto	l2372
  4731  0058' 2800'              	goto	l2364
  4732  0059'                    l2370:	
  4733  0059' 3001               	movlw	1
  4734  005A' 028F'              	subwf	___xxtofl@exp,f
  4735  005B' 3001               	movlw	1
  4736  005C'                    u2795:	
  4737  005C' 3590'              	lslf	___xxtofl@arg,f
  4738  005D' 0D91'              	rlf	___xxtofl@arg+1,f
  4739  005E' 0D92'              	rlf	___xxtofl@arg+2,f
  4740  005F' 0D93'              	rlf	___xxtofl@arg+3,f
  4741  0060' 0B89               	decfsz	9,f
  4742  0061' 2800'              	goto	u2795
  4743  0062'                    l2372:	
  4744  0062' 1B92'              	btfsc	___xxtofl@arg+2,7
  4745  0063' 2800'              	goto	l744
  4746  0064' 3002               	movlw	2
  4747  0065' 020F'              	subwf	___xxtofl@exp,w
  4748  0066' 1803               	skipnc
  4749  0067' 2800'              	goto	l2370
  4750  0068'                    l744:	
  4751  0068' 180F'              	btfsc	___xxtofl@exp,0
  4752  0069' 2800'              	goto	l745
  4753  006A' 30FF               	movlw	255
  4754  006B' 0590'              	andwf	___xxtofl@arg,f
  4755  006C' 30FF               	movlw	255
  4756  006D' 0591'              	andwf	___xxtofl@arg+1,f
  4757  006E' 307F               	movlw	127
  4758  006F' 0592'              	andwf	___xxtofl@arg+2,f
  4759  0070' 30FF               	movlw	255
  4760  0071' 0593'              	andwf	___xxtofl@arg+3,f
  4761  0072'                    l745:	
  4762  0072' 1003               	clrc
  4763  0073' 0C8F'              	rrf	___xxtofl@exp,f
  4764  0074' 080F'              	movf	___xxtofl@exp,w
  4765  0075' 008A'              	movwf	??___xxtofl
  4766  0076' 018B'              	clrf	??___xxtofl+1
  4767  0077' 018C'              	clrf	??___xxtofl+2
  4768  0078' 018D'              	clrf	??___xxtofl+3
  4769  0079' 3018               	movlw	24
  4770  007A'                    u2835:	
  4771  007A' 358A'              	lslf	??___xxtofl,f
  4772  007B' 0D8B'              	rlf	??___xxtofl+1,f
  4773  007C' 0D8C'              	rlf	??___xxtofl+2,f
  4774  007D' 0D8D'              	rlf	??___xxtofl+3,f
  4775  007E' 0B89               	decfsz	9,f
  4776  007F' 2800'              	goto	u2835
  4777  0080' 080A'              	movf	??___xxtofl,w
  4778  0081' 0490'              	iorwf	___xxtofl@arg,f
  4779  0082' 080B'              	movf	??___xxtofl+1,w
  4780  0083' 0491'              	iorwf	___xxtofl@arg+1,f
  4781  0084' 080C'              	movf	??___xxtofl+2,w
  4782  0085' 0492'              	iorwf	___xxtofl@arg+2,f
  4783  0086' 080D'              	movf	??___xxtofl+3,w
  4784  0087' 0493'              	iorwf	___xxtofl@arg+3,f
  4785  0088' 080E'              	movf	___xxtofl@sign,w
  4786  0089' 1D03               	btfss	3,2
  4787  008A' 1F89'              	btfss	___xxtofl@val+3,7
  4788  008B' 2800'              	goto	l2386
  4789  008C' 1793'              	bsf	___xxtofl@arg+3,7
  4790  008D'                    l2386:	
  4791  008D' 0813'              	movf	___xxtofl@arg+3,w
  4792  008E' 0089'              	movwf	?___xxtofl+3
  4793  008F' 0812'              	movf	___xxtofl@arg+2,w
  4794  0090' 0088'              	movwf	?___xxtofl+2
  4795  0091' 0811'              	movf	___xxtofl@arg+1,w
  4796  0092' 0087'              	movwf	?___xxtofl+1
  4797  0093' 0810'              	movf	___xxtofl@arg,w
  4798  0094' 0086'              	movwf	?___xxtofl
  4799  0095' 0008               	return
  4800  0096'                    __end_of___xxtofl:	
  4801                           
  4802                           	psect	text11
  4803  0000'                    __ptext11:	
  4804 ;; *************** function ___fltol *****************
  4805 ;; Defined at:
  4806 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  f1              4    2[BANK0 ] unsigned char 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  exp1            1   12[BANK0 ] unsigned char 
  4811 ;;  sign1           1   11[BANK0 ] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  4    2[BANK0 ] long 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4821 ;;      Params:         0       4       0       0
  4822 ;;      Locals:         0       2       0       0
  4823 ;;      Temps:          0       5       0       0
  4824 ;;      Totals:         0      11       0       0
  4825 ;;Total ram usage:       11 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    2
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_calculate_pidA
  4832 ;;		_calculate_pidM
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           
  4837                           ;psect for function ___fltol
  4838  0000'                    ___fltol:	
  4839                           
  4840                           ;incstack = 0
  4841                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4842  0000' 0020               	movlb	0	; select bank0
  4843  0001' 0802'              	movf	___fltol@f1,w
  4844  0002' 0086'              	movwf	??___fltol
  4845  0003' 0803'              	movf	___fltol@f1+1,w
  4846  0004' 0087'              	movwf	??___fltol+1
  4847  0005' 0804'              	movf	___fltol@f1+2,w
  4848  0006' 0088'              	movwf	??___fltol+2
  4849  0007' 0805'              	movf	___fltol@f1+3,w
  4850  0008' 0089'              	movwf	??___fltol+3
  4851  0009' 1003               	clrc
  4852  000A' 0D08'              	rlf	??___fltol+2,w
  4853  000B' 0D09'              	rlf	??___fltol+3,w
  4854  000C' 008A'              	movwf	??___fltol+4
  4855  000D' 080A'              	movf	??___fltol+4,w
  4856  000E' 008C'              	movwf	___fltol@exp1
  4857  000F' 080C'              	movf	___fltol@exp1,w
  4858  0010' 1D03               	btfss	3,2
  4859  0011' 2800'              	goto	l1982
  4860  0012' 3000               	movlw	0
  4861  0013' 0085'              	movwf	?___fltol+3
  4862  0014' 3000               	movlw	0
  4863  0015' 0084'              	movwf	?___fltol+2
  4864  0016' 3000               	movlw	0
  4865  0017' 0083'              	movwf	?___fltol+1
  4866  0018' 3000               	movlw	0
  4867  0019' 0082'              	movwf	?___fltol
  4868  001A' 0008               	return
  4869  001B'                    l1982:	
  4870  001B' 0802'              	movf	___fltol@f1,w
  4871  001C' 0086'              	movwf	??___fltol
  4872  001D' 0803'              	movf	___fltol@f1+1,w
  4873  001E' 0087'              	movwf	??___fltol+1
  4874  001F' 0804'              	movf	___fltol@f1+2,w
  4875  0020' 0088'              	movwf	??___fltol+2
  4876  0021' 0805'              	movf	___fltol@f1+3,w
  4877  0022' 0089'              	movwf	??___fltol+3
  4878  0023' 301F               	movlw	31
  4879  0024'                    u1945:	
  4880  0024' 3689'              	lsrf	??___fltol+3,f
  4881  0025' 0C88'              	rrf	??___fltol+2,f
  4882  0026' 0C87'              	rrf	??___fltol+1,f
  4883  0027' 0C86'              	rrf	??___fltol,f
  4884  0028' 0B89               	decfsz	9,f
  4885  0029' 2800'              	goto	u1945
  4886  002A' 0806'              	movf	??___fltol,w
  4887  002B' 008A'              	movwf	??___fltol+4
  4888  002C' 080A'              	movf	??___fltol+4,w
  4889  002D' 008B'              	movwf	___fltol@sign1
  4890  002E' 1784'              	bsf	___fltol@f1+2,7
  4891  002F' 30FF               	movlw	255
  4892  0030' 0582'              	andwf	___fltol@f1,f
  4893  0031' 30FF               	movlw	255
  4894  0032' 0583'              	andwf	___fltol@f1+1,f
  4895  0033' 30FF               	movlw	255
  4896  0034' 0584'              	andwf	___fltol@f1+2,f
  4897  0035' 3000               	movlw	0
  4898  0036' 0585'              	andwf	___fltol@f1+3,f
  4899  0037' 3096               	movlw	150
  4900  0038' 028C'              	subwf	___fltol@exp1,f
  4901  0039' 1F8C'              	btfss	___fltol@exp1,7
  4902  003A' 2800'              	goto	l2000
  4903  003B' 080C'              	movf	___fltol@exp1,w
  4904  003C' 3A80               	xorlw	128
  4905  003D' 3E97               	addlw	151
  4906  003E' 1803               	skipnc
  4907  003F' 2800'              	goto	l1998
  4908  0040' 3000               	movlw	0
  4909  0041' 0085'              	movwf	?___fltol+3
  4910  0042' 3000               	movlw	0
  4911  0043' 0084'              	movwf	?___fltol+2
  4912  0044' 3000               	movlw	0
  4913  0045' 0083'              	movwf	?___fltol+1
  4914  0046' 3000               	movlw	0
  4915  0047' 0082'              	movwf	?___fltol
  4916  0048' 0008               	return
  4917  0049'                    l1998:	
  4918  0049' 3001               	movlw	1
  4919  004A'                    u1975:	
  4920  004A' 3685'              	lsrf	___fltol@f1+3,f
  4921  004B' 0C84'              	rrf	___fltol@f1+2,f
  4922  004C' 0C83'              	rrf	___fltol@f1+1,f
  4923  004D' 0C82'              	rrf	___fltol@f1,f
  4924  004E' 0B89               	decfsz	9,f
  4925  004F' 2800'              	goto	u1975
  4926  0050' 3001               	movlw	1
  4927  0051' 0086'              	movwf	??___fltol
  4928  0052' 0806'              	movf	??___fltol,w
  4929  0053' 078C'              	addwf	___fltol@exp1,f
  4930  0054' 1903               	btfsc	3,2
  4931  0055' 2800'              	goto	l2008
  4932  0056' 2800'              	goto	l1998
  4933  0057'                    l2000:	
  4934  0057' 3020               	movlw	32
  4935  0058' 020C'              	subwf	___fltol@exp1,w
  4936  0059' 1C03               	skipc
  4937  005A' 2800'              	goto	l516
  4938  005B' 3000               	movlw	0
  4939  005C' 0085'              	movwf	?___fltol+3
  4940  005D' 3000               	movlw	0
  4941  005E' 0084'              	movwf	?___fltol+2
  4942  005F' 3000               	movlw	0
  4943  0060' 0083'              	movwf	?___fltol+1
  4944  0061' 3000               	movlw	0
  4945  0062' 0082'              	movwf	?___fltol
  4946  0063' 0008               	return
  4947  0064'                    l2006:	
  4948  0064' 3001               	movlw	1
  4949  0065'                    u2005:	
  4950  0065' 3582'              	lslf	___fltol@f1,f
  4951  0066' 0D83'              	rlf	___fltol@f1+1,f
  4952  0067' 0D84'              	rlf	___fltol@f1+2,f
  4953  0068' 0D85'              	rlf	___fltol@f1+3,f
  4954  0069' 0B89               	decfsz	9,f
  4955  006A' 2800'              	goto	u2005
  4956  006B' 3001               	movlw	1
  4957  006C' 028C'              	subwf	___fltol@exp1,f
  4958  006D'                    l516:	
  4959  006D' 080C'              	movf	___fltol@exp1,w
  4960  006E' 1D03               	btfss	3,2
  4961  006F' 2800'              	goto	l2006
  4962  0070'                    l2008:	
  4963  0070' 080B'              	movf	___fltol@sign1,w
  4964  0071' 1903               	btfsc	3,2
  4965  0072' 0008               	return
  4966  0073' 0982'              	comf	___fltol@f1,f
  4967  0074' 0983'              	comf	___fltol@f1+1,f
  4968  0075' 0984'              	comf	___fltol@f1+2,f
  4969  0076' 0985'              	comf	___fltol@f1+3,f
  4970  0077' 0A82'              	incf	___fltol@f1,f
  4971  0078' 1903               	skipnz
  4972  0079' 0A83'              	incf	___fltol@f1+1,f
  4973  007A' 1903               	skipnz
  4974  007B' 0A84'              	incf	___fltol@f1+2,f
  4975  007C' 1903               	skipnz
  4976  007D' 0A85'              	incf	___fltol@f1+3,f
  4977  007E' 0008               	return
  4978  007F'                    __end_of___fltol:	
  4979                           
  4980                           	psect	text12
  4981  0000'                    __ptext12:	
  4982 ;; *************** function ___flneg *****************
  4983 ;; Defined at:
  4984 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  f1              4    2[BANK0 ] long 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  4    2[BANK0 ] long 
  4991 ;; Registers used:
  4992 ;;		wreg
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4998 ;;      Params:         0       4       0       0
  4999 ;;      Locals:         0       0       0       0
  5000 ;;      Temps:          0       0       0       0
  5001 ;;      Totals:         0       4       0       0
  5002 ;;Total ram usage:        4 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    2
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_calculate_pidA
  5009 ;;		_calculate_pidM
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function ___flneg
  5015  0000'                    ___flneg:	
  5016                           
  5017                           ;incstack = 0
  5018                           ; Regs used in ___flneg: [wreg]
  5019  0000' 0020               	movlb	0	; select bank0
  5020  0001' 0805'              	movf	___flneg@f1+3,w
  5021  0002' 0404'              	iorwf	___flneg@f1+2,w
  5022  0003' 0403'              	iorwf	___flneg@f1+1,w
  5023  0004' 0402'              	iorwf	___flneg@f1,w
  5024  0005' 1903               	skipnz
  5025  0006' 0008               	return
  5026  0007' 3080               	movlw	128
  5027  0008' 0685'              	xorwf	___flneg@f1+3,f
  5028  0009' 0008               	return
  5029  000A'                    __end_of___flneg:	
  5030                           
  5031                           	psect	text13
  5032  0000'                    __ptext13:	
  5033 ;; *************** function ___flmul *****************
  5034 ;; Defined at:
  5035 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  b               4   11[BANK0 ] long 
  5038 ;;  a               4   15[BANK0 ] long 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  prod            4   31[BANK0 ] struct .
  5041 ;;  grs             4   25[BANK0 ] unsigned long 
  5042 ;;  temp            2   35[BANK0 ] struct .
  5043 ;;  bexp            1   30[BANK0 ] unsigned char 
  5044 ;;  aexp            1   29[BANK0 ] unsigned char 
  5045 ;;  sign            1   24[BANK0 ] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  4   11[BANK0 ] unsigned char 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5055 ;;      Params:         0       8       0       0
  5056 ;;      Locals:         0      13       0       0
  5057 ;;      Temps:          0       5       0       0
  5058 ;;      Totals:         0      26       0       0
  5059 ;;Total ram usage:       26 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    3
  5062 ;; This function calls:
  5063 ;;		__Umul8_16
  5064 ;; This function is called by:
  5065 ;;		_calculate_pidA
  5066 ;;		_calculate_pidM
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function ___flmul
  5072  0000'                    ___flmul:	
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5076  0000' 0020               	movlb	0	; select bank0
  5077  0001' 080E'              	movf	___flmul@b+3,w
  5078  0002' 3980               	andlw	128
  5079  0003' 0093'              	movwf	??___flmul
  5080  0004' 0813'              	movf	??___flmul,w
  5081  0005' 0098'              	movwf	___flmul@sign
  5082  0006' 350E'              	lslf	___flmul@b+3,w
  5083  0007' 0093'              	movwf	??___flmul
  5084  0008' 0813'              	movf	??___flmul,w
  5085  0009' 009E'              	movwf	___flmul@bexp
  5086  000A' 1B8D'              	btfsc	___flmul@b+2,7
  5087  000B' 141E'              	bsf	___flmul@bexp,0
  5088  000C' 081E'              	movf	___flmul@bexp,w
  5089  000D' 1903               	btfsc	3,2
  5090  000E' 2800'              	goto	l2222
  5091  000F' 0A1E'              	incf	___flmul@bexp,w
  5092  0010' 1D03               	btfss	3,2
  5093  0011' 2800'              	goto	l2220
  5094  0012' 3000               	movlw	0
  5095  0013' 008E'              	movwf	___flmul@b+3
  5096  0014' 3000               	movlw	0
  5097  0015' 008D'              	movwf	___flmul@b+2
  5098  0016' 3000               	movlw	0
  5099  0017' 008C'              	movwf	___flmul@b+1
  5100  0018' 3000               	movlw	0
  5101  0019' 008B'              	movwf	___flmul@b
  5102  001A'                    l2220:	
  5103  001A' 178D'              	bsf	___flmul@b+2,7
  5104  001B' 2800'              	goto	l2224
  5105  001C'                    l2222:	
  5106  001C' 3000               	movlw	0
  5107  001D' 008E'              	movwf	___flmul@b+3
  5108  001E' 3000               	movlw	0
  5109  001F' 008D'              	movwf	___flmul@b+2
  5110  0020' 3000               	movlw	0
  5111  0021' 008C'              	movwf	___flmul@b+1
  5112  0022' 3000               	movlw	0
  5113  0023' 008B'              	movwf	___flmul@b
  5114  0024'                    l2224:	
  5115  0024' 0812'              	movf	___flmul@a+3,w
  5116  0025' 3980               	andlw	128
  5117  0026' 0093'              	movwf	??___flmul
  5118  0027' 0813'              	movf	??___flmul,w
  5119  0028' 0698'              	xorwf	___flmul@sign,f
  5120  0029' 3512'              	lslf	___flmul@a+3,w
  5121  002A' 0093'              	movwf	??___flmul
  5122  002B' 0813'              	movf	??___flmul,w
  5123  002C' 009D'              	movwf	___flmul@aexp
  5124  002D' 1B91'              	btfsc	___flmul@a+2,7
  5125  002E' 141D'              	bsf	___flmul@aexp,0
  5126  002F' 081D'              	movf	___flmul@aexp,w
  5127  0030' 1903               	btfsc	3,2
  5128  0031' 2800'              	goto	l2240
  5129  0032' 0A1D'              	incf	___flmul@aexp,w
  5130  0033' 1D03               	btfss	3,2
  5131  0034' 2800'              	goto	l2238
  5132  0035' 3000               	movlw	0
  5133  0036' 0092'              	movwf	___flmul@a+3
  5134  0037' 3000               	movlw	0
  5135  0038' 0091'              	movwf	___flmul@a+2
  5136  0039' 3000               	movlw	0
  5137  003A' 0090'              	movwf	___flmul@a+1
  5138  003B' 3000               	movlw	0
  5139  003C' 008F'              	movwf	___flmul@a
  5140  003D'                    l2238:	
  5141  003D' 1791'              	bsf	___flmul@a+2,7
  5142  003E' 2800'              	goto	l2242
  5143  003F'                    l2240:	
  5144  003F' 3000               	movlw	0
  5145  0040' 0092'              	movwf	___flmul@a+3
  5146  0041' 3000               	movlw	0
  5147  0042' 0091'              	movwf	___flmul@a+2
  5148  0043' 3000               	movlw	0
  5149  0044' 0090'              	movwf	___flmul@a+1
  5150  0045' 3000               	movlw	0
  5151  0046' 008F'              	movwf	___flmul@a
  5152  0047'                    l2242:	
  5153  0047' 081D'              	movf	___flmul@aexp,w
  5154  0048' 1D03               	btfss	3,2
  5155  0049' 081E'              	movf	___flmul@bexp,w
  5156  004A' 1D03               	btfss	3,2
  5157  004B' 2800'              	goto	l2250
  5158  004C' 3000               	movlw	0
  5159  004D' 008E'              	movwf	?___flmul+3
  5160  004E' 3000               	movlw	0
  5161  004F' 008D'              	movwf	?___flmul+2
  5162  0050' 3000               	movlw	0
  5163  0051' 008C'              	movwf	?___flmul+1
  5164  0052' 3000               	movlw	0
  5165  0053' 008B'              	movwf	?___flmul
  5166  0054' 0008               	return
  5167  0055'                    l2250:	
  5168  0055' 080B'              	movf	___flmul@b,w
  5169  0056' 0093'              	movwf	??___flmul
  5170  0057' 0813'              	movf	??___flmul,w
  5171  0058' 0082'              	movwf	__Umul8_16@multiplicand
  5172  0059' 0811'              	movf	___flmul@a+2,w
  5173  005A' 3180' 2000' 3180'  	fcall	__Umul8_16
  5174  005D' 0020               	movlb	0	; select bank0
  5175  005E' 0803'              	movf	?__Umul8_16+1,w
  5176  005F' 00A4'              	movwf	___flmul@temp+1
  5177  0060' 0802'              	movf	?__Umul8_16,w
  5178  0061' 00A3'              	movwf	___flmul@temp
  5179  0062' 0823'              	movf	___flmul@temp,w
  5180  0063' 0093'              	movwf	??___flmul
  5181  0064' 0194'              	clrf	??___flmul+1
  5182  0065' 0195'              	clrf	??___flmul+2
  5183  0066' 0196'              	clrf	??___flmul+3
  5184  0067' 0816'              	movf	??___flmul+3,w
  5185  0068' 009C'              	movwf	___flmul@grs+3
  5186  0069' 0815'              	movf	??___flmul+2,w
  5187  006A' 009B'              	movwf	___flmul@grs+2
  5188  006B' 0814'              	movf	??___flmul+1,w
  5189  006C' 009A'              	movwf	___flmul@grs+1
  5190  006D' 0813'              	movf	??___flmul,w
  5191  006E' 0099'              	movwf	___flmul@grs
  5192  006F' 0824'              	movf	___flmul@temp+1,w
  5193  0070' 0093'              	movwf	??___flmul
  5194  0071' 0194'              	clrf	??___flmul+1
  5195  0072' 0195'              	clrf	??___flmul+2
  5196  0073' 0196'              	clrf	??___flmul+3
  5197  0074' 0816'              	movf	??___flmul+3,w
  5198  0075' 00A2'              	movwf	___flmul@prod+3
  5199  0076' 0815'              	movf	??___flmul+2,w
  5200  0077' 00A1'              	movwf	___flmul@prod+2
  5201  0078' 0814'              	movf	??___flmul+1,w
  5202  0079' 00A0'              	movwf	___flmul@prod+1
  5203  007A' 0813'              	movf	??___flmul,w
  5204  007B' 009F'              	movwf	___flmul@prod
  5205  007C' 080C'              	movf	___flmul@b+1,w
  5206  007D' 0093'              	movwf	??___flmul
  5207  007E' 0813'              	movf	??___flmul,w
  5208  007F' 0082'              	movwf	__Umul8_16@multiplicand
  5209  0080' 0810'              	movf	___flmul@a+1,w
  5210  0081' 3180' 2000' 3180'  	fcall	__Umul8_16
  5211  0084' 0020               	movlb	0	; select bank0
  5212  0085' 0803'              	movf	?__Umul8_16+1,w
  5213  0086' 00A4'              	movwf	___flmul@temp+1
  5214  0087' 0802'              	movf	?__Umul8_16,w
  5215  0088' 00A3'              	movwf	___flmul@temp
  5216  0089' 0823'              	movf	___flmul@temp,w
  5217  008A' 0093'              	movwf	??___flmul
  5218  008B' 0194'              	clrf	??___flmul+1
  5219  008C' 0195'              	clrf	??___flmul+2
  5220  008D' 0196'              	clrf	??___flmul+3
  5221  008E' 0813'              	movf	??___flmul,w
  5222  008F' 0799'              	addwf	___flmul@grs,f
  5223  0090' 0814'              	movf	??___flmul+1,w
  5224  0091' 3D9A'              	addwfc	___flmul@grs+1,f
  5225  0092' 0815'              	movf	??___flmul+2,w
  5226  0093' 3D9B'              	addwfc	___flmul@grs+2,f
  5227  0094' 0816'              	movf	??___flmul+3,w
  5228  0095' 3D9C'              	addwfc	___flmul@grs+3,f
  5229  0096' 0824'              	movf	___flmul@temp+1,w
  5230  0097' 0093'              	movwf	??___flmul
  5231  0098' 0194'              	clrf	??___flmul+1
  5232  0099' 0195'              	clrf	??___flmul+2
  5233  009A' 0196'              	clrf	??___flmul+3
  5234  009B' 0813'              	movf	??___flmul,w
  5235  009C' 079F'              	addwf	___flmul@prod,f
  5236  009D' 0814'              	movf	??___flmul+1,w
  5237  009E' 3DA0'              	addwfc	___flmul@prod+1,f
  5238  009F' 0815'              	movf	??___flmul+2,w
  5239  00A0' 3DA1'              	addwfc	___flmul@prod+2,f
  5240  00A1' 0816'              	movf	??___flmul+3,w
  5241  00A2' 3DA2'              	addwfc	___flmul@prod+3,f
  5242  00A3' 080D'              	movf	___flmul@b+2,w
  5243  00A4' 0093'              	movwf	??___flmul
  5244  00A5' 0813'              	movf	??___flmul,w
  5245  00A6' 0082'              	movwf	__Umul8_16@multiplicand
  5246  00A7' 080F'              	movf	___flmul@a,w
  5247  00A8' 3180' 2000' 3180'  	fcall	__Umul8_16
  5248  00AB' 0020               	movlb	0	; select bank0
  5249  00AC' 0803'              	movf	?__Umul8_16+1,w
  5250  00AD' 00A4'              	movwf	___flmul@temp+1
  5251  00AE' 0802'              	movf	?__Umul8_16,w
  5252  00AF' 00A3'              	movwf	___flmul@temp
  5253  00B0' 0823'              	movf	___flmul@temp,w
  5254  00B1' 0093'              	movwf	??___flmul
  5255  00B2' 0194'              	clrf	??___flmul+1
  5256  00B3' 0195'              	clrf	??___flmul+2
  5257  00B4' 0196'              	clrf	??___flmul+3
  5258  00B5' 0813'              	movf	??___flmul,w
  5259  00B6' 0799'              	addwf	___flmul@grs,f
  5260  00B7' 0814'              	movf	??___flmul+1,w
  5261  00B8' 3D9A'              	addwfc	___flmul@grs+1,f
  5262  00B9' 0815'              	movf	??___flmul+2,w
  5263  00BA' 3D9B'              	addwfc	___flmul@grs+2,f
  5264  00BB' 0816'              	movf	??___flmul+3,w
  5265  00BC' 3D9C'              	addwfc	___flmul@grs+3,f
  5266  00BD' 0824'              	movf	___flmul@temp+1,w
  5267  00BE' 0093'              	movwf	??___flmul
  5268  00BF' 0194'              	clrf	??___flmul+1
  5269  00C0' 0195'              	clrf	??___flmul+2
  5270  00C1' 0196'              	clrf	??___flmul+3
  5271  00C2' 0813'              	movf	??___flmul,w
  5272  00C3' 079F'              	addwf	___flmul@prod,f
  5273  00C4' 0814'              	movf	??___flmul+1,w
  5274  00C5' 3DA0'              	addwfc	___flmul@prod+1,f
  5275  00C6' 0815'              	movf	??___flmul+2,w
  5276  00C7' 3DA1'              	addwfc	___flmul@prod+2,f
  5277  00C8' 0816'              	movf	??___flmul+3,w
  5278  00C9' 3DA2'              	addwfc	___flmul@prod+3,f
  5279  00CA' 3008               	movlw	8
  5280  00CB'                    u2545:	
  5281  00CB' 3599'              	lslf	___flmul@grs,f
  5282  00CC' 0D9A'              	rlf	___flmul@grs+1,f
  5283  00CD' 0D9B'              	rlf	___flmul@grs+2,f
  5284  00CE' 0D9C'              	rlf	___flmul@grs+3,f
  5285  00CF' 0B89               	decfsz	9,f
  5286  00D0' 2800'              	goto	u2545
  5287  00D1' 080C'              	movf	___flmul@b+1,w
  5288  00D2' 0093'              	movwf	??___flmul
  5289  00D3' 0813'              	movf	??___flmul,w
  5290  00D4' 0082'              	movwf	__Umul8_16@multiplicand
  5291  00D5' 080F'              	movf	___flmul@a,w
  5292  00D6' 3180' 2000' 3180'  	fcall	__Umul8_16
  5293  00D9' 0020               	movlb	0	; select bank0
  5294  00DA' 0803'              	movf	?__Umul8_16+1,w
  5295  00DB' 00A4'              	movwf	___flmul@temp+1
  5296  00DC' 0802'              	movf	?__Umul8_16,w
  5297  00DD' 00A3'              	movwf	___flmul@temp
  5298  00DE' 0823'              	movf	___flmul@temp,w
  5299  00DF' 0799'              	addwf	___flmul@grs,f
  5300  00E0' 0824'              	movf	___flmul@temp+1,w
  5301  00E1' 3D9A'              	addwfc	___flmul@grs+1,f
  5302  00E2' 3000               	movlw	0
  5303  00E3' 3D9B'              	addwfc	___flmul@grs+2,f
  5304  00E4' 3D9C'              	addwfc	___flmul@grs+3,f
  5305  00E5' 080B'              	movf	___flmul@b,w
  5306  00E6' 0093'              	movwf	??___flmul
  5307  00E7' 0813'              	movf	??___flmul,w
  5308  00E8' 0082'              	movwf	__Umul8_16@multiplicand
  5309  00E9' 0810'              	movf	___flmul@a+1,w
  5310  00EA' 3180' 2000' 3180'  	fcall	__Umul8_16
  5311  00ED' 0020               	movlb	0	; select bank0
  5312  00EE' 0803'              	movf	?__Umul8_16+1,w
  5313  00EF' 00A4'              	movwf	___flmul@temp+1
  5314  00F0' 0802'              	movf	?__Umul8_16,w
  5315  00F1' 00A3'              	movwf	___flmul@temp
  5316  00F2' 0823'              	movf	___flmul@temp,w
  5317  00F3' 0799'              	addwf	___flmul@grs,f
  5318  00F4' 0824'              	movf	___flmul@temp+1,w
  5319  00F5' 3D9A'              	addwfc	___flmul@grs+1,f
  5320  00F6' 3000               	movlw	0
  5321  00F7' 3D9B'              	addwfc	___flmul@grs+2,f
  5322  00F8' 3D9C'              	addwfc	___flmul@grs+3,f
  5323  00F9' 3008               	movlw	8
  5324  00FA'                    u2555:	
  5325  00FA' 3599'              	lslf	___flmul@grs,f
  5326  00FB' 0D9A'              	rlf	___flmul@grs+1,f
  5327  00FC' 0D9B'              	rlf	___flmul@grs+2,f
  5328  00FD' 0D9C'              	rlf	___flmul@grs+3,f
  5329  00FE' 0B89               	decfsz	9,f
  5330  00FF' 2800'              	goto	u2555
  5331  0100' 080B'              	movf	___flmul@b,w
  5332  0101' 0093'              	movwf	??___flmul
  5333  0102' 0813'              	movf	??___flmul,w
  5334  0103' 0082'              	movwf	__Umul8_16@multiplicand
  5335  0104' 080F'              	movf	___flmul@a,w
  5336  0105' 3180' 2000' 3180'  	fcall	__Umul8_16
  5337  0108' 0020               	movlb	0	; select bank0
  5338  0109' 0803'              	movf	?__Umul8_16+1,w
  5339  010A' 00A4'              	movwf	___flmul@temp+1
  5340  010B' 0802'              	movf	?__Umul8_16,w
  5341  010C' 00A3'              	movwf	___flmul@temp
  5342  010D' 0823'              	movf	___flmul@temp,w
  5343  010E' 0799'              	addwf	___flmul@grs,f
  5344  010F' 0824'              	movf	___flmul@temp+1,w
  5345  0110' 3D9A'              	addwfc	___flmul@grs+1,f
  5346  0111' 3000               	movlw	0
  5347  0112' 3D9B'              	addwfc	___flmul@grs+2,f
  5348  0113' 3D9C'              	addwfc	___flmul@grs+3,f
  5349  0114' 080C'              	movf	___flmul@b+1,w
  5350  0115' 0093'              	movwf	??___flmul
  5351  0116' 0813'              	movf	??___flmul,w
  5352  0117' 0082'              	movwf	__Umul8_16@multiplicand
  5353  0118' 0811'              	movf	___flmul@a+2,w
  5354  0119' 3180' 2000' 3180'  	fcall	__Umul8_16
  5355  011C' 0020               	movlb	0	; select bank0
  5356  011D' 0803'              	movf	?__Umul8_16+1,w
  5357  011E' 00A4'              	movwf	___flmul@temp+1
  5358  011F' 0802'              	movf	?__Umul8_16,w
  5359  0120' 00A3'              	movwf	___flmul@temp
  5360  0121' 0823'              	movf	___flmul@temp,w
  5361  0122' 079F'              	addwf	___flmul@prod,f
  5362  0123' 0824'              	movf	___flmul@temp+1,w
  5363  0124' 3DA0'              	addwfc	___flmul@prod+1,f
  5364  0125' 3000               	movlw	0
  5365  0126' 3DA1'              	addwfc	___flmul@prod+2,f
  5366  0127' 3DA2'              	addwfc	___flmul@prod+3,f
  5367  0128' 080D'              	movf	___flmul@b+2,w
  5368  0129' 0093'              	movwf	??___flmul
  5369  012A' 0813'              	movf	??___flmul,w
  5370  012B' 0082'              	movwf	__Umul8_16@multiplicand
  5371  012C' 0810'              	movf	___flmul@a+1,w
  5372  012D' 3180' 2000' 3180'  	fcall	__Umul8_16
  5373  0130' 0020               	movlb	0	; select bank0
  5374  0131' 0803'              	movf	?__Umul8_16+1,w
  5375  0132' 00A4'              	movwf	___flmul@temp+1
  5376  0133' 0802'              	movf	?__Umul8_16,w
  5377  0134' 00A3'              	movwf	___flmul@temp
  5378  0135' 0823'              	movf	___flmul@temp,w
  5379  0136' 079F'              	addwf	___flmul@prod,f
  5380  0137' 0824'              	movf	___flmul@temp+1,w
  5381  0138' 3DA0'              	addwfc	___flmul@prod+1,f
  5382  0139' 3000               	movlw	0
  5383  013A' 3DA1'              	addwfc	___flmul@prod+2,f
  5384  013B' 3DA2'              	addwfc	___flmul@prod+3,f
  5385  013C' 080D'              	movf	___flmul@b+2,w
  5386  013D' 0093'              	movwf	??___flmul
  5387  013E' 0813'              	movf	??___flmul,w
  5388  013F' 0082'              	movwf	__Umul8_16@multiplicand
  5389  0140' 0811'              	movf	___flmul@a+2,w
  5390  0141' 3180' 2000' 3180'  	fcall	__Umul8_16
  5391  0144' 0020               	movlb	0	; select bank0
  5392  0145' 0803'              	movf	?__Umul8_16+1,w
  5393  0146' 00A4'              	movwf	___flmul@temp+1
  5394  0147' 0802'              	movf	?__Umul8_16,w
  5395  0148' 00A3'              	movwf	___flmul@temp
  5396  0149' 0823'              	movf	___flmul@temp,w
  5397  014A' 0093'              	movwf	??___flmul
  5398  014B' 0824'              	movf	___flmul@temp+1,w
  5399  014C' 0094'              	movwf	??___flmul+1
  5400  014D' 0195'              	clrf	??___flmul+2
  5401  014E' 0196'              	clrf	??___flmul+3
  5402  014F' 3008               	movlw	8
  5403  0150'                    u2565:	
  5404  0150' 3593'              	lslf	??___flmul,f
  5405  0151' 0D94'              	rlf	??___flmul+1,f
  5406  0152' 0D95'              	rlf	??___flmul+2,f
  5407  0153' 0D96'              	rlf	??___flmul+3,f
  5408  0154' 0B89               	decfsz	9,f
  5409  0155' 2800'              	goto	u2565
  5410  0156' 0813'              	movf	??___flmul,w
  5411  0157' 079F'              	addwf	___flmul@prod,f
  5412  0158' 0814'              	movf	??___flmul+1,w
  5413  0159' 3DA0'              	addwfc	___flmul@prod+1,f
  5414  015A' 0815'              	movf	??___flmul+2,w
  5415  015B' 3DA1'              	addwfc	___flmul@prod+2,f
  5416  015C' 0816'              	movf	??___flmul+3,w
  5417  015D' 3DA2'              	addwfc	___flmul@prod+3,f
  5418  015E' 0819'              	movf	___flmul@grs,w
  5419  015F' 0093'              	movwf	??___flmul
  5420  0160' 081A'              	movf	___flmul@grs+1,w
  5421  0161' 0094'              	movwf	??___flmul+1
  5422  0162' 081B'              	movf	___flmul@grs+2,w
  5423  0163' 0095'              	movwf	??___flmul+2
  5424  0164' 081C'              	movf	___flmul@grs+3,w
  5425  0165' 0096'              	movwf	??___flmul+3
  5426  0166' 3018               	movlw	24
  5427  0167'                    u2575:	
  5428  0167' 3696'              	lsrf	??___flmul+3,f
  5429  0168' 0C95'              	rrf	??___flmul+2,f
  5430  0169' 0C94'              	rrf	??___flmul+1,f
  5431  016A' 0C93'              	rrf	??___flmul,f
  5432  016B' 0B89               	decfsz	9,f
  5433  016C' 2800'              	goto	u2575
  5434  016D' 0813'              	movf	??___flmul,w
  5435  016E' 079F'              	addwf	___flmul@prod,f
  5436  016F' 0814'              	movf	??___flmul+1,w
  5437  0170' 3DA0'              	addwfc	___flmul@prod+1,f
  5438  0171' 0815'              	movf	??___flmul+2,w
  5439  0172' 3DA1'              	addwfc	___flmul@prod+2,f
  5440  0173' 0816'              	movf	??___flmul+3,w
  5441  0174' 3DA2'              	addwfc	___flmul@prod+3,f
  5442  0175' 3008               	movlw	8
  5443  0176'                    u2585:	
  5444  0176' 3599'              	lslf	___flmul@grs,f
  5445  0177' 0D9A'              	rlf	___flmul@grs+1,f
  5446  0178' 0D9B'              	rlf	___flmul@grs+2,f
  5447  0179' 0D9C'              	rlf	___flmul@grs+3,f
  5448  017A' 0B89               	decfsz	9,f
  5449  017B' 2800'              	goto	u2585
  5450  017C' 081E'              	movf	___flmul@bexp,w
  5451  017D' 071D'              	addwf	___flmul@aexp,w
  5452  017E' 0093'              	movwf	??___flmul
  5453  017F' 0194'              	clrf	??___flmul+1
  5454  0180' 0D94'              	rlf	??___flmul+1,f
  5455  0181' 0813'              	movf	??___flmul,w
  5456  0182' 3E82               	addlw	130
  5457  0183' 00A3'              	movwf	___flmul@temp
  5458  0184' 30FF               	movlw	255
  5459  0185' 3D14'              	addwfc	??___flmul+1,w
  5460  0186' 00A4'              	movwf	___flmul@temp+1
  5461  0187'                    l2302:	
  5462  0187' 1BA1'              	btfsc	___flmul@prod+2,7
  5463  0188' 2800'              	goto	l2304
  5464  0189' 3001               	movlw	1
  5465  018A'                    u2595:	
  5466  018A' 359F'              	lslf	___flmul@prod,f
  5467  018B' 0DA0'              	rlf	___flmul@prod+1,f
  5468  018C' 0DA1'              	rlf	___flmul@prod+2,f
  5469  018D' 0DA2'              	rlf	___flmul@prod+3,f
  5470  018E' 0B89               	decfsz	9,f
  5471  018F' 2800'              	goto	u2595
  5472  0190' 1B9C'              	btfsc	___flmul@grs+3,7
  5473  0191' 141F'              	bsf	___flmul@prod,0
  5474  0192' 3001               	movlw	1
  5475  0193'                    u2615:	
  5476  0193' 3599'              	lslf	___flmul@grs,f
  5477  0194' 0D9A'              	rlf	___flmul@grs+1,f
  5478  0195' 0D9B'              	rlf	___flmul@grs+2,f
  5479  0196' 0D9C'              	rlf	___flmul@grs+3,f
  5480  0197' 0B89               	decfsz	9,f
  5481  0198' 2800'              	goto	u2615
  5482  0199' 30FF               	movlw	255
  5483  019A' 07A3'              	addwf	___flmul@temp,f
  5484  019B' 30FF               	movlw	255
  5485  019C' 3DA4'              	addwfc	___flmul@temp+1,f
  5486  019D' 2800'              	goto	l2302
  5487  019E'                    l2304:	
  5488  019E' 019D'              	clrf	___flmul@aexp
  5489  019F' 1F9C'              	btfss	___flmul@grs+3,7
  5490  01A0' 2800'              	goto	l2314
  5491  01A1' 30FF               	movlw	255
  5492  01A2' 0519'              	andwf	___flmul@grs,w
  5493  01A3' 0093'              	movwf	??___flmul
  5494  01A4' 30FF               	movlw	255
  5495  01A5' 051A'              	andwf	___flmul@grs+1,w
  5496  01A6' 0094'              	movwf	??___flmul+1
  5497  01A7' 30FF               	movlw	255
  5498  01A8' 051B'              	andwf	___flmul@grs+2,w
  5499  01A9' 0095'              	movwf	??___flmul+2
  5500  01AA' 307F               	movlw	127
  5501  01AB' 051C'              	andwf	___flmul@grs+3,w
  5502  01AC' 0096'              	movwf	??___flmul+3
  5503  01AD' 0816'              	movf	??___flmul+3,w
  5504  01AE' 0415'              	iorwf	??___flmul+2,w
  5505  01AF' 0414'              	iorwf	??___flmul+1,w
  5506  01B0' 0413'              	iorwf	??___flmul,w
  5507  01B1' 1D03               	btfss	3,2
  5508  01B2' 2800'              	goto	l2312
  5509  01B3' 1C1F'              	btfss	___flmul@prod,0
  5510  01B4' 2800'              	goto	l2314
  5511  01B5'                    l2312:	
  5512  01B5' 019D'              	clrf	___flmul@aexp
  5513  01B6' 0A9D'              	incf	___flmul@aexp,f
  5514  01B7'                    l2314:	
  5515  01B7' 081D'              	movf	___flmul@aexp,w
  5516  01B8' 1903               	btfsc	3,2
  5517  01B9' 2800'              	goto	l2324
  5518  01BA' 3001               	movlw	1
  5519  01BB' 079F'              	addwf	___flmul@prod,f
  5520  01BC' 3000               	movlw	0
  5521  01BD' 3DA0'              	addwfc	___flmul@prod+1,f
  5522  01BE' 3000               	movlw	0
  5523  01BF' 3DA1'              	addwfc	___flmul@prod+2,f
  5524  01C0' 3000               	movlw	0
  5525  01C1' 3DA2'              	addwfc	___flmul@prod+3,f
  5526  01C2' 1C22'              	btfss	___flmul@prod+3,0
  5527  01C3' 2800'              	goto	l2324
  5528  01C4' 081F'              	movf	___flmul@prod,w
  5529  01C5' 0093'              	movwf	??___flmul
  5530  01C6' 0820'              	movf	___flmul@prod+1,w
  5531  01C7' 0094'              	movwf	??___flmul+1
  5532  01C8' 0821'              	movf	___flmul@prod+2,w
  5533  01C9' 0095'              	movwf	??___flmul+2
  5534  01CA' 0822'              	movf	___flmul@prod+3,w
  5535  01CB' 0096'              	movwf	??___flmul+3
  5536  01CC' 3001               	movlw	1
  5537  01CD' 0097'              	movwf	??___flmul+4
  5538  01CE'                    u2685:	
  5539  01CE' 3796'              	asrf	??___flmul+3,f
  5540  01CF' 0C95'              	rrf	??___flmul+2,f
  5541  01D0' 0C94'              	rrf	??___flmul+1,f
  5542  01D1' 0C93'              	rrf	??___flmul,f
  5543  01D2' 0B97'              	decfsz	??___flmul+4,f
  5544  01D3' 2800'              	goto	u2685
  5545  01D4' 0816'              	movf	??___flmul+3,w
  5546  01D5' 00A2'              	movwf	___flmul@prod+3
  5547  01D6' 0815'              	movf	??___flmul+2,w
  5548  01D7' 00A1'              	movwf	___flmul@prod+2
  5549  01D8' 0814'              	movf	??___flmul+1,w
  5550  01D9' 00A0'              	movwf	___flmul@prod+1
  5551  01DA' 0813'              	movf	??___flmul,w
  5552  01DB' 009F'              	movwf	___flmul@prod
  5553  01DC' 3001               	movlw	1
  5554  01DD' 07A3'              	addwf	___flmul@temp,f
  5555  01DE' 3000               	movlw	0
  5556  01DF' 3DA4'              	addwfc	___flmul@temp+1,f
  5557  01E0'                    l2324:	
  5558  01E0' 0824'              	movf	___flmul@temp+1,w
  5559  01E1' 3A80               	xorlw	128
  5560  01E2' 0093'              	movwf	??___flmul
  5561  01E3' 3080               	movlw	128
  5562  01E4' 0213'              	subwf	??___flmul,w
  5563  01E5' 1D03               	skipz
  5564  01E6' 2800'              	goto	u2695
  5565  01E7' 30FF               	movlw	255
  5566  01E8' 0223'              	subwf	___flmul@temp,w
  5567  01E9'                    u2695:	
  5568  01E9' 1C03               	skipc
  5569  01EA' 2800'              	goto	l2328
  5570  01EB' 307F               	movlw	127
  5571  01EC' 0020               	movlb	0	; select bank0
  5572  01ED' 00A2'              	movwf	___flmul@prod+3
  5573  01EE' 3080               	movlw	128
  5574  01EF' 00A1'              	movwf	___flmul@prod+2
  5575  01F0' 3000               	movlw	0
  5576  01F1' 00A0'              	movwf	___flmul@prod+1
  5577  01F2' 3000               	movlw	0
  5578  01F3' 009F'              	movwf	___flmul@prod
  5579  01F4' 2800'              	goto	l724
  5580  01F5'                    l2328:	
  5581  01F5' 0020               	movlb	0	; select bank0
  5582  01F6' 0824'              	movf	___flmul@temp+1,w
  5583  01F7' 3A80               	xorlw	128
  5584  01F8' 0093'              	movwf	??___flmul
  5585  01F9' 3080               	movlw	128
  5586  01FA' 0213'              	subwf	??___flmul,w
  5587  01FB' 1D03               	skipz
  5588  01FC' 2800'              	goto	u2705
  5589  01FD' 3001               	movlw	1
  5590  01FE' 0223'              	subwf	___flmul@temp,w
  5591  01FF'                    u2705:	
  5592  01FF' 1803               	skipnc
  5593  0200' 2800'              	goto	l2334
  5594  0201' 3000               	movlw	0
  5595  0202' 0020               	movlb	0	; select bank0
  5596  0203' 00A2'              	movwf	___flmul@prod+3
  5597  0204' 3000               	movlw	0
  5598  0205' 00A1'              	movwf	___flmul@prod+2
  5599  0206' 3000               	movlw	0
  5600  0207' 00A0'              	movwf	___flmul@prod+1
  5601  0208' 3000               	movlw	0
  5602  0209' 009F'              	movwf	___flmul@prod
  5603  020A' 0198'              	clrf	___flmul@sign
  5604  020B' 2800'              	goto	l724
  5605  020C'                    l2334:	
  5606  020C' 0020               	movlb	0	; select bank0
  5607  020D' 0823'              	movf	___flmul@temp,w
  5608  020E' 0093'              	movwf	??___flmul
  5609  020F' 0813'              	movf	??___flmul,w
  5610  0210' 009E'              	movwf	___flmul@bexp
  5611  0211' 30FF               	movlw	255
  5612  0212' 059F'              	andwf	___flmul@prod,f
  5613  0213' 30FF               	movlw	255
  5614  0214' 05A0'              	andwf	___flmul@prod+1,f
  5615  0215' 307F               	movlw	127
  5616  0216' 05A1'              	andwf	___flmul@prod+2,f
  5617  0217' 3000               	movlw	0
  5618  0218' 05A2'              	andwf	___flmul@prod+3,f
  5619  0219' 181E'              	btfsc	___flmul@bexp,0
  5620  021A' 17A1'              	bsf	___flmul@prod+2,7
  5621  021B' 361E'              	lsrf	___flmul@bexp,w
  5622  021C' 0093'              	movwf	??___flmul
  5623  021D' 0813'              	movf	??___flmul,w
  5624  021E' 00A2'              	movwf	___flmul@prod+3
  5625  021F'                    l724:	
  5626  021F' 0818'              	movf	___flmul@sign,w
  5627  0220' 0093'              	movwf	??___flmul
  5628  0221' 0813'              	movf	??___flmul,w
  5629  0222' 04A2'              	iorwf	___flmul@prod+3,f
  5630  0223' 0822'              	movf	___flmul@prod+3,w
  5631  0224' 008E'              	movwf	?___flmul+3
  5632  0225' 0821'              	movf	___flmul@prod+2,w
  5633  0226' 008D'              	movwf	?___flmul+2
  5634  0227' 0820'              	movf	___flmul@prod+1,w
  5635  0228' 008C'              	movwf	?___flmul+1
  5636  0229' 081F'              	movf	___flmul@prod,w
  5637  022A' 008B'              	movwf	?___flmul
  5638  022B' 0008               	return
  5639  022C'                    __end_of___flmul:	
  5640                           
  5641                           	psect	text14
  5642  0000'                    __ptext14:	
  5643 ;; *************** function __Umul8_16 *****************
  5644 ;; Defined at:
  5645 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  multiplier      1    wreg     unsigned char 
  5648 ;;  multiplicand    1    2[BANK0 ] unsigned char 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  multiplier      1   10[BANK0 ] unsigned char 
  5651 ;;  word_mpld       2    8[BANK0 ] unsigned int 
  5652 ;;  product         2    6[BANK0 ] unsigned int 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  2    2[BANK0 ] unsigned int 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5662 ;;      Params:         0       2       0       0
  5663 ;;      Locals:         0       5       0       0
  5664 ;;      Temps:          0       2       0       0
  5665 ;;      Totals:         0       9       0       0
  5666 ;;Total ram usage:        9 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    2
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		___flmul
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function __Umul8_16
  5678  0000'                    __Umul8_16:	
  5679                           
  5680                           ;incstack = 0
  5681                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5682                           ;__Umul8_16@multiplier stored from wreg
  5683  0000' 0020               	movlb	0	; select bank0
  5684  0001' 008A'              	movwf	__Umul8_16@multiplier
  5685  0002' 0186'              	clrf	__Umul8_16@product
  5686  0003' 0187'              	clrf	__Umul8_16@product+1
  5687  0004' 0802'              	movf	__Umul8_16@multiplicand,w
  5688  0005' 0084'              	movwf	??__Umul8_16
  5689  0006' 0185'              	clrf	??__Umul8_16+1
  5690  0007' 0804'              	movf	??__Umul8_16,w
  5691  0008' 0088'              	movwf	__Umul8_16@word_mpld
  5692  0009' 0805'              	movf	??__Umul8_16+1,w
  5693  000A' 0089'              	movwf	__Umul8_16@word_mpld+1
  5694  000B'                    l1914:	
  5695  000B' 1C0A'              	btfss	__Umul8_16@multiplier,0
  5696  000C' 2800'              	goto	l754
  5697  000D' 0808'              	movf	__Umul8_16@word_mpld,w
  5698  000E' 0786'              	addwf	__Umul8_16@product,f
  5699  000F' 0809'              	movf	__Umul8_16@word_mpld+1,w
  5700  0010' 3D87'              	addwfc	__Umul8_16@product+1,f
  5701  0011'                    l754:	
  5702  0011' 3001               	movlw	1
  5703  0012'                    u1825:	
  5704  0012' 3588'              	lslf	__Umul8_16@word_mpld,f
  5705  0013' 0D89'              	rlf	__Umul8_16@word_mpld+1,f
  5706  0014' 0B89               	decfsz	9,f
  5707  0015' 2800'              	goto	u1825
  5708  0016' 1003               	clrc
  5709  0017' 0C8A'              	rrf	__Umul8_16@multiplier,f
  5710  0018' 080A'              	movf	__Umul8_16@multiplier,w
  5711  0019' 1D03               	btfss	3,2
  5712  001A' 2800'              	goto	l1914
  5713  001B' 0807'              	movf	__Umul8_16@product+1,w
  5714  001C' 0083'              	movwf	?__Umul8_16+1
  5715  001D' 0806'              	movf	__Umul8_16@product,w
  5716  001E' 0082'              	movwf	?__Umul8_16
  5717  001F' 0008               	return
  5718  0020'                    __end_of__Umul8_16:	
  5719                           
  5720                           	psect	text15
  5721  0000'                    __ptext15:	
  5722 ;; *************** function ___flge *****************
  5723 ;; Defined at:
  5724 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  ff1             4   20[BANK0 ] unsigned int 
  5727 ;;  ff2             4   24[BANK0 ] unsigned int 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;		None               void
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5739 ;;      Params:         0       8       0       0
  5740 ;;      Locals:         0       0       0       0
  5741 ;;      Temps:          0       8       0       0
  5742 ;;      Totals:         0      16       0       0
  5743 ;;Total ram usage:       16 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    2
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_calculate_pidA
  5750 ;;		_calculate_pidM
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           
  5755                           ;psect for function ___flge
  5756  0000'                    ___flge:	
  5757                           
  5758                           ;incstack = 0
  5759                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5760  0000' 3000               	movlw	0
  5761  0001' 0020               	movlb	0	; select bank0
  5762  0002' 0514'              	andwf	___flge@ff1,w
  5763  0003' 009C'              	movwf	??___flge
  5764  0004' 3000               	movlw	0
  5765  0005' 0515'              	andwf	___flge@ff1+1,w
  5766  0006' 009D'              	movwf	??___flge+1
  5767  0007' 3080               	movlw	128
  5768  0008' 0516'              	andwf	___flge@ff1+2,w
  5769  0009' 009E'              	movwf	??___flge+2
  5770  000A' 307F               	movlw	127
  5771  000B' 0517'              	andwf	___flge@ff1+3,w
  5772  000C' 009F'              	movwf	??___flge+3
  5773  000D' 081F'              	movf	??___flge+3,w
  5774  000E' 041E'              	iorwf	??___flge+2,w
  5775  000F' 041D'              	iorwf	??___flge+1,w
  5776  0010' 041C'              	iorwf	??___flge,w
  5777  0011' 1D03               	skipz
  5778  0012' 2800'              	goto	l497
  5779  0013' 3000               	movlw	0
  5780  0014' 0097'              	movwf	___flge@ff1+3
  5781  0015' 3000               	movlw	0
  5782  0016' 0096'              	movwf	___flge@ff1+2
  5783  0017' 3000               	movlw	0
  5784  0018' 0095'              	movwf	___flge@ff1+1
  5785  0019' 3000               	movlw	0
  5786  001A' 0094'              	movwf	___flge@ff1
  5787  001B'                    l497:	
  5788  001B' 3000               	movlw	0
  5789  001C' 0518'              	andwf	___flge@ff2,w
  5790  001D' 009C'              	movwf	??___flge
  5791  001E' 3000               	movlw	0
  5792  001F' 0519'              	andwf	___flge@ff2+1,w
  5793  0020' 009D'              	movwf	??___flge+1
  5794  0021' 3080               	movlw	128
  5795  0022' 051A'              	andwf	___flge@ff2+2,w
  5796  0023' 009E'              	movwf	??___flge+2
  5797  0024' 307F               	movlw	127
  5798  0025' 051B'              	andwf	___flge@ff2+3,w
  5799  0026' 009F'              	movwf	??___flge+3
  5800  0027' 081F'              	movf	??___flge+3,w
  5801  0028' 041E'              	iorwf	??___flge+2,w
  5802  0029' 041D'              	iorwf	??___flge+1,w
  5803  002A' 041C'              	iorwf	??___flge,w
  5804  002B' 1D03               	skipz
  5805  002C' 2800'              	goto	l1948
  5806  002D' 3000               	movlw	0
  5807  002E' 009B'              	movwf	___flge@ff2+3
  5808  002F' 3000               	movlw	0
  5809  0030' 009A'              	movwf	___flge@ff2+2
  5810  0031' 3000               	movlw	0
  5811  0032' 0099'              	movwf	___flge@ff2+1
  5812  0033' 3000               	movlw	0
  5813  0034' 0098'              	movwf	___flge@ff2
  5814  0035'                    l1948:	
  5815  0035' 1F97'              	btfss	___flge@ff1+3,7
  5816  0036' 2800'              	goto	l1952
  5817  0037' 3000               	movlw	0
  5818  0038' 009C'              	movwf	??___flge
  5819  0039' 3000               	movlw	0
  5820  003A' 009D'              	movwf	??___flge+1
  5821  003B' 3000               	movlw	0
  5822  003C' 009E'              	movwf	??___flge+2
  5823  003D' 3080               	movlw	128
  5824  003E' 009F'              	movwf	??___flge+3
  5825  003F' 0914'              	comf	___flge@ff1,w
  5826  0040' 00A0'              	movwf	??___flge+4
  5827  0041' 0915'              	comf	___flge@ff1+1,w
  5828  0042' 00A1'              	movwf	??___flge+5
  5829  0043' 0916'              	comf	___flge@ff1+2,w
  5830  0044' 00A2'              	movwf	??___flge+6
  5831  0045' 0917'              	comf	___flge@ff1+3,w
  5832  0046' 00A3'              	movwf	??___flge+7
  5833  0047' 0AA0'              	incf	??___flge+4,f
  5834  0048' 1903               	skipnz
  5835  0049' 0AA1'              	incf	??___flge+5,f
  5836  004A' 1903               	skipnz
  5837  004B' 0AA2'              	incf	??___flge+6,f
  5838  004C' 1903               	skipnz
  5839  004D' 0AA3'              	incf	??___flge+7,f
  5840  004E' 0820'              	movf	??___flge+4,w
  5841  004F' 079C'              	addwf	??___flge,f
  5842  0050' 0821'              	movf	??___flge+5,w
  5843  0051' 3D9D'              	addwfc	??___flge+1,f
  5844  0052' 0822'              	movf	??___flge+6,w
  5845  0053' 3D9E'              	addwfc	??___flge+2,f
  5846  0054' 0823'              	movf	??___flge+7,w
  5847  0055' 3D9F'              	addwfc	??___flge+3,f
  5848  0056' 081F'              	movf	??___flge+3,w
  5849  0057' 0097'              	movwf	___flge@ff1+3
  5850  0058' 081E'              	movf	??___flge+2,w
  5851  0059' 0096'              	movwf	___flge@ff1+2
  5852  005A' 081D'              	movf	??___flge+1,w
  5853  005B' 0095'              	movwf	___flge@ff1+1
  5854  005C' 081C'              	movf	??___flge,w
  5855  005D' 0094'              	movwf	___flge@ff1
  5856  005E'                    l1952:	
  5857  005E' 1F9B'              	btfss	___flge@ff2+3,7
  5858  005F' 2800'              	goto	l1956
  5859  0060' 3000               	movlw	0
  5860  0061' 009C'              	movwf	??___flge
  5861  0062' 3000               	movlw	0
  5862  0063' 009D'              	movwf	??___flge+1
  5863  0064' 3000               	movlw	0
  5864  0065' 009E'              	movwf	??___flge+2
  5865  0066' 3080               	movlw	128
  5866  0067' 009F'              	movwf	??___flge+3
  5867  0068' 0918'              	comf	___flge@ff2,w
  5868  0069' 00A0'              	movwf	??___flge+4
  5869  006A' 0919'              	comf	___flge@ff2+1,w
  5870  006B' 00A1'              	movwf	??___flge+5
  5871  006C' 091A'              	comf	___flge@ff2+2,w
  5872  006D' 00A2'              	movwf	??___flge+6
  5873  006E' 091B'              	comf	___flge@ff2+3,w
  5874  006F' 00A3'              	movwf	??___flge+7
  5875  0070' 0AA0'              	incf	??___flge+4,f
  5876  0071' 1903               	skipnz
  5877  0072' 0AA1'              	incf	??___flge+5,f
  5878  0073' 1903               	skipnz
  5879  0074' 0AA2'              	incf	??___flge+6,f
  5880  0075' 1903               	skipnz
  5881  0076' 0AA3'              	incf	??___flge+7,f
  5882  0077' 0820'              	movf	??___flge+4,w
  5883  0078' 079C'              	addwf	??___flge,f
  5884  0079' 0821'              	movf	??___flge+5,w
  5885  007A' 3D9D'              	addwfc	??___flge+1,f
  5886  007B' 0822'              	movf	??___flge+6,w
  5887  007C' 3D9E'              	addwfc	??___flge+2,f
  5888  007D' 0823'              	movf	??___flge+7,w
  5889  007E' 3D9F'              	addwfc	??___flge+3,f
  5890  007F' 081F'              	movf	??___flge+3,w
  5891  0080' 009B'              	movwf	___flge@ff2+3
  5892  0081' 081E'              	movf	??___flge+2,w
  5893  0082' 009A'              	movwf	___flge@ff2+2
  5894  0083' 081D'              	movf	??___flge+1,w
  5895  0084' 0099'              	movwf	___flge@ff2+1
  5896  0085' 081C'              	movf	??___flge,w
  5897  0086' 0098'              	movwf	___flge@ff2
  5898  0087'                    l1956:	
  5899  0087' 3080               	movlw	128
  5900  0088' 0697'              	xorwf	___flge@ff1+3,f
  5901  0089' 3080               	movlw	128
  5902  008A' 069B'              	xorwf	___flge@ff2+3,f
  5903  008B' 081B'              	movf	___flge@ff2+3,w
  5904  008C' 0217'              	subwf	___flge@ff1+3,w
  5905  008D' 1D03               	skipz
  5906  008E' 0008               	return
  5907  008F' 081A'              	movf	___flge@ff2+2,w
  5908  0090' 0216'              	subwf	___flge@ff1+2,w
  5909  0091' 1D03               	skipz
  5910  0092' 0008               	return
  5911  0093' 0819'              	movf	___flge@ff2+1,w
  5912  0094' 0215'              	subwf	___flge@ff1+1,w
  5913  0095' 1D03               	skipz
  5914  0096' 0008               	return
  5915  0097' 0818'              	movf	___flge@ff2,w
  5916  0098' 0214'              	subwf	___flge@ff1,w
  5917  0099' 0008               	return
  5918  009A'                    __end_of___flge:	
  5919                           
  5920                           	psect	text16
  5921  0000'                    __ptext16:	
  5922 ;; *************** function ___fladd *****************
  5923 ;; Defined at:
  5924 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;  b               4   37[BANK0 ] unsigned int 
  5927 ;;  a               4   41[BANK0 ] unsigned int 
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;  grs             1   60[BANK0 ] unsigned char 
  5930 ;;  bexp            1   59[BANK0 ] unsigned char 
  5931 ;;  aexp            1   58[BANK0 ] unsigned char 
  5932 ;;  signs           1   57[BANK0 ] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  4   37[BANK0 ] unsigned char 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5942 ;;      Params:         0       8       0       0
  5943 ;;      Locals:         0       4       0       0
  5944 ;;      Temps:          0      12       0       0
  5945 ;;      Totals:         0      24       0       0
  5946 ;;Total ram usage:       24 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    2
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_calculate_pidA
  5953 ;;		_calculate_pidM
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           
  5958                           ;psect for function ___fladd
  5959  0000'                    ___fladd:	
  5960                           
  5961                           ;incstack = 0
  5962                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  5963  0000' 0020               	movlb	0	; select bank0
  5964  0001' 0828'              	movf	___fladd@b+3,w
  5965  0002' 3980               	andlw	128
  5966  0003' 00AD'              	movwf	??___fladd
  5967  0004' 082D'              	movf	??___fladd,w
  5968  0005' 00B9'              	movwf	___fladd@signs
  5969  0006' 3528'              	lslf	___fladd@b+3,w
  5970  0007' 00AD'              	movwf	??___fladd
  5971  0008' 082D'              	movf	??___fladd,w
  5972  0009' 00BB'              	movwf	___fladd@bexp
  5973  000A' 1BA7'              	btfsc	___fladd@b+2,7
  5974  000B' 143B'              	bsf	___fladd@bexp,0
  5975  000C' 083B'              	movf	___fladd@bexp,w
  5976  000D' 1903               	btfsc	3,2
  5977  000E' 2800'              	goto	l2030
  5978  000F' 0A3B'              	incf	___fladd@bexp,w
  5979  0010' 1D03               	btfss	3,2
  5980  0011' 2800'              	goto	l2026
  5981  0012' 3000               	movlw	0
  5982  0013' 00A8'              	movwf	___fladd@b+3
  5983  0014' 3000               	movlw	0
  5984  0015' 00A7'              	movwf	___fladd@b+2
  5985  0016' 3000               	movlw	0
  5986  0017' 00A6'              	movwf	___fladd@b+1
  5987  0018' 3000               	movlw	0
  5988  0019' 00A5'              	movwf	___fladd@b
  5989  001A'                    l2026:	
  5990  001A' 17A7'              	bsf	___fladd@b+2,7
  5991  001B' 01A8'              	clrf	___fladd@b+3
  5992  001C' 2800'              	goto	l2032
  5993  001D'                    l2030:	
  5994  001D' 3000               	movlw	0
  5995  001E' 00A8'              	movwf	___fladd@b+3
  5996  001F' 3000               	movlw	0
  5997  0020' 00A7'              	movwf	___fladd@b+2
  5998  0021' 3000               	movlw	0
  5999  0022' 00A6'              	movwf	___fladd@b+1
  6000  0023' 3000               	movlw	0
  6001  0024' 00A5'              	movwf	___fladd@b
  6002  0025'                    l2032:	
  6003  0025' 082C'              	movf	___fladd@a+3,w
  6004  0026' 3980               	andlw	128
  6005  0027' 00AD'              	movwf	??___fladd
  6006  0028' 082D'              	movf	??___fladd,w
  6007  0029' 00BA'              	movwf	___fladd@aexp
  6008  002A' 083A'              	movf	___fladd@aexp,w
  6009  002B' 0639'              	xorwf	___fladd@signs,w
  6010  002C' 1D03               	btfss	3,2
  6011  002D' 1739'              	bsf	___fladd@signs,6
  6012  002E' 352C'              	lslf	___fladd@a+3,w
  6013  002F' 00AD'              	movwf	??___fladd
  6014  0030' 082D'              	movf	??___fladd,w
  6015  0031' 00BA'              	movwf	___fladd@aexp
  6016  0032' 1BAB'              	btfsc	___fladd@a+2,7
  6017  0033' 143A'              	bsf	___fladd@aexp,0
  6018  0034' 083A'              	movf	___fladd@aexp,w
  6019  0035' 1903               	btfsc	3,2
  6020  0036' 2800'              	goto	l2054
  6021  0037' 0A3A'              	incf	___fladd@aexp,w
  6022  0038' 1D03               	btfss	3,2
  6023  0039' 2800'              	goto	l2050
  6024  003A' 3000               	movlw	0
  6025  003B' 00AC'              	movwf	___fladd@a+3
  6026  003C' 3000               	movlw	0
  6027  003D' 00AB'              	movwf	___fladd@a+2
  6028  003E' 3000               	movlw	0
  6029  003F' 00AA'              	movwf	___fladd@a+1
  6030  0040' 3000               	movlw	0
  6031  0041' 00A9'              	movwf	___fladd@a
  6032  0042'                    l2050:	
  6033  0042' 17AB'              	bsf	___fladd@a+2,7
  6034  0043' 01AC'              	clrf	___fladd@a+3
  6035  0044' 2800'              	goto	l616
  6036  0045'                    l2054:	
  6037  0045' 3000               	movlw	0
  6038  0046' 00AC'              	movwf	___fladd@a+3
  6039  0047' 3000               	movlw	0
  6040  0048' 00AB'              	movwf	___fladd@a+2
  6041  0049' 3000               	movlw	0
  6042  004A' 00AA'              	movwf	___fladd@a+1
  6043  004B' 3000               	movlw	0
  6044  004C' 00A9'              	movwf	___fladd@a
  6045  004D'                    l616:	
  6046  004D' 083B'              	movf	___fladd@bexp,w
  6047  004E' 023A'              	subwf	___fladd@aexp,w
  6048  004F' 1803               	skipnc
  6049  0050' 2800'              	goto	l2090
  6050  0051' 1F39'              	btfss	___fladd@signs,6
  6051  0052' 2800'              	goto	l2060
  6052  0053' 3080               	movlw	128
  6053  0054' 00AD'              	movwf	??___fladd
  6054  0055' 082D'              	movf	??___fladd,w
  6055  0056' 06B9'              	xorwf	___fladd@signs,f
  6056  0057'                    l2060:	
  6057  0057' 083B'              	movf	___fladd@bexp,w
  6058  0058' 00AD'              	movwf	??___fladd
  6059  0059' 082D'              	movf	??___fladd,w
  6060  005A' 00BC'              	movwf	___fladd@grs
  6061  005B' 083A'              	movf	___fladd@aexp,w
  6062  005C' 00AD'              	movwf	??___fladd
  6063  005D' 082D'              	movf	??___fladd,w
  6064  005E' 00BB'              	movwf	___fladd@bexp
  6065  005F' 083C'              	movf	___fladd@grs,w
  6066  0060' 00AD'              	movwf	??___fladd
  6067  0061' 082D'              	movf	??___fladd,w
  6068  0062' 00BA'              	movwf	___fladd@aexp
  6069  0063' 0825'              	movf	___fladd@b,w
  6070  0064' 00AD'              	movwf	??___fladd
  6071  0065' 082D'              	movf	??___fladd,w
  6072  0066' 00BC'              	movwf	___fladd@grs
  6073  0067' 0829'              	movf	___fladd@a,w
  6074  0068' 00AD'              	movwf	??___fladd
  6075  0069' 082D'              	movf	??___fladd,w
  6076  006A' 00A5'              	movwf	___fladd@b
  6077  006B' 083C'              	movf	___fladd@grs,w
  6078  006C' 00AD'              	movwf	??___fladd
  6079  006D' 082D'              	movf	??___fladd,w
  6080  006E' 00A9'              	movwf	___fladd@a
  6081  006F' 0826'              	movf	___fladd@b+1,w
  6082  0070' 00AD'              	movwf	??___fladd
  6083  0071' 082D'              	movf	??___fladd,w
  6084  0072' 00BC'              	movwf	___fladd@grs
  6085  0073' 082A'              	movf	___fladd@a+1,w
  6086  0074' 00AD'              	movwf	??___fladd
  6087  0075' 082D'              	movf	??___fladd,w
  6088  0076' 00A6'              	movwf	___fladd@b+1
  6089  0077' 083C'              	movf	___fladd@grs,w
  6090  0078' 00AD'              	movwf	??___fladd
  6091  0079' 082D'              	movf	??___fladd,w
  6092  007A' 00AA'              	movwf	___fladd@a+1
  6093  007B' 0827'              	movf	___fladd@b+2,w
  6094  007C' 00AD'              	movwf	??___fladd
  6095  007D' 082D'              	movf	??___fladd,w
  6096  007E' 00BC'              	movwf	___fladd@grs
  6097  007F' 082B'              	movf	___fladd@a+2,w
  6098  0080' 00AD'              	movwf	??___fladd
  6099  0081' 082D'              	movf	??___fladd,w
  6100  0082' 00A7'              	movwf	___fladd@b+2
  6101  0083' 083C'              	movf	___fladd@grs,w
  6102  0084' 00AD'              	movwf	??___fladd
  6103  0085' 082D'              	movf	??___fladd,w
  6104  0086' 00AB'              	movwf	___fladd@a+2
  6105  0087' 0828'              	movf	___fladd@b+3,w
  6106  0088' 00AD'              	movwf	??___fladd
  6107  0089' 082D'              	movf	??___fladd,w
  6108  008A' 00BC'              	movwf	___fladd@grs
  6109  008B' 082C'              	movf	___fladd@a+3,w
  6110  008C' 00AD'              	movwf	??___fladd
  6111  008D' 082D'              	movf	??___fladd,w
  6112  008E' 00A8'              	movwf	___fladd@b+3
  6113  008F' 083C'              	movf	___fladd@grs,w
  6114  0090' 00AD'              	movwf	??___fladd
  6115  0091' 082D'              	movf	??___fladd,w
  6116  0092' 00AC'              	movwf	___fladd@a+3
  6117  0093'                    l2090:	
  6118  0093' 01BC'              	clrf	___fladd@grs
  6119  0094' 083B'              	movf	___fladd@bexp,w
  6120  0095' 00AD'              	movwf	??___fladd
  6121  0096' 01AE'              	clrf	??___fladd+1
  6122  0097' 09AD'              	comf	??___fladd,f
  6123  0098' 09AE'              	comf	??___fladd+1,f
  6124  0099' 0AAD'              	incf	??___fladd,f
  6125  009A' 1903               	skipnz
  6126  009B' 0AAE'              	incf	??___fladd+1,f
  6127  009C' 083A'              	movf	___fladd@aexp,w
  6128  009D' 072D'              	addwf	??___fladd,w
  6129  009E' 00AF'              	movwf	??___fladd+2
  6130  009F' 082E'              	movf	??___fladd+1,w
  6131  00A0' 1803               	skipnc
  6132  00A1' 0A2E'              	incf	??___fladd+1,w
  6133  00A2' 00B0'              	movwf	??___fladd+3
  6134  00A3' 0830'              	movf	??___fladd+3,w
  6135  00A4' 3A80               	xorlw	128
  6136  00A5' 00B1'              	movwf	??___fladd+4
  6137  00A6' 3080               	movlw	128
  6138  00A7' 0231'              	subwf	??___fladd+4,w
  6139  00A8' 1D03               	skipz
  6140  00A9' 2800'              	goto	u2125
  6141  00AA' 301A               	movlw	26
  6142  00AB' 022F'              	subwf	??___fladd+2,w
  6143  00AC'                    u2125:	
  6144  00AC' 1C03               	skipc
  6145  00AD' 2800'              	goto	l2108
  6146  00AE' 0020               	movlb	0	; select bank0
  6147  00AF' 0828'              	movf	___fladd@b+3,w
  6148  00B0' 0427'              	iorwf	___fladd@b+2,w
  6149  00B1' 0426'              	iorwf	___fladd@b+1,w
  6150  00B2' 0425'              	iorwf	___fladd@b,w
  6151  00B3' 1903               	btfsc	3,2
  6152  00B4' 2800'              	goto	u2130
  6153  00B5' 3001               	movlw	1
  6154  00B6' 2800'              	goto	u2140
  6155  00B7'                    u2130:	
  6156  00B7' 3000               	movlw	0
  6157  00B8'                    u2140:	
  6158  00B8' 00AD'              	movwf	??___fladd
  6159  00B9' 082D'              	movf	??___fladd,w
  6160  00BA' 00BC'              	movwf	___fladd@grs
  6161  00BB' 3000               	movlw	0
  6162  00BC' 00A8'              	movwf	___fladd@b+3
  6163  00BD' 3000               	movlw	0
  6164  00BE' 00A7'              	movwf	___fladd@b+2
  6165  00BF' 3000               	movlw	0
  6166  00C0' 00A6'              	movwf	___fladd@b+1
  6167  00C1' 3000               	movlw	0
  6168  00C2' 00A5'              	movwf	___fladd@b
  6169  00C3' 083A'              	movf	___fladd@aexp,w
  6170  00C4' 00AD'              	movwf	??___fladd
  6171  00C5' 082D'              	movf	??___fladd,w
  6172  00C6' 00BB'              	movwf	___fladd@bexp
  6173  00C7' 2800'              	goto	l620
  6174  00C8'                    l622:	
  6175  00C8' 1C3C'              	btfss	___fladd@grs,0
  6176  00C9' 2800'              	goto	l2098
  6177  00CA' 363C'              	lsrf	___fladd@grs,w
  6178  00CB' 3801               	iorlw	1
  6179  00CC' 00AD'              	movwf	??___fladd
  6180  00CD' 082D'              	movf	??___fladd,w
  6181  00CE' 00BC'              	movwf	___fladd@grs
  6182  00CF' 2800'              	goto	l2100
  6183  00D0'                    l2098:	
  6184  00D0' 1003               	clrc
  6185  00D1' 0CBC'              	rrf	___fladd@grs,f
  6186  00D2'                    l2100:	
  6187  00D2' 1825'              	btfsc	___fladd@b,0
  6188  00D3' 17BC'              	bsf	___fladd@grs,7
  6189  00D4' 3001               	movlw	1
  6190  00D5' 00AD'              	movwf	??___fladd
  6191  00D6'                    u2175:	
  6192  00D6' 37A8'              	asrf	___fladd@b+3,f
  6193  00D7' 0CA7'              	rrf	___fladd@b+2,f
  6194  00D8' 0CA6'              	rrf	___fladd@b+1,f
  6195  00D9' 0CA5'              	rrf	___fladd@b,f
  6196  00DA' 0B80'              	decfsz	??___fladd& (0+127),f
  6197  00DB' 2800'              	goto	u2175
  6198  00DC' 3001               	movlw	1
  6199  00DD' 00AD'              	movwf	??___fladd
  6200  00DE' 082D'              	movf	??___fladd,w
  6201  00DF' 07BB'              	addwf	___fladd@bexp,f
  6202  00E0'                    l2108:	
  6203  00E0' 0020               	movlb	0	; select bank0
  6204  00E1' 083A'              	movf	___fladd@aexp,w
  6205  00E2' 023B'              	subwf	___fladd@bexp,w
  6206  00E3' 1C03               	skipc
  6207  00E4' 2800'              	goto	l622
  6208  00E5'                    l620:	
  6209  00E5' 1B39'              	btfsc	___fladd@signs,6
  6210  00E6' 2800'              	goto	l2134
  6211  00E7' 083B'              	movf	___fladd@bexp,w
  6212  00E8' 1D03               	btfss	3,2
  6213  00E9' 2800'              	goto	l2116
  6214  00EA' 3000               	movlw	0
  6215  00EB' 00A8'              	movwf	?___fladd+3
  6216  00EC' 3000               	movlw	0
  6217  00ED' 00A7'              	movwf	?___fladd+2
  6218  00EE' 3000               	movlw	0
  6219  00EF' 00A6'              	movwf	?___fladd+1
  6220  00F0' 3000               	movlw	0
  6221  00F1' 00A5'              	movwf	?___fladd
  6222  00F2' 0008               	return
  6223  00F3'                    l2116:	
  6224  00F3' 0829'              	movf	___fladd@a,w
  6225  00F4' 07A5'              	addwf	___fladd@b,f
  6226  00F5' 082A'              	movf	___fladd@a+1,w
  6227  00F6' 3DA6'              	addwfc	___fladd@b+1,f
  6228  00F7' 082B'              	movf	___fladd@a+2,w
  6229  00F8' 3DA7'              	addwfc	___fladd@b+2,f
  6230  00F9' 082C'              	movf	___fladd@a+3,w
  6231  00FA' 3DA8'              	addwfc	___fladd@b+3,f
  6232  00FB' 1C28'              	btfss	___fladd@b+3,0
  6233  00FC' 2800'              	goto	l2168
  6234  00FD' 1C3C'              	btfss	___fladd@grs,0
  6235  00FE' 2800'              	goto	l2124
  6236  00FF' 363C'              	lsrf	___fladd@grs,w
  6237  0100' 3801               	iorlw	1
  6238  0101' 00AD'              	movwf	??___fladd
  6239  0102' 082D'              	movf	??___fladd,w
  6240  0103' 00BC'              	movwf	___fladd@grs
  6241  0104' 2800'              	goto	l2126
  6242  0105'                    l2124:	
  6243  0105' 1003               	clrc
  6244  0106' 0CBC'              	rrf	___fladd@grs,f
  6245  0107'                    l2126:	
  6246  0107' 1825'              	btfsc	___fladd@b,0
  6247  0108' 17BC'              	bsf	___fladd@grs,7
  6248  0109' 3001               	movlw	1
  6249  010A' 00AD'              	movwf	??___fladd
  6250  010B'                    u2245:	
  6251  010B' 37A8'              	asrf	___fladd@b+3,f
  6252  010C' 0CA7'              	rrf	___fladd@b+2,f
  6253  010D' 0CA6'              	rrf	___fladd@b+1,f
  6254  010E' 0CA5'              	rrf	___fladd@b,f
  6255  010F' 0B80'              	decfsz	??___fladd& (0+127),f
  6256  0110' 2800'              	goto	u2245
  6257  0111' 3001               	movlw	1
  6258  0112' 00AD'              	movwf	??___fladd
  6259  0113' 082D'              	movf	??___fladd,w
  6260  0114' 07BB'              	addwf	___fladd@bexp,f
  6261  0115' 2800'              	goto	l2168
  6262  0116'                    l2134:	
  6263  0116' 0828'              	movf	___fladd@b+3,w
  6264  0117' 3A80               	xorlw	128
  6265  0118' 00AD'              	movwf	??___fladd
  6266  0119' 082C'              	movf	___fladd@a+3,w
  6267  011A' 3A80               	xorlw	128
  6268  011B' 022D'              	subwf	??___fladd,w
  6269  011C' 1D03               	skipz
  6270  011D' 2800'              	goto	u2253
  6271  011E' 082B'              	movf	___fladd@a+2,w
  6272  011F' 0227'              	subwf	___fladd@b+2,w
  6273  0120' 1D03               	skipz
  6274  0121' 2800'              	goto	u2253
  6275  0122' 082A'              	movf	___fladd@a+1,w
  6276  0123' 0226'              	subwf	___fladd@b+1,w
  6277  0124' 1D03               	skipz
  6278  0125' 2800'              	goto	u2253
  6279  0126' 0829'              	movf	___fladd@a,w
  6280  0127' 0225'              	subwf	___fladd@b,w
  6281  0128'                    u2253:	
  6282  0128' 1803               	skipnc
  6283  0129' 2800'              	goto	l2144
  6284  012A' 30FF               	movlw	255
  6285  012B' 00AD'              	movwf	??___fladd
  6286  012C' 30FF               	movlw	255
  6287  012D' 00AE'              	movwf	??___fladd+1
  6288  012E' 30FF               	movlw	255
  6289  012F' 00AF'              	movwf	??___fladd+2
  6290  0130' 30FF               	movlw	255
  6291  0131' 00B0'              	movwf	??___fladd+3
  6292  0132' 0829'              	movf	___fladd@a,w
  6293  0133' 00B1'              	movwf	??___fladd+4
  6294  0134' 082A'              	movf	___fladd@a+1,w
  6295  0135' 00B2'              	movwf	??___fladd+5
  6296  0136' 082B'              	movf	___fladd@a+2,w
  6297  0137' 00B3'              	movwf	??___fladd+6
  6298  0138' 082C'              	movf	___fladd@a+3,w
  6299  0139' 00B4'              	movwf	??___fladd+7
  6300  013A' 0925'              	comf	___fladd@b,w
  6301  013B' 00B5'              	movwf	??___fladd+8
  6302  013C' 0926'              	comf	___fladd@b+1,w
  6303  013D' 00B6'              	movwf	??___fladd+9
  6304  013E' 0927'              	comf	___fladd@b+2,w
  6305  013F' 00B7'              	movwf	??___fladd+10
  6306  0140' 0928'              	comf	___fladd@b+3,w
  6307  0141' 00B8'              	movwf	??___fladd+11
  6308  0142' 0AB5'              	incf	??___fladd+8,f
  6309  0143' 1903               	skipnz
  6310  0144' 0AB6'              	incf	??___fladd+9,f
  6311  0145' 1903               	skipnz
  6312  0146' 0AB7'              	incf	??___fladd+10,f
  6313  0147' 1903               	skipnz
  6314  0148' 0AB8'              	incf	??___fladd+11,f
  6315  0149' 0835'              	movf	??___fladd+8,w
  6316  014A' 07B1'              	addwf	??___fladd+4,f
  6317  014B' 0836'              	movf	??___fladd+9,w
  6318  014C' 3DB2'              	addwfc	??___fladd+5,f
  6319  014D' 0837'              	movf	??___fladd+10,w
  6320  014E' 3DB3'              	addwfc	??___fladd+6,f
  6321  014F' 0838'              	movf	??___fladd+11,w
  6322  0150' 3DB4'              	addwfc	??___fladd+7,f
  6323  0151' 0831'              	movf	??___fladd+4,w
  6324  0152' 07AD'              	addwf	??___fladd,f
  6325  0153' 0832'              	movf	??___fladd+5,w
  6326  0154' 3DAE'              	addwfc	??___fladd+1,f
  6327  0155' 0833'              	movf	??___fladd+6,w
  6328  0156' 3DAF'              	addwfc	??___fladd+2,f
  6329  0157' 0834'              	movf	??___fladd+7,w
  6330  0158' 3DB0'              	addwfc	??___fladd+3,f
  6331  0159' 0830'              	movf	??___fladd+3,w
  6332  015A' 00A8'              	movwf	___fladd@b+3
  6333  015B' 082F'              	movf	??___fladd+2,w
  6334  015C' 00A7'              	movwf	___fladd@b+2
  6335  015D' 082E'              	movf	??___fladd+1,w
  6336  015E' 00A6'              	movwf	___fladd@b+1
  6337  015F' 082D'              	movf	??___fladd,w
  6338  0160' 00A5'              	movwf	___fladd@b
  6339  0161' 3080               	movlw	128
  6340  0162' 00AD'              	movwf	??___fladd
  6341  0163' 082D'              	movf	??___fladd,w
  6342  0164' 06B9'              	xorwf	___fladd@signs,f
  6343  0165' 09BC'              	comf	___fladd@grs,f
  6344  0166' 0ABC'              	incf	___fladd@grs,f
  6345  0167' 083C'              	movf	___fladd@grs,w
  6346  0168' 1D03               	btfss	3,2
  6347  0169' 2800'              	goto	l637
  6348  016A' 3001               	movlw	1
  6349  016B' 07A5'              	addwf	___fladd@b,f
  6350  016C' 3000               	movlw	0
  6351  016D' 3DA6'              	addwfc	___fladd@b+1,f
  6352  016E' 3000               	movlw	0
  6353  016F' 3DA7'              	addwfc	___fladd@b+2,f
  6354  0170' 3000               	movlw	0
  6355  0171' 3DA8'              	addwfc	___fladd@b+3,f
  6356  0172' 2800'              	goto	l637
  6357  0173'                    l2144:	
  6358  0173' 0829'              	movf	___fladd@a,w
  6359  0174' 02A5'              	subwf	___fladd@b,f
  6360  0175' 082A'              	movf	___fladd@a+1,w
  6361  0176' 3BA6'              	subwfb	___fladd@b+1,f
  6362  0177' 082B'              	movf	___fladd@a+2,w
  6363  0178' 3BA7'              	subwfb	___fladd@b+2,f
  6364  0179' 082C'              	movf	___fladd@a+3,w
  6365  017A' 3BA8'              	subwfb	___fladd@b+3,f
  6366  017B'                    l637:	
  6367  017B' 0828'              	movf	___fladd@b+3,w
  6368  017C' 0427'              	iorwf	___fladd@b+2,w
  6369  017D' 0426'              	iorwf	___fladd@b+1,w
  6370  017E' 0425'              	iorwf	___fladd@b,w
  6371  017F' 1D03               	skipz
  6372  0180' 2800'              	goto	l2166
  6373  0181' 083C'              	movf	___fladd@grs,w
  6374  0182' 1D03               	btfss	3,2
  6375  0183' 2800'              	goto	l2166
  6376  0184' 3000               	movlw	0
  6377  0185' 00A8'              	movwf	?___fladd+3
  6378  0186' 3000               	movlw	0
  6379  0187' 00A7'              	movwf	?___fladd+2
  6380  0188' 3000               	movlw	0
  6381  0189' 00A6'              	movwf	?___fladd+1
  6382  018A' 3000               	movlw	0
  6383  018B' 00A5'              	movwf	?___fladd
  6384  018C' 0008               	return
  6385  018D'                    l2152:	
  6386  018D' 3001               	movlw	1
  6387  018E'                    u2295:	
  6388  018E' 35A5'              	lslf	___fladd@b,f
  6389  018F' 0DA6'              	rlf	___fladd@b+1,f
  6390  0190' 0DA7'              	rlf	___fladd@b+2,f
  6391  0191' 0DA8'              	rlf	___fladd@b+3,f
  6392  0192' 0B89               	decfsz	9,f
  6393  0193' 2800'              	goto	u2295
  6394  0194' 1BBC'              	btfsc	___fladd@grs,7
  6395  0195' 1425'              	bsf	___fladd@b,0
  6396  0196' 1C3C'              	btfss	___fladd@grs,0
  6397  0197' 2800'              	goto	l2160
  6398  0198' 1403               	setc
  6399  0199' 2800'              	goto	L6
  6400  019A'                    l2160:	
  6401  019A' 1003               	clrc
  6402  019B'                    L6:	
  6403  019B' 0DBC'              	rlf	___fladd@grs,f
  6404  019C' 083B'              	movf	___fladd@bexp,w
  6405  019D' 1903               	btfsc	3,2
  6406  019E' 2800'              	goto	l2166
  6407  019F' 3001               	movlw	1
  6408  01A0' 02BB'              	subwf	___fladd@bexp,f
  6409  01A1'                    l2166:	
  6410  01A1' 1FA7'              	btfss	___fladd@b+2,7
  6411  01A2' 2800'              	goto	l2152
  6412  01A3'                    l2168:	
  6413  01A3' 01BA'              	clrf	___fladd@aexp
  6414  01A4' 1FBC'              	btfss	___fladd@grs,7
  6415  01A5' 2800'              	goto	l2178
  6416  01A6' 083C'              	movf	___fladd@grs,w
  6417  01A7' 397F               	andlw	127
  6418  01A8' 1D03               	btfss	3,2
  6419  01A9' 2800'              	goto	l2176
  6420  01AA' 1C25'              	btfss	___fladd@b,0
  6421  01AB' 2800'              	goto	l2178
  6422  01AC'                    l2176:	
  6423  01AC' 01BA'              	clrf	___fladd@aexp
  6424  01AD' 0ABA'              	incf	___fladd@aexp,f
  6425  01AE'                    l2178:	
  6426  01AE' 083A'              	movf	___fladd@aexp,w
  6427  01AF' 1903               	btfsc	3,2
  6428  01B0' 2800'              	goto	l650
  6429  01B1' 3001               	movlw	1
  6430  01B2' 07A5'              	addwf	___fladd@b,f
  6431  01B3' 3000               	movlw	0
  6432  01B4' 3DA6'              	addwfc	___fladd@b+1,f
  6433  01B5' 3000               	movlw	0
  6434  01B6' 3DA7'              	addwfc	___fladd@b+2,f
  6435  01B7' 3000               	movlw	0
  6436  01B8' 3DA8'              	addwfc	___fladd@b+3,f
  6437  01B9' 1C28'              	btfss	___fladd@b+3,0
  6438  01BA' 2800'              	goto	l650
  6439  01BB' 0825'              	movf	___fladd@b,w
  6440  01BC' 00AD'              	movwf	??___fladd
  6441  01BD' 0826'              	movf	___fladd@b+1,w
  6442  01BE' 00AE'              	movwf	??___fladd+1
  6443  01BF' 0827'              	movf	___fladd@b+2,w
  6444  01C0' 00AF'              	movwf	??___fladd+2
  6445  01C1' 0828'              	movf	___fladd@b+3,w
  6446  01C2' 00B0'              	movwf	??___fladd+3
  6447  01C3' 3001               	movlw	1
  6448  01C4' 00B1'              	movwf	??___fladd+4
  6449  01C5'                    u2395:	
  6450  01C5' 37B0'              	asrf	??___fladd+3,f
  6451  01C6' 0CAF'              	rrf	??___fladd+2,f
  6452  01C7' 0CAE'              	rrf	??___fladd+1,f
  6453  01C8' 0CAD'              	rrf	??___fladd,f
  6454  01C9' 0BB1'              	decfsz	??___fladd+4,f
  6455  01CA' 2800'              	goto	u2395
  6456  01CB' 0830'              	movf	??___fladd+3,w
  6457  01CC' 00A8'              	movwf	___fladd@b+3
  6458  01CD' 082F'              	movf	??___fladd+2,w
  6459  01CE' 00A7'              	movwf	___fladd@b+2
  6460  01CF' 082E'              	movf	??___fladd+1,w
  6461  01D0' 00A6'              	movwf	___fladd@b+1
  6462  01D1' 082D'              	movf	??___fladd,w
  6463  01D2' 00A5'              	movwf	___fladd@b
  6464  01D3' 0A3B'              	incf	___fladd@bexp,w
  6465  01D4' 1903               	btfsc	3,2
  6466  01D5' 2800'              	goto	l650
  6467  01D6' 3001               	movlw	1
  6468  01D7' 00AD'              	movwf	??___fladd
  6469  01D8' 082D'              	movf	??___fladd,w
  6470  01D9' 07BB'              	addwf	___fladd@bexp,f
  6471  01DA'                    l650:	
  6472  01DA' 0A3B'              	incf	___fladd@bexp,w
  6473  01DB' 1D03               	btfss	3,2
  6474  01DC' 083B'              	movf	___fladd@bexp,w
  6475  01DD' 1D03               	btfss	3,2
  6476  01DE' 2800'              	goto	l2196
  6477  01DF' 3000               	movlw	0
  6478  01E0' 00A8'              	movwf	___fladd@b+3
  6479  01E1' 3000               	movlw	0
  6480  01E2' 00A7'              	movwf	___fladd@b+2
  6481  01E3' 3000               	movlw	0
  6482  01E4' 00A6'              	movwf	___fladd@b+1
  6483  01E5' 3000               	movlw	0
  6484  01E6' 00A5'              	movwf	___fladd@b
  6485  01E7' 083B'              	movf	___fladd@bexp,w
  6486  01E8' 1903               	btfsc	3,2
  6487  01E9' 01B9'              	clrf	___fladd@signs
  6488  01EA'                    l2196:	
  6489  01EA' 1C3B'              	btfss	___fladd@bexp,0
  6490  01EB' 2800'              	goto	l2200
  6491  01EC' 17A7'              	bsf	___fladd@b+2,7
  6492  01ED' 2800'              	goto	l658
  6493  01EE'                    l2200:	
  6494  01EE' 307F               	movlw	127
  6495  01EF' 00AD'              	movwf	??___fladd
  6496  01F0' 082D'              	movf	??___fladd,w
  6497  01F1' 05A7'              	andwf	___fladd@b+2,f
  6498  01F2'                    l658:	
  6499  01F2' 363B'              	lsrf	___fladd@bexp,w
  6500  01F3' 00AD'              	movwf	??___fladd
  6501  01F4' 082D'              	movf	??___fladd,w
  6502  01F5' 00A8'              	movwf	___fladd@b+3
  6503  01F6' 1FB9'              	btfss	___fladd@signs,7
  6504  01F7' 0008               	return
  6505  01F8' 17A8'              	bsf	___fladd@b+3,7
  6506  01F9' 0008               	return
  6507  01FA'                    __end_of___fladd:	
  6508                           
  6509                           	psect	text17
  6510  0000'                    __ptext17:	
  6511 ;; *************** function _PWM_Init *****************
  6512 ;; Defined at:
  6513 ;;		line 188 in file "main.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  2  123[None  ] int 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6527 ;;      Params:         0       0       0       0
  6528 ;;      Locals:         0       0       0       0
  6529 ;;      Temps:          0       0       0       0
  6530 ;;      Totals:         0       0       0       0
  6531 ;;Total ram usage:        0 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    2
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_main
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           
  6542                           ;psect for function _PWM_Init
  6543  0000'                    _PWM_Init:	
  6544                           
  6545                           ;main.c: 209: PR2 = 0xFF;
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in _PWM_Init: [wreg+status,2]
  6549  0000' 30FF               	movlw	255
  6550  0001' 0020               	movlb	0	; select bank0
  6551  0002' 009B               	movwf	27	;volatile
  6552                           
  6553                           ;main.c: 210: CCP1CON = 0b00001100;
  6554  0003' 300C               	movlw	12
  6555  0004' 0025               	movlb	5	; select bank5
  6556  0005' 0093               	movwf	19	;volatile
  6557                           
  6558                           ;main.c: 211: CCPR1L = 0b00000000;
  6559  0006' 0191               	clrf	17	;volatile
  6560                           
  6561                           ;main.c: 212: PIR1bits.TMR2IF = 0;
  6562  0007' 0020               	movlb	0	; select bank0
  6563  0008' 1091               	bcf	17,1	;volatile
  6564                           
  6565                           ;main.c: 213: T2CON = 0b00000100;
  6566  0009' 3004               	movlw	4
  6567  000A' 009C               	movwf	28	;volatile
  6568  000B' 0008               	return
  6569  000C'                    __end_of_PWM_Init:	
  6570                           
  6571                           	psect	intentry
  6572  0000'                    __pintentry:	
  6573 ;; *************** function _isr *****************
  6574 ;; Defined at:
  6575 ;;		line 93 in file "main.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;		None
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6589 ;;      Params:         0       0       0       0
  6590 ;;      Locals:         0       0       0       0
  6591 ;;      Temps:          0       2       0       0
  6592 ;;      Totals:         0       2       0       0
  6593 ;;Total ram usage:        2 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    1
  6596 ;; This function calls:
  6597 ;;		___lwdiv
  6598 ;;		___wmul
  6599 ;; This function is called by:
  6600 ;;		Interrupt level 1
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604  0000'                    _isr:	
  6605                           
  6606                           ;incstack = 0
  6607  0000' 147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6608                           
  6609                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6610  0001' 3180'              	pagesel	$
  6611                           
  6612                           ;main.c: 95: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  6613  0002' 1C0B               	btfss	11,0	;volatile
  6614  0003' 2800'              	goto	i1l2628
  6615  0004' 0027               	movlb	7	; select bank7
  6616  0005' 1E13               	btfss	19,4	;volatile
  6617  0006' 2800'              	goto	i1l2628
  6618                           
  6619                           ;main.c: 96: {;main.c: 97: INTCONbits.IOCIE = 0;
  6620  0007' 118B               	bcf	11,3	;volatile
  6621                           
  6622                           ;main.c: 98: counter++;
  6623  0008' 3001               	movlw	1
  6624  0009' 0022               	movlb	2	; select bank2
  6625  000A' 0780'              	addwf	_counter^(0+256),f
  6626  000B' 3000               	movlw	0
  6627  000C' 3D80'              	addwfc	(_counter+1)^(0+256),f
  6628                           
  6629                           ;main.c: 99: if (LATAbits.LATA0 == 0) {
  6630  000D' 180C               	btfsc	12,0	;volatile
  6631  000E' 2800'              	goto	i1l2622
  6632                           
  6633                           ;main.c: 100: I2C_buffer.data.DISTANCE--;
  6634  000F' 30FF               	movlw	255
  6635  0010' 0021               	movlb	1	; select bank1
  6636  0011' 078F'              	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  6637  0012' 30FF               	movlw	255
  6638  0013' 3D8F'              	addwfc	((_I2C_buffer+1)^(0+128)+15),f	;volatile
  6639  0014' 30FF               	movlw	255
  6640  0015' 3D8F'              	addwfc	((_I2C_buffer+2)^(0+128)+15),f	;volatile
  6641  0016' 30FF               	movlw	255
  6642  0017' 2800'              	goto	L7
  6643  0018'                    i1l2622:	
  6644                           ;main.c: 101: } else {
  6645                           
  6646                           
  6647                           ;main.c: 102: I2C_buffer.data.DISTANCE++;
  6648  0018' 3001               	movlw	1
  6649  0019' 0021               	movlb	1	; select bank1
  6650  001A' 078F'              	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  6651  001B' 3000               	movlw	0
  6652  001C' 3D8F'              	addwfc	((_I2C_buffer+1)^(0+128)+15),f	;volatile
  6653  001D' 3000               	movlw	0
  6654  001E' 3D8F'              	addwfc	((_I2C_buffer+2)^(0+128)+15),f	;volatile
  6655  001F' 3000               	movlw	0
  6656  0020'                    L7:	
  6657  0020' 3D8F'              	addwfc	((_I2C_buffer+3)^(0+128)+15),f	;volatile
  6658                           
  6659                           ;main.c: 103: };main.c: 104: IOCAFbits.IOCAF4 = 0;
  6660  0021' 0027               	movlb	7	; select bank7
  6661  0022' 1213               	bcf	19,4	;volatile
  6662                           
  6663                           ;main.c: 105: INTCONbits.IOCIE = 1;
  6664  0023' 158B               	bsf	11,3	;volatile
  6665  0024'                    i1l2628:	
  6666                           
  6667                           ;main.c: 106: };main.c: 108: if (PIR1bits.TMR1IF == 1)
  6668  0024' 0020               	movlb	0	; select bank0
  6669  0025' 1C11               	btfss	17,0	;volatile
  6670  0026' 2800'              	goto	i1l2646
  6671                           
  6672                           ;main.c: 109: {;main.c: 110: INTCONbits.IOCIE = 0;
  6673  0027' 118B               	bcf	11,3	;volatile
  6674                           
  6675                           ;main.c: 111: T1CONbits.TMR1ON = 0;
  6676  0028' 1018               	bcf	24,0	;volatile
  6677                           
  6678                           ;main.c: 112: I2C_buffer.data.RPM = (counter * 300) / I2C_buffer.data.GEAR_RATIO;
  6679  0029' 0021               	movlb	1	; select bank1
  6680  002A' 0807'              	movf	((_I2C_buffer+1)^(0+128)+7),w	;volatile
  6681  002B' 0087'              	movwf	___lwdiv@divisor+1
  6682  002C' 0807'              	movf	(_I2C_buffer^(0+128)+7),w	;volatile
  6683  002D' 0086'              	movwf	___lwdiv@divisor
  6684  002E' 0022               	movlb	2	; select bank2
  6685  002F' 0800'              	movf	(_counter+1)^(0+256),w
  6686  0030' 0081'              	movwf	___wmul@multiplier+1
  6687  0031' 0800'              	movf	_counter^(0+256),w
  6688  0032' 0080'              	movwf	___wmul@multiplier
  6689  0033' 302C               	movlw	44
  6690  0034' 0082'              	movwf	___wmul@multiplicand
  6691  0035' 3001               	movlw	1
  6692  0036' 0083'              	movwf	___wmul@multiplicand+1
  6693  0037' 3180' 2000' 3180'  	fcall	___wmul
  6694  003A' 0801'              	movf	?___wmul+1,w
  6695  003B' 0089'              	movwf	___lwdiv@dividend+1
  6696  003C' 0800'              	movf	?___wmul,w
  6697  003D' 0088'              	movwf	___lwdiv@dividend
  6698  003E' 3180' 2000' 3180'  	fcall	___lwdiv
  6699  0041' 0807'              	movf	?___lwdiv+1,w
  6700  0042' 0021               	movlb	1	; select bank1
  6701  0043' 008B'              	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  6702  0044' 0806'              	movf	?___lwdiv,w
  6703  0045' 008B'              	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  6704                           
  6705                           ;main.c: 113: counter = 0;
  6706  0046' 0022               	movlb	2	; select bank2
  6707  0047' 0180'              	clrf	_counter^(0+256)
  6708  0048' 0180'              	clrf	(_counter+1)^(0+256)
  6709                           
  6710                           ;main.c: 114: if (LATAbits.LATA0 == 0) {
  6711  0049' 180C               	btfsc	12,0	;volatile
  6712  004A' 2800'              	goto	i1l2640
  6713                           
  6714                           ;main.c: 115: I2C_buffer.data.RPM = I2C_buffer.data.RPM *-1;
  6715  004B' 0021               	movlb	1	; select bank1
  6716  004C' 090B'              	comf	(_I2C_buffer^(0+128)+11),w	;volatile
  6717  004D' 0020               	movlb	0	; select bank0
  6718  004E' 0080'              	movwf	??_isr
  6719  004F' 0021               	movlb	1	; select bank1
  6720  0050' 090B'              	comf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  6721  0051' 0020               	movlb	0	; select bank0
  6722  0052' 0081'              	movwf	??_isr+1
  6723  0053' 0A80'              	incf	??_isr,f
  6724  0054' 1903               	skipnz
  6725  0055' 0A81'              	incf	??_isr+1,f
  6726  0056' 0800'              	movf	??_isr,w
  6727  0057' 0021               	movlb	1	; select bank1
  6728  0058' 008B'              	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  6729  0059' 0020               	movlb	0	; select bank0
  6730  005A' 0801'              	movf	??_isr+1,w
  6731  005B' 0021               	movlb	1	; select bank1
  6732  005C' 008B'              	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  6733  005D'                    i1l2640:	
  6734                           
  6735                           ;main.c: 116: };main.c: 117: INTCONbits.IOCIE = 1;
  6736  005D' 158B               	bsf	11,3	;volatile
  6737                           
  6738                           ;main.c: 118: PIR1bits.TMR1IF = 0;
  6739  005E' 0020               	movlb	0	; select bank0
  6740  005F' 1011               	bcf	17,0	;volatile
  6741                           
  6742                           ;main.c: 119: T1CONbits.TMR1ON = 1;
  6743  0060' 1418               	bsf	24,0	;volatile
  6744  0061'                    i1l2646:	
  6745                           
  6746                           ;main.c: 120: };main.c: 122: static unsigned char junk = 0;;main.c: 124: if (PIR1bits.SS
      +                          P1IF)
  6747  0061' 1D91               	btfss	17,3	;volatile
  6748  0062' 2800'              	goto	i1l2706
  6749                           
  6750                           ;main.c: 125: {;main.c: 126: INTCONbits.IOCIE = 0;
  6751  0063' 118B               	bcf	11,3	;volatile
  6752                           
  6753                           ;main.c: 127: PIE1bits.TMR1IE = 0;
  6754  0064' 0021               	movlb	1	; select bank1
  6755  0065' 1011               	bcf	17,0	;volatile
  6756                           
  6757                           ;main.c: 128: if (SSP1STATbits.R_nW)
  6758  0066' 0024               	movlb	4	; select bank4
  6759  0067' 1D14               	btfss	20,2	;volatile
  6760  0068' 2800'              	goto	i1l2666
  6761                           
  6762                           ;main.c: 129: {;main.c: 130: if (!SSP1STATbits.D_nA)
  6763  0069' 1A94               	btfsc	20,5	;volatile
  6764  006A' 2800'              	goto	i1l2658
  6765                           
  6766                           ;main.c: 131: {;main.c: 132: SSP1BUF = I2C_buffer.byte[index_i2c++];
  6767  006B' 0020               	movlb	0	; select bank0
  6768  006C' 0800'              	movf	_index_i2c,w
  6769  006D' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  6770  006E' 0086               	movwf	6
  6771  006F' 0187               	clrf	7
  6772  0070' 0801               	movf	1,w
  6773  0071' 0024               	movlb	4	; select bank4
  6774  0072' 0091               	movwf	17	;volatile
  6775  0073' 3001               	movlw	1
  6776  0074' 0020               	movlb	0	; select bank0
  6777  0075' 0080'              	movwf	??_isr
  6778  0076' 0800'              	movf	??_isr,w
  6779  0077' 0780'              	addwf	_index_i2c,f
  6780                           
  6781                           ;main.c: 133: SSP1CON1bits.CKP = 1;
  6782  0078' 0024               	movlb	4	; select bank4
  6783  0079' 1615               	bsf	21,4	;volatile
  6784  007A'                    i1l2658:	
  6785                           
  6786                           ;main.c: 134: };main.c: 135: if (SSP1STATbits.D_nA)
  6787  007A' 1E94               	btfss	20,5	;volatile
  6788  007B' 2800'              	goto	i1l2666
  6789                           
  6790                           ;main.c: 136: {;main.c: 137: SSP1BUF = I2C_buffer.byte[index_i2c++];
  6791  007C' 0020               	movlb	0	; select bank0
  6792  007D' 0800'              	movf	_index_i2c,w
  6793  007E' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  6794  007F' 0086               	movwf	6
  6795  0080' 0187               	clrf	7
  6796  0081' 0801               	movf	1,w
  6797  0082' 0024               	movlb	4	; select bank4
  6798  0083' 0091               	movwf	17	;volatile
  6799  0084' 3001               	movlw	1
  6800  0085' 0020               	movlb	0	; select bank0
  6801  0086' 0080'              	movwf	??_isr
  6802  0087' 0800'              	movf	??_isr,w
  6803  0088' 0780'              	addwf	_index_i2c,f
  6804                           
  6805                           ;main.c: 138: SSP1CON1bits.CKP = 1;
  6806  0089' 0024               	movlb	4	; select bank4
  6807  008A' 1615               	bsf	21,4	;volatile
  6808  008B'                    i1l2666:	
  6809                           
  6810                           ;main.c: 139: };main.c: 140: };main.c: 141: if (!SSP1STATbits.R_nW)
  6811  008B' 1914               	btfsc	20,2	;volatile
  6812  008C' 2800'              	goto	i1l2700
  6813                           
  6814                           ;main.c: 142: {;main.c: 143: if (!SSP1STATbits.D_nA)
  6815  008D' 1A94               	btfsc	20,5	;volatile
  6816  008E' 2800'              	goto	i1l2676
  6817                           
  6818                           ;main.c: 144: {;main.c: 145: first_i2c = 1;
  6819  008F' 0020               	movlb	0	; select bank0
  6820  0090' 0180'              	clrf	_first_i2c
  6821  0091' 0A80'              	incf	_first_i2c,f
  6822                           
  6823                           ;main.c: 146: junk = SSP1BUF;
  6824  0092' 0024               	movlb	4	; select bank4
  6825  0093' 0811               	movf	17,w	;volatile
  6826  0094' 0020               	movlb	0	; select bank0
  6827  0095' 0080'              	movwf	??_isr
  6828  0096' 0800'              	movf	??_isr,w
  6829  0097' 0022               	movlb	2	; select bank2
  6830  0098' 0080'              	movwf	isr@junk^(0+256)
  6831                           
  6832                           ;main.c: 147: SSP1CON1bits.CKP = 1;
  6833  0099' 0024               	movlb	4	; select bank4
  6834  009A' 1615               	bsf	21,4	;volatile
  6835  009B'                    i1l2676:	
  6836                           
  6837                           ;main.c: 148: };main.c: 149: if (SSP1STATbits.D_nA)
  6838  009B' 1E94               	btfss	20,5	;volatile
  6839  009C' 2800'              	goto	i1l2700
  6840                           
  6841                           ;main.c: 150: {;main.c: 151: if (first_i2c) {
  6842  009D' 0020               	movlb	0	; select bank0
  6843  009E' 0800'              	movf	_first_i2c,w
  6844  009F' 1903               	btfsc	3,2
  6845  00A0' 2800'              	goto	i1l2684
  6846                           
  6847                           ;main.c: 152: index_i2c = SSP1BUF;
  6848  00A1' 0024               	movlb	4	; select bank4
  6849  00A2' 0811               	movf	17,w	;volatile
  6850  00A3' 0020               	movlb	0	; select bank0
  6851  00A4' 0080'              	movwf	??_isr
  6852  00A5' 0800'              	movf	??_isr,w
  6853  00A6' 0080'              	movwf	_index_i2c
  6854                           
  6855                           ;main.c: 153: first_i2c = 0;
  6856  00A7' 0180'              	clrf	_first_i2c
  6857                           
  6858                           ;main.c: 154: }
  6859  00A8' 2800'              	goto	i1l2692
  6860  00A9'                    i1l2684:	
  6861                           
  6862                           ;main.c: 156: else {;main.c: 157: if (index_i2c < RX_ELMNTS)
  6863  00A9' 3000'              	movlw	low (_RX_ELMNTS| (0+32768))
  6864  00AA' 0084               	movwf	4
  6865  00AB' 3000'              	movlw	high (_RX_ELMNTS| (0+32768))
  6866  00AC' 0085               	movwf	5
  6867  00AD' 0800               	movf	0,w	;code access
  6868  00AE' 0200'              	subwf	_index_i2c,w
  6869  00AF' 1803               	skipnc
  6870  00B0' 2800'              	goto	i1l2690
  6871                           
  6872                           ;main.c: 158: {;main.c: 159: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  6873  00B1' 0024               	movlb	4	; select bank4
  6874  00B2' 0811               	movf	17,w	;volatile
  6875  00B3' 0020               	movlb	0	; select bank0
  6876  00B4' 0080'              	movwf	??_isr
  6877  00B5' 0800'              	movf	_index_i2c,w
  6878  00B6' 3E00'              	addlw	(low (_I2C_buffer| 0))& (0+255)
  6879  00B7' 0086               	movwf	6
  6880  00B8' 0187               	clrf	7
  6881  00B9' 0800'              	movf	??_isr,w
  6882  00BA' 0081               	movwf	1
  6883  00BB' 3001               	movlw	1
  6884  00BC' 0080'              	movwf	??_isr
  6885  00BD' 0800'              	movf	??_isr,w
  6886  00BE' 0780'              	addwf	_index_i2c,f
  6887                           
  6888                           ;main.c: 160: } else {
  6889  00BF' 2800'              	goto	i1l2692
  6890  00C0'                    i1l2690:	
  6891                           
  6892                           ;main.c: 161: junk = SSP1BUF;
  6893  00C0' 0024               	movlb	4	; select bank4
  6894  00C1' 0811               	movf	17,w	;volatile
  6895  00C2' 0020               	movlb	0	; select bank0
  6896  00C3' 0080'              	movwf	??_isr
  6897  00C4' 0800'              	movf	??_isr,w
  6898  00C5' 0022               	movlb	2	; select bank2
  6899  00C6' 0080'              	movwf	isr@junk^(0+256)
  6900  00C7'                    i1l2692:	
  6901                           
  6902                           ;main.c: 162: };main.c: 163: };main.c: 164: if (SSP1CON1bits.WCOL)
  6903  00C7' 0024               	movlb	4	; select bank4
  6904  00C8' 1F95               	btfss	21,7	;volatile
  6905  00C9' 2800'              	goto	i1l2698
  6906                           
  6907                           ;main.c: 165: {;main.c: 166: SSP1CON1bits.WCOL = 0;
  6908  00CA' 1395               	bcf	21,7	;volatile
  6909                           
  6910                           ;main.c: 167: junk = SSP1BUF;
  6911  00CB' 0811               	movf	17,w	;volatile
  6912  00CC' 0020               	movlb	0	; select bank0
  6913  00CD' 0080'              	movwf	??_isr
  6914  00CE' 0800'              	movf	??_isr,w
  6915  00CF' 0022               	movlb	2	; select bank2
  6916  00D0' 0080'              	movwf	isr@junk^(0+256)
  6917  00D1'                    i1l2698:	
  6918                           
  6919                           ;main.c: 168: };main.c: 169: SSP1CON1bits.CKP = 1;
  6920  00D1' 0024               	movlb	4	; select bank4
  6921  00D2' 1615               	bsf	21,4	;volatile
  6922  00D3'                    i1l2700:	
  6923                           
  6924                           ;main.c: 170: };main.c: 171: };main.c: 172: PIR1bits.SSP1IF = 0;
  6925  00D3' 0020               	movlb	0	; select bank0
  6926  00D4' 1191               	bcf	17,3	;volatile
  6927                           
  6928                           ;main.c: 173: INTCONbits.IOCIE = 1;
  6929  00D5' 158B               	bsf	11,3	;volatile
  6930                           
  6931                           ;main.c: 174: PIE1bits.TMR1IE = 1;
  6932  00D6' 0021               	movlb	1	; select bank1
  6933  00D7' 1411               	bsf	17,0	;volatile
  6934  00D8'                    i1l2706:	
  6935                           
  6936                           ;main.c: 175: };main.c: 177: if (PIR2bits.BCL1IF)
  6937  00D8' 0020               	movlb	0	; select bank0
  6938  00D9' 1D92               	btfss	18,3	;volatile
  6939  00DA' 2800'              	goto	i1l121
  6940                           
  6941                           ;main.c: 178: {;main.c: 179: junk = SSP1BUF;
  6942  00DB' 0024               	movlb	4	; select bank4
  6943  00DC' 0811               	movf	17,w	;volatile
  6944  00DD' 0020               	movlb	0	; select bank0
  6945  00DE' 0080'              	movwf	??_isr
  6946  00DF' 0800'              	movf	??_isr,w
  6947  00E0' 0022               	movlb	2	; select bank2
  6948  00E1' 0080'              	movwf	isr@junk^(0+256)
  6949                           
  6950                           ;main.c: 180: PIR2bits.BCL1IF = 0;
  6951  00E2' 0020               	movlb	0	; select bank0
  6952  00E3' 1192               	bcf	18,3	;volatile
  6953                           
  6954                           ;main.c: 181: SSP1CON1bits.CKP = 1;
  6955  00E4' 0024               	movlb	4	; select bank4
  6956  00E5' 1615               	bsf	21,4	;volatile
  6957                           
  6958                           ;main.c: 182: PIR1bits.SSP1IF = 0;
  6959  00E6' 0020               	movlb	0	; select bank0
  6960  00E7' 1191               	bcf	17,3	;volatile
  6961  00E8'                    i1l121:	
  6962  00E8' 107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6963  00E9' 0009               	retfie
  6964  00EA'                    __end_of_isr:	
  6965                           
  6966                           	psect	text19
  6967  0000'                    __ptext19:	
  6968 ;; *************** function ___wmul *****************
  6969 ;; Defined at:
  6970 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  multiplier      2    0[COMMON] unsigned int 
  6973 ;;  multiplicand    2    2[COMMON] unsigned int 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  product         2    4[COMMON] unsigned int 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  2    0[COMMON] unsigned int 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6985 ;;      Params:         4       0       0       0
  6986 ;;      Locals:         2       0       0       0
  6987 ;;      Temps:          0       0       0       0
  6988 ;;      Totals:         6       0       0       0
  6989 ;;Total ram usage:        6 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; This function calls:
  6992 ;;		Nothing
  6993 ;; This function is called by:
  6994 ;;		_isr
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           
  6999                           ;psect for function ___wmul
  7000  0000'                    ___wmul:	
  7001                           
  7002                           ;incstack = 0
  7003                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7004  0000' 0184'              	clrf	___wmul@product
  7005  0001' 0185'              	clrf	___wmul@product+1
  7006  0002'                    i1l2572:	
  7007  0002' 1C00'              	btfss	___wmul@multiplier,0
  7008  0003' 2800'              	goto	i1l323
  7009  0004' 0802'              	movf	___wmul@multiplicand,w
  7010  0005' 0784'              	addwf	___wmul@product,f
  7011  0006' 0803'              	movf	___wmul@multiplicand+1,w
  7012  0007' 3D85'              	addwfc	___wmul@product+1,f
  7013  0008'                    i1l323:	
  7014  0008' 3001               	movlw	1
  7015  0009'                    u303_25:	
  7016  0009' 3582'              	lslf	___wmul@multiplicand,f
  7017  000A' 0D83'              	rlf	___wmul@multiplicand+1,f
  7018  000B' 0B89               	decfsz	9,f
  7019  000C' 2800'              	goto	u303_25
  7020  000D' 3001               	movlw	1
  7021  000E'                    u304_25:	
  7022  000E' 3681'              	lsrf	___wmul@multiplier+1,f
  7023  000F' 0C80'              	rrf	___wmul@multiplier,f
  7024  0010' 0B89               	decfsz	9,f
  7025  0011' 2800'              	goto	u304_25
  7026  0012' 0800'              	movf	___wmul@multiplier,w
  7027  0013' 0401'              	iorwf	___wmul@multiplier+1,w
  7028  0014' 1D03               	btfss	3,2
  7029  0015' 2800'              	goto	i1l2572
  7030  0016' 0805'              	movf	___wmul@product+1,w
  7031  0017' 0081'              	movwf	?___wmul+1
  7032  0018' 0804'              	movf	___wmul@product,w
  7033  0019' 0080'              	movwf	?___wmul
  7034  001A' 0008               	return
  7035  001B'                    __end_of___wmul:	
  7036                           
  7037                           	psect	text20
  7038  0000'                    __ptext20:	
  7039 ;; *************** function ___lwdiv *****************
  7040 ;; Defined at:
  7041 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  divisor         2    6[COMMON] unsigned int 
  7044 ;;  dividend        2    8[COMMON] unsigned int 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  quotient        2   11[COMMON] unsigned int 
  7047 ;;  counter         1   13[COMMON] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  2    6[COMMON] unsigned int 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7057 ;;      Params:         4       0       0       0
  7058 ;;      Locals:         3       0       0       0
  7059 ;;      Temps:          1       0       0       0
  7060 ;;      Totals:         8       0       0       0
  7061 ;;Total ram usage:        8 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_isr
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           
  7071                           ;psect for function ___lwdiv
  7072  0000'                    ___lwdiv:	
  7073                           
  7074                           ;incstack = 0
  7075                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7076  0000' 018B'              	clrf	___lwdiv@quotient
  7077  0001' 018C'              	clrf	___lwdiv@quotient+1
  7078  0002' 0806'              	movf	___lwdiv@divisor,w
  7079  0003' 0407'              	iorwf	___lwdiv@divisor+1,w
  7080  0004' 1903               	btfsc	3,2
  7081  0005' 2800'              	goto	i1l2606
  7082  0006' 018D'              	clrf	___lwdiv@counter
  7083  0007' 0A8D'              	incf	___lwdiv@counter,f
  7084  0008'                    i1l2594:	
  7085  0008' 1B87'              	btfsc	___lwdiv@divisor+1,7
  7086  0009' 2800'              	goto	i1l2596
  7087  000A' 3001               	movlw	1
  7088  000B'                    u307_25:	
  7089  000B' 3586'              	lslf	___lwdiv@divisor,f
  7090  000C' 0D87'              	rlf	___lwdiv@divisor+1,f
  7091  000D' 0B89               	decfsz	9,f
  7092  000E' 2800'              	goto	u307_25
  7093  000F' 3001               	movlw	1
  7094  0010' 008A'              	movwf	??___lwdiv
  7095  0011' 080A'              	movf	??___lwdiv,w
  7096  0012' 078D'              	addwf	___lwdiv@counter,f
  7097  0013' 2800'              	goto	i1l2594
  7098  0014'                    i1l2596:	
  7099  0014' 3001               	movlw	1
  7100  0015'                    u309_25:	
  7101  0015' 358B'              	lslf	___lwdiv@quotient,f
  7102  0016' 0D8C'              	rlf	___lwdiv@quotient+1,f
  7103  0017' 0B89               	decfsz	9,f
  7104  0018' 2800'              	goto	u309_25
  7105  0019' 0807'              	movf	___lwdiv@divisor+1,w
  7106  001A' 0209'              	subwf	___lwdiv@dividend+1,w
  7107  001B' 1D03               	skipz
  7108  001C' 2800'              	goto	u310_25
  7109  001D' 0806'              	movf	___lwdiv@divisor,w
  7110  001E' 0208'              	subwf	___lwdiv@dividend,w
  7111  001F'                    u310_25:	
  7112  001F' 1C03               	skipc
  7113  0020' 2800'              	goto	i1l2602
  7114  0021' 0806'              	movf	___lwdiv@divisor,w
  7115  0022' 0288'              	subwf	___lwdiv@dividend,f
  7116  0023' 0807'              	movf	___lwdiv@divisor+1,w
  7117  0024' 3B89'              	subwfb	___lwdiv@dividend+1,f
  7118  0025' 140B'              	bsf	___lwdiv@quotient,0
  7119  0026'                    i1l2602:	
  7120  0026' 3001               	movlw	1
  7121  0027'                    u311_25:	
  7122  0027' 3687'              	lsrf	___lwdiv@divisor+1,f
  7123  0028' 0C86'              	rrf	___lwdiv@divisor,f
  7124  0029' 0B89               	decfsz	9,f
  7125  002A' 2800'              	goto	u311_25
  7126  002B' 3001               	movlw	1
  7127  002C' 028D'              	subwf	___lwdiv@counter,f
  7128  002D' 1D03               	btfss	3,2
  7129  002E' 2800'              	goto	i1l2596
  7130  002F'                    i1l2606:	
  7131  002F' 080C'              	movf	___lwdiv@quotient+1,w
  7132  0030' 0087'              	movwf	?___lwdiv+1
  7133  0031' 080B'              	movf	___lwdiv@quotient,w
  7134  0032' 0086'              	movwf	?___lwdiv
  7135  0033' 0008               	return
  7136  0034'                    __end_of___lwdiv:	
  7137  007E                     btemp	set	126	;btemp
  7138  007E                     int$flags	set	126
  7139  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        1
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     33      80
    BANK2            80      0      23

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_calculate_pidM
    _pre_pidM->_calculate_pidM
    _calculate_pidM->_calculate_pidA
    _M_control->___fltol
    _init_I2C_buffer->_eeprom_read
    _calculate_pidA->___fladd
    ___xxtofl->_abs
    ___flmul->__Umul8_16
    ___flge->___xxtofl
    ___fladd->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pre_pidM
    _pre_pidM->_calculate_pidM
    _calculate_pidM->_calculate_pidA

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   36379
                                             28 BANK1      5     5      0
                          _M_control
                           _PWM_Init
                       _PWM_set_duty
                                _abs
                     _calculate_pidA
                     _calculate_pidM
                       _eeprom_write
                    _init_I2C_buffer
                           _pre_pidM
 ---------------------------------------------------------------------------------
 (1) _pre_pidM                                             4     2      2   11109
                                             24 BANK1      4     2      2
                                _abs (ARG)
                     _calculate_pidA (ARG)
                     _calculate_pidM
 ---------------------------------------------------------------------------------
 (2) _calculate_pidM                                      16    14      2   10717
                                             73 BANK0      4     2      2
                                             12 BANK1     12    12      0
                          _M_control
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _abs (ARG)
                     _calculate_pidA (ARG)
 ---------------------------------------------------------------------------------
 (3) _M_control                                            3     1      2    1361
                                             13 BANK0      3     1      2
                       _PWM_set_duty
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM_set_duty                                         4     2      2     370
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      1     1      0      22
                                              6 BANK0      1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      22
                                              2 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         4     3      1    2400
                                              2 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _calculate_pidA                                      24    20      4    9726
                                             61 BANK0     12     8      4
                                              0 BANK1     12    12      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     674
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     778
                                              6 BANK0     14    10      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                              2 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              2 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3177
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              16     8      8     790
                                             20 BANK0     16     8      8
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             24    16      8    3326
                                             37 BANK0     24    16      8
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0     558
                                              0 BANK0      2     2      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     314
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _M_control
     _PWM_set_duty
     ___fltol (ARG)
   _PWM_Init
   _PWM_set_duty
   _abs
   _calculate_pidA
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___flneg (ARG)
       ___flneg (ARG)
     ___flge
       ___xxtofl (ARG)
         _abs (ARG)
       _abs (ARG)
     ___flmul
       __Umul8_16
       ___flneg (ARG)
     ___flneg
     ___fltol
     ___xxtofl
       _abs (ARG)
     _abs
   _calculate_pidM
     _M_control
       _PWM_set_duty
       ___fltol (ARG)
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___flneg (ARG)
       ___flneg (ARG)
     ___flge
       ___xxtofl (ARG)
         _abs (ARG)
       _abs (ARG)
     ___flmul
       __Umul8_16
       ___flneg (ARG)
     ___flneg
     ___fltol
     ___xxtofl
       _abs (ARG)
     _abs (ARG)
     _calculate_pidA (ARG)
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___flneg (ARG)
         ___flneg (ARG)
       ___flge
         ___xxtofl (ARG)
           _abs (ARG)
         _abs (ARG)
       ___flmul
         __Umul8_16
         ___flneg (ARG)
       ___flneg
       ___fltol
       ___xxtofl
         _abs (ARG)
       _abs
   _eeprom_write
   _init_I2C_buffer
     _eeprom_read
   _pre_pidM
     _abs (ARG)
     _calculate_pidA (ARG)
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___flneg (ARG)
         ___flneg (ARG)
       ___flge
         ___xxtofl (ARG)
           _abs (ARG)
         _abs (ARG)
       ___flmul
         __Umul8_16
         ___flneg (ARG)
       ___flneg
       ___fltol
       ___xxtofl
         _abs (ARG)
       _abs
     _calculate_pidM (ARG)
       _M_control
         _PWM_set_duty
         ___fltol (ARG)
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___flneg (ARG)
         ___flneg (ARG)
       ___flge
         ___xxtofl (ARG)
           _abs (ARG)
         _abs (ARG)
       ___flmul
         __Umul8_16
         ___flneg (ARG)
       ___flneg
       ___fltol
       ___xxtofl
         _abs (ARG)
       _abs (ARG)
       _calculate_pidA (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___flneg (ARG)
           ___flneg (ARG)
         ___flge
           ___xxtofl (ARG)
             _abs (ARG)
           _abs (ARG)
         ___flmul
           __Umul8_16
           ___flneg (ARG)
         ___flneg
         ___fltol
         ___xxtofl
           _abs (ARG)
         _abs

 _isr (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C5       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4D      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     21      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      17      10       28.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      C5      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Sep 25 12:39:12 2018

                       pc 0002         calculate_pidA@pid 0008               __CFG_CP$OFF 0000  
       calculate_pidA@set 003D         calculate_pidM@pid 0014         calculate_pidM@set 0049  
     ___wmul@multiplicand 0002       __Umul8_16@word_mpld 0008                       l160 0062  
                     l137 01F9                       l313 0002                       l138 0267  
                     l147 0031                       l620 00E5                       l516 006D  
                     l293 0004                       l622 00C8                       l616 004D  
                     l650 01DA                       l731 001E                       l724 021F  
                     l637 017B                       l744 0068                       l497 001B  
                     l745 0072                       l737 0054                       l658 01F2  
                     l754 0011                       _PR2 001B              __CFG_CPD$OFF 0000  
                     _abs 0000                       _isr 0000              __CFG_BORV$LO 0000  
                     wreg 0009              ___flmul@aexp 001D              ___flmul@bexp 001E  
            ___flmul@sign 0018              ___flmul@temp 0023              ___flmul@prod 001F  
                    S2982 0000              __CFG_LVP$OFF 0000       calculate_pidA@error 0004  
            ___fltol@exp1 000C                      l2000 0057                      ?_abs 0002  
                    l2100 00D2                      l2030 001D                      l2006 0064  
                    l2200 01EE                      l2032 0025                      l2008 0070  
                    l2050 0042                      l2026 001A                      l2124 0105  
                    l2116 00F3                      l2108 00E0                      l2060 0057  
                    l2220 001A                      l2126 0107                      l2134 0116  
                    l2054 0045                      l2302 0187                      l2222 001C  
                    l2160 019A                      l2152 018D                      l2144 0173  
                    l2312 01B5                      l2304 019E                      l2240 003F  
                    l2224 0024                      l2090 0093                      l2314 01B7  
                    l2250 0055                      l2242 0047                      l2324 01E0  
                    l2420 01CB                      l2166 01A1                      l2334 020C  
                    l2238 003D                      l2176 01AC                      l2168 01A3  
                    l2328 01F5                      l2352 0016                      l2416 01A4  
                    l2178 01AE                      l2098 00D0                      l2370 0059  
                    l2362 0031                      l2196 01EA                      l2372 0062  
                    l2364 0041                      l2358 002D                      l2472 004A  
                    l2800 00A0                      l1914 000B                      l2386 008D  
                    l2466 0034                      l2802 00B0                      l2900 0232  
                    l2812 00E1                      l1934 0022                      l1952 005E  
                    l1928 000C                      l2824 0103                      l2920 02CA  
                    l2728 0016                      l2914 02BE                      l2922 02D5  
                    l1956 0087                      l1948 0035                      l2916 02C2  
                    l2852 0172                      l2836 011A                      l2924 02DF  
                    l1982 001B                      l2934 0307                      l2854 017B  
                    l2790 0088                      l2864 019C                      l2784 0068  
                    l2866 01AC                      l2786 0070                      l2876 01E0  
                    l2788 007C                      l1998 0049                      l2888 0212  
                    ?_isr 0000              __CFG_WDTE$ON 0000           ?_calculate_pidA 003D  
         ?_calculate_pidM 0049                      u2005 0065                      u2130 00B7  
                    u2140 00B8                      u2125 00AC                      u2253 0128  
                    u2245 010B                      u2175 00D6                      u1805 001C  
                    u3413 015C                      u2295 018E                      u2615 0193  
                    u1825 0012                      u2705 01FF                      u2545 00CB  
                    u3290 0014                      u2395 01C5                      u2555 00FA  
                    u3523 0277                      u3363 00D5                      u2565 0150  
                    u3533 029F                      u2575 0167                      u1855 0016  
                    u3607 043E                      u2920 0010                      u2585 0176  
                    u1945 0024                      u3617 0040                      u3545 02B1  
                    u3473 01D4                      u2595 018A                      u2835 007A  
                    u2755 003A                      u1795 000A                      u2685 01CE  
                    u2934 0012                      u2695 01E9                      u1975 004A  
                    u2775 004E                      u2945 001C                      u3577 0047  
                    u2795 005C                      u2891 0003                      u3587 005D  
                    u2965 002D                      u3597 02D9                      _WPUA 020C  
          ??_eeprom_write 0003              __CFG_WRT$OFF 0000                      abs@a 0002  
     calculate_pidM@error 0010                      _main 0000                      _lset 0012  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 0000* 
           __CFG_IESO$OFF 0000                     ??_abs 0004                     ??_isr 0000  
           __CFG_PLLEN$ON 0000     __size_of_PWM_set_duty 0026             ___fltol@sign1 000B  
         __end_of___fladd 01FA                     ?_main 0000           __end_of___flneg 000A  
                   _EEADR 0191           __end_of___flmul 022C           __end_of___fltol 007F  
                   _T1CON 0018                     _T2CON 001C           __end_of___lwdiv 0034  
                   i1l121 00E8                     i1l323 0008                     _TRISA 008C  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000          __end_of_PWM_Init 000C  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
            _PWM_set_duty 0000           __initialization 0000              __end_of_main 0446  
                  ??_main 001C        __size_of_M_control 0034                    _EEDATA 0193  
                  _CCPR1L 0291                    _EECON1 0195                    _EECON2 0196  
                  _ANSELA 018C                    i1l2602 0026                    i1l2700 00D3  
                  i1l2606 002F                    i1l2622 0018                    i1l2640 005D  
                  i1l2706 00D8                    i1l2572 0002                    i1l2628 0024  
                  i1l2646 0061                    i1l2594 0008                    i1l2690 00C0  
                  i1l2658 007A                    i1l2666 008B                    i1l2596 0014  
                  i1l2692 00C7                    i1l2684 00A9                    i1l2676 009B  
                  i1l2698 00D1                    u310_25 001F                    u311_25 0027  
                  u303_25 0009                    u304_25 000E                    _INTCON 000B  
                  u307_25 000B                    u309_25 0015                    _OSCCON 0099  
        __end_of___xxtofl 0096              _accumulatorA 0004              _accumulatorM 000C  
    __size_of_eeprom_read 001C                    ___flge 0000                 ??___fladd 002D  
                  ___wmul 0000                 ??___flneg 0006            __CFG_STVREN$ON 0000  
               ??___flmul 0013                 ??___fltol 0006                 ??___lwdiv 000A  
    __end_of_eeprom_write 002C                    _stable 0010  __size_of_init_I2C_buffer 0124  
        __end_of_pre_pidM 005D        __size_of__Umul8_16 0020         __end_of_RX_ELMNTS 0001  
              ___flge@ff1 0014                ___flge@ff2 0018              ___xxtofl@arg 0010  
            ___xxtofl@exp 000F              ___xxtofl@val 0006   __end_of__initialization 0015  
              ___flneg@f1 0002           eeprom_read@addr 0005                ___fltol@f1 0002  
          __pcstackCOMMON 0000              __pidataBANK0 0000         __end_of_M_control 0034  
               ?_PWM_Init 0000            _OPTION_REGbits 0095          ??_calculate_pidA 0041  
        ??_calculate_pidM 004B         eeprom_write@value 0002                __pbssBANK0 0000  
              __pbssBANK1 0000                __pbssBANK2 0000         __end_of__Umul8_16 0020  
              __pmaintext 0000                   ?___flge 0014                   ?___wmul 0000  
              __pintentry 0000                   _CCP1CON 0293                ??_PWM_Init 0002  
     _calculate_pidA$1318 0000                 ?___xxtofl 0006       _calculate_pidM$1319 000C  
                 _SSP1ADD 0212                   _SSP1BUF 0211         ??_init_I2C_buffer 0006  
        PWM_set_duty@duty 0002                 ?_pre_pidM 0018     __size_of_eeprom_write 002C  
         __size_of___flge 009A                   ___fladd 0000                   ___flneg 0000  
                 ___flmul 0000                   ___fltol 0000           __size_of___wmul 001B  
                 ___lwdiv 0000                _lasterrorA 0000                _lasterrorM 0008  
                 __ptext1 0000                   __ptext2 0000                   __ptext3 0000  
                 __ptext4 0000                   __ptext5 0000                   __ptext6 0000  
                 __ptext7 0000                   __ptext8 0000                   __ptext9 0000  
             pre_pidM@set 0018                 _T1CONbits 0018                   _counter 0014  
            __size_of_abs 000F              __size_of_isr 00EA                ??___xxtofl 000A  
               _IOCAFbits 0393                 _IOCANbits 0392                   clrloop0 0001  
    end_of_initialization 0015                   isr@junk 0016              _eeprom_write 0000  
              ??_pre_pidM 001A                 _PORTAbits 000C               ___fladd@grs 003C  
        __CFG_FOSC$INTOSC 0000             ___xxtofl@sign 000E                 _RX_ELMNTS 0000  
             ___flmul@grs 0019             ??_eeprom_read 0002                _zero_cross 0001  
          __end_of___flge 009A            __end_of___wmul 001B                 _M_control 0000  
           __pbitbssBANK0 0000         __size_of_PWM_Init 000C       start_initialization 0000  
             __end_of_abs 000F               __end_of_isr 00EA              _loadDistance 0000  
                ??___flge 001C                  ??___wmul 0004       __end_of_eeprom_read 001C  
               __Umul8_16 0000               __pdataBANK0 0000                ?_M_control 000D  
         _init_I2C_buffer 0000                 ___fladd@a 0029                 ___fladd@b 0025  
               ___flmul@a 000F                 ___flmul@b 000B                 ___latbits 0001  
           __pcstackBANK0 0000             __pcstackBANK1 0000         __size_of___xxtofl 0096  
        eeprom_write@addr 0005             ?_PWM_set_duty 0002          ___lwdiv@dividend 0008  
                ?___fladd 0025                  ?___flneg 0002                  ?___flmul 000B  
                ?___fltol 0002         __size_of_pre_pidM 005D                ?__Umul8_16 0002  
                ?___lwdiv 0006                 __pswtext1 0000                 _first_i2c 0000  
               _index_i2c 0000          ___lwdiv@quotient 000B            ___wmul@product 0004  
                _LATAbits 010C   __size_of_calculate_pidA 027F   __size_of_calculate_pidM 01E6  
               clear_ram0 0000               _eeprom_read 0000                  _PIE1bits 0091  
                _PIE2bits 0092            ??_PWM_set_duty 0004               _auxDistance 002B  
                _PIR1bits 0011                  _PIR2bits 0012   __end_of_init_I2C_buffer 0124  
                _SSP1CON1 0215                  _SSP1STAT 0214               ??_M_control 000F  
                _PWM_Init 0000         ___wmul@multiplier 0000                _I2C_buffer 0000  
              _EECON1bits 0195                _APFCONbits 011D               ??__Umul8_16 0004  
        __size_of___fladd 01FA          __size_of___flneg 000A          __size_of___flmul 022C  
        __size_of___fltol 007F          __size_of___lwdiv 0034                  ___xxtofl 0000  
         ___lwdiv@divisor 0006           ___lwdiv@counter 000D                  __ptext10 0000  
                __ptext11 0000                  __ptext20 0000                  __ptext12 0000  
                __ptext13 0000                  __ptext14 0000                  __ptext15 0000  
                __ptext16 0000                  __ptext17 0000                  __ptext19 0000  
            _SSP1CON1bits 0215              _SSP1CON2bits 0216              _SSP1CON3bits 0217  
           __size_of_main 0446                  _pre_pidM 0000          ?_init_I2C_buffer 0000  
                int$flags 007E              _SSP1STATbits 0214                _INTCONbits 000B  
    __end_of_PWM_set_duty 0026                  intlevel1 0000*           _calculate_pidA 0000  
          _calculate_pidM 0000         __CFG_CLKOUTEN$OFF 0000             __pstringtext1 0000  
  __Umul8_16@multiplicand 0002             ___fladd@signs 0039    __end_of_calculate_pidA 027F  
  __end_of_calculate_pidM 01E6             ?_eeprom_write 0002              ___fladd@aexp 003A  
            ___fladd@bexp 003B              M_control@ctr 000D                _STATUSbits 0003  
    __Umul8_16@multiplier 000A              ?_eeprom_read 0000         __Umul8_16@product 0006  
