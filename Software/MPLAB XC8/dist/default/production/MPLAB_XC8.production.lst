

Microchip Technology PIC PRO Macro Assembler V1.43 build -156212558 
                                                                                               Tue Sep 04 00:05:58 2018

Microchip Technology Omniscient Code Generator v1.43 (PRO mode) build 201707250354
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text17,local,class=CODE,merge=1,delta=2
    23                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	pa_nodes0,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.43
    28                           ; Generated 25/07/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC12F1840 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  010C                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  020C                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0294                     	;# 
   156  0295                     	;# 
   157  0295                     	;# 
   158  0296                     	;# 
   159  0391                     	;# 
   160  0392                     	;# 
   161  0393                     	;# 
   162  039A                     	;# 
   163  039C                     	;# 
   164  039D                     	;# 
   165  039E                     	;# 
   166  039F                     	;# 
   167  0FE4                     	;# 
   168  0FE5                     	;# 
   169  0FE6                     	;# 
   170  0FE7                     	;# 
   171  0FE8                     	;# 
   172  0FE9                     	;# 
   173  0FEA                     	;# 
   174  0FEB                     	;# 
   175  0FED                     	;# 
   176  0FEE                     	;# 
   177  0FEF                     	;# 
   178                           
   179                           	psect	idataBANK0
   180  0000                     __pidataBANK0:	
   181  0018                     _T1CON	set	24
   182  000B                     _INTCON	set	11
   183  001C                     _T2CON	set	28
   184  001B                     _PR2	set	27
   185  0012                     _PIR2bits	set	18
   186  0018                     _T1CONbits	set	24
   187  0011                     _PIR1bits	set	17
   188  000B                     _INTCONbits	set	11
   189  0092                     _PIE2bits	set	146
   190  0095                     _OPTION_REGbits	set	149
   191  008C                     _TRISA	set	140
   192  0099                     _OSCCON	set	153
   193  0091                     _PIE1bits	set	145
   194  011D                     _APFCONbits	set	285
   195  010C                     _LATAbits	set	268
   196  018C                     _ANSELA	set	396
   197  0212                     _SSP1ADD	set	530
   198  0217                     _SSP1CON3bits	set	535
   199  0216                     _SSP1CON2bits	set	534
   200  0215                     _SSP1CON1	set	533
   201  0214                     _SSP1STAT	set	532
   202  020C                     _WPUA	set	524
   203  0215                     _SSP1CON1bits	set	533
   204  0211                     _SSP1BUF	set	529
   205  0214                     _SSP1STATbits	set	532
   206  0291                     _CCPR1L	set	657
   207  0293                     _CCP1CON	set	659
   208  0392                     _IOCANbits	set	914
   209  0393                     _IOCAFbits	set	915
   210                           
   211                           ; #config settings
   212  0000                     
   213                           	psect	cinit
   214  00C0                     start_initialization:	
   215  00C0                     __initialization:	
   216                           
   217                           ;initializer for _first_i2c
   218  00C0  3001               	movlw	1
   219  00C1  00ED               	movwf	__pdataBANK0& (0+127)
   220  00C2  30A0               	movlw	low __pbssBANK1
   221                           
   222                           ; Clear objects allocated to BITCOMMON
   223  00C3  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   224                           
   225                           ; Clear objects allocated to BITBANK0
   226  00C4  01EB               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   227                           
   228                           ; Clear objects allocated to BANK0
   229  00C5  01EC               	clrf	__pbssBANK0& (0+127)
   230                           
   231                           ; Clear objects allocated to BANK1
   232  00C6  0084               	movwf	4
   233  00C7  3000               	movlw	high __pbssBANK1
   234  00C8  0085               	movwf	5
   235  00C9  3037               	movlw	55
   236  00CA  3187  27FA  3180   	fcall	clear_ram0
   237  00CD                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  00CD                     __end_of__initialization:	
   241  00CD  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   242  00CE  0020               	movlb	0
   243  00CF  28D0               	ljmp	_main	;jump to C main() function
   244  00D0                     __pmaintext:	
   245 ;;
   246 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   247 ;;
   248 ;; *************** function _main *****************
   249 ;; Defined at:
   250 ;;		line 338 in file "main.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;		None
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   259 ;; Tracked objects:
   260 ;;		On entry : B1F/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   264 ;;      Params:         0       0       0       0
   265 ;;      Locals:         0       0       0       0
   266 ;;      Temps:          0       0       1       0
   267 ;;      Totals:         0       0       1       0
   268 ;;Total ram usage:        1 bytes
   269 ;; Hardware stack levels required when called:    6
   270 ;; This function calls:
   271 ;;		_PID
   272 ;;		_PWM_Init
   273 ;;		_PWM_set_duty
   274 ;;		_init_I2C_buffer
   275 ;; This function is called by:
   276 ;;		Startup code after reset
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           
   281                           ;psect for function _main
   282  00D0                     _main:	
   283                           
   284                           ;main.c: 339: OSCCON = 0b11110000;
   285                           
   286                           ;incstack = 0
   287                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   288  00D0  30F0               	movlw	240
   289  00D1  0021               	movlb	1	; select bank1
   290  00D2  0099               	movwf	25	;volatile
   291                           
   292                           ;main.c: 340: init_I2C_buffer();
   293  00D3  21EB  3180         	fcall	_init_I2C_buffer
   294                           
   295                           ;main.c: 341: TRISA = 0b00011110;
   296  00D5  301E               	movlw	30
   297  00D6  008C               	movwf	12	;volatile
   298                           
   299                           ;main.c: 342: ANSELA = 0b00000000;
   300  00D7  0023               	movlb	3	; select bank3
   301  00D8  018C               	clrf	12	;volatile
   302                           
   303                           ;main.c: 343: WPUA = 0b00011110;
   304  00D9  0024               	movlb	4	; select bank4
   305  00DA  008C               	movwf	12	;volatile
   306                           
   307                           ;main.c: 344: OPTION_REGbits.nWPUEN = 0;
   308  00DB  0021               	movlb	1	; select bank1
   309  00DC  1395               	bcf	21,7	;volatile
   310                           
   311                           ;main.c: 345: APFCONbits.CCP1SEL = 1;
   312  00DD  0022               	movlb	2	; select bank2
   313  00DE  141D               	bsf	29,0	;volatile
   314                           
   315                           ;main.c: 346: LATAbits.LATA0 = 0;
   316  00DF  100C               	bcf	12,0	;volatile
   317                           
   318                           ;main.c: 347: SSP1STAT = 0b10000000;
   319  00E0  3080               	movlw	128
   320  00E1  0024               	movlb	4	; select bank4
   321  00E2  0094               	movwf	20	;volatile
   322                           
   323                           ;main.c: 348: SSP1CON1 = 0b00110110;
   324  00E3  3036               	movlw	54
   325  00E4  0095               	movwf	21	;volatile
   326                           
   327                           ;main.c: 349: SSP1CON2bits.SEN = 1;
   328  00E5  1416               	bsf	22,0	;volatile
   329                           
   330                           ;main.c: 350: SSP1CON3bits.BOEN = 1;
   331  00E6  1617               	bsf	23,4	;volatile
   332                           
   333                           ;main.c: 351: SSP1CON3bits.SDAHT = 1;
   334  00E7  1597               	bsf	23,3	;volatile
   335                           
   336                           ;main.c: 352: SSP1CON3bits.SBCDE = 1;
   337  00E8  1517               	bsf	23,2	;volatile
   338                           
   339                           ;main.c: 353: SSP1ADD = I2C_buffer.data.ADDRESS;
   340  00E9  0021               	movlb	1	; select bank1
   341  00EA  0821               	movf	(_I2C_buffer^(0+128)+1),w	;volatile
   342  00EB  0024               	movlb	4	; select bank4
   343  00EC  0092               	movwf	18	;volatile
   344                           
   345                           ;main.c: 354: PIR1bits.SSP1IF = 0;
   346  00ED  0020               	movlb	0	; select bank0
   347  00EE  1191               	bcf	17,3	;volatile
   348                           
   349                           ;main.c: 355: PIR2bits.BCL1IF = 0;
   350  00EF  1192               	bcf	18,3	;volatile
   351                           
   352                           ;main.c: 356: PIE2bits.BCL1IE = 1;
   353  00F0  0021               	movlb	1	; select bank1
   354  00F1  1592               	bsf	18,3	;volatile
   355                           
   356                           ;main.c: 357: PIE1bits.SSP1IE = 1;
   357  00F2  1591               	bsf	17,3	;volatile
   358                           
   359                           ;main.c: 358: INTCONbits.PEIE = 1;
   360  00F3  170B               	bsf	11,6	;volatile
   361                           
   362                           ;main.c: 359: PWM_Init();
   363  00F4  21DF  3180         	fcall	_PWM_Init
   364                           
   365                           ;main.c: 360: PWM_set_duty(0);
   366  00F6  01A2               	clrf	PWM_set_duty@duty
   367  00F7  01A3               	clrf	PWM_set_duty@duty+1
   368  00F8  214E  3180         	fcall	_PWM_set_duty
   369                           
   370                           ;main.c: 361: IOCANbits.IOCAN4 = 1;
   371  00FA  0027               	movlb	7	; select bank7
   372  00FB  1612               	bsf	18,4	;volatile
   373                           
   374                           ;main.c: 362: INTCON = 0b01001000;
   375  00FC  3048               	movlw	72
   376  00FD  008B               	movwf	11	;volatile
   377                           
   378                           ;main.c: 363: T1CON = 0b00110100;
   379  00FE  3034               	movlw	52
   380  00FF  0020               	movlb	0	; select bank0
   381  0100  0098               	movwf	24	;volatile
   382                           
   383                           ;main.c: 364: PIE1bits.TMR1IE = 1;
   384  0101  0021               	movlb	1	; select bank1
   385  0102  1411               	bsf	17,0	;volatile
   386                           
   387                           ;main.c: 365: T1CONbits.TMR1ON = 1;
   388  0103  0020               	movlb	0	; select bank0
   389  0104  1418               	bsf	24,0	;volatile
   390                           
   391                           ;main.c: 366: INTCONbits.GIE = 1;
   392  0105  178B               	bsf	11,7	;volatile
   393  0106                     l3381:	
   394                           
   395                           ;main.c: 369: PID(I2C_buffer.data.SPEED);
   396  0106  0021               	movlb	1	; select bank1
   397  0107  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
   398  0108  00EE               	movwf	(PID@set+1)^(0+128)
   399  0109  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
   400  010A  00ED               	movwf	PID@set^(0+128)
   401  010B  2182  3180         	fcall	_PID
   402                           
   403                           ;main.c: 370: _delay((unsigned long)((10)*(32000000/4000.0)));
   404  010D  3068               	movlw	104
   405  010E  0021               	movlb	1	; select bank1
   406  010F  00EF               	movwf	??_main^(0+128)
   407  0110  30E4               	movlw	228
   408  0111                     u4507:	
   409  0111  0B89               	decfsz	9,f
   410  0112  2911               	goto	u4507
   411  0113  0BEF               	decfsz	??_main^(0+128),f
   412  0114  2911               	goto	u4507
   413  0115  0000               	nop
   414  0116  2906               	goto	l3381
   415  0117                     __end_of_main:	
   416  0117                     __ptext13:	
   417 ;; *************** function _M_control *****************
   418 ;; Defined at:
   419 ;;		line 223 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  ctr             2   12[BANK0 ] int 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 1F/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   433 ;;      Params:         0       2       0       0
   434 ;;      Locals:         0       0       0       0
   435 ;;      Temps:          0       1       0       0
   436 ;;      Totals:         0       3       0       0
   437 ;;Total ram usage:        3 bytes
   438 ;; Hardware stack levels used:    1
   439 ;; Hardware stack levels required when called:    3
   440 ;; This function calls:
   441 ;;		_PWM_set_duty
   442 ;;		___wmul
   443 ;; This function is called by:
   444 ;;		_calculate_pid
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _M_control
   450  0117                     _M_control:	
   451  0117                     l2815:	
   452                           ;incstack = 0
   453                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;main.c: 225: if (ctr == 0)
   457  0117  082C               	movf	M_control@ctr,w
   458  0118  042D               	iorwf	M_control@ctr+1,w
   459  0119  1D03               	btfss	3,2
   460  011A  2921               	goto	l2819
   461                           
   462                           ;main.c: 226: {
   463                           ;main.c: 227: PWM_set_duty(ctr);
   464  011B  082D               	movf	M_control@ctr+1,w
   465  011C  00A3               	movwf	PWM_set_duty@duty+1
   466  011D  082C               	movf	M_control@ctr,w
   467  011E  00A2               	movwf	PWM_set_duty@duty
   468  011F  214E  3180         	fcall	_PWM_set_duty
   469  0121                     l2819:	
   470                           
   471                           ;main.c: 228: }
   472                           ;main.c: 229: if (ctr > 0)
   473  0121  0020               	movlb	0	; select bank0
   474  0122  082D               	movf	M_control@ctr+1,w
   475  0123  3A80               	xorlw	128
   476  0124  00AE               	movwf	??_M_control
   477  0125  3080               	movlw	128
   478  0126  022E               	subwf	??_M_control,w
   479  0127  1D03               	skipz
   480  0128  292B               	goto	u3665
   481  0129  3001               	movlw	1
   482  012A  022C               	subwf	M_control@ctr,w
   483  012B                     u3665:	
   484  012B  1C03               	skipc
   485  012C  2936               	goto	l2825
   486                           
   487                           ;main.c: 230: {
   488                           ;main.c: 231: LATAbits.LATA0 = 1;
   489  012D  0022               	movlb	2	; select bank2
   490  012E  140C               	bsf	12,0	;volatile
   491                           
   492                           ;main.c: 232: PWM_set_duty(ctr);
   493  012F  0020               	movlb	0	; select bank0
   494  0130  082D               	movf	M_control@ctr+1,w
   495  0131  00A3               	movwf	PWM_set_duty@duty+1
   496  0132  082C               	movf	M_control@ctr,w
   497  0133  00A2               	movwf	PWM_set_duty@duty
   498  0134  214E  3180         	fcall	_PWM_set_duty
   499  0136                     l2825:	
   500                           
   501                           ;main.c: 233: }
   502                           ;main.c: 234: if (ctr < 0)
   503  0136  0020               	movlb	0	; select bank0
   504  0137  1FAD               	btfss	M_control@ctr+1,7
   505  0138  0008               	return
   506                           
   507                           ;main.c: 235: {
   508                           ;main.c: 236: LATAbits.LATA0 = 0;
   509  0139  0022               	movlb	2	; select bank2
   510  013A  100C               	bcf	12,0	;volatile
   511                           
   512                           ;main.c: 237: ctr = ctr * -1;
   513  013B  30FF               	movlw	255
   514  013C  0020               	movlb	0	; select bank0
   515  013D  00A2               	movwf	___wmul@multiplier
   516  013E  00A3               	movwf	___wmul@multiplier+1
   517  013F  082D               	movf	M_control@ctr+1,w
   518  0140  00A5               	movwf	___wmul@multiplicand+1
   519  0141  082C               	movf	M_control@ctr,w
   520  0142  00A4               	movwf	___wmul@multiplicand
   521  0143  216D  3180         	fcall	___wmul
   522  0145  0823               	movf	?___wmul+1,w
   523  0146  00AD               	movwf	M_control@ctr+1
   524  0147  0822               	movf	?___wmul,w
   525  0148  00AC               	movwf	M_control@ctr
   526                           
   527                           ;main.c: 238: PWM_set_duty(ctr);
   528  0149  082D               	movf	M_control@ctr+1,w
   529  014A  00A3               	movwf	PWM_set_duty@duty+1
   530  014B  082C               	movf	M_control@ctr,w
   531  014C  00A2               	movwf	PWM_set_duty@duty
   532  014D  294E               	ljmp	l2565
   533  014E                     __end_of_M_control:	
   534  014E                     __ptext15:	
   535 ;; *************** function _PWM_set_duty *****************
   536 ;; Defined at:
   537 ;;		line 214 in file "main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;  duty            2    2[BANK0 ] int 
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  2    2[BANK0 ] int 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0
   546 ;; Tracked objects:
   547 ;;		On entry : 1F/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   551 ;;      Params:         0       2       0       0
   552 ;;      Locals:         0       0       0       0
   553 ;;      Temps:          0       2       0       0
   554 ;;      Totals:         0       4       0       0
   555 ;;Total ram usage:        4 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; Hardware stack levels required when called:    2
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_M_control
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _PWM_set_duty
   568  014E                     _PWM_set_duty:	
   569  014E                     l2565:	
   570                           ;incstack = 0
   571                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
   572                           
   573                           
   574                           ;main.c: 216: if (duty < 1024) {
   575  014E  0823               	movf	PWM_set_duty@duty+1,w
   576  014F  3A80               	xorlw	128
   577  0150  00A4               	movwf	??_PWM_set_duty
   578  0151  3084               	movlw	132
   579  0152  0224               	subwf	??_PWM_set_duty,w
   580  0153  1D03               	skipz
   581  0154  2957               	goto	u3155
   582  0155  3000               	movlw	0
   583  0156  0222               	subwf	PWM_set_duty@duty,w
   584  0157                     u3155:	
   585  0157  1803               	skipnc
   586  0158  0008               	return
   587                           
   588                           ;main.c: 217: CCPR1L = (0xFF & ((unsigned int) duty >> 2));
   589  0159  0020               	movlb	0	; select bank0
   590  015A  0823               	movf	PWM_set_duty@duty+1,w
   591  015B  00A5               	movwf	??_PWM_set_duty+1
   592  015C  0822               	movf	PWM_set_duty@duty,w
   593  015D  00A4               	movwf	??_PWM_set_duty
   594  015E  36A5               	lsrf	??_PWM_set_duty+1,f
   595  015F  0CA4               	rrf	??_PWM_set_duty,f
   596  0160  36A5               	lsrf	??_PWM_set_duty+1,f
   597  0161  0CA4               	rrf	??_PWM_set_duty,f
   598  0162  0824               	movf	??_PWM_set_duty,w
   599  0163  0025               	movlb	5	; select bank5
   600  0164  0091               	movwf	17	;volatile
   601                           
   602                           ;main.c: 218: CCP1CON = (0x0C | (0x30 & ((unsigned int) duty << 4)));
   603  0165  0020               	movlb	0	; select bank0
   604  0166  0E22               	swapf	PWM_set_duty@duty,w
   605  0167  39F0               	andlw	240
   606  0168  3930               	andlw	48
   607  0169  380C               	iorlw	12
   608  016A  0025               	movlb	5	; select bank5
   609  016B  0093               	movwf	19	;volatile
   610  016C  0008               	return
   611  016D                     __end_of_PWM_set_duty:	
   612  016D                     __ptext14:	
   613 ;; *************** function ___wmul *****************
   614 ;; Defined at:
   615 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  multiplier      2    2[BANK0 ] unsigned int 
   618 ;;  multiplicand    2    4[BANK0 ] unsigned int 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  product         2    6[BANK0 ] unsigned int 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  2    2[BANK0 ] unsigned int 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 1F/0
   627 ;;		On exit  : 1F/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   630 ;;      Params:         0       4       0       0
   631 ;;      Locals:         0       2       0       0
   632 ;;      Temps:          0       0       0       0
   633 ;;      Totals:         0       6       0       0
   634 ;;Total ram usage:        6 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    2
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_M_control
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function ___wmul
   646  016D                     ___wmul:	
   647                           
   648                           ;incstack = 0
   649                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   650  016D  01A6               	clrf	___wmul@product
   651  016E  01A7               	clrf	___wmul@product+1
   652  016F                     l2571:	
   653  016F  1C22               	btfss	___wmul@multiplier,0
   654  0170  2975               	goto	l2575
   655  0171  0824               	movf	___wmul@multiplicand,w
   656  0172  07A6               	addwf	___wmul@product,f
   657  0173  0825               	movf	___wmul@multiplicand+1,w
   658  0174  3DA7               	addwfc	___wmul@product+1,f
   659  0175                     l2575:	
   660  0175  35A4               	lslf	___wmul@multiplicand,f
   661  0176  0DA5               	rlf	___wmul@multiplicand+1,f
   662  0177  36A3               	lsrf	___wmul@multiplier+1,f
   663  0178  0CA2               	rrf	___wmul@multiplier,f
   664  0179  0822               	movf	___wmul@multiplier,w
   665  017A  0423               	iorwf	___wmul@multiplier+1,w
   666  017B  1D03               	btfss	3,2
   667  017C  296F               	goto	l2571
   668  017D  0827               	movf	___wmul@product+1,w
   669  017E  00A3               	movwf	?___wmul+1
   670  017F  0826               	movf	___wmul@product,w
   671  0180  00A2               	movwf	?___wmul
   672  0181  0008               	return
   673  0182                     __end_of___wmul:	
   674  0182                     __ptext3:	
   675 ;; *************** function _PID *****************
   676 ;; Defined at:
   677 ;;		line 284 in file "main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  set             2   22[BANK1 ] int 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 1F/1
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   691 ;;      Params:         0       0       2       0
   692 ;;      Locals:         0       0       0       0
   693 ;;      Temps:          0       0       0       2
   694 ;;      Totals:         0       0       2       2
   695 ;;Total ram usage:        4 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    5
   698 ;; This function calls:
   699 ;;		_calculate_pid
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _PID
   707  0182                     _PID:	
   708                           
   709                           ;main.c: 286: if(warming_up == 0)
   710                           
   711                           ;incstack = 0
   712                           ; Regs used in _PID: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   713  0182  187D               	btfsc	_warming_up/(0+8),_warming_up& (0+7)
   714  0183  2989               	goto	l3247
   715                           
   716                           ;main.c: 287: {
   717                           ;main.c: 288: if (set != 0)
   718  0184  086D               	movf	PID@set^(0+128),w
   719  0185  046E               	iorwf	(PID@set+1)^(0+128),w
   720  0186  1903               	btfsc	3,2
   721  0187  2989               	goto	l3247
   722                           
   723                           ;main.c: 289: {
   724                           ;main.c: 290: warming_up = 1;
   725  0188  147D               	bsf	_warming_up/(0+8),_warming_up& (0+7)
   726  0189                     l3247:	
   727                           
   728                           ;main.c: 291: }
   729                           ;main.c: 292: }
   730                           ;main.c: 293: zero_cross = ((lset^set) < 0);
   731  0189  086D               	movf	PID@set^(0+128),w
   732  018A  0653               	xorwf	_lset^(0+128),w
   733  018B  0022               	movlb	2	; select bank2
   734  018C  00A0               	movwf	??_PID^(0+256)
   735  018D  0021               	movlb	1	; select bank1
   736  018E  086E               	movf	(PID@set+1)^(0+128),w
   737  018F  0654               	xorwf	(_lset+1)^(0+128),w
   738  0190  0022               	movlb	2	; select bank2
   739  0191  00A1               	movwf	(??_PID+1)^(0+256)
   740  0192  1FA1               	btfss	(??_PID+1)^(0+256),7
   741  0193  2997               	goto	u4430
   742  0194  0020               	movlb	0	; select bank0
   743  0195  146B               	bsf	_zero_cross/(0+8),_zero_cross& (0+7)
   744  0196  2999               	goto	u4444
   745  0197                     u4430:	
   746  0197  0020               	movlb	0	; select bank0
   747  0198  106B               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
   748  0199                     u4444:	
   749                           
   750                           ;main.c: 294: if (((zero_cross == 1) &(set <= 0) & (lset <= 0)))
   751  0199  0021               	movlb	1	; select bank1
   752  019A  086E               	movf	(PID@set+1)^(0+128),w
   753  019B  3A80               	xorlw	128
   754  019C  0022               	movlb	2	; select bank2
   755  019D  00A0               	movwf	??_PID^(0+256)
   756  019E  3080               	movlw	128
   757  019F  0220               	subwf	??_PID^(0+256),w
   758  01A0  1D03               	skipz
   759  01A1  29A5               	goto	u4455
   760  01A2  3001               	movlw	1
   761  01A3  0021               	movlb	1	; select bank1
   762  01A4  026D               	subwf	PID@set^(0+128),w
   763  01A5                     u4455:	
   764  01A5  1803               	skipnc
   765  01A6  29BA               	goto	l134
   766  01A7  0020               	movlb	0	; select bank0
   767  01A8  1C6B               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
   768  01A9  29BA               	goto	l134
   769  01AA  0021               	movlb	1	; select bank1
   770  01AB  0854               	movf	(_lset+1)^(0+128),w
   771  01AC  3A80               	xorlw	128
   772  01AD  0022               	movlb	2	; select bank2
   773  01AE  00A0               	movwf	??_PID^(0+256)
   774  01AF  3080               	movlw	128
   775  01B0  0220               	subwf	??_PID^(0+256),w
   776  01B1  1D03               	skipz
   777  01B2  29B6               	goto	u4475
   778  01B3  3001               	movlw	1
   779  01B4  0021               	movlb	1	; select bank1
   780  01B5  0253               	subwf	_lset^(0+128),w
   781  01B6                     u4475:	
   782  01B6  1803               	skipnc
   783  01B7  29BA               	goto	l134
   784                           
   785                           ;main.c: 295: {
   786                           ;main.c: 296: zero_cross = 0;
   787  01B8  0020               	movlb	0	; select bank0
   788  01B9  106B               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
   789  01BA                     l134:	
   790                           
   791                           ;main.c: 297: }
   792                           ;main.c: 298: if (zero_cross == 1) {
   793  01BA  0020               	movlb	0	; select bank0
   794  01BB  1C6B               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
   795  01BC  29D1               	goto	l3261
   796  01BD                     l3255:	
   797                           
   798                           ;main.c: 300: calculate_pid(0);
   799  01BD  0020               	movlb	0	; select bank0
   800  01BE  01E8               	clrf	calculate_pid@set
   801  01BF  01E9               	clrf	calculate_pid@set+1
   802  01C0  3182  2234  3180   	fcall	_calculate_pid
   803                           
   804                           ;main.c: 301: _delay((unsigned long)((10)*(32000000/4000.0)));
   805  01C3  3068               	movlw	104
   806  01C4  0022               	movlb	2	; select bank2
   807  01C5  00A0               	movwf	??_PID^(0+256)
   808  01C6  30E4               	movlw	228
   809  01C7                     u4517:	
   810  01C7  0B89               	decfsz	9,f
   811  01C8  29C7               	goto	u4517
   812  01C9  0BA0               	decfsz	??_PID^(0+256),f
   813  01CA  29C7               	goto	u4517
   814  01CB  0000               	nop
   815                           
   816                           ;main.c: 302: } while ((I2C_buffer.data.RPM != 0));
   817  01CC  0021               	movlb	1	; select bank1
   818  01CD  082B               	movf	(_I2C_buffer^(0+128)+11),w	;volatile
   819  01CE  042C               	iorwf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
   820  01CF  1D03               	btfss	3,2
   821  01D0  29BD               	goto	l3255
   822  01D1                     l3261:	
   823                           
   824                           ;main.c: 303: }
   825                           ;main.c: 304: lset = set;
   826  01D1  0021               	movlb	1	; select bank1
   827  01D2  086E               	movf	(PID@set+1)^(0+128),w
   828  01D3  00D4               	movwf	(_lset+1)^(0+128)
   829  01D4  086D               	movf	PID@set^(0+128),w
   830  01D5  00D3               	movwf	_lset^(0+128)
   831                           
   832                           ;main.c: 305: calculate_pid(set);
   833  01D6  086E               	movf	(PID@set+1)^(0+128),w
   834  01D7  0020               	movlb	0	; select bank0
   835  01D8  00E9               	movwf	calculate_pid@set+1
   836  01D9  0021               	movlb	1	; select bank1
   837  01DA  086D               	movf	PID@set^(0+128),w
   838  01DB  0020               	movlb	0	; select bank0
   839  01DC  00E8               	movwf	calculate_pid@set
   840  01DD  3182  2A34         	ljmp	l3191
   841  01DF                     __end_of_PID:	
   842  01DF                     __ptext2:	
   843 ;; *************** function _PWM_Init *****************
   844 ;; Defined at:
   845 ;;		line 177 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  2  107[None  ] int 
   852 ;; Registers used:
   853 ;;		wreg, status,2
   854 ;; Tracked objects:
   855 ;;		On entry : B1F/1
   856 ;;		On exit  : B1F/0
   857 ;;		Unchanged: B00/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   859 ;;      Params:         0       0       0       0
   860 ;;      Locals:         0       0       0       0
   861 ;;      Temps:          0       0       0       0
   862 ;;      Totals:         0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    2
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _PWM_Init
   875  01DF                     _PWM_Init:	
   876                           
   877                           ;main.c: 198: PR2 = 0xFF;
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _PWM_Init: [wreg+status,2]
   881  01DF  30FF               	movlw	255
   882  01E0  0020               	movlb	0	; select bank0
   883  01E1  009B               	movwf	27	;volatile
   884                           
   885                           ;main.c: 199: CCP1CON = 0b00001100;
   886  01E2  300C               	movlw	12
   887  01E3  0025               	movlb	5	; select bank5
   888  01E4  0093               	movwf	19	;volatile
   889                           
   890                           ;main.c: 200: CCPR1L = 0b00000000;
   891  01E5  0191               	clrf	17	;volatile
   892                           
   893                           ;main.c: 201: PIR1bits.TMR2IF = 0;
   894  01E6  0020               	movlb	0	; select bank0
   895  01E7  1091               	bcf	17,1	;volatile
   896                           
   897                           ;main.c: 202: T2CON = 0b00000100;
   898  01E8  3004               	movlw	4
   899  01E9  009C               	movwf	28	;volatile
   900  01EA  0008               	return
   901  01EB                     __end_of_PWM_Init:	
   902  01EB                     __ptext1:	
   903 ;; *************** function _init_I2C_buffer *****************
   904 ;; Defined at:
   905 ;;		line 315 in file "main.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2
   914 ;; Tracked objects:
   915 ;;		On entry : B1F/1
   916 ;;		On exit  : B1F/1
   917 ;;		Unchanged: B00/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   919 ;;      Params:         0       0       0       0
   920 ;;      Locals:         0       0       0       0
   921 ;;      Temps:          0       0       0       0
   922 ;;      Totals:         0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    2
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           
   934                           ;psect for function _init_I2C_buffer
   935  01EB                     _init_I2C_buffer:	
   936                           
   937                           ;main.c: 316: I2C_buffer.data.ID = 0xF3;
   938                           
   939                           ;incstack = 0
   940                           ; Regs used in _init_I2C_buffer: [wreg+status,2]
   941  01EB  30F3               	movlw	243
   942  01EC  00A0               	movwf	_I2C_buffer^(0+128)	;volatile
   943                           
   944                           ;main.c: 317: I2C_buffer.data.ADDRESS = 0x24 << 1;
   945  01ED  3048               	movlw	72
   946  01EE  00A1               	movwf	(_I2C_buffer^(0+128)+1)	;volatile
   947                           
   948                           ;main.c: 318: I2C_buffer.data.START_STOP = 0;
   949  01EF  01A2               	clrf	(_I2C_buffer^(0+128)+2)	;volatile
   950                           
   951                           ;main.c: 319: I2C_buffer.data.IOWPU = 1;
   952  01F0  3001               	movlw	1
   953  01F1  00A3               	movwf	(_I2C_buffer^(0+128)+3)	;volatile
   954                           
   955                           ;main.c: 320: I2C_buffer.data.MODE = 5;
   956  01F2  3005               	movlw	5
   957  01F3  00A4               	movwf	(_I2C_buffer^(0+128)+4)	;volatile
   958                           
   959                           ;main.c: 321: I2C_buffer.data.SAVE = 0;
   960  01F4  01A5               	clrf	(_I2C_buffer^(0+128)+5)	;volatile
   961                           
   962                           ;main.c: 322: I2C_buffer.data.RESET = 0;
   963  01F5  01A6               	clrf	(_I2C_buffer^(0+128)+6)	;volatile
   964                           
   965                           ;main.c: 323: I2C_buffer.data.GEAR_RATIO = 150;
   966  01F6  3096               	movlw	150
   967  01F7  00A7               	movwf	(_I2C_buffer^(0+128)+7)	;volatile
   968  01F8  01A8               	clrf	((_I2C_buffer+1)^(0+128)+7)	;volatile
   969                           
   970                           ;main.c: 324: I2C_buffer.data.DIAMETER = 42;
   971  01F9  302A               	movlw	42
   972  01FA  00A9               	movwf	(_I2C_buffer^(0+128)+9)	;volatile
   973  01FB  01AA               	clrf	((_I2C_buffer+1)^(0+128)+9)	;volatile
   974                           
   975                           ;main.c: 325: I2C_buffer.data.RPM = 0;
   976  01FC  01AB               	clrf	(_I2C_buffer^(0+128)+11)	;volatile
   977  01FD  01AC               	clrf	((_I2C_buffer+1)^(0+128)+11)	;volatile
   978                           
   979                           ;main.c: 326: I2C_buffer.data.SPEED = 0;
   980  01FE  01AD               	clrf	(_I2C_buffer^(0+128)+13)	;volatile
   981  01FF  01AE               	clrf	((_I2C_buffer+1)^(0+128)+13)	;volatile
   982                           
   983                           ;main.c: 327: I2C_buffer.data.DISTANCE = 0;
   984  0200  01AF               	clrf	(_I2C_buffer^(0+128)+15)	;volatile
   985  0201  01B0               	clrf	((_I2C_buffer+1)^(0+128)+15)	;volatile
   986  0202  01B1               	clrf	((_I2C_buffer+2)^(0+128)+15)	;volatile
   987  0203  01B2               	clrf	((_I2C_buffer+3)^(0+128)+15)	;volatile
   988                           
   989                           ;main.c: 328: I2C_buffer.data.RPM_PID_KP = 0.1;
   990  0204  303D               	movlw	61
   991  0205  00B6               	movwf	((_I2C_buffer+3)^(0+128)+19)	;volatile
   992  0206  30CC               	movlw	204
   993  0207  00B5               	movwf	((_I2C_buffer+2)^(0+128)+19)	;volatile
   994  0208  00B4               	movwf	((_I2C_buffer+1)^(0+128)+19)	;volatile
   995  0209  30CD               	movlw	205
   996  020A  00B3               	movwf	(_I2C_buffer^(0+128)+19)	;volatile
   997                           
   998                           ;main.c: 329: I2C_buffer.data.RPM_PID_KD = 0.01;
   999  020B  303C               	movlw	60
  1000  020C  00BA               	movwf	((_I2C_buffer+3)^(0+128)+23)	;volatile
  1001  020D  3023               	movlw	35
  1002  020E  00B9               	movwf	((_I2C_buffer+2)^(0+128)+23)	;volatile
  1003  020F  30D7               	movlw	215
  1004  0210  00B8               	movwf	((_I2C_buffer+1)^(0+128)+23)	;volatile
  1005  0211  300A               	movlw	10
  1006  0212  00B7               	movwf	(_I2C_buffer^(0+128)+23)	;volatile
  1007                           
  1008                           ;main.c: 330: I2C_buffer.data.RPM_PID_KI = 0.04;
  1009  0213  303D               	movlw	61
  1010  0214  00BE               	movwf	((_I2C_buffer+3)^(0+128)+27)	;volatile
  1011  0215  3023               	movlw	35
  1012  0216  00BD               	movwf	((_I2C_buffer+2)^(0+128)+27)	;volatile
  1013  0217  30D7               	movlw	215
  1014  0218  00BC               	movwf	((_I2C_buffer+1)^(0+128)+27)	;volatile
  1015  0219  300A               	movlw	10
  1016  021A  00BB               	movwf	(_I2C_buffer^(0+128)+27)	;volatile
  1017                           
  1018                           ;main.c: 331: I2C_buffer.data.ATS_PID_KP = 0.15;
  1019  021B  303E               	movlw	62
  1020  021C  00C2               	movwf	((_I2C_buffer+3)^(0+128)+31)	;volatile
  1021  021D  3019               	movlw	25
  1022  021E  00C1               	movwf	((_I2C_buffer+2)^(0+128)+31)	;volatile
  1023  021F  3099               	movlw	153
  1024  0220  00C0               	movwf	((_I2C_buffer+1)^(0+128)+31)	;volatile
  1025  0221  309A               	movlw	154
  1026  0222  00BF               	movwf	(_I2C_buffer^(0+128)+31)	;volatile
  1027                           
  1028                           ;main.c: 332: I2C_buffer.data.ATS_PID_KD = 0.08;
  1029  0223  303D               	movlw	61
  1030  0224  00C6               	movwf	((_I2C_buffer+3)^(0+128)+35)	;volatile
  1031  0225  30A3               	movlw	163
  1032  0226  00C5               	movwf	((_I2C_buffer+2)^(0+128)+35)	;volatile
  1033  0227  30D7               	movlw	215
  1034  0228  00C4               	movwf	((_I2C_buffer+1)^(0+128)+35)	;volatile
  1035  0229  300A               	movlw	10
  1036  022A  00C3               	movwf	(_I2C_buffer^(0+128)+35)	;volatile
  1037                           
  1038                           ;main.c: 333: I2C_buffer.data.ATS_PID_KI = 0.03;
  1039  022B  303C               	movlw	60
  1040  022C  00CA               	movwf	((_I2C_buffer+3)^(0+128)+39)	;volatile
  1041  022D  30F5               	movlw	245
  1042  022E  00C9               	movwf	((_I2C_buffer+2)^(0+128)+39)	;volatile
  1043  022F  30C2               	movlw	194
  1044  0230  00C8               	movwf	((_I2C_buffer+1)^(0+128)+39)	;volatile
  1045  0231  308F               	movlw	143
  1046  0232  00C7               	movwf	(_I2C_buffer^(0+128)+39)	;volatile
  1047  0233  0008               	return
  1048  0234                     __end_of_init_I2C_buffer:	
  1049                           
  1050                           	psect	bitbssCOMMON
  1051  03E8                     __pbitbssCOMMON:	
  1052  03E8                     _warming_up:	
  1053  03E8                     	ds	1
  1054                           
  1055                           	psect	bitbssBANK0
  1056  0358                     __pbitbssBANK0:	
  1057  0358                     _zero_cross:	
  1058  0358                     	ds	1
  1059                           
  1060                           	psect	bssBANK0
  1061  006C                     __pbssBANK0:	
  1062  006C                     _index_i2c:	
  1063  006C                     	ds	1
  1064                           
  1065                           	psect	dataBANK0
  1066  006D                     __pdataBANK0:	
  1067  006D                     _first_i2c:	
  1068  006D                     	ds	1
  1069                           
  1070                           	psect	bssBANK1
  1071  00A0                     __pbssBANK1:	
  1072  00A0                     _I2C_buffer:	
  1073  00A0                     	ds	43
  1074  00CB                     _lasterror:	
  1075  00CB                     	ds	4
  1076  00CF                     _accumulator:	
  1077  00CF                     	ds	4
  1078  00D3                     _lset:	
  1079  00D3                     	ds	2
  1080  00D5                     _counter:	
  1081  00D5                     	ds	2
  1082                           
  1083                           	psect	clrtext
  1084  07FA                     clear_ram0:	
  1085                           ;	Called with FSR0 containing the base address, and
  1086                           ;	WREG with the size to clear
  1087                           
  1088  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1089  07FB                     clrloop0:	
  1090  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1091  07FC  3101               	addfsr 0,1
  1092  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1093  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  1094  07FF  3400               	retlw	0	;all done for this memory range, return
  1095                           
  1096                           	psect	cstackBANK2
  1097  0120                     __pcstackBANK2:	
  1098  0120                     ??_PID:	
  1099                           
  1100                           ; 1 bytes @ 0x0
  1101  0120                     	ds	2
  1102                           
  1103                           	psect	cstackBANK1
  1104  00D7                     __pcstackBANK1:	
  1105  00D7                     ?___flsub:	
  1106  00D7                     ___flsub@a:	
  1107                           ; 4 bytes @ 0x0
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x0
  1111  00D7                     	ds	4
  1112  00DB                     ___flsub@b:	
  1113                           
  1114                           ; 4 bytes @ 0x4
  1115  00DB                     	ds	4
  1116  00DF                     _calculate_pid$1070:	
  1117                           
  1118                           ; 4 bytes @ 0x8
  1119  00DF                     	ds	4
  1120  00E3                     calculate_pid@rpm2:	
  1121                           
  1122                           ; 2 bytes @ 0xC
  1123  00E3                     	ds	2
  1124  00E5                     calculate_pid@error:	
  1125                           
  1126                           ; 4 bytes @ 0xE
  1127  00E5                     	ds	4
  1128  00E9                     calculate_pid@pid:	
  1129                           
  1130                           ; 4 bytes @ 0x12
  1131  00E9                     	ds	4
  1132  00ED                     ?_PID:	
  1133  00ED                     PID@set:	
  1134                           ; 1 bytes @ 0x16
  1135                           
  1136                           
  1137                           ; 2 bytes @ 0x16
  1138  00ED                     	ds	2
  1139  00EF                     ??_main:	
  1140                           
  1141                           ; 1 bytes @ 0x18
  1142  00EF                     	ds	1
  1143                           
  1144                           	psect	cstackCOMMON
  1145  0070                     __pcstackCOMMON:	
  1146  0070                     ?_isr:	
  1147  0070                     ?_init_I2C_buffer:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_main:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_PWM_Init:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?i1___wmul:	
  1157                           ; 2 bytes @ 0x0
  1158                           
  1159  0070                     i1___wmul@multiplier:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162                           
  1163                           ; 2 bytes @ 0x0
  1164  0070                     	ds	2
  1165  0072                     i1___wmul@multiplicand:	
  1166                           
  1167                           ; 2 bytes @ 0x2
  1168  0072                     	ds	2
  1169  0074                     ??i1___wmul:	
  1170  0074                     i1___wmul@product:	
  1171                           ; 1 bytes @ 0x4
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0x4
  1175  0074                     	ds	2
  1176  0076                     ?___lwdiv:	
  1177  0076                     ___lwdiv@divisor:	
  1178                           ; 2 bytes @ 0x6
  1179                           
  1180                           
  1181                           ; 2 bytes @ 0x6
  1182  0076                     	ds	2
  1183  0078                     ___lwdiv@dividend:	
  1184                           
  1185                           ; 2 bytes @ 0x8
  1186  0078                     	ds	2
  1187  007A                     ??___lwdiv:	
  1188  007A                     ___lwdiv@quotient:	
  1189                           ; 1 bytes @ 0xA
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0xA
  1193  007A                     	ds	2
  1194  007C                     ___lwdiv@counter:	
  1195                           
  1196                           ; 1 bytes @ 0xC
  1197  007C                     	ds	1
  1198                           
  1199                           	psect	cstackBANK0
  1200  0020                     __pcstackBANK0:	
  1201  0020                     ??_isr:	
  1202                           
  1203                           ; 1 bytes @ 0x0
  1204  0020                     	ds	2
  1205  0022                     ?___flge:	
  1206  0022                     ??_PWM_Init:	
  1207                           ; 1 bit 
  1208                           
  1209  0022                     ??_init_I2C_buffer:	
  1210                           ; 1 bytes @ 0x2
  1211                           
  1212  0022                     ?__Umul8_16:	
  1213                           ; 1 bytes @ 0x2
  1214                           
  1215  0022                     ?_PWM_set_duty:	
  1216                           ; 2 bytes @ 0x2
  1217                           
  1218  0022                     ?___wmul:	
  1219                           ; 2 bytes @ 0x2
  1220                           
  1221  0022                     ?___fltol:	
  1222                           ; 2 bytes @ 0x2
  1223                           
  1224  0022                     ?___fldiv:	
  1225                           ; 4 bytes @ 0x2
  1226                           
  1227  0022                     ?___xxtofl:	
  1228                           ; 4 bytes @ 0x2
  1229                           
  1230  0022                     __Umul8_16@multiplicand:	
  1231                           ; 4 bytes @ 0x2
  1232                           
  1233  0022                     PWM_set_duty@duty:	
  1234                           ; 1 bytes @ 0x2
  1235                           
  1236  0022                     ___wmul@multiplier:	
  1237                           ; 2 bytes @ 0x2
  1238                           
  1239  0022                     ___flge@ff1:	
  1240                           ; 2 bytes @ 0x2
  1241                           
  1242  0022                     ___fltol@f1:	
  1243                           ; 4 bytes @ 0x2
  1244                           
  1245  0022                     ___fldiv@a:	
  1246                           ; 4 bytes @ 0x2
  1247                           
  1248  0022                     ___xxtofl@val:	
  1249                           ; 4 bytes @ 0x2
  1250                           
  1251                           
  1252                           ; 4 bytes @ 0x2
  1253  0022                     	ds	2
  1254  0024                     ??_PWM_set_duty:	
  1255  0024                     ___wmul@multiplicand:	
  1256                           ; 1 bytes @ 0x4
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x4
  1260  0024                     	ds	1
  1261  0025                     ??__Umul8_16:	
  1262  0025                     __Umul8_16@product:	
  1263                           ; 1 bytes @ 0x5
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x5
  1267  0025                     	ds	1
  1268  0026                     ??___wmul:	
  1269  0026                     ??___fltol:	
  1270                           ; 1 bytes @ 0x6
  1271                           
  1272  0026                     ??___xxtofl:	
  1273                           ; 1 bytes @ 0x6
  1274                           
  1275  0026                     ___wmul@product:	
  1276                           ; 1 bytes @ 0x6
  1277                           
  1278  0026                     ___flge@ff2:	
  1279                           ; 2 bytes @ 0x6
  1280                           
  1281  0026                     ___fldiv@b:	
  1282                           ; 4 bytes @ 0x6
  1283                           
  1284                           
  1285                           ; 4 bytes @ 0x6
  1286  0026                     	ds	1
  1287  0027                     __Umul8_16@multiplier:	
  1288                           
  1289                           ; 1 bytes @ 0x7
  1290  0027                     	ds	1
  1291  0028                     __Umul8_16@word_mpld:	
  1292                           
  1293                           ; 2 bytes @ 0x8
  1294  0028                     	ds	2
  1295  002A                     ??___flge:	
  1296  002A                     ??___fldiv:	
  1297                           ; 1 bytes @ 0xA
  1298                           
  1299  002A                     ___fltol@sign1:	
  1300                           ; 1 bytes @ 0xA
  1301                           
  1302  002A                     ___xxtofl@sign:	
  1303                           ; 1 bytes @ 0xA
  1304                           
  1305                           
  1306                           ; 1 bytes @ 0xA
  1307  002A                     	ds	1
  1308  002B                     ___fltol@exp1:	
  1309  002B                     ___xxtofl@exp:	
  1310                           ; 1 bytes @ 0xB
  1311                           
  1312                           
  1313                           ; 1 bytes @ 0xB
  1314  002B                     	ds	1
  1315  002C                     ?_M_control:	
  1316  002C                     M_control@ctr:	
  1317                           ; 1 bytes @ 0xC
  1318                           
  1319  002C                     ___xxtofl@arg:	
  1320                           ; 2 bytes @ 0xC
  1321                           
  1322                           
  1323                           ; 4 bytes @ 0xC
  1324  002C                     	ds	2
  1325  002E                     ??_M_control:	
  1326  002E                     ___fldiv@sign:	
  1327                           ; 1 bytes @ 0xE
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0xE
  1331  002E                     	ds	1
  1332  002F                     ___fldiv@rem:	
  1333                           
  1334                           ; 4 bytes @ 0xF
  1335  002F                     	ds	4
  1336  0033                     ___fldiv@new_exp:	
  1337                           
  1338                           ; 2 bytes @ 0x13
  1339  0033                     	ds	2
  1340  0035                     ___fldiv@grs:	
  1341                           
  1342                           ; 4 bytes @ 0x15
  1343  0035                     	ds	4
  1344  0039                     ___fldiv@bexp:	
  1345                           
  1346                           ; 1 bytes @ 0x19
  1347  0039                     	ds	1
  1348  003A                     ___fldiv@aexp:	
  1349                           
  1350                           ; 1 bytes @ 0x1A
  1351  003A                     	ds	1
  1352  003B                     ?___flmul:	
  1353  003B                     ___flmul@b:	
  1354                           ; 4 bytes @ 0x1B
  1355                           
  1356                           
  1357                           ; 4 bytes @ 0x1B
  1358  003B                     	ds	4
  1359  003F                     ___flmul@a:	
  1360                           
  1361                           ; 4 bytes @ 0x1F
  1362  003F                     	ds	4
  1363  0043                     ??___flmul:	
  1364                           
  1365                           ; 1 bytes @ 0x23
  1366  0043                     	ds	4
  1367  0047                     ___flmul@sign:	
  1368                           
  1369                           ; 1 bytes @ 0x27
  1370  0047                     	ds	1
  1371  0048                     ___flmul@aexp:	
  1372                           
  1373                           ; 1 bytes @ 0x28
  1374  0048                     	ds	1
  1375  0049                     ___flmul@bexp:	
  1376                           
  1377                           ; 1 bytes @ 0x29
  1378  0049                     	ds	1
  1379  004A                     ___flmul@grs:	
  1380                           
  1381                           ; 4 bytes @ 0x2A
  1382  004A                     	ds	4
  1383  004E                     ___flmul@prod:	
  1384                           
  1385                           ; 4 bytes @ 0x2E
  1386  004E                     	ds	4
  1387  0052                     ___flmul@temp:	
  1388                           
  1389                           ; 2 bytes @ 0x32
  1390  0052                     	ds	2
  1391  0054                     ?___fladd:	
  1392  0054                     ___fladd@b:	
  1393                           ; 4 bytes @ 0x34
  1394                           
  1395                           
  1396                           ; 4 bytes @ 0x34
  1397  0054                     	ds	4
  1398  0058                     ___fladd@a:	
  1399                           
  1400                           ; 4 bytes @ 0x38
  1401  0058                     	ds	4
  1402  005C                     ??___fladd:	
  1403                           
  1404                           ; 1 bytes @ 0x3C
  1405  005C                     	ds	8
  1406  0064                     ___fladd@signs:	
  1407                           
  1408                           ; 1 bytes @ 0x44
  1409  0064                     	ds	1
  1410  0065                     ___fladd@aexp:	
  1411                           
  1412                           ; 1 bytes @ 0x45
  1413  0065                     	ds	1
  1414  0066                     ___fladd@bexp:	
  1415                           
  1416                           ; 1 bytes @ 0x46
  1417  0066                     	ds	1
  1418  0067                     ___fladd@grs:	
  1419                           
  1420                           ; 1 bytes @ 0x47
  1421  0067                     	ds	1
  1422  0068                     ?_calculate_pid:	
  1423  0068                     ??___flsub:	
  1424                           ; 1 bytes @ 0x48
  1425                           
  1426  0068                     calculate_pid@set:	
  1427                           ; 1 bytes @ 0x48
  1428                           
  1429                           
  1430                           ; 2 bytes @ 0x48
  1431  0068                     	ds	2
  1432  006A                     ??_calculate_pid:	
  1433                           
  1434                           ; 1 bytes @ 0x4A
  1435  006A                     	ds	1
  1436                           
  1437                           	psect	text4
  1438  0234                     __ptext4:	
  1439 ;; *************** function _calculate_pid *****************
  1440 ;; Defined at:
  1441 ;;		line 242 in file "main.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  set             2   72[BANK0 ] int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  pid             4   18[BANK1 ] float 
  1446 ;;  error           4   14[BANK1 ] float 
  1447 ;;  rpm2            2   12[BANK1 ] int 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 1F/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1457 ;;      Params:         0       2       0       0
  1458 ;;      Locals:         0       0      14       0
  1459 ;;      Temps:          0       1       0       0
  1460 ;;      Totals:         0       3      14       0
  1461 ;;Total ram usage:       17 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    4
  1464 ;; This function calls:
  1465 ;;		_M_control
  1466 ;;		___fladd
  1467 ;;		___fldiv
  1468 ;;		___flge
  1469 ;;		___flmul
  1470 ;;		___flsub
  1471 ;;		___fltol
  1472 ;;		___xxtofl
  1473 ;; This function is called by:
  1474 ;;		_PID
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _calculate_pid
  1480  0234                     _calculate_pid:	
  1481  0234                     l3191:	
  1482                           ;incstack = 0
  1483                           ; Regs used in _calculate_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1484                           
  1485                           
  1486                           ;main.c: 245: float pid = 0;
  1487  0234  0021               	movlb	1	; select bank1
  1488  0235  01E9               	clrf	calculate_pid@pid^(0+128)
  1489  0236  01EA               	clrf	(calculate_pid@pid+1)^(0+128)
  1490  0237  01EB               	clrf	(calculate_pid@pid+2)^(0+128)
  1491  0238  01EC               	clrf	(calculate_pid@pid+3)^(0+128)
  1492                           
  1493                           ;main.c: 246: int rpm2 = I2C_buffer.data.RPM + 600;
  1494  0239  082C               	movf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  1495  023A  00E4               	movwf	(calculate_pid@rpm2+1)^(0+128)
  1496  023B  082B               	movf	(_I2C_buffer^(0+128)+11),w	;volatile
  1497  023C  00E3               	movwf	calculate_pid@rpm2^(0+128)
  1498  023D  3058               	movlw	88
  1499  023E  07E3               	addwf	calculate_pid@rpm2^(0+128),f
  1500  023F  3002               	movlw	2
  1501  0240  3DE4               	addwfc	(calculate_pid@rpm2+1)^(0+128),f
  1502                           
  1503                           ;main.c: 247: set = set + 600;
  1504  0241  3058               	movlw	88
  1505  0242  0020               	movlb	0	; select bank0
  1506  0243  07E8               	addwf	calculate_pid@set,f
  1507  0244  3002               	movlw	2
  1508  0245  3DE9               	addwfc	calculate_pid@set+1,f
  1509                           
  1510                           ;main.c: 248: error = set - rpm2;
  1511  0246  0021               	movlb	1	; select bank1
  1512  0247  0863               	movf	calculate_pid@rpm2^(0+128),w
  1513  0248  0020               	movlb	0	; select bank0
  1514  0249  0268               	subwf	calculate_pid@set,w
  1515  024A  00A2               	movwf	___xxtofl@val
  1516  024B  0021               	movlb	1	; select bank1
  1517  024C  0864               	movf	(calculate_pid@rpm2+1)^(0+128),w
  1518  024D  0020               	movlb	0	; select bank0
  1519  024E  3B69               	subwfb	calculate_pid@set+1,w
  1520  024F  00A3               	movwf	___xxtofl@val+1
  1521  0250  01A4               	clrf	___xxtofl@val+2
  1522  0251  1BA3               	btfsc	___xxtofl@val+1,7
  1523  0252  03A4               	decf	___xxtofl@val+2,f
  1524  0253  0824               	movf	___xxtofl@val+2,w
  1525  0254  00A5               	movwf	___xxtofl@val+3
  1526  0255  3001               	movlw	1
  1527  0256  318E  2609  3182   	fcall	___xxtofl
  1528  0259  0825               	movf	?___xxtofl+3,w
  1529  025A  0021               	movlb	1	; select bank1
  1530  025B  00E8               	movwf	(calculate_pid@error+3)^(0+128)
  1531  025C  0020               	movlb	0	; select bank0
  1532  025D  0824               	movf	?___xxtofl+2,w
  1533  025E  0021               	movlb	1	; select bank1
  1534  025F  00E7               	movwf	(calculate_pid@error+2)^(0+128)
  1535  0260  0020               	movlb	0	; select bank0
  1536  0261  0823               	movf	?___xxtofl+1,w
  1537  0262  0021               	movlb	1	; select bank1
  1538  0263  00E6               	movwf	(calculate_pid@error+1)^(0+128)
  1539  0264  0020               	movlb	0	; select bank0
  1540  0265  0822               	movf	?___xxtofl,w
  1541  0266  0021               	movlb	1	; select bank1
  1542  0267  00E5               	movwf	calculate_pid@error^(0+128)
  1543                           
  1544                           ;main.c: 249: pid = error * I2C_buffer.data.RPM_PID_KP;
  1545  0268  0868               	movf	(calculate_pid@error+3)^(0+128),w
  1546  0269  0020               	movlb	0	; select bank0
  1547  026A  00BE               	movwf	___flmul@b+3
  1548  026B  0021               	movlb	1	; select bank1
  1549  026C  0867               	movf	(calculate_pid@error+2)^(0+128),w
  1550  026D  0020               	movlb	0	; select bank0
  1551  026E  00BD               	movwf	___flmul@b+2
  1552  026F  0021               	movlb	1	; select bank1
  1553  0270  0866               	movf	(calculate_pid@error+1)^(0+128),w
  1554  0271  0020               	movlb	0	; select bank0
  1555  0272  00BC               	movwf	___flmul@b+1
  1556  0273  0021               	movlb	1	; select bank1
  1557  0274  0865               	movf	calculate_pid@error^(0+128),w
  1558  0275  0020               	movlb	0	; select bank0
  1559  0276  00BB               	movwf	___flmul@b
  1560  0277  3013               	movlw	19
  1561  0278  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1562  0279  0086               	movwf	6
  1563  027A  0187               	clrf	7
  1564  027B  3F40               	moviw [0]fsr1
  1565  027C  00BF               	movwf	___flmul@a
  1566  027D  3F41               	moviw [1]fsr1
  1567  027E  00C0               	movwf	___flmul@a+1
  1568  027F  3F42               	moviw [2]fsr1
  1569  0280  00C1               	movwf	___flmul@a+2
  1570  0281  3F43               	moviw [3]fsr1
  1571  0282  00C2               	movwf	___flmul@a+3
  1572  0283  3186  261A  3182   	fcall	___flmul
  1573  0286  083E               	movf	?___flmul+3,w
  1574  0287  0021               	movlb	1	; select bank1
  1575  0288  00EC               	movwf	(calculate_pid@pid+3)^(0+128)
  1576  0289  0020               	movlb	0	; select bank0
  1577  028A  083D               	movf	?___flmul+2,w
  1578  028B  0021               	movlb	1	; select bank1
  1579  028C  00EB               	movwf	(calculate_pid@pid+2)^(0+128)
  1580  028D  0020               	movlb	0	; select bank0
  1581  028E  083C               	movf	?___flmul+1,w
  1582  028F  0021               	movlb	1	; select bank1
  1583  0290  00EA               	movwf	(calculate_pid@pid+1)^(0+128)
  1584  0291  0020               	movlb	0	; select bank0
  1585  0292  083B               	movf	?___flmul,w
  1586  0293  0021               	movlb	1	; select bank1
  1587  0294  00E9               	movwf	calculate_pid@pid^(0+128)
  1588                           
  1589                           ;main.c: 250: accumulator += error;
  1590  0295  0868               	movf	(calculate_pid@error+3)^(0+128),w
  1591  0296  0020               	movlb	0	; select bank0
  1592  0297  00D7               	movwf	___fladd@b+3
  1593  0298  0021               	movlb	1	; select bank1
  1594  0299  0867               	movf	(calculate_pid@error+2)^(0+128),w
  1595  029A  0020               	movlb	0	; select bank0
  1596  029B  00D6               	movwf	___fladd@b+2
  1597  029C  0021               	movlb	1	; select bank1
  1598  029D  0866               	movf	(calculate_pid@error+1)^(0+128),w
  1599  029E  0020               	movlb	0	; select bank0
  1600  029F  00D5               	movwf	___fladd@b+1
  1601  02A0  0021               	movlb	1	; select bank1
  1602  02A1  0865               	movf	calculate_pid@error^(0+128),w
  1603  02A2  0020               	movlb	0	; select bank0
  1604  02A3  00D4               	movwf	___fladd@b
  1605  02A4  0021               	movlb	1	; select bank1
  1606  02A5  0852               	movf	(_accumulator+3)^(0+128),w
  1607  02A6  0020               	movlb	0	; select bank0
  1608  02A7  00DB               	movwf	___fladd@a+3
  1609  02A8  0021               	movlb	1	; select bank1
  1610  02A9  0851               	movf	(_accumulator+2)^(0+128),w
  1611  02AA  0020               	movlb	0	; select bank0
  1612  02AB  00DA               	movwf	___fladd@a+2
  1613  02AC  0021               	movlb	1	; select bank1
  1614  02AD  0850               	movf	(_accumulator+1)^(0+128),w
  1615  02AE  0020               	movlb	0	; select bank0
  1616  02AF  00D9               	movwf	___fladd@a+1
  1617  02B0  0021               	movlb	1	; select bank1
  1618  02B1  084F               	movf	_accumulator^(0+128),w
  1619  02B2  0020               	movlb	0	; select bank0
  1620  02B3  00D8               	movwf	___fladd@a
  1621  02B4  318E  26AF  3182   	fcall	___fladd
  1622  02B7  0857               	movf	?___fladd+3,w
  1623  02B8  0021               	movlb	1	; select bank1
  1624  02B9  00D2               	movwf	(_accumulator+3)^(0+128)
  1625  02BA  0020               	movlb	0	; select bank0
  1626  02BB  0856               	movf	?___fladd+2,w
  1627  02BC  0021               	movlb	1	; select bank1
  1628  02BD  00D1               	movwf	(_accumulator+2)^(0+128)
  1629  02BE  0020               	movlb	0	; select bank0
  1630  02BF  0855               	movf	?___fladd+1,w
  1631  02C0  0021               	movlb	1	; select bank1
  1632  02C1  00D0               	movwf	(_accumulator+1)^(0+128)
  1633  02C2  0020               	movlb	0	; select bank0
  1634  02C3  0854               	movf	?___fladd,w
  1635  02C4  0021               	movlb	1	; select bank1
  1636  02C5  00CF               	movwf	_accumulator^(0+128)
  1637                           
  1638                           ;main.c: 251: pid += I2C_buffer.data.RPM_PID_KI*accumulator;
  1639  02C6  301B               	movlw	27
  1640  02C7  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1641  02C8  0086               	movwf	6
  1642  02C9  0187               	clrf	7
  1643  02CA  3F40               	moviw [0]fsr1
  1644  02CB  0020               	movlb	0	; select bank0
  1645  02CC  00BF               	movwf	___flmul@a
  1646  02CD  3F41               	moviw [1]fsr1
  1647  02CE  00C0               	movwf	___flmul@a+1
  1648  02CF  3F42               	moviw [2]fsr1
  1649  02D0  00C1               	movwf	___flmul@a+2
  1650  02D1  3F43               	moviw [3]fsr1
  1651  02D2  00C2               	movwf	___flmul@a+3
  1652  02D3  0021               	movlb	1	; select bank1
  1653  02D4  0852               	movf	(_accumulator+3)^(0+128),w
  1654  02D5  0020               	movlb	0	; select bank0
  1655  02D6  00BE               	movwf	___flmul@b+3
  1656  02D7  0021               	movlb	1	; select bank1
  1657  02D8  0851               	movf	(_accumulator+2)^(0+128),w
  1658  02D9  0020               	movlb	0	; select bank0
  1659  02DA  00BD               	movwf	___flmul@b+2
  1660  02DB  0021               	movlb	1	; select bank1
  1661  02DC  0850               	movf	(_accumulator+1)^(0+128),w
  1662  02DD  0020               	movlb	0	; select bank0
  1663  02DE  00BC               	movwf	___flmul@b+1
  1664  02DF  0021               	movlb	1	; select bank1
  1665  02E0  084F               	movf	_accumulator^(0+128),w
  1666  02E1  0020               	movlb	0	; select bank0
  1667  02E2  00BB               	movwf	___flmul@b
  1668  02E3  3186  261A  3182   	fcall	___flmul
  1669  02E6  083E               	movf	?___flmul+3,w
  1670  02E7  00D7               	movwf	___fladd@b+3
  1671  02E8  083D               	movf	?___flmul+2,w
  1672  02E9  00D6               	movwf	___fladd@b+2
  1673  02EA  083C               	movf	?___flmul+1,w
  1674  02EB  00D5               	movwf	___fladd@b+1
  1675  02EC  083B               	movf	?___flmul,w
  1676  02ED  00D4               	movwf	___fladd@b
  1677  02EE  0021               	movlb	1	; select bank1
  1678  02EF  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  1679  02F0  0020               	movlb	0	; select bank0
  1680  02F1  00DB               	movwf	___fladd@a+3
  1681  02F2  0021               	movlb	1	; select bank1
  1682  02F3  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  1683  02F4  0020               	movlb	0	; select bank0
  1684  02F5  00DA               	movwf	___fladd@a+2
  1685  02F6  0021               	movlb	1	; select bank1
  1686  02F7  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  1687  02F8  0020               	movlb	0	; select bank0
  1688  02F9  00D9               	movwf	___fladd@a+1
  1689  02FA  0021               	movlb	1	; select bank1
  1690  02FB  0869               	movf	calculate_pid@pid^(0+128),w
  1691  02FC  0020               	movlb	0	; select bank0
  1692  02FD  00D8               	movwf	___fladd@a
  1693  02FE  318E  26AF  3182   	fcall	___fladd
  1694  0301  0857               	movf	?___fladd+3,w
  1695  0302  0021               	movlb	1	; select bank1
  1696  0303  00EC               	movwf	(calculate_pid@pid+3)^(0+128)
  1697  0304  0020               	movlb	0	; select bank0
  1698  0305  0856               	movf	?___fladd+2,w
  1699  0306  0021               	movlb	1	; select bank1
  1700  0307  00EB               	movwf	(calculate_pid@pid+2)^(0+128)
  1701  0308  0020               	movlb	0	; select bank0
  1702  0309  0855               	movf	?___fladd+1,w
  1703  030A  0021               	movlb	1	; select bank1
  1704  030B  00EA               	movwf	(calculate_pid@pid+1)^(0+128)
  1705  030C  0020               	movlb	0	; select bank0
  1706  030D  0854               	movf	?___fladd,w
  1707  030E  0021               	movlb	1	; select bank1
  1708  030F  00E9               	movwf	calculate_pid@pid^(0+128)
  1709                           
  1710                           ;main.c: 252: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterror);
  1711  0310  0868               	movf	(calculate_pid@error+3)^(0+128),w
  1712  0311  00DE               	movwf	(___flsub@b+3)^(0+128)
  1713  0312  0867               	movf	(calculate_pid@error+2)^(0+128),w
  1714  0313  00DD               	movwf	(___flsub@b+2)^(0+128)
  1715  0314  0866               	movf	(calculate_pid@error+1)^(0+128),w
  1716  0315  00DC               	movwf	(___flsub@b+1)^(0+128)
  1717  0316  0865               	movf	calculate_pid@error^(0+128),w
  1718  0317  00DB               	movwf	___flsub@b^(0+128)
  1719  0318  084E               	movf	(_lasterror+3)^(0+128),w
  1720  0319  00DA               	movwf	(___flsub@a+3)^(0+128)
  1721  031A  084D               	movf	(_lasterror+2)^(0+128),w
  1722  031B  00D9               	movwf	(___flsub@a+2)^(0+128)
  1723  031C  084C               	movf	(_lasterror+1)^(0+128),w
  1724  031D  00D8               	movwf	(___flsub@a+1)^(0+128)
  1725  031E  084B               	movf	_lasterror^(0+128),w
  1726  031F  00D7               	movwf	___flsub@a^(0+128)
  1727  0320  318E  267D  3182   	fcall	___flsub
  1728  0323  085A               	movf	(?___flsub+3)^(0+128),w
  1729  0324  0020               	movlb	0	; select bank0
  1730  0325  00C2               	movwf	___flmul@a+3
  1731  0326  0021               	movlb	1	; select bank1
  1732  0327  0859               	movf	(?___flsub+2)^(0+128),w
  1733  0328  0020               	movlb	0	; select bank0
  1734  0329  00C1               	movwf	___flmul@a+2
  1735  032A  0021               	movlb	1	; select bank1
  1736  032B  0858               	movf	(?___flsub+1)^(0+128),w
  1737  032C  0020               	movlb	0	; select bank0
  1738  032D  00C0               	movwf	___flmul@a+1
  1739  032E  0021               	movlb	1	; select bank1
  1740  032F  0857               	movf	?___flsub^(0+128),w
  1741  0330  0020               	movlb	0	; select bank0
  1742  0331  00BF               	movwf	___flmul@a
  1743  0332  3017               	movlw	23
  1744  0333  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1745  0334  0086               	movwf	6
  1746  0335  0187               	clrf	7
  1747  0336  3F40               	moviw [0]fsr1
  1748  0337  00BB               	movwf	___flmul@b
  1749  0338  3F41               	moviw [1]fsr1
  1750  0339  00BC               	movwf	___flmul@b+1
  1751  033A  3F42               	moviw [2]fsr1
  1752  033B  00BD               	movwf	___flmul@b+2
  1753  033C  3F43               	moviw [3]fsr1
  1754  033D  00BE               	movwf	___flmul@b+3
  1755  033E  3186  261A  3182   	fcall	___flmul
  1756  0341  083E               	movf	?___flmul+3,w
  1757  0342  0021               	movlb	1	; select bank1
  1758  0343  00E2               	movwf	(_calculate_pid$1070+3)^(0+128)
  1759  0344  0020               	movlb	0	; select bank0
  1760  0345  083D               	movf	?___flmul+2,w
  1761  0346  0021               	movlb	1	; select bank1
  1762  0347  00E1               	movwf	(_calculate_pid$1070+2)^(0+128)
  1763  0348  0020               	movlb	0	; select bank0
  1764  0349  083C               	movf	?___flmul+1,w
  1765  034A  0021               	movlb	1	; select bank1
  1766  034B  00E0               	movwf	(_calculate_pid$1070+1)^(0+128)
  1767  034C  0020               	movlb	0	; select bank0
  1768  034D  083B               	movf	?___flmul,w
  1769  034E  0021               	movlb	1	; select bank1
  1770  034F  00DF               	movwf	_calculate_pid$1070^(0+128)
  1771                           
  1772                           ;main.c: 252: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterror);
  1773  0350  0862               	movf	(_calculate_pid$1070+3)^(0+128),w
  1774  0351  0020               	movlb	0	; select bank0
  1775  0352  00D7               	movwf	___fladd@b+3
  1776  0353  0021               	movlb	1	; select bank1
  1777  0354  0861               	movf	(_calculate_pid$1070+2)^(0+128),w
  1778  0355  0020               	movlb	0	; select bank0
  1779  0356  00D6               	movwf	___fladd@b+2
  1780  0357  0021               	movlb	1	; select bank1
  1781  0358  0860               	movf	(_calculate_pid$1070+1)^(0+128),w
  1782  0359  0020               	movlb	0	; select bank0
  1783  035A  00D5               	movwf	___fladd@b+1
  1784  035B  0021               	movlb	1	; select bank1
  1785  035C  085F               	movf	_calculate_pid$1070^(0+128),w
  1786  035D  0020               	movlb	0	; select bank0
  1787  035E  00D4               	movwf	___fladd@b
  1788  035F  0021               	movlb	1	; select bank1
  1789  0360  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  1790  0361  0020               	movlb	0	; select bank0
  1791  0362  00DB               	movwf	___fladd@a+3
  1792  0363  0021               	movlb	1	; select bank1
  1793  0364  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  1794  0365  0020               	movlb	0	; select bank0
  1795  0366  00DA               	movwf	___fladd@a+2
  1796  0367  0021               	movlb	1	; select bank1
  1797  0368  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  1798  0369  0020               	movlb	0	; select bank0
  1799  036A  00D9               	movwf	___fladd@a+1
  1800  036B  0021               	movlb	1	; select bank1
  1801  036C  0869               	movf	calculate_pid@pid^(0+128),w
  1802  036D  0020               	movlb	0	; select bank0
  1803  036E  00D8               	movwf	___fladd@a
  1804  036F  318E  26AF  3182   	fcall	___fladd
  1805  0372  0857               	movf	?___fladd+3,w
  1806  0373  0021               	movlb	1	; select bank1
  1807  0374  00EC               	movwf	(calculate_pid@pid+3)^(0+128)
  1808  0375  0020               	movlb	0	; select bank0
  1809  0376  0856               	movf	?___fladd+2,w
  1810  0377  0021               	movlb	1	; select bank1
  1811  0378  00EB               	movwf	(calculate_pid@pid+2)^(0+128)
  1812  0379  0020               	movlb	0	; select bank0
  1813  037A  0855               	movf	?___fladd+1,w
  1814  037B  0021               	movlb	1	; select bank1
  1815  037C  00EA               	movwf	(calculate_pid@pid+1)^(0+128)
  1816  037D  0020               	movlb	0	; select bank0
  1817  037E  0854               	movf	?___fladd,w
  1818  037F  0021               	movlb	1	; select bank1
  1819  0380  00E9               	movwf	calculate_pid@pid^(0+128)
  1820                           
  1821                           ;main.c: 253: lasterror = error;
  1822  0381  0868               	movf	(calculate_pid@error+3)^(0+128),w
  1823  0382  00CE               	movwf	(_lasterror+3)^(0+128)
  1824  0383  0867               	movf	(calculate_pid@error+2)^(0+128),w
  1825  0384  00CD               	movwf	(_lasterror+2)^(0+128)
  1826  0385  0866               	movf	(calculate_pid@error+1)^(0+128),w
  1827  0386  00CC               	movwf	(_lasterror+1)^(0+128)
  1828  0387  0865               	movf	calculate_pid@error^(0+128),w
  1829  0388  00CB               	movwf	_lasterror^(0+128)
  1830                           
  1831                           ;main.c: 254: if (pid >= 2047)
  1832  0389  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  1833  038A  0020               	movlb	0	; select bank0
  1834  038B  00A5               	movwf	___flge@ff1+3
  1835  038C  0021               	movlb	1	; select bank1
  1836  038D  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  1837  038E  0020               	movlb	0	; select bank0
  1838  038F  00A4               	movwf	___flge@ff1+2
  1839  0390  0021               	movlb	1	; select bank1
  1840  0391  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  1841  0392  0020               	movlb	0	; select bank0
  1842  0393  00A3               	movwf	___flge@ff1+1
  1843  0394  0021               	movlb	1	; select bank1
  1844  0395  0869               	movf	calculate_pid@pid^(0+128),w
  1845  0396  0020               	movlb	0	; select bank0
  1846  0397  00A2               	movwf	___flge@ff1
  1847  0398  3044               	movlw	68
  1848  0399  00A9               	movwf	___flge@ff2+3
  1849  039A  30FF               	movlw	255
  1850  039B  00A8               	movwf	___flge@ff2+2
  1851  039C  30E0               	movlw	224
  1852  039D  00A7               	movwf	___flge@ff2+1
  1853  039E  01A6               	clrf	___flge@ff2
  1854  039F  24A6  3182         	fcall	___flge
  1855  03A1  1C03               	btfss	3,0
  1856  03A2  2BAB               	goto	l3213
  1857                           
  1858                           ;main.c: 255: {
  1859                           ;main.c: 256: pid = 2047;
  1860  03A3  3044               	movlw	68
  1861  03A4  0021               	movlb	1	; select bank1
  1862  03A5  00EC               	movwf	(calculate_pid@pid+3)^(0+128)
  1863  03A6  30FF               	movlw	255
  1864  03A7  00EB               	movwf	(calculate_pid@pid+2)^(0+128)
  1865  03A8  30E0               	movlw	224
  1866  03A9  00EA               	movwf	(calculate_pid@pid+1)^(0+128)
  1867  03AA  01E9               	clrf	calculate_pid@pid^(0+128)
  1868  03AB                     l3213:	
  1869                           
  1870                           ;main.c: 257: }
  1871                           ;main.c: 258: if (pid <= 0)
  1872  03AB  0020               	movlb	0	; select bank0
  1873  03AC  01A2               	clrf	___flge@ff1
  1874  03AD  01A3               	clrf	___flge@ff1+1
  1875  03AE  01A4               	clrf	___flge@ff1+2
  1876  03AF  01A5               	clrf	___flge@ff1+3
  1877  03B0  0021               	movlb	1	; select bank1
  1878  03B1  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  1879  03B2  0020               	movlb	0	; select bank0
  1880  03B3  00A9               	movwf	___flge@ff2+3
  1881  03B4  0021               	movlb	1	; select bank1
  1882  03B5  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  1883  03B6  0020               	movlb	0	; select bank0
  1884  03B7  00A8               	movwf	___flge@ff2+2
  1885  03B8  0021               	movlb	1	; select bank1
  1886  03B9  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  1887  03BA  0020               	movlb	0	; select bank0
  1888  03BB  00A7               	movwf	___flge@ff2+1
  1889  03BC  0021               	movlb	1	; select bank1
  1890  03BD  0869               	movf	calculate_pid@pid^(0+128),w
  1891  03BE  0020               	movlb	0	; select bank0
  1892  03BF  00A6               	movwf	___flge@ff2
  1893  03C0  24A6  3182         	fcall	___flge
  1894  03C2  1C03               	btfss	3,0
  1895  03C3  2BC9               	goto	l3217
  1896                           
  1897                           ;main.c: 259: {
  1898                           ;main.c: 260: pid = 0;
  1899  03C4  0021               	movlb	1	; select bank1
  1900  03C5  01E9               	clrf	calculate_pid@pid^(0+128)
  1901  03C6  01EA               	clrf	(calculate_pid@pid+1)^(0+128)
  1902  03C7  01EB               	clrf	(calculate_pid@pid+2)^(0+128)
  1903  03C8  01EC               	clrf	(calculate_pid@pid+3)^(0+128)
  1904  03C9                     l3217:	
  1905                           
  1906                           ;main.c: 261: }
  1907                           ;main.c: 262: pid = (-1023 + ((2046)*((pid) / (2047))));
  1908  03C9  30C4               	movlw	196
  1909  03CA  0020               	movlb	0	; select bank0
  1910  03CB  00D7               	movwf	___fladd@b+3
  1911  03CC  307F               	movlw	127
  1912  03CD  00D6               	movwf	___fladd@b+2
  1913  03CE  30C0               	movlw	192
  1914  03CF  00D5               	movwf	___fladd@b+1
  1915  03D0  3044               	movlw	68
  1916  03D1  01D4               	clrf	___fladd@b
  1917  03D2  00BE               	movwf	___flmul@b+3
  1918  03D3  30FF               	movlw	255
  1919  03D4  00BD               	movwf	___flmul@b+2
  1920  03D5  30C0               	movlw	192
  1921  03D6  00BC               	movwf	___flmul@b+1
  1922  03D7  3044               	movlw	68
  1923  03D8  01BB               	clrf	___flmul@b
  1924  03D9  00A5               	movwf	___fldiv@a+3
  1925  03DA  30FF               	movlw	255
  1926  03DB  00A4               	movwf	___fldiv@a+2
  1927  03DC  30E0               	movlw	224
  1928  03DD  00A3               	movwf	___fldiv@a+1
  1929  03DE  01A2               	clrf	___fldiv@a
  1930  03DF  0021               	movlb	1	; select bank1
  1931  03E0  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  1932  03E1  0020               	movlb	0	; select bank0
  1933  03E2  00A9               	movwf	___fldiv@b+3
  1934  03E3  0021               	movlb	1	; select bank1
  1935  03E4  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  1936  03E5  0020               	movlb	0	; select bank0
  1937  03E6  00A8               	movwf	___fldiv@b+2
  1938  03E7  0021               	movlb	1	; select bank1
  1939  03E8  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  1940  03E9  0020               	movlb	0	; select bank0
  1941  03EA  00A7               	movwf	___fldiv@b+1
  1942  03EB  0021               	movlb	1	; select bank1
  1943  03EC  0869               	movf	calculate_pid@pid^(0+128),w
  1944  03ED  0020               	movlb	0	; select bank0
  1945  03EE  00A6               	movwf	___fldiv@b
  1946  03EF  2508               	fcall	___fldiv
  1947  03F0  0825               	movf	?___fldiv+3,w
  1948  03F1  00C2               	movwf	___flmul@a+3
  1949  03F2  0824               	movf	?___fldiv+2,w
  1950  03F3  00C1               	movwf	___flmul@a+2
  1951  03F4  0823               	movf	?___fldiv+1,w
  1952  03F5  00C0               	movwf	___flmul@a+1
  1953  03F6  0822               	movf	?___fldiv,w
  1954  03F7  00BF               	movwf	___flmul@a
  1955  03F8  3186  261A  3182   	fcall	___flmul
  1956  03FB  083E               	movf	?___flmul+3,w
  1957  03FC  00DB               	movwf	___fladd@a+3
  1958  03FD  083D               	movf	?___flmul+2,w
  1959  03FE  00DA               	movwf	___fladd@a+2
  1960  03FF  083C               	movf	?___flmul+1,w
  1961  0400  00D9               	movwf	___fladd@a+1
  1962  0401  083B               	movf	?___flmul,w
  1963  0402  00D8               	movwf	___fladd@a
  1964  0403  318E  26AF  3182   	fcall	___fladd
  1965  0406  0857               	movf	?___fladd+3,w
  1966  0407  0021               	movlb	1	; select bank1
  1967  0408  00EC               	movwf	(calculate_pid@pid+3)^(0+128)
  1968  0409  0020               	movlb	0	; select bank0
  1969  040A  0856               	movf	?___fladd+2,w
  1970  040B  0021               	movlb	1	; select bank1
  1971  040C  00EB               	movwf	(calculate_pid@pid+2)^(0+128)
  1972  040D  0020               	movlb	0	; select bank0
  1973  040E  0855               	movf	?___fladd+1,w
  1974  040F  0021               	movlb	1	; select bank1
  1975  0410  00EA               	movwf	(calculate_pid@pid+1)^(0+128)
  1976  0411  0020               	movlb	0	; select bank0
  1977  0412  0854               	movf	?___fladd,w
  1978  0413  0021               	movlb	1	; select bank1
  1979  0414  00E9               	movwf	calculate_pid@pid^(0+128)
  1980                           
  1981                           ;main.c: 263: if (set < 600)
  1982  0415  0020               	movlb	0	; select bank0
  1983  0416  0869               	movf	calculate_pid@set+1,w
  1984  0417  3A80               	xorlw	128
  1985  0418  00EA               	movwf	??_calculate_pid
  1986  0419  3082               	movlw	130
  1987  041A  026A               	subwf	??_calculate_pid,w
  1988  041B  1D03               	skipz
  1989  041C  2C1F               	goto	u4345
  1990  041D  3058               	movlw	88
  1991  041E  0268               	subwf	calculate_pid@set,w
  1992  041F                     u4345:	
  1993  041F  1803               	skipnc
  1994  0420  2C3F               	goto	l3225
  1995                           
  1996                           ;main.c: 264: {
  1997                           ;main.c: 265: if (pid > 0) {
  1998  0421  0020               	movlb	0	; select bank0
  1999  0422  01A2               	clrf	___flge@ff1
  2000  0423  01A3               	clrf	___flge@ff1+1
  2001  0424  01A4               	clrf	___flge@ff1+2
  2002  0425  01A5               	clrf	___flge@ff1+3
  2003  0426  0021               	movlb	1	; select bank1
  2004  0427  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  2005  0428  0020               	movlb	0	; select bank0
  2006  0429  00A9               	movwf	___flge@ff2+3
  2007  042A  0021               	movlb	1	; select bank1
  2008  042B  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  2009  042C  0020               	movlb	0	; select bank0
  2010  042D  00A8               	movwf	___flge@ff2+2
  2011  042E  0021               	movlb	1	; select bank1
  2012  042F  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  2013  0430  0020               	movlb	0	; select bank0
  2014  0431  00A7               	movwf	___flge@ff2+1
  2015  0432  0021               	movlb	1	; select bank1
  2016  0433  0869               	movf	calculate_pid@pid^(0+128),w
  2017  0434  0020               	movlb	0	; select bank0
  2018  0435  00A6               	movwf	___flge@ff2
  2019  0436  24A6  3182         	fcall	___flge
  2020  0438  1803               	btfsc	3,0
  2021  0439  2C3F               	goto	l3225
  2022                           
  2023                           ;main.c: 266: pid = 0;
  2024  043A  0021               	movlb	1	; select bank1
  2025  043B  01E9               	clrf	calculate_pid@pid^(0+128)
  2026  043C  01EA               	clrf	(calculate_pid@pid+1)^(0+128)
  2027  043D  01EB               	clrf	(calculate_pid@pid+2)^(0+128)
  2028  043E  01EC               	clrf	(calculate_pid@pid+3)^(0+128)
  2029  043F                     l3225:	
  2030                           
  2031                           ;main.c: 267: }
  2032                           ;main.c: 268: }
  2033                           ;main.c: 269: if (set > 600)
  2034  043F  0020               	movlb	0	; select bank0
  2035  0440  0869               	movf	calculate_pid@set+1,w
  2036  0441  3A80               	xorlw	128
  2037  0442  00EA               	movwf	??_calculate_pid
  2038  0443  3082               	movlw	130
  2039  0444  026A               	subwf	??_calculate_pid,w
  2040  0445  1D03               	skipz
  2041  0446  2C49               	goto	u4365
  2042  0447  3059               	movlw	89
  2043  0448  0268               	subwf	calculate_pid@set,w
  2044  0449                     u4365:	
  2045  0449  1C03               	skipc
  2046  044A  2C68               	goto	l3231
  2047                           
  2048                           ;main.c: 270: {
  2049                           ;main.c: 271: if (pid < 0) {
  2050  044B  0021               	movlb	1	; select bank1
  2051  044C  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  2052  044D  0020               	movlb	0	; select bank0
  2053  044E  00A5               	movwf	___flge@ff1+3
  2054  044F  0021               	movlb	1	; select bank1
  2055  0450  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  2056  0451  0020               	movlb	0	; select bank0
  2057  0452  00A4               	movwf	___flge@ff1+2
  2058  0453  0021               	movlb	1	; select bank1
  2059  0454  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  2060  0455  0020               	movlb	0	; select bank0
  2061  0456  00A3               	movwf	___flge@ff1+1
  2062  0457  0021               	movlb	1	; select bank1
  2063  0458  0869               	movf	calculate_pid@pid^(0+128),w
  2064  0459  0020               	movlb	0	; select bank0
  2065  045A  00A2               	movwf	___flge@ff1
  2066  045B  01A6               	clrf	___flge@ff2
  2067  045C  01A7               	clrf	___flge@ff2+1
  2068  045D  01A8               	clrf	___flge@ff2+2
  2069  045E  01A9               	clrf	___flge@ff2+3
  2070  045F  24A6  3182         	fcall	___flge
  2071  0461  1803               	btfsc	3,0
  2072  0462  2C68               	goto	l3231
  2073                           
  2074                           ;main.c: 272: pid = 0;
  2075  0463  0021               	movlb	1	; select bank1
  2076  0464  01E9               	clrf	calculate_pid@pid^(0+128)
  2077  0465  01EA               	clrf	(calculate_pid@pid+1)^(0+128)
  2078  0466  01EB               	clrf	(calculate_pid@pid+2)^(0+128)
  2079  0467  01EC               	clrf	(calculate_pid@pid+3)^(0+128)
  2080  0468                     l3231:	
  2081                           
  2082                           ;main.c: 273: }
  2083                           ;main.c: 274: }
  2084                           ;main.c: 275: if (set == 600 && warming_up == 0)
  2085  0468  3058               	movlw	88
  2086  0469  0020               	movlb	0	; select bank0
  2087  046A  0668               	xorwf	calculate_pid@set,w
  2088  046B  3002               	movlw	2
  2089  046C  1903               	skipnz
  2090  046D  0669               	xorwf	calculate_pid@set+1,w
  2091  046E  1903               	btfsc	3,2
  2092  046F  187D               	btfsc	_warming_up/(0+8),_warming_up& (0+7)
  2093  0470  2C8E               	goto	l3239
  2094                           
  2095                           ;main.c: 276: {
  2096                           ;main.c: 277: if (pid < 0) {
  2097  0471  0021               	movlb	1	; select bank1
  2098  0472  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  2099  0473  0020               	movlb	0	; select bank0
  2100  0474  00A5               	movwf	___flge@ff1+3
  2101  0475  0021               	movlb	1	; select bank1
  2102  0476  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  2103  0477  0020               	movlb	0	; select bank0
  2104  0478  00A4               	movwf	___flge@ff1+2
  2105  0479  0021               	movlb	1	; select bank1
  2106  047A  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  2107  047B  0020               	movlb	0	; select bank0
  2108  047C  00A3               	movwf	___flge@ff1+1
  2109  047D  0021               	movlb	1	; select bank1
  2110  047E  0869               	movf	calculate_pid@pid^(0+128),w
  2111  047F  0020               	movlb	0	; select bank0
  2112  0480  00A2               	movwf	___flge@ff1
  2113  0481  01A6               	clrf	___flge@ff2
  2114  0482  01A7               	clrf	___flge@ff2+1
  2115  0483  01A8               	clrf	___flge@ff2+2
  2116  0484  01A9               	clrf	___flge@ff2+3
  2117  0485  24A6  3182         	fcall	___flge
  2118  0487  1803               	btfsc	3,0
  2119  0488  2C8E               	goto	l3239
  2120                           
  2121                           ;main.c: 278: pid = 0;
  2122  0489  0021               	movlb	1	; select bank1
  2123  048A  01E9               	clrf	calculate_pid@pid^(0+128)
  2124  048B  01EA               	clrf	(calculate_pid@pid+1)^(0+128)
  2125  048C  01EB               	clrf	(calculate_pid@pid+2)^(0+128)
  2126  048D  01EC               	clrf	(calculate_pid@pid+3)^(0+128)
  2127  048E                     l3239:	
  2128                           
  2129                           ;main.c: 279: }
  2130                           ;main.c: 280: }
  2131                           ;main.c: 281: M_control((int) pid);
  2132  048E  0021               	movlb	1	; select bank1
  2133  048F  086C               	movf	(calculate_pid@pid+3)^(0+128),w
  2134  0490  0020               	movlb	0	; select bank0
  2135  0491  00A5               	movwf	___fltol@f1+3
  2136  0492  0021               	movlb	1	; select bank1
  2137  0493  086B               	movf	(calculate_pid@pid+2)^(0+128),w
  2138  0494  0020               	movlb	0	; select bank0
  2139  0495  00A4               	movwf	___fltol@f1+2
  2140  0496  0021               	movlb	1	; select bank1
  2141  0497  086A               	movf	(calculate_pid@pid+1)^(0+128),w
  2142  0498  0020               	movlb	0	; select bank0
  2143  0499  00A3               	movwf	___fltol@f1+1
  2144  049A  0021               	movlb	1	; select bank1
  2145  049B  0869               	movf	calculate_pid@pid^(0+128),w
  2146  049C  0020               	movlb	0	; select bank0
  2147  049D  00A2               	movwf	___fltol@f1
  2148  049E  318D  25B6         	fcall	___fltol
  2149  04A0  0823               	movf	?___fltol+1,w
  2150  04A1  00AD               	movwf	M_control@ctr+1
  2151  04A2  0822               	movf	?___fltol,w
  2152  04A3  00AC               	movwf	M_control@ctr
  2153  04A4  3181  2917         	ljmp	l2815
  2154  04A6                     __end_of_calculate_pid:	
  2155  04A6                     __ptext11:	
  2156 ;; *************** function ___flge *****************
  2157 ;; Defined at:
  2158 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\flge.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  ff1             4    2[BANK0 ] unsigned int 
  2161 ;;  ff2             4    6[BANK0 ] unsigned int 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 1F/0
  2170 ;;		On exit  : 1F/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2173 ;;      Params:         0       8       0       0
  2174 ;;      Locals:         0       0       0       0
  2175 ;;      Temps:          0       4       0       0
  2176 ;;      Totals:         0      12       0       0
  2177 ;;Total ram usage:       12 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    2
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_calculate_pid
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function ___flge
  2189  04A6                     ___flge:	
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in ___flge: [wreg+status,2+status,0]
  2193  04A6  3080               	movlw	128
  2194  04A7  01AA               	clrf	??___flge
  2195  04A8  01AB               	clrf	??___flge+1
  2196  04A9  0524               	andwf	___flge@ff1+2,w
  2197  04AA  00AC               	movwf	??___flge+2
  2198  04AB  307F               	movlw	127
  2199  04AC  0525               	andwf	___flge@ff1+3,w
  2200  04AD  00AD               	movwf	??___flge+3
  2201  04AE  042C               	iorwf	??___flge+2,w
  2202  04AF  042B               	iorwf	??___flge+1,w
  2203  04B0  042A               	iorwf	??___flge,w
  2204  04B1  1D03               	skipz
  2205  04B2  2CB7               	goto	l2835
  2206  04B3  01A2               	clrf	___flge@ff1
  2207  04B4  01A3               	clrf	___flge@ff1+1
  2208  04B5  01A4               	clrf	___flge@ff1+2
  2209  04B6  01A5               	clrf	___flge@ff1+3
  2210  04B7                     l2835:	
  2211  04B7  3080               	movlw	128
  2212  04B8  01AA               	clrf	??___flge
  2213  04B9  01AB               	clrf	??___flge+1
  2214  04BA  0528               	andwf	___flge@ff2+2,w
  2215  04BB  00AC               	movwf	??___flge+2
  2216  04BC  307F               	movlw	127
  2217  04BD  0529               	andwf	___flge@ff2+3,w
  2218  04BE  00AD               	movwf	??___flge+3
  2219  04BF  042C               	iorwf	??___flge+2,w
  2220  04C0  042B               	iorwf	??___flge+1,w
  2221  04C1  042A               	iorwf	??___flge,w
  2222  04C2  1D03               	skipz
  2223  04C3  2CC8               	goto	l366
  2224  04C4  01A6               	clrf	___flge@ff2
  2225  04C5  01A7               	clrf	___flge@ff2+1
  2226  04C6  01A8               	clrf	___flge@ff2+2
  2227  04C7  01A9               	clrf	___flge@ff2+3
  2228  04C8                     l366:	
  2229  04C8  1FA5               	btfss	___flge@ff1+3,7
  2230  04C9  2CDF               	goto	l2841
  2231  04CA  3080               	movlw	128
  2232  04CB  01AA               	clrf	??___flge
  2233  04CC  01AB               	clrf	??___flge+1
  2234  04CD  01AC               	clrf	??___flge+2
  2235  04CE  00AD               	movwf	??___flge+3
  2236  04CF  0822               	movf	___flge@ff1,w
  2237  04D0  02AA               	subwf	??___flge,f
  2238  04D1  0823               	movf	___flge@ff1+1,w
  2239  04D2  3BAB               	subwfb	??___flge+1,f
  2240  04D3  0824               	movf	___flge@ff1+2,w
  2241  04D4  3BAC               	subwfb	??___flge+2,f
  2242  04D5  0825               	movf	___flge@ff1+3,w
  2243  04D6  3BAD               	subwfb	??___flge+3,f
  2244  04D7  082D               	movf	??___flge+3,w
  2245  04D8  00A5               	movwf	___flge@ff1+3
  2246  04D9  082C               	movf	??___flge+2,w
  2247  04DA  00A4               	movwf	___flge@ff1+2
  2248  04DB  082B               	movf	??___flge+1,w
  2249  04DC  00A3               	movwf	___flge@ff1+1
  2250  04DD  082A               	movf	??___flge,w
  2251  04DE  00A2               	movwf	___flge@ff1
  2252  04DF                     l2841:	
  2253  04DF  1FA9               	btfss	___flge@ff2+3,7
  2254  04E0  2CF6               	goto	l368
  2255  04E1  3080               	movlw	128
  2256  04E2  01AA               	clrf	??___flge
  2257  04E3  01AB               	clrf	??___flge+1
  2258  04E4  01AC               	clrf	??___flge+2
  2259  04E5  00AD               	movwf	??___flge+3
  2260  04E6  0826               	movf	___flge@ff2,w
  2261  04E7  02AA               	subwf	??___flge,f
  2262  04E8  0827               	movf	___flge@ff2+1,w
  2263  04E9  3BAB               	subwfb	??___flge+1,f
  2264  04EA  0828               	movf	___flge@ff2+2,w
  2265  04EB  3BAC               	subwfb	??___flge+2,f
  2266  04EC  0829               	movf	___flge@ff2+3,w
  2267  04ED  3BAD               	subwfb	??___flge+3,f
  2268  04EE  082D               	movf	??___flge+3,w
  2269  04EF  00A9               	movwf	___flge@ff2+3
  2270  04F0  082C               	movf	??___flge+2,w
  2271  04F1  00A8               	movwf	___flge@ff2+2
  2272  04F2  082B               	movf	??___flge+1,w
  2273  04F3  00A7               	movwf	___flge@ff2+1
  2274  04F4  082A               	movf	??___flge,w
  2275  04F5  00A6               	movwf	___flge@ff2
  2276  04F6                     l368:	
  2277  04F6  3080               	movlw	128
  2278  04F7  06A5               	xorwf	___flge@ff1+3,f
  2279  04F8  06A9               	xorwf	___flge@ff2+3,f
  2280  04F9  0829               	movf	___flge@ff2+3,w
  2281  04FA  0225               	subwf	___flge@ff1+3,w
  2282  04FB  1D03               	skipz
  2283  04FC  0008               	return
  2284  04FD  0828               	movf	___flge@ff2+2,w
  2285  04FE  0224               	subwf	___flge@ff1+2,w
  2286  04FF  1D03               	skipz
  2287  0500  0008               	return
  2288  0501  0827               	movf	___flge@ff2+1,w
  2289  0502  0223               	subwf	___flge@ff1+1,w
  2290  0503  1D03               	skipz
  2291  0504  0008               	return
  2292  0505  0826               	movf	___flge@ff2,w
  2293  0506  0222               	subwf	___flge@ff1,w
  2294  0507  0008               	return
  2295  0508                     __end_of___flge:	
  2296  0508                     __ptext12:	
  2297 ;; *************** function ___fldiv *****************
  2298 ;; Defined at:
  2299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcdiv.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  a               4    2[BANK0 ] unsigned int 
  2302 ;;  b               4    6[BANK0 ] unsigned int 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  grs             4   21[BANK0 ] unsigned long 
  2305 ;;  rem             4   15[BANK0 ] unsigned long 
  2306 ;;  new_exp         2   19[BANK0 ] int 
  2307 ;;  aexp            1   26[BANK0 ] unsigned char 
  2308 ;;  bexp            1   25[BANK0 ] unsigned char 
  2309 ;;  sign            1   14[BANK0 ] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  4    2[BANK0 ] unsigned char 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0
  2314 ;; Tracked objects:
  2315 ;;		On entry : 1F/0
  2316 ;;		On exit  : 1F/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2319 ;;      Params:         0       8       0       0
  2320 ;;      Locals:         0      13       0       0
  2321 ;;      Temps:          0       4       0       0
  2322 ;;      Totals:         0      25       0       0
  2323 ;;Total ram usage:       25 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    2
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_calculate_pid
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function ___fldiv
  2335  0508                     ___fldiv:	
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  2339  0508  0829               	movf	___fldiv@b+3,w
  2340  0509  00AE               	movwf	___fldiv@sign
  2341  050A  3080               	movlw	128
  2342  050B  05AE               	andwf	___fldiv@sign,f
  2343  050C  3529               	lslf	___fldiv@b+3,w
  2344  050D  00B9               	movwf	___fldiv@bexp
  2345  050E  1BA8               	btfsc	___fldiv@b+2,7
  2346  050F  1439               	bsf	___fldiv@bexp,0
  2347  0510  0839               	movf	___fldiv@bexp,w
  2348  0511  1903               	btfsc	3,2
  2349  0512  2D1B               	goto	l524
  2350  0513  0F39               	incfsz	___fldiv@bexp,w
  2351  0514  2D19               	goto	l525
  2352  0515  01A6               	clrf	___fldiv@b
  2353  0516  01A7               	clrf	___fldiv@b+1
  2354  0517  01A8               	clrf	___fldiv@b+2
  2355  0518  01A9               	clrf	___fldiv@b+3
  2356  0519                     l525:	
  2357  0519  17A8               	bsf	___fldiv@b+2,7
  2358  051A  2D1E               	goto	L5
  2359  051B                     l524:	
  2360  051B  01A6               	clrf	___fldiv@b
  2361  051C  01A7               	clrf	___fldiv@b+1
  2362  051D  01A8               	clrf	___fldiv@b+2
  2363  051E                     L5:	
  2364  051E  01A9               	clrf	___fldiv@b+3
  2365  051F  0825               	movf	___fldiv@a+3,w
  2366  0520  3980               	andlw	128
  2367  0521  06AE               	xorwf	___fldiv@sign,f
  2368  0522  3525               	lslf	___fldiv@a+3,w
  2369  0523  00BA               	movwf	___fldiv@aexp
  2370  0524  1BA4               	btfsc	___fldiv@a+2,7
  2371  0525  143A               	bsf	___fldiv@aexp,0
  2372  0526  083A               	movf	___fldiv@aexp,w
  2373  0527  1903               	btfsc	3,2
  2374  0528  2D31               	goto	l528
  2375  0529  0F3A               	incfsz	___fldiv@aexp,w
  2376  052A  2D2F               	goto	l529
  2377  052B  01A2               	clrf	___fldiv@a
  2378  052C  01A3               	clrf	___fldiv@a+1
  2379  052D  01A4               	clrf	___fldiv@a+2
  2380  052E  01A5               	clrf	___fldiv@a+3
  2381  052F                     l529:	
  2382  052F  17A4               	bsf	___fldiv@a+2,7
  2383  0530  2D34               	goto	L6
  2384  0531                     l528:	
  2385  0531  01A2               	clrf	___fldiv@a
  2386  0532  01A3               	clrf	___fldiv@a+1
  2387  0533  01A4               	clrf	___fldiv@a+2
  2388  0534                     L6:	
  2389  0534  01A5               	clrf	___fldiv@a+3
  2390  0535  0825               	movf	___fldiv@a+3,w
  2391  0536  0424               	iorwf	___fldiv@a+2,w
  2392  0537  0423               	iorwf	___fldiv@a+1,w
  2393  0538  0422               	iorwf	___fldiv@a,w
  2394  0539  1D03               	skipz
  2395  053A  2D4C               	goto	l2931
  2396  053B  3080               	movlw	128
  2397  053C  01A6               	clrf	___fldiv@b
  2398  053D  01A7               	clrf	___fldiv@b+1
  2399  053E  01A8               	clrf	___fldiv@b+2
  2400  053F  01A9               	clrf	___fldiv@b+3
  2401  0540  04A8               	iorwf	___fldiv@b+2,f
  2402  0541  307F               	movlw	127
  2403  0542  04A9               	iorwf	___fldiv@b+3,f
  2404  0543  0829               	movf	___fldiv@b+3,w
  2405  0544  00A5               	movwf	?___fldiv+3
  2406  0545  0828               	movf	___fldiv@b+2,w
  2407  0546  00A4               	movwf	?___fldiv+2
  2408  0547  0827               	movf	___fldiv@b+1,w
  2409  0548  00A3               	movwf	?___fldiv+1
  2410  0549  0826               	movf	___fldiv@b,w
  2411  054A  00A2               	movwf	?___fldiv
  2412  054B  0008               	return
  2413  054C                     l2931:	
  2414  054C  0839               	movf	___fldiv@bexp,w
  2415  054D  1D03               	btfss	3,2
  2416  054E  2D54               	goto	l2939
  2417  054F  01A2               	clrf	?___fldiv
  2418  0550  01A3               	clrf	?___fldiv+1
  2419  0551  01A4               	clrf	?___fldiv+2
  2420  0552  01A5               	clrf	?___fldiv+3
  2421  0553  0008               	return
  2422  0554                     l2939:	
  2423  0554  0839               	movf	___fldiv@bexp,w
  2424  0555  00B3               	movwf	___fldiv@new_exp
  2425  0556  01B4               	clrf	___fldiv@new_exp+1
  2426  0557  083A               	movf	___fldiv@aexp,w
  2427  0558  02B3               	subwf	___fldiv@new_exp,f
  2428  0559  1C03               	skipc
  2429  055A  03B4               	decf	___fldiv@new_exp+1,f
  2430  055B  307F               	movlw	127
  2431  055C  07B3               	addwf	___fldiv@new_exp,f
  2432  055D  1803               	skipnc
  2433  055E  0AB4               	incf	___fldiv@new_exp+1,f
  2434  055F  0829               	movf	___fldiv@b+3,w
  2435  0560  00B2               	movwf	___fldiv@rem+3
  2436  0561  0828               	movf	___fldiv@b+2,w
  2437  0562  00B1               	movwf	___fldiv@rem+2
  2438  0563  0827               	movf	___fldiv@b+1,w
  2439  0564  00B0               	movwf	___fldiv@rem+1
  2440  0565  0826               	movf	___fldiv@b,w
  2441  0566  00AF               	movwf	___fldiv@rem
  2442  0567  01A6               	clrf	___fldiv@b
  2443  0568  01A7               	clrf	___fldiv@b+1
  2444  0569  01A8               	clrf	___fldiv@b+2
  2445  056A  01A9               	clrf	___fldiv@b+3
  2446  056B  01B5               	clrf	___fldiv@grs
  2447  056C  01B6               	clrf	___fldiv@grs+1
  2448  056D  01B7               	clrf	___fldiv@grs+2
  2449  056E  01B8               	clrf	___fldiv@grs+3
  2450  056F  01BA               	clrf	___fldiv@aexp
  2451  0570                     l2965:	
  2452  0570  301A               	movlw	26
  2453  0571  023A               	subwf	___fldiv@aexp,w
  2454  0572  1803               	btfsc	3,0
  2455  0573  2DA0               	goto	l2967
  2456  0574  083A               	movf	___fldiv@aexp,w
  2457  0575  1903               	btfsc	3,2
  2458  0576  2D85               	goto	l2957
  2459  0577  35AF               	lslf	___fldiv@rem,f
  2460  0578  0DB0               	rlf	___fldiv@rem+1,f
  2461  0579  0DB1               	rlf	___fldiv@rem+2,f
  2462  057A  0DB2               	rlf	___fldiv@rem+3,f
  2463  057B  35A6               	lslf	___fldiv@b,f
  2464  057C  0DA7               	rlf	___fldiv@b+1,f
  2465  057D  0DA8               	rlf	___fldiv@b+2,f
  2466  057E  0DA9               	rlf	___fldiv@b+3,f
  2467  057F  1BB8               	btfsc	___fldiv@grs+3,7
  2468  0580  1426               	bsf	___fldiv@b,0
  2469  0581  35B5               	lslf	___fldiv@grs,f
  2470  0582  0DB6               	rlf	___fldiv@grs+1,f
  2471  0583  0DB7               	rlf	___fldiv@grs+2,f
  2472  0584  0DB8               	rlf	___fldiv@grs+3,f
  2473  0585                     l2957:	
  2474  0585  0825               	movf	___fldiv@a+3,w
  2475  0586  0232               	subwf	___fldiv@rem+3,w
  2476  0587  1D03               	skipz
  2477  0588  2D93               	goto	u3915
  2478  0589  0824               	movf	___fldiv@a+2,w
  2479  058A  0231               	subwf	___fldiv@rem+2,w
  2480  058B  1D03               	skipz
  2481  058C  2D93               	goto	u3915
  2482  058D  0823               	movf	___fldiv@a+1,w
  2483  058E  0230               	subwf	___fldiv@rem+1,w
  2484  058F  1D03               	skipz
  2485  0590  2D93               	goto	u3915
  2486  0591  0822               	movf	___fldiv@a,w
  2487  0592  022F               	subwf	___fldiv@rem,w
  2488  0593                     u3915:	
  2489  0593  1C03               	skipc
  2490  0594  2D9E               	goto	l2963
  2491  0595  1738               	bsf	___fldiv@grs+3,6
  2492  0596  0822               	movf	___fldiv@a,w
  2493  0597  02AF               	subwf	___fldiv@rem,f
  2494  0598  0823               	movf	___fldiv@a+1,w
  2495  0599  3BB0               	subwfb	___fldiv@rem+1,f
  2496  059A  0824               	movf	___fldiv@a+2,w
  2497  059B  3BB1               	subwfb	___fldiv@rem+2,f
  2498  059C  0825               	movf	___fldiv@a+3,w
  2499  059D  3BB2               	subwfb	___fldiv@rem+3,f
  2500  059E                     l2963:	
  2501  059E  0ABA               	incf	___fldiv@aexp,f
  2502  059F  2D70               	goto	l2965
  2503  05A0                     l2967:	
  2504  05A0  0832               	movf	___fldiv@rem+3,w
  2505  05A1  0431               	iorwf	___fldiv@rem+2,w
  2506  05A2  0430               	iorwf	___fldiv@rem+1,w
  2507  05A3  042F               	iorwf	___fldiv@rem,w
  2508  05A4  1D03               	btfss	3,2
  2509  05A5  1435               	bsf	___fldiv@grs,0
  2510  05A6                     l2981:	
  2511  05A6  1BA8               	btfsc	___fldiv@b+2,7
  2512  05A7  2DB7               	goto	l2983
  2513  05A8  35A6               	lslf	___fldiv@b,f
  2514  05A9  0DA7               	rlf	___fldiv@b+1,f
  2515  05AA  0DA8               	rlf	___fldiv@b+2,f
  2516  05AB  0DA9               	rlf	___fldiv@b+3,f
  2517  05AC  1BB8               	btfsc	___fldiv@grs+3,7
  2518  05AD  1426               	bsf	___fldiv@b,0
  2519  05AE  30FF               	movlw	-1
  2520  05AF  35B5               	lslf	___fldiv@grs,f
  2521  05B0  0DB6               	rlf	___fldiv@grs+1,f
  2522  05B1  0DB7               	rlf	___fldiv@grs+2,f
  2523  05B2  0DB8               	rlf	___fldiv@grs+3,f
  2524  05B3  07B3               	addwf	___fldiv@new_exp,f
  2525  05B4  1C03               	skipc
  2526  05B5  03B4               	decf	___fldiv@new_exp+1,f
  2527  05B6  2DA6               	goto	l2981
  2528  05B7                     l2983:	
  2529  05B7  01BA               	clrf	___fldiv@aexp
  2530  05B8  1FB8               	btfss	___fldiv@grs+3,7
  2531  05B9  2DCC               	goto	l2993
  2532  05BA  0835               	movf	___fldiv@grs,w
  2533  05BB  00AA               	movwf	??___fldiv
  2534  05BC  0836               	movf	___fldiv@grs+1,w
  2535  05BD  00AB               	movwf	??___fldiv+1
  2536  05BE  0837               	movf	___fldiv@grs+2,w
  2537  05BF  00AC               	movwf	??___fldiv+2
  2538  05C0  307F               	movlw	127
  2539  05C1  0538               	andwf	___fldiv@grs+3,w
  2540  05C2  00AD               	movwf	??___fldiv+3
  2541  05C3  042C               	iorwf	??___fldiv+2,w
  2542  05C4  042B               	iorwf	??___fldiv+1,w
  2543  05C5  042A               	iorwf	??___fldiv,w
  2544  05C6  1903               	skipnz
  2545  05C7  1826               	btfsc	___fldiv@b,0
  2546  05C8  2DCA               	goto	l2989
  2547  05C9  2DCC               	goto	l2993
  2548  05CA                     l2989:	
  2549  05CA  01BA               	clrf	___fldiv@aexp
  2550  05CB  0ABA               	incf	___fldiv@aexp,f
  2551  05CC                     l2993:	
  2552  05CC  083A               	movf	___fldiv@aexp,w
  2553  05CD  1903               	btfsc	3,2
  2554  05CE  2DDE               	goto	l3003
  2555  05CF  3001               	movlw	1
  2556  05D0  07A6               	addwf	___fldiv@b,f
  2557  05D1  3000               	movlw	0
  2558  05D2  3DA7               	addwfc	___fldiv@b+1,f
  2559  05D3  3DA8               	addwfc	___fldiv@b+2,f
  2560  05D4  3DA9               	addwfc	___fldiv@b+3,f
  2561  05D5  1C29               	btfss	___fldiv@b+3,0
  2562  05D6  2DDE               	goto	l3003
  2563  05D7  37A9               	asrf	___fldiv@b+3,f
  2564  05D8  0CA8               	rrf	___fldiv@b+2,f
  2565  05D9  0CA7               	rrf	___fldiv@b+1,f
  2566  05DA  0CA6               	rrf	___fldiv@b,f
  2567  05DB  0AB3               	incf	___fldiv@new_exp,f
  2568  05DC  1903               	skipnz
  2569  05DD  0AB4               	incf	___fldiv@new_exp+1,f
  2570  05DE                     l3003:	
  2571  05DE  0834               	movf	___fldiv@new_exp+1,w
  2572  05DF  3A80               	xorlw	128
  2573  05E0  00AA               	movwf	??___fldiv
  2574  05E1  3080               	movlw	128
  2575  05E2  022A               	subwf	??___fldiv,w
  2576  05E3  1D03               	skipz
  2577  05E4  2DE7               	goto	u4015
  2578  05E5  30FF               	movlw	255
  2579  05E6  0233               	subwf	___fldiv@new_exp,w
  2580  05E7                     u4015:	
  2581  05E7  1C03               	skipc
  2582  05E8  2DF1               	goto	l551
  2583  05E9  30FF               	movlw	255
  2584  05EA  0020               	movlb	0	; select bank0
  2585  05EB  00B3               	movwf	___fldiv@new_exp
  2586  05EC  01B4               	clrf	___fldiv@new_exp+1
  2587  05ED  01A6               	clrf	___fldiv@b
  2588  05EE  01A7               	clrf	___fldiv@b+1
  2589  05EF  01A8               	clrf	___fldiv@b+2
  2590  05F0  01A9               	clrf	___fldiv@b+3
  2591  05F1                     l551:	
  2592  05F1  0020               	movlb	0	; select bank0
  2593  05F2  0834               	movf	___fldiv@new_exp+1,w
  2594  05F3  3A80               	xorlw	128
  2595  05F4  00AA               	movwf	??___fldiv
  2596  05F5  3080               	movlw	128
  2597  05F6  022A               	subwf	??___fldiv,w
  2598  05F7  1D03               	skipz
  2599  05F8  2DFB               	goto	u4025
  2600  05F9  3001               	movlw	1
  2601  05FA  0233               	subwf	___fldiv@new_exp,w
  2602  05FB                     u4025:	
  2603  05FB  1803               	skipnc
  2604  05FC  2E05               	goto	l3013
  2605  05FD  0020               	movlb	0	; select bank0
  2606  05FE  01B3               	clrf	___fldiv@new_exp
  2607  05FF  01B4               	clrf	___fldiv@new_exp+1
  2608  0600  01A6               	clrf	___fldiv@b
  2609  0601  01A7               	clrf	___fldiv@b+1
  2610  0602  01A8               	clrf	___fldiv@b+2
  2611  0603  01A9               	clrf	___fldiv@b+3
  2612  0604  01AE               	clrf	___fldiv@sign
  2613  0605                     l3013:	
  2614  0605  0020               	movlb	0	; select bank0
  2615  0606  0833               	movf	___fldiv@new_exp,w
  2616  0607  00B9               	movwf	___fldiv@bexp
  2617  0608  1C39               	btfss	___fldiv@bexp,0
  2618  0609  2E0C               	goto	l553
  2619  060A  17A8               	bsf	___fldiv@b+2,7
  2620  060B  2E0D               	goto	l3019
  2621  060C                     l553:	
  2622  060C  13A8               	bcf	___fldiv@b+2,7
  2623  060D                     l3019:	
  2624  060D  3639               	lsrf	___fldiv@bexp,w
  2625  060E  00A9               	movwf	___fldiv@b+3
  2626  060F  082E               	movf	___fldiv@sign,w
  2627  0610  04A9               	iorwf	___fldiv@b+3,f
  2628  0611  0829               	movf	___fldiv@b+3,w
  2629  0612  00A5               	movwf	?___fldiv+3
  2630  0613  0828               	movf	___fldiv@b+2,w
  2631  0614  00A4               	movwf	?___fldiv+2
  2632  0615  0827               	movf	___fldiv@b+1,w
  2633  0616  00A3               	movwf	?___fldiv+1
  2634  0617  0826               	movf	___fldiv@b,w
  2635  0618  00A2               	movwf	?___fldiv
  2636  0619  0008               	return
  2637  061A                     __end_of___fldiv:	
  2638                           
  2639                           	psect	text5
  2640  0E09                     __ptext5:	
  2641 ;; *************** function ___xxtofl *****************
  2642 ;; Defined at:
  2643 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\xxtofl.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  sign            1    wreg     unsigned char 
  2646 ;;  val             4    2[BANK0 ] long 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  sign            1   10[BANK0 ] unsigned char 
  2649 ;;  arg             4   12[BANK0 ] unsigned long 
  2650 ;;  exp             1   11[BANK0 ] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  4    2[BANK0 ] unsigned char 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 1F/0
  2657 ;;		On exit  : 1F/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2660 ;;      Params:         0       4       0       0
  2661 ;;      Locals:         0       6       0       0
  2662 ;;      Temps:          0       4       0       0
  2663 ;;      Totals:         0      14       0       0
  2664 ;;Total ram usage:       14 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    2
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_calculate_pid
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function ___xxtofl
  2676  0E09                     ___xxtofl:	
  2677                           
  2678                           ;incstack = 0
  2679                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2680                           ;___xxtofl@sign stored from wreg
  2681  0E09  00AA               	movwf	___xxtofl@sign
  2682  0E0A  082A               	movf	___xxtofl@sign,w
  2683  0E0B  1D03               	btfss	3,2
  2684  0E0C  1FA5               	btfss	___xxtofl@val+3,7
  2685  0E0D  2E1E               	goto	l3153
  2686  0E0E  0922               	comf	___xxtofl@val,w
  2687  0E0F  00AC               	movwf	___xxtofl@arg
  2688  0E10  0923               	comf	___xxtofl@val+1,w
  2689  0E11  00AD               	movwf	___xxtofl@arg+1
  2690  0E12  0924               	comf	___xxtofl@val+2,w
  2691  0E13  00AE               	movwf	___xxtofl@arg+2
  2692  0E14  0925               	comf	___xxtofl@val+3,w
  2693  0E15  00AF               	movwf	___xxtofl@arg+3
  2694  0E16  0AAC               	incf	___xxtofl@arg,f
  2695  0E17  1903               	skipnz
  2696  0E18  0AAD               	incf	___xxtofl@arg+1,f
  2697  0E19  1903               	skipnz
  2698  0E1A  0AAE               	incf	___xxtofl@arg+2,f
  2699  0E1B  1903               	skipnz
  2700  0E1C  0AAF               	incf	___xxtofl@arg+3,f
  2701  0E1D  2E26               	goto	l589
  2702  0E1E                     l3153:	
  2703  0E1E  0825               	movf	___xxtofl@val+3,w
  2704  0E1F  00AF               	movwf	___xxtofl@arg+3
  2705  0E20  0824               	movf	___xxtofl@val+2,w
  2706  0E21  00AE               	movwf	___xxtofl@arg+2
  2707  0E22  0823               	movf	___xxtofl@val+1,w
  2708  0E23  00AD               	movwf	___xxtofl@arg+1
  2709  0E24  0822               	movf	___xxtofl@val,w
  2710  0E25  00AC               	movwf	___xxtofl@arg
  2711  0E26                     l589:	
  2712  0E26  0825               	movf	___xxtofl@val+3,w
  2713  0E27  0424               	iorwf	___xxtofl@val+2,w
  2714  0E28  0423               	iorwf	___xxtofl@val+1,w
  2715  0E29  0422               	iorwf	___xxtofl@val,w
  2716  0E2A  1D03               	skipz
  2717  0E2B  2E31               	goto	l3157
  2718  0E2C  01A2               	clrf	?___xxtofl
  2719  0E2D  01A3               	clrf	?___xxtofl+1
  2720  0E2E  01A4               	clrf	?___xxtofl+2
  2721  0E2F  01A5               	clrf	?___xxtofl+3
  2722  0E30  0008               	return
  2723  0E31                     l3157:	
  2724  0E31  3096               	movlw	150
  2725  0E32  00AB               	movwf	___xxtofl@exp
  2726  0E33                     l3161:	
  2727  0E33  30FE               	movlw	254
  2728  0E34  052F               	andwf	___xxtofl@arg+3,w
  2729  0E35  1903               	btfsc	3,2
  2730  0E36  2E48               	goto	l3169
  2731  0E37  0AAB               	incf	___xxtofl@exp,f
  2732  0E38  36AF               	lsrf	___xxtofl@arg+3,f
  2733  0E39  0CAE               	rrf	___xxtofl@arg+2,f
  2734  0E3A  0CAD               	rrf	___xxtofl@arg+1,f
  2735  0E3B  0CAC               	rrf	___xxtofl@arg,f
  2736  0E3C  2E33               	goto	l3161
  2737  0E3D                     l3163:	
  2738  0E3D  3001               	movlw	1
  2739  0E3E  0AAB               	incf	___xxtofl@exp,f
  2740  0E3F  07AC               	addwf	___xxtofl@arg,f
  2741  0E40  3000               	movlw	0
  2742  0E41  3DAD               	addwfc	___xxtofl@arg+1,f
  2743  0E42  3DAE               	addwfc	___xxtofl@arg+2,f
  2744  0E43  3DAF               	addwfc	___xxtofl@arg+3,f
  2745  0E44  36AF               	lsrf	___xxtofl@arg+3,f
  2746  0E45  0CAE               	rrf	___xxtofl@arg+2,f
  2747  0E46  0CAD               	rrf	___xxtofl@arg+1,f
  2748  0E47  0CAC               	rrf	___xxtofl@arg,f
  2749  0E48                     l3169:	
  2750  0E48  30FF               	movlw	255
  2751  0E49  052F               	andwf	___xxtofl@arg+3,w
  2752  0E4A  1903               	btfsc	3,2
  2753  0E4B  2E56               	goto	l3173
  2754  0E4C  2E3D               	goto	l3163
  2755  0E4D                     l3175:	
  2756  0E4D  3002               	movlw	2
  2757  0E4E  022B               	subwf	___xxtofl@exp,w
  2758  0E4F  1C03               	btfss	3,0
  2759  0E50  2E58               	goto	l602
  2760  0E51  03AB               	decf	___xxtofl@exp,f
  2761  0E52  35AC               	lslf	___xxtofl@arg,f
  2762  0E53  0DAD               	rlf	___xxtofl@arg+1,f
  2763  0E54  0DAE               	rlf	___xxtofl@arg+2,f
  2764  0E55  0DAF               	rlf	___xxtofl@arg+3,f
  2765  0E56                     l3173:	
  2766  0E56  1FAE               	btfss	___xxtofl@arg+2,7
  2767  0E57  2E4D               	goto	l3175
  2768  0E58                     l602:	
  2769  0E58  182B               	btfsc	___xxtofl@exp,0
  2770  0E59  2E61               	goto	l3179
  2771  0E5A  30FF               	movlw	255
  2772  0E5B  05AC               	andwf	___xxtofl@arg,f
  2773  0E5C  05AD               	andwf	___xxtofl@arg+1,f
  2774  0E5D  307F               	movlw	127
  2775  0E5E  05AE               	andwf	___xxtofl@arg+2,f
  2776  0E5F  30FF               	movlw	255
  2777  0E60  05AF               	andwf	___xxtofl@arg+3,f
  2778  0E61                     l3179:	
  2779  0E61  36AB               	lsrf	___xxtofl@exp,f
  2780  0E62  082B               	movf	___xxtofl@exp,w
  2781  0E63  00A9               	movwf	??___xxtofl+3
  2782  0E64  01A8               	clrf	??___xxtofl+2
  2783  0E65  01A7               	clrf	??___xxtofl+1
  2784  0E66  01A6               	clrf	??___xxtofl
  2785  0E67  0826               	movf	??___xxtofl,w
  2786  0E68  04AC               	iorwf	___xxtofl@arg,f
  2787  0E69  0827               	movf	??___xxtofl+1,w
  2788  0E6A  04AD               	iorwf	___xxtofl@arg+1,f
  2789  0E6B  0828               	movf	??___xxtofl+2,w
  2790  0E6C  04AE               	iorwf	___xxtofl@arg+2,f
  2791  0E6D  0829               	movf	??___xxtofl+3,w
  2792  0E6E  04AF               	iorwf	___xxtofl@arg+3,f
  2793  0E6F  082A               	movf	___xxtofl@sign,w
  2794  0E70  1D03               	btfss	3,2
  2795  0E71  1FA5               	btfss	___xxtofl@val+3,7
  2796  0E72  2E74               	goto	l3187
  2797  0E73  17AF               	bsf	___xxtofl@arg+3,7
  2798  0E74                     l3187:	
  2799  0E74  082F               	movf	___xxtofl@arg+3,w
  2800  0E75  00A5               	movwf	?___xxtofl+3
  2801  0E76  082E               	movf	___xxtofl@arg+2,w
  2802  0E77  00A4               	movwf	?___xxtofl+2
  2803  0E78  082D               	movf	___xxtofl@arg+1,w
  2804  0E79  00A3               	movwf	?___xxtofl+1
  2805  0E7A  082C               	movf	___xxtofl@arg,w
  2806  0E7B  00A2               	movwf	?___xxtofl
  2807  0E7C  0008               	return
  2808  0E7D                     __end_of___xxtofl:	
  2809                           
  2810                           	psect	text6
  2811  0DB6                     __ptext6:	
  2812 ;; *************** function ___fltol *****************
  2813 ;; Defined at:
  2814 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fltol.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  f1              4    2[BANK0 ] unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  exp1            1   11[BANK0 ] unsigned char 
  2819 ;;  sign1           1   10[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  4    2[BANK0 ] long 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 1F/0
  2826 ;;		On exit  : 1F/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2829 ;;      Params:         0       4       0       0
  2830 ;;      Locals:         0       2       0       0
  2831 ;;      Temps:          0       4       0       0
  2832 ;;      Totals:         0      10       0       0
  2833 ;;Total ram usage:       10 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    2
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_calculate_pid
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function ___fltol
  2845  0DB6                     ___fltol:	
  2846                           
  2847                           ;incstack = 0
  2848                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2849  0DB6  0822               	movf	___fltol@f1,w
  2850  0DB7  00A6               	movwf	??___fltol
  2851  0DB8  0823               	movf	___fltol@f1+1,w
  2852  0DB9  00A7               	movwf	??___fltol+1
  2853  0DBA  0824               	movf	___fltol@f1+2,w
  2854  0DBB  00A8               	movwf	??___fltol+2
  2855  0DBC  0825               	movf	___fltol@f1+3,w
  2856  0DBD  00A9               	movwf	??___fltol+3
  2857  0DBE  1003               	clrc
  2858  0DBF  0D28               	rlf	??___fltol+2,w
  2859  0DC0  0D29               	rlf	??___fltol+3,w
  2860  0DC1  00AB               	movwf	___fltol@exp1
  2861  0DC2  082B               	movf	___fltol@exp1,w
  2862  0DC3  1D03               	btfss	3,2
  2863  0DC4  2DCA               	goto	l2855
  2864  0DC5                     l2853:	
  2865  0DC5  01A2               	clrf	?___fltol
  2866  0DC6  01A3               	clrf	?___fltol+1
  2867  0DC7  01A4               	clrf	?___fltol+2
  2868  0DC8  01A5               	clrf	?___fltol+3
  2869  0DC9  0008               	return
  2870  0DCA                     l2855:	
  2871  0DCA  0822               	movf	___fltol@f1,w
  2872  0DCB  00A6               	movwf	??___fltol
  2873  0DCC  0823               	movf	___fltol@f1+1,w
  2874  0DCD  00A7               	movwf	??___fltol+1
  2875  0DCE  0824               	movf	___fltol@f1+2,w
  2876  0DCF  00A8               	movwf	??___fltol+2
  2877  0DD0  0825               	movf	___fltol@f1+3,w
  2878  0DD1  00A9               	movwf	??___fltol+3
  2879  0DD2  301F               	movlw	31
  2880  0DD3                     u3745:	
  2881  0DD3  36A9               	lsrf	??___fltol+3,f
  2882  0DD4  0CA8               	rrf	??___fltol+2,f
  2883  0DD5  0CA7               	rrf	??___fltol+1,f
  2884  0DD6  0CA6               	rrf	??___fltol,f
  2885  0DD7  0B89               	decfsz	9,f
  2886  0DD8  2DD3               	goto	u3745
  2887  0DD9  0826               	movf	??___fltol,w
  2888  0DDA  00AA               	movwf	___fltol@sign1
  2889  0DDB  3096               	movlw	150
  2890  0DDC  17A4               	bsf	___fltol@f1+2,7
  2891  0DDD  01A5               	clrf	___fltol@f1+3
  2892  0DDE  02AB               	subwf	___fltol@exp1,f
  2893  0DDF  1FAB               	btfss	___fltol@exp1,7
  2894  0DE0  2DED               	goto	l2873
  2895  0DE1  082B               	movf	___fltol@exp1,w
  2896  0DE2  3A80               	xorlw	128
  2897  0DE3  3E97               	addlw	151
  2898  0DE4  1C03               	btfss	3,0
  2899  0DE5  2DC5               	goto	l2853
  2900  0DE6                     l2869:	
  2901  0DE6  36A5               	lsrf	___fltol@f1+3,f
  2902  0DE7  0CA4               	rrf	___fltol@f1+2,f
  2903  0DE8  0CA3               	rrf	___fltol@f1+1,f
  2904  0DE9  0CA2               	rrf	___fltol@f1,f
  2905  0DEA  0FAB               	incfsz	___fltol@exp1,f
  2906  0DEB  2DE6               	goto	l2869
  2907  0DEC  2DFA               	goto	l2881
  2908  0DED                     l2873:	
  2909  0DED  3020               	movlw	32
  2910  0DEE  022B               	subwf	___fltol@exp1,w
  2911  0DEF  1803               	btfsc	3,0
  2912  0DF0  2DC5               	goto	l2853
  2913  0DF1                     l2879:	
  2914  0DF1  082B               	movf	___fltol@exp1,w
  2915  0DF2  1903               	btfsc	3,2
  2916  0DF3  2DFA               	goto	l2881
  2917  0DF4  35A2               	lslf	___fltol@f1,f
  2918  0DF5  0DA3               	rlf	___fltol@f1+1,f
  2919  0DF6  0DA4               	rlf	___fltol@f1+2,f
  2920  0DF7  0DA5               	rlf	___fltol@f1+3,f
  2921  0DF8  03AB               	decf	___fltol@exp1,f
  2922  0DF9  2DF1               	goto	l2879
  2923  0DFA                     l2881:	
  2924  0DFA  082A               	movf	___fltol@sign1,w
  2925  0DFB  1903               	btfsc	3,2
  2926  0DFC  0008               	return
  2927  0DFD  09A2               	comf	___fltol@f1,f
  2928  0DFE  09A3               	comf	___fltol@f1+1,f
  2929  0DFF  09A4               	comf	___fltol@f1+2,f
  2930  0E00  09A5               	comf	___fltol@f1+3,f
  2931  0E01  0AA2               	incf	___fltol@f1,f
  2932  0E02  1903               	skipnz
  2933  0E03  0AA3               	incf	___fltol@f1+1,f
  2934  0E04  1903               	skipnz
  2935  0E05  0AA4               	incf	___fltol@f1+2,f
  2936  0E06  1903               	skipnz
  2937  0E07  0AA5               	incf	___fltol@f1+3,f
  2938  0E08  0008               	return
  2939  0E09                     __end_of___fltol:	
  2940                           
  2941                           	psect	text7
  2942  0E7D                     __ptext7:	
  2943 ;; *************** function ___flsub *****************
  2944 ;; Defined at:
  2945 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcadd.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  a               4    0[BANK1 ] long 
  2948 ;;  b               4    4[BANK1 ] long 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  4    0[BANK1 ] long 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 1F/1
  2957 ;;		On exit  : 1F/1
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2960 ;;      Params:         0       0       8       0
  2961 ;;      Locals:         0       0       0       0
  2962 ;;      Temps:          0       0       0       0
  2963 ;;      Totals:         0       0       8       0
  2964 ;;Total ram usage:        8 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    3
  2967 ;; This function calls:
  2968 ;;		___fladd
  2969 ;; This function is called by:
  2970 ;;		_calculate_pid
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function ___flsub
  2976  0E7D                     ___flsub:	
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  2980  0E7D  3080               	movlw	128
  2981  0E7E  06DA               	xorwf	(___flsub@a+3)^(0+128),f
  2982  0E7F  085E               	movf	(___flsub@b+3)^(0+128),w
  2983  0E80  0020               	movlb	0	; select bank0
  2984  0E81  00D7               	movwf	___fladd@b+3
  2985  0E82  0021               	movlb	1	; select bank1
  2986  0E83  085D               	movf	(___flsub@b+2)^(0+128),w
  2987  0E84  0020               	movlb	0	; select bank0
  2988  0E85  00D6               	movwf	___fladd@b+2
  2989  0E86  0021               	movlb	1	; select bank1
  2990  0E87  085C               	movf	(___flsub@b+1)^(0+128),w
  2991  0E88  0020               	movlb	0	; select bank0
  2992  0E89  00D5               	movwf	___fladd@b+1
  2993  0E8A  0021               	movlb	1	; select bank1
  2994  0E8B  085B               	movf	___flsub@b^(0+128),w
  2995  0E8C  0020               	movlb	0	; select bank0
  2996  0E8D  00D4               	movwf	___fladd@b
  2997  0E8E  0021               	movlb	1	; select bank1
  2998  0E8F  085A               	movf	(___flsub@a+3)^(0+128),w
  2999  0E90  0020               	movlb	0	; select bank0
  3000  0E91  00DB               	movwf	___fladd@a+3
  3001  0E92  0021               	movlb	1	; select bank1
  3002  0E93  0859               	movf	(___flsub@a+2)^(0+128),w
  3003  0E94  0020               	movlb	0	; select bank0
  3004  0E95  00DA               	movwf	___fladd@a+2
  3005  0E96  0021               	movlb	1	; select bank1
  3006  0E97  0858               	movf	(___flsub@a+1)^(0+128),w
  3007  0E98  0020               	movlb	0	; select bank0
  3008  0E99  00D9               	movwf	___fladd@a+1
  3009  0E9A  0021               	movlb	1	; select bank1
  3010  0E9B  0857               	movf	___flsub@a^(0+128),w
  3011  0E9C  0020               	movlb	0	; select bank0
  3012  0E9D  00D8               	movwf	___fladd@a
  3013  0E9E  26AF               	fcall	___fladd
  3014  0E9F  0857               	movf	?___fladd+3,w
  3015  0EA0  0021               	movlb	1	; select bank1
  3016  0EA1  00DA               	movwf	(?___flsub+3)^(0+128)
  3017  0EA2  0020               	movlb	0	; select bank0
  3018  0EA3  0856               	movf	?___fladd+2,w
  3019  0EA4  0021               	movlb	1	; select bank1
  3020  0EA5  00D9               	movwf	(?___flsub+2)^(0+128)
  3021  0EA6  0020               	movlb	0	; select bank0
  3022  0EA7  0855               	movf	?___fladd+1,w
  3023  0EA8  0021               	movlb	1	; select bank1
  3024  0EA9  00D8               	movwf	(?___flsub+1)^(0+128)
  3025  0EAA  0020               	movlb	0	; select bank0
  3026  0EAB  0854               	movf	?___fladd,w
  3027  0EAC  0021               	movlb	1	; select bank1
  3028  0EAD  00D7               	movwf	?___flsub^(0+128)
  3029  0EAE  0008               	return
  3030  0EAF                     __end_of___flsub:	
  3031  0EAF                     __ptext8:	
  3032 ;; *************** function ___fladd *****************
  3033 ;; Defined at:
  3034 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcadd.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  b               4   52[BANK0 ] long 
  3037 ;;  a               4   56[BANK0 ] long 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  grs             1   71[BANK0 ] unsigned char 
  3040 ;;  bexp            1   70[BANK0 ] unsigned char 
  3041 ;;  aexp            1   69[BANK0 ] unsigned char 
  3042 ;;  signs           1   68[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  4   52[BANK0 ] unsigned char 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 1F/0
  3049 ;;		On exit  : 1F/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3052 ;;      Params:         0       8       0       0
  3053 ;;      Locals:         0       4       0       0
  3054 ;;      Temps:          0       8       0       0
  3055 ;;      Totals:         0      20       0       0
  3056 ;;Total ram usage:       20 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_calculate_pid
  3063 ;;		___flsub
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function ___fladd
  3069  0EAF                     ___fladd:	
  3070                           
  3071                           ;incstack = 0
  3072                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3073  0EAF  0857               	movf	___fladd@b+3,w
  3074  0EB0  00E4               	movwf	___fladd@signs
  3075  0EB1  3080               	movlw	128
  3076  0EB2  05E4               	andwf	___fladd@signs,f
  3077  0EB3  3557               	lslf	___fladd@b+3,w
  3078  0EB4  00E6               	movwf	___fladd@bexp
  3079  0EB5  1BD6               	btfsc	___fladd@b+2,7
  3080  0EB6  1466               	bsf	___fladd@bexp,0
  3081  0EB7  0866               	movf	___fladd@bexp,w
  3082  0EB8  1903               	btfsc	3,2
  3083  0EB9  2EC2               	goto	l467
  3084  0EBA  0F66               	incfsz	___fladd@bexp,w
  3085  0EBB  2EC0               	goto	l468
  3086  0EBC  01D4               	clrf	___fladd@b
  3087  0EBD  01D5               	clrf	___fladd@b+1
  3088  0EBE  01D6               	clrf	___fladd@b+2
  3089  0EBF  01D7               	clrf	___fladd@b+3
  3090  0EC0                     l468:	
  3091  0EC0  17D6               	bsf	___fladd@b+2,7
  3092  0EC1  2EC5               	goto	L1
  3093  0EC2                     l467:	
  3094  0EC2  01D4               	clrf	___fladd@b
  3095  0EC3  01D5               	clrf	___fladd@b+1
  3096  0EC4  01D6               	clrf	___fladd@b+2
  3097  0EC5                     L1:	
  3098  0EC5  01D7               	clrf	___fladd@b+3
  3099  0EC6  085B               	movf	___fladd@a+3,w
  3100  0EC7  00E5               	movwf	___fladd@aexp
  3101  0EC8  3080               	movlw	128
  3102  0EC9  05E5               	andwf	___fladd@aexp,f
  3103  0ECA  0865               	movf	___fladd@aexp,w
  3104  0ECB  0664               	xorwf	___fladd@signs,w
  3105  0ECC  1D03               	btfss	3,2
  3106  0ECD  1764               	bsf	___fladd@signs,6
  3107  0ECE  355B               	lslf	___fladd@a+3,w
  3108  0ECF  00E5               	movwf	___fladd@aexp
  3109  0ED0  1BDA               	btfsc	___fladd@a+2,7
  3110  0ED1  1465               	bsf	___fladd@aexp,0
  3111  0ED2  0865               	movf	___fladd@aexp,w
  3112  0ED3  1903               	btfsc	3,2
  3113  0ED4  2EDD               	goto	l472
  3114  0ED5  0F65               	incfsz	___fladd@aexp,w
  3115  0ED6  2EDB               	goto	l473
  3116  0ED7  01D8               	clrf	___fladd@a
  3117  0ED8  01D9               	clrf	___fladd@a+1
  3118  0ED9  01DA               	clrf	___fladd@a+2
  3119  0EDA  01DB               	clrf	___fladd@a+3
  3120  0EDB                     l473:	
  3121  0EDB  17DA               	bsf	___fladd@a+2,7
  3122  0EDC  2EE0               	goto	L2
  3123  0EDD                     l472:	
  3124  0EDD  01D8               	clrf	___fladd@a
  3125  0EDE  01D9               	clrf	___fladd@a+1
  3126  0EDF  01DA               	clrf	___fladd@a+2
  3127  0EE0                     L2:	
  3128  0EE0  01DB               	clrf	___fladd@a+3
  3129  0EE1  0866               	movf	___fladd@bexp,w
  3130  0EE2  0265               	subwf	___fladd@aexp,w
  3131  0EE3  1803               	skipnc
  3132  0EE4  2F07               	goto	l2661
  3133  0EE5  1F64               	btfss	___fladd@signs,6
  3134  0EE6  2EE9               	goto	l2631
  3135  0EE7  3080               	movlw	128
  3136  0EE8  06E4               	xorwf	___fladd@signs,f
  3137  0EE9                     l2631:	
  3138  0EE9  0866               	movf	___fladd@bexp,w
  3139  0EEA  00E7               	movwf	___fladd@grs
  3140  0EEB  0865               	movf	___fladd@aexp,w
  3141  0EEC  00E6               	movwf	___fladd@bexp
  3142  0EED  0867               	movf	___fladd@grs,w
  3143  0EEE  00E5               	movwf	___fladd@aexp
  3144  0EEF  0854               	movf	___fladd@b,w
  3145  0EF0  00E7               	movwf	___fladd@grs
  3146  0EF1  0858               	movf	___fladd@a,w
  3147  0EF2  00D4               	movwf	___fladd@b
  3148  0EF3  0867               	movf	___fladd@grs,w
  3149  0EF4  00D8               	movwf	___fladd@a
  3150  0EF5  0855               	movf	___fladd@b+1,w
  3151  0EF6  00E7               	movwf	___fladd@grs
  3152  0EF7  0859               	movf	___fladd@a+1,w
  3153  0EF8  00D5               	movwf	___fladd@b+1
  3154  0EF9  0867               	movf	___fladd@grs,w
  3155  0EFA  00D9               	movwf	___fladd@a+1
  3156  0EFB  0856               	movf	___fladd@b+2,w
  3157  0EFC  00E7               	movwf	___fladd@grs
  3158  0EFD  085A               	movf	___fladd@a+2,w
  3159  0EFE  00D6               	movwf	___fladd@b+2
  3160  0EFF  0867               	movf	___fladd@grs,w
  3161  0F00  00DA               	movwf	___fladd@a+2
  3162  0F01  0857               	movf	___fladd@b+3,w
  3163  0F02  00E7               	movwf	___fladd@grs
  3164  0F03  085B               	movf	___fladd@a+3,w
  3165  0F04  00D7               	movwf	___fladd@b+3
  3166  0F05  0867               	movf	___fladd@grs,w
  3167  0F06  00DB               	movwf	___fladd@a+3
  3168  0F07                     l2661:	
  3169  0F07  01E7               	clrf	___fladd@grs
  3170  0F08  0865               	movf	___fladd@aexp,w
  3171  0F09  00DC               	movwf	??___fladd
  3172  0F0A  01DD               	clrf	??___fladd+1
  3173  0F0B  085D               	movf	??___fladd+1,w
  3174  0F0C  00DF               	movwf	??___fladd+3
  3175  0F0D  0866               	movf	___fladd@bexp,w
  3176  0F0E  025C               	subwf	??___fladd,w
  3177  0F0F  00DE               	movwf	??___fladd+2
  3178  0F10  1C03               	skipc
  3179  0F11  03DF               	decf	??___fladd+3,f
  3180  0F12  085F               	movf	??___fladd+3,w
  3181  0F13  3A80               	xorlw	128
  3182  0F14  00E0               	movwf	??___fladd+4
  3183  0F15  3080               	movlw	128
  3184  0F16  0260               	subwf	??___fladd+4,w
  3185  0F17  1D03               	skipz
  3186  0F18  2F1B               	goto	u3275
  3187  0F19  301A               	movlw	26
  3188  0F1A  025E               	subwf	??___fladd+2,w
  3189  0F1B                     u3275:	
  3190  0F1B  1C03               	skipc
  3191  0F1C  2F3D               	goto	l2675
  3192  0F1D  0020               	movlb	0	; select bank0
  3193  0F1E  0857               	movf	___fladd@b+3,w
  3194  0F1F  0456               	iorwf	___fladd@b+2,w
  3195  0F20  0455               	iorwf	___fladd@b+1,w
  3196  0F21  0454               	iorwf	___fladd@b,w
  3197  0F22  1903               	btfsc	3,2
  3198  0F23  2F26               	goto	u3280
  3199  0F24  3001               	movlw	1
  3200  0F25  2F27               	goto	u3290
  3201  0F26                     u3280:	
  3202  0F26  3000               	movlw	0
  3203  0F27                     u3290:	
  3204  0F27  00E7               	movwf	___fladd@grs
  3205  0F28  01D4               	clrf	___fladd@b
  3206  0F29  01D5               	clrf	___fladd@b+1
  3207  0F2A  01D6               	clrf	___fladd@b+2
  3208  0F2B  01D7               	clrf	___fladd@b+3
  3209  0F2C  0865               	movf	___fladd@aexp,w
  3210  0F2D  00E6               	movwf	___fladd@bexp
  3211  0F2E  2F42               	goto	l478
  3212  0F2F                     l480:	
  3213  0F2F  1C67               	btfss	___fladd@grs,0
  3214  0F30  2F35               	goto	l481
  3215  0F31  3667               	lsrf	___fladd@grs,w
  3216  0F32  3801               	iorlw	1
  3217  0F33  00E7               	movwf	___fladd@grs
  3218  0F34  2F36               	goto	l482
  3219  0F35                     l481:	
  3220  0F35  36E7               	lsrf	___fladd@grs,f
  3221  0F36                     l482:	
  3222  0F36  1854               	btfsc	___fladd@b,0
  3223  0F37  17E7               	bsf	___fladd@grs,7
  3224  0F38  37D7               	asrf	___fladd@b+3,f
  3225  0F39  0CD6               	rrf	___fladd@b+2,f
  3226  0F3A  0CD5               	rrf	___fladd@b+1,f
  3227  0F3B  0CD4               	rrf	___fladd@b,f
  3228  0F3C  0AE6               	incf	___fladd@bexp,f
  3229  0F3D                     l2675:	
  3230  0F3D  0020               	movlb	0	; select bank0
  3231  0F3E  0865               	movf	___fladd@aexp,w
  3232  0F3F  0266               	subwf	___fladd@bexp,w
  3233  0F40  1C03               	skipc
  3234  0F41  2F2F               	goto	l480
  3235  0F42                     l478:	
  3236  0F42  1B64               	btfsc	___fladd@signs,6
  3237  0F43  2F66               	goto	l2693
  3238  0F44  0866               	movf	___fladd@bexp,w
  3239  0F45  1D03               	btfss	3,2
  3240  0F46  2F4C               	goto	l2681
  3241  0F47  01D4               	clrf	?___fladd
  3242  0F48  01D5               	clrf	?___fladd+1
  3243  0F49  01D6               	clrf	?___fladd+2
  3244  0F4A  01D7               	clrf	?___fladd+3
  3245  0F4B  0008               	return
  3246  0F4C                     l2681:	
  3247  0F4C  0858               	movf	___fladd@a,w
  3248  0F4D  07D4               	addwf	___fladd@b,f
  3249  0F4E  0859               	movf	___fladd@a+1,w
  3250  0F4F  3DD5               	addwfc	___fladd@b+1,f
  3251  0F50  085A               	movf	___fladd@a+2,w
  3252  0F51  3DD6               	addwfc	___fladd@b+2,f
  3253  0F52  085B               	movf	___fladd@a+3,w
  3254  0F53  3DD7               	addwfc	___fladd@b+3,f
  3255  0F54  1C57               	btfss	___fladd@b+3,0
  3256  0F55  2FCE               	goto	l2723
  3257  0F56  1C67               	btfss	___fladd@grs,0
  3258  0F57  2F5D               	goto	l489
  3259  0F58  36E7               	lsrf	___fladd@grs,f
  3260  0F59  0867               	movf	___fladd@grs,w
  3261  0F5A  3801               	iorlw	1
  3262  0F5B  00E7               	movwf	___fladd@grs
  3263  0F5C  2F5E               	goto	l490
  3264  0F5D                     l489:	
  3265  0F5D  36E7               	lsrf	___fladd@grs,f
  3266  0F5E                     l490:	
  3267  0F5E  1854               	btfsc	___fladd@b,0
  3268  0F5F  17E7               	bsf	___fladd@grs,7
  3269  0F60  37D7               	asrf	___fladd@b+3,f
  3270  0F61  0CD6               	rrf	___fladd@b+2,f
  3271  0F62  0CD5               	rrf	___fladd@b+1,f
  3272  0F63  0CD4               	rrf	___fladd@b,f
  3273  0F64  0AE6               	incf	___fladd@bexp,f
  3274  0F65  2FCE               	goto	l2723
  3275  0F66                     l2693:	
  3276  0F66  0857               	movf	___fladd@b+3,w
  3277  0F67  3A80               	xorlw	128
  3278  0F68  00DC               	movwf	??___fladd
  3279  0F69  085B               	movf	___fladd@a+3,w
  3280  0F6A  3A80               	xorlw	128
  3281  0F6B  025C               	subwf	??___fladd,w
  3282  0F6C  1D03               	skipz
  3283  0F6D  2F78               	goto	u3383
  3284  0F6E  085A               	movf	___fladd@a+2,w
  3285  0F6F  0256               	subwf	___fladd@b+2,w
  3286  0F70  1D03               	skipz
  3287  0F71  2F78               	goto	u3383
  3288  0F72  0859               	movf	___fladd@a+1,w
  3289  0F73  0255               	subwf	___fladd@b+1,w
  3290  0F74  1D03               	skipz
  3291  0F75  2F78               	goto	u3383
  3292  0F76  0858               	movf	___fladd@a,w
  3293  0F77  0254               	subwf	___fladd@b,w
  3294  0F78                     u3383:	
  3295  0F78  1803               	skipnc
  3296  0F79  2FA7               	goto	l2703
  3297  0F7A  30FF               	movlw	255
  3298  0F7B  00DC               	movwf	??___fladd
  3299  0F7C  00DD               	movwf	??___fladd+1
  3300  0F7D  00DE               	movwf	??___fladd+2
  3301  0F7E  00DF               	movwf	??___fladd+3
  3302  0F7F  0854               	movf	___fladd@b,w
  3303  0F80  0258               	subwf	___fladd@a,w
  3304  0F81  00E0               	movwf	??___fladd+4
  3305  0F82  0855               	movf	___fladd@b+1,w
  3306  0F83  3B59               	subwfb	___fladd@a+1,w
  3307  0F84  00E1               	movwf	??___fladd+5
  3308  0F85  0856               	movf	___fladd@b+2,w
  3309  0F86  3B5A               	subwfb	___fladd@a+2,w
  3310  0F87  00E2               	movwf	??___fladd+6
  3311  0F88  0857               	movf	___fladd@b+3,w
  3312  0F89  3B5B               	subwfb	___fladd@a+3,w
  3313  0F8A  00E3               	movwf	??___fladd+7
  3314  0F8B  0860               	movf	??___fladd+4,w
  3315  0F8C  07DC               	addwf	??___fladd,f
  3316  0F8D  0861               	movf	??___fladd+5,w
  3317  0F8E  3DDD               	addwfc	??___fladd+1,f
  3318  0F8F  0862               	movf	??___fladd+6,w
  3319  0F90  3DDE               	addwfc	??___fladd+2,f
  3320  0F91  0863               	movf	??___fladd+7,w
  3321  0F92  3DDF               	addwfc	??___fladd+3,f
  3322  0F93  085F               	movf	??___fladd+3,w
  3323  0F94  00D7               	movwf	___fladd@b+3
  3324  0F95  085E               	movf	??___fladd+2,w
  3325  0F96  00D6               	movwf	___fladd@b+2
  3326  0F97  085D               	movf	??___fladd+1,w
  3327  0F98  00D5               	movwf	___fladd@b+1
  3328  0F99  085C               	movf	??___fladd,w
  3329  0F9A  00D4               	movwf	___fladd@b
  3330  0F9B  3080               	movlw	128
  3331  0F9C  06E4               	xorwf	___fladd@signs,f
  3332  0F9D  09E7               	comf	___fladd@grs,f
  3333  0F9E  0FE7               	incfsz	___fladd@grs,f
  3334  0F9F  2FAF               	goto	l495
  3335  0FA0  3001               	movlw	1
  3336  0FA1  07D4               	addwf	___fladd@b,f
  3337  0FA2  3000               	movlw	0
  3338  0FA3  3DD5               	addwfc	___fladd@b+1,f
  3339  0FA4  3DD6               	addwfc	___fladd@b+2,f
  3340  0FA5  3DD7               	addwfc	___fladd@b+3,f
  3341  0FA6  2FAF               	goto	l495
  3342  0FA7                     l2703:	
  3343  0FA7  0858               	movf	___fladd@a,w
  3344  0FA8  02D4               	subwf	___fladd@b,f
  3345  0FA9  0859               	movf	___fladd@a+1,w
  3346  0FAA  3BD5               	subwfb	___fladd@b+1,f
  3347  0FAB  085A               	movf	___fladd@a+2,w
  3348  0FAC  3BD6               	subwfb	___fladd@b+2,f
  3349  0FAD  085B               	movf	___fladd@a+3,w
  3350  0FAE  3BD7               	subwfb	___fladd@b+3,f
  3351  0FAF                     l495:	
  3352  0FAF  0857               	movf	___fladd@b+3,w
  3353  0FB0  0456               	iorwf	___fladd@b+2,w
  3354  0FB1  0455               	iorwf	___fladd@b+1,w
  3355  0FB2  0454               	iorwf	___fladd@b,w
  3356  0FB3  1D03               	skipz
  3357  0FB4  2FCC               	goto	l2721
  3358  0FB5  0867               	movf	___fladd@grs,w
  3359  0FB6  1D03               	btfss	3,2
  3360  0FB7  2FCC               	goto	l2721
  3361  0FB8  01D4               	clrf	?___fladd
  3362  0FB9  01D5               	clrf	?___fladd+1
  3363  0FBA  01D6               	clrf	?___fladd+2
  3364  0FBB  01D7               	clrf	?___fladd+3
  3365  0FBC  0008               	return
  3366  0FBD                     l2709:	
  3367  0FBD  35D4               	lslf	___fladd@b,f
  3368  0FBE  0DD5               	rlf	___fladd@b+1,f
  3369  0FBF  0DD6               	rlf	___fladd@b+2,f
  3370  0FC0  0DD7               	rlf	___fladd@b+3,f
  3371  0FC1  1BE7               	btfsc	___fladd@grs,7
  3372  0FC2  1454               	bsf	___fladd@b,0
  3373  0FC3  1C67               	btfss	___fladd@grs,0
  3374  0FC4  2FC8               	goto	l500
  3375  0FC5  1403               	setc
  3376  0FC6  0DE7               	rlf	___fladd@grs,f
  3377  0FC7  2FC9               	goto	l2717
  3378  0FC8                     l500:	
  3379  0FC8  35E7               	lslf	___fladd@grs,f
  3380  0FC9                     l2717:	
  3381  0FC9  0866               	movf	___fladd@bexp,w
  3382  0FCA  1D03               	btfss	3,2
  3383  0FCB  03E6               	decf	___fladd@bexp,f
  3384  0FCC                     l2721:	
  3385  0FCC  1FD6               	btfss	___fladd@b+2,7
  3386  0FCD  2FBD               	goto	l2709
  3387  0FCE                     l2723:	
  3388  0FCE  01E5               	clrf	___fladd@aexp
  3389  0FCF  1FE7               	btfss	___fladd@grs,7
  3390  0FD0  2FD9               	goto	l2733
  3391  0FD1  0867               	movf	___fladd@grs,w
  3392  0FD2  397F               	andlw	127
  3393  0FD3  1903               	btfsc	3,2
  3394  0FD4  1854               	btfsc	___fladd@b,0
  3395  0FD5  2FD7               	goto	l2729
  3396  0FD6  2FD9               	goto	l2733
  3397  0FD7                     l2729:	
  3398  0FD7  01E5               	clrf	___fladd@aexp
  3399  0FD8  0AE5               	incf	___fladd@aexp,f
  3400  0FD9                     l2733:	
  3401  0FD9  0865               	movf	___fladd@aexp,w
  3402  0FDA  1903               	btfsc	3,2
  3403  0FDB  2FEA               	goto	l2745
  3404  0FDC  3001               	movlw	1
  3405  0FDD  07D4               	addwf	___fladd@b,f
  3406  0FDE  3000               	movlw	0
  3407  0FDF  3DD5               	addwfc	___fladd@b+1,f
  3408  0FE0  3DD6               	addwfc	___fladd@b+2,f
  3409  0FE1  3DD7               	addwfc	___fladd@b+3,f
  3410  0FE2  1C57               	btfss	___fladd@b+3,0
  3411  0FE3  2FEA               	goto	l2745
  3412  0FE4  37D7               	asrf	___fladd@b+3,f
  3413  0FE5  0CD6               	rrf	___fladd@b+2,f
  3414  0FE6  0CD5               	rrf	___fladd@b+1,f
  3415  0FE7  0CD4               	rrf	___fladd@b,f
  3416  0FE8  0F66               	incfsz	___fladd@bexp,w
  3417  0FE9  0AE6               	incf	___fladd@bexp,f
  3418  0FEA                     l2745:	
  3419  0FEA  0A66               	incf	___fladd@bexp,w
  3420  0FEB  1D03               	btfss	3,2
  3421  0FEC  0866               	movf	___fladd@bexp,w
  3422  0FED  1D03               	btfss	3,2
  3423  0FEE  2FF6               	goto	l2753
  3424  0FEF  01D4               	clrf	___fladd@b
  3425  0FF0  01D5               	clrf	___fladd@b+1
  3426  0FF1  01D6               	clrf	___fladd@b+2
  3427  0FF2  01D7               	clrf	___fladd@b+3
  3428  0FF3  0866               	movf	___fladd@bexp,w
  3429  0FF4  1903               	btfsc	3,2
  3430  0FF5  01E4               	clrf	___fladd@signs
  3431  0FF6                     l2753:	
  3432  0FF6  1C66               	btfss	___fladd@bexp,0
  3433  0FF7  2FFA               	goto	l515
  3434  0FF8  17D6               	bsf	___fladd@b+2,7
  3435  0FF9  2FFB               	goto	l2757
  3436  0FFA                     l515:	
  3437  0FFA  13D6               	bcf	___fladd@b+2,7
  3438  0FFB                     l2757:	
  3439  0FFB  3666               	lsrf	___fladd@bexp,w
  3440  0FFC  00D7               	movwf	___fladd@b+3
  3441  0FFD  1BE4               	btfsc	___fladd@signs,7
  3442  0FFE  17D7               	bsf	___fladd@b+3,7
  3443  0FFF  0008               	return
  3444  1000                     __end_of___fladd:	
  3445                           
  3446                           	psect	text9
  3447  061A                     __ptext9:	
  3448 ;; *************** function ___flmul *****************
  3449 ;; Defined at:
  3450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcmul.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  b               4   27[BANK0 ] unsigned char 
  3453 ;;  a               4   31[BANK0 ] unsigned char 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  prod            4   46[BANK0 ] struct .
  3456 ;;  grs             4   42[BANK0 ] unsigned long 
  3457 ;;  temp            2   50[BANK0 ] struct .
  3458 ;;  bexp            1   41[BANK0 ] unsigned char 
  3459 ;;  aexp            1   40[BANK0 ] unsigned char 
  3460 ;;  sign            1   39[BANK0 ] unsigned char 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  4   27[BANK0 ] unsigned char 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, pclath, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 1F/0
  3467 ;;		On exit  : 1F/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3470 ;;      Params:         0       8       0       0
  3471 ;;      Locals:         0      13       0       0
  3472 ;;      Temps:          0       4       0       0
  3473 ;;      Totals:         0      25       0       0
  3474 ;;Total ram usage:       25 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    3
  3477 ;; This function calls:
  3478 ;;		__Umul8_16
  3479 ;; This function is called by:
  3480 ;;		_calculate_pid
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function ___flmul
  3486  061A                     ___flmul:	
  3487                           
  3488                           ;incstack = 0
  3489                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3490  061A  083E               	movf	___flmul@b+3,w
  3491  061B  00C7               	movwf	___flmul@sign
  3492  061C  3080               	movlw	128
  3493  061D  05C7               	andwf	___flmul@sign,f
  3494  061E  353E               	lslf	___flmul@b+3,w
  3495  061F  00C9               	movwf	___flmul@bexp
  3496  0620  1BBD               	btfsc	___flmul@b+2,7
  3497  0621  1449               	bsf	___flmul@bexp,0
  3498  0622  0849               	movf	___flmul@bexp,w
  3499  0623  1903               	btfsc	3,2
  3500  0624  2E2D               	goto	l560
  3501  0625  0F49               	incfsz	___flmul@bexp,w
  3502  0626  2E2B               	goto	l561
  3503  0627  01BB               	clrf	___flmul@b
  3504  0628  01BC               	clrf	___flmul@b+1
  3505  0629  01BD               	clrf	___flmul@b+2
  3506  062A  01BE               	clrf	___flmul@b+3
  3507  062B                     l561:	
  3508  062B  17BD               	bsf	___flmul@b+2,7
  3509  062C  2E31               	goto	l3041
  3510  062D                     l560:	
  3511  062D  01BB               	clrf	___flmul@b
  3512  062E  01BC               	clrf	___flmul@b+1
  3513  062F  01BD               	clrf	___flmul@b+2
  3514  0630  01BE               	clrf	___flmul@b+3
  3515  0631                     l3041:	
  3516  0631  0842               	movf	___flmul@a+3,w
  3517  0632  3980               	andlw	128
  3518  0633  06C7               	xorwf	___flmul@sign,f
  3519  0634  3542               	lslf	___flmul@a+3,w
  3520  0635  00C8               	movwf	___flmul@aexp
  3521  0636  1BC1               	btfsc	___flmul@a+2,7
  3522  0637  1448               	bsf	___flmul@aexp,0
  3523  0638  0848               	movf	___flmul@aexp,w
  3524  0639  1903               	btfsc	3,2
  3525  063A  2E43               	goto	l564
  3526  063B  0F48               	incfsz	___flmul@aexp,w
  3527  063C  2E41               	goto	l565
  3528  063D  01BF               	clrf	___flmul@a
  3529  063E  01C0               	clrf	___flmul@a+1
  3530  063F  01C1               	clrf	___flmul@a+2
  3531  0640  01C2               	clrf	___flmul@a+3
  3532  0641                     l565:	
  3533  0641  17C1               	bsf	___flmul@a+2,7
  3534  0642  2E47               	goto	l3053
  3535  0643                     l564:	
  3536  0643  01BF               	clrf	___flmul@a
  3537  0644  01C0               	clrf	___flmul@a+1
  3538  0645  01C1               	clrf	___flmul@a+2
  3539  0646  01C2               	clrf	___flmul@a+3
  3540  0647                     l3053:	
  3541  0647  0848               	movf	___flmul@aexp,w
  3542  0648  1D03               	btfss	3,2
  3543  0649  0849               	movf	___flmul@bexp,w
  3544  064A  1D03               	btfss	3,2
  3545  064B  2E51               	goto	l3057
  3546  064C  01BB               	clrf	?___flmul
  3547  064D  01BC               	clrf	?___flmul+1
  3548  064E  01BD               	clrf	?___flmul+2
  3549  064F  01BE               	clrf	?___flmul+3
  3550  0650  0008               	return
  3551  0651                     l3057:	
  3552  0651  083B               	movf	___flmul@b,w
  3553  0652  00A2               	movwf	__Umul8_16@multiplicand
  3554  0653  0841               	movf	___flmul@a+2,w
  3555  0654  279C  3186         	fcall	__Umul8_16
  3556  0656  0823               	movf	?__Umul8_16+1,w
  3557  0657  00D3               	movwf	___flmul@temp+1
  3558  0658  0822               	movf	?__Umul8_16,w
  3559  0659  00D2               	movwf	___flmul@temp
  3560  065A  00CA               	movwf	___flmul@grs
  3561  065B  01CB               	clrf	___flmul@grs+1
  3562  065C  01CC               	clrf	___flmul@grs+2
  3563  065D  01CD               	clrf	___flmul@grs+3
  3564  065E  0853               	movf	___flmul@temp+1,w
  3565  065F  00CE               	movwf	___flmul@prod
  3566  0660  01CF               	clrf	___flmul@prod+1
  3567  0661  01D0               	clrf	___flmul@prod+2
  3568  0662  01D1               	clrf	___flmul@prod+3
  3569  0663  083C               	movf	___flmul@b+1,w
  3570  0664  00A2               	movwf	__Umul8_16@multiplicand
  3571  0665  0840               	movf	___flmul@a+1,w
  3572  0666  279C  3186         	fcall	__Umul8_16
  3573  0668  0823               	movf	?__Umul8_16+1,w
  3574  0669  00D3               	movwf	___flmul@temp+1
  3575  066A  0822               	movf	?__Umul8_16,w
  3576  066B  00D2               	movwf	___flmul@temp
  3577  066C  07CA               	addwf	___flmul@grs,f
  3578  066D  3001               	movlw	1
  3579  066E  1803               	skipnc
  3580  066F  07CB               	addwf	___flmul@grs+1,f
  3581  0670  1803               	skipnc
  3582  0671  07CC               	addwf	___flmul@grs+2,f
  3583  0672  1803               	skipnc
  3584  0673  07CD               	addwf	___flmul@grs+3,f
  3585  0674  0853               	movf	___flmul@temp+1,w
  3586  0675  07CE               	addwf	___flmul@prod,f
  3587  0676  3001               	movlw	1
  3588  0677  1803               	skipnc
  3589  0678  07CF               	addwf	___flmul@prod+1,f
  3590  0679  1803               	skipnc
  3591  067A  07D0               	addwf	___flmul@prod+2,f
  3592  067B  1803               	skipnc
  3593  067C  07D1               	addwf	___flmul@prod+3,f
  3594  067D  083D               	movf	___flmul@b+2,w
  3595  067E  00A2               	movwf	__Umul8_16@multiplicand
  3596  067F  083F               	movf	___flmul@a,w
  3597  0680  279C  3186         	fcall	__Umul8_16
  3598  0682  0823               	movf	?__Umul8_16+1,w
  3599  0683  00D3               	movwf	___flmul@temp+1
  3600  0684  0822               	movf	?__Umul8_16,w
  3601  0685  00D2               	movwf	___flmul@temp
  3602  0686  07CA               	addwf	___flmul@grs,f
  3603  0687  3001               	movlw	1
  3604  0688  1803               	skipnc
  3605  0689  07CB               	addwf	___flmul@grs+1,f
  3606  068A  1803               	skipnc
  3607  068B  07CC               	addwf	___flmul@grs+2,f
  3608  068C  1803               	skipnc
  3609  068D  07CD               	addwf	___flmul@grs+3,f
  3610  068E  0853               	movf	___flmul@temp+1,w
  3611  068F  07CE               	addwf	___flmul@prod,f
  3612  0690  3001               	movlw	1
  3613  0691  1803               	skipnc
  3614  0692  07CF               	addwf	___flmul@prod+1,f
  3615  0693  1803               	skipnc
  3616  0694  07D0               	addwf	___flmul@prod+2,f
  3617  0695  1803               	skipnc
  3618  0696  07D1               	addwf	___flmul@prod+3,f
  3619  0697  084C               	movf	___flmul@grs+2,w
  3620  0698  00CD               	movwf	___flmul@grs+3
  3621  0699  084B               	movf	___flmul@grs+1,w
  3622  069A  00CC               	movwf	___flmul@grs+2
  3623  069B  084A               	movf	___flmul@grs,w
  3624  069C  00CB               	movwf	___flmul@grs+1
  3625  069D  01CA               	clrf	___flmul@grs
  3626  069E  083C               	movf	___flmul@b+1,w
  3627  069F  00A2               	movwf	__Umul8_16@multiplicand
  3628  06A0  083F               	movf	___flmul@a,w
  3629  06A1  279C  3186         	fcall	__Umul8_16
  3630  06A3  0823               	movf	?__Umul8_16+1,w
  3631  06A4  00D3               	movwf	___flmul@temp+1
  3632  06A5  0822               	movf	?__Umul8_16,w
  3633  06A6  00D2               	movwf	___flmul@temp
  3634  06A7  07CA               	addwf	___flmul@grs,f
  3635  06A8  0853               	movf	___flmul@temp+1,w
  3636  06A9  3DCB               	addwfc	___flmul@grs+1,f
  3637  06AA  3000               	movlw	0
  3638  06AB  3DCC               	addwfc	___flmul@grs+2,f
  3639  06AC  3DCD               	addwfc	___flmul@grs+3,f
  3640  06AD  083B               	movf	___flmul@b,w
  3641  06AE  00A2               	movwf	__Umul8_16@multiplicand
  3642  06AF  0840               	movf	___flmul@a+1,w
  3643  06B0  279C  3186         	fcall	__Umul8_16
  3644  06B2  0823               	movf	?__Umul8_16+1,w
  3645  06B3  00D3               	movwf	___flmul@temp+1
  3646  06B4  0822               	movf	?__Umul8_16,w
  3647  06B5  00D2               	movwf	___flmul@temp
  3648  06B6  07CA               	addwf	___flmul@grs,f
  3649  06B7  0853               	movf	___flmul@temp+1,w
  3650  06B8  3DCB               	addwfc	___flmul@grs+1,f
  3651  06B9  3000               	movlw	0
  3652  06BA  3DCC               	addwfc	___flmul@grs+2,f
  3653  06BB  3DCD               	addwfc	___flmul@grs+3,f
  3654  06BC  084C               	movf	___flmul@grs+2,w
  3655  06BD  00CD               	movwf	___flmul@grs+3
  3656  06BE  084B               	movf	___flmul@grs+1,w
  3657  06BF  00CC               	movwf	___flmul@grs+2
  3658  06C0  084A               	movf	___flmul@grs,w
  3659  06C1  00CB               	movwf	___flmul@grs+1
  3660  06C2  01CA               	clrf	___flmul@grs
  3661  06C3  083B               	movf	___flmul@b,w
  3662  06C4  00A2               	movwf	__Umul8_16@multiplicand
  3663  06C5  083F               	movf	___flmul@a,w
  3664  06C6  279C  3186         	fcall	__Umul8_16
  3665  06C8  0823               	movf	?__Umul8_16+1,w
  3666  06C9  00D3               	movwf	___flmul@temp+1
  3667  06CA  0822               	movf	?__Umul8_16,w
  3668  06CB  00D2               	movwf	___flmul@temp
  3669  06CC  07CA               	addwf	___flmul@grs,f
  3670  06CD  0853               	movf	___flmul@temp+1,w
  3671  06CE  3DCB               	addwfc	___flmul@grs+1,f
  3672  06CF  3000               	movlw	0
  3673  06D0  3DCC               	addwfc	___flmul@grs+2,f
  3674  06D1  3DCD               	addwfc	___flmul@grs+3,f
  3675  06D2  083C               	movf	___flmul@b+1,w
  3676  06D3  00A2               	movwf	__Umul8_16@multiplicand
  3677  06D4  0841               	movf	___flmul@a+2,w
  3678  06D5  279C  3186         	fcall	__Umul8_16
  3679  06D7  0823               	movf	?__Umul8_16+1,w
  3680  06D8  00D3               	movwf	___flmul@temp+1
  3681  06D9  0822               	movf	?__Umul8_16,w
  3682  06DA  00D2               	movwf	___flmul@temp
  3683  06DB  07CE               	addwf	___flmul@prod,f
  3684  06DC  0853               	movf	___flmul@temp+1,w
  3685  06DD  3DCF               	addwfc	___flmul@prod+1,f
  3686  06DE  3000               	movlw	0
  3687  06DF  3DD0               	addwfc	___flmul@prod+2,f
  3688  06E0  3DD1               	addwfc	___flmul@prod+3,f
  3689  06E1  083D               	movf	___flmul@b+2,w
  3690  06E2  00A2               	movwf	__Umul8_16@multiplicand
  3691  06E3  0840               	movf	___flmul@a+1,w
  3692  06E4  279C  3186         	fcall	__Umul8_16
  3693  06E6  0823               	movf	?__Umul8_16+1,w
  3694  06E7  00D3               	movwf	___flmul@temp+1
  3695  06E8  0822               	movf	?__Umul8_16,w
  3696  06E9  00D2               	movwf	___flmul@temp
  3697  06EA  07CE               	addwf	___flmul@prod,f
  3698  06EB  0853               	movf	___flmul@temp+1,w
  3699  06EC  3DCF               	addwfc	___flmul@prod+1,f
  3700  06ED  3000               	movlw	0
  3701  06EE  3DD0               	addwfc	___flmul@prod+2,f
  3702  06EF  3DD1               	addwfc	___flmul@prod+3,f
  3703  06F0  083D               	movf	___flmul@b+2,w
  3704  06F1  00A2               	movwf	__Umul8_16@multiplicand
  3705  06F2  0841               	movf	___flmul@a+2,w
  3706  06F3  279C  3186         	fcall	__Umul8_16
  3707  06F5  0823               	movf	?__Umul8_16+1,w
  3708  06F6  00D3               	movwf	___flmul@temp+1
  3709  06F7  0822               	movf	?__Umul8_16,w
  3710  06F8  00D2               	movwf	___flmul@temp
  3711  06F9  00C3               	movwf	??___flmul
  3712  06FA  0853               	movf	___flmul@temp+1,w
  3713  06FB  00C4               	movwf	??___flmul+1
  3714  06FC  01C5               	clrf	??___flmul+2
  3715  06FD  01C6               	clrf	??___flmul+3
  3716  06FE  0845               	movf	??___flmul+2,w
  3717  06FF  00C6               	movwf	??___flmul+3
  3718  0700  0844               	movf	??___flmul+1,w
  3719  0701  00C5               	movwf	??___flmul+2
  3720  0702  0843               	movf	??___flmul,w
  3721  0703  00C4               	movwf	??___flmul+1
  3722  0704  01C3               	clrf	??___flmul
  3723  0705  0843               	movf	??___flmul,w
  3724  0706  07CE               	addwf	___flmul@prod,f
  3725  0707  0844               	movf	??___flmul+1,w
  3726  0708  3DCF               	addwfc	___flmul@prod+1,f
  3727  0709  0845               	movf	??___flmul+2,w
  3728  070A  3DD0               	addwfc	___flmul@prod+2,f
  3729  070B  0846               	movf	??___flmul+3,w
  3730  070C  3DD1               	addwfc	___flmul@prod+3,f
  3731  070D  084D               	movf	___flmul@grs+3,w
  3732  070E  07CE               	addwf	___flmul@prod,f
  3733  070F  3001               	movlw	1
  3734  0710  1803               	skipnc
  3735  0711  07CF               	addwf	___flmul@prod+1,f
  3736  0712  1803               	skipnc
  3737  0713  07D0               	addwf	___flmul@prod+2,f
  3738  0714  1803               	skipnc
  3739  0715  07D1               	addwf	___flmul@prod+3,f
  3740  0716  084C               	movf	___flmul@grs+2,w
  3741  0717  00CD               	movwf	___flmul@grs+3
  3742  0718  084B               	movf	___flmul@grs+1,w
  3743  0719  00CC               	movwf	___flmul@grs+2
  3744  071A  084A               	movf	___flmul@grs,w
  3745  071B  00CB               	movwf	___flmul@grs+1
  3746  071C  01CA               	clrf	___flmul@grs
  3747  071D  0849               	movf	___flmul@bexp,w
  3748  071E  00D2               	movwf	___flmul@temp
  3749  071F  01D3               	clrf	___flmul@temp+1
  3750  0720  0848               	movf	___flmul@aexp,w
  3751  0721  07D2               	addwf	___flmul@temp,f
  3752  0722  1803               	skipnc
  3753  0723  0AD3               	incf	___flmul@temp+1,f
  3754  0724  3082               	movlw	-126
  3755  0725                     L3:	
  3756  0725  07D2               	addwf	___flmul@temp,f
  3757  0726  1C03               	skipc
  3758  0727  03D3               	decf	___flmul@temp+1,f
  3759  0728  1BD0               	btfsc	___flmul@prod+2,7
  3760  0729  2F36               	goto	l3105
  3761  072A  35CE               	lslf	___flmul@prod,f
  3762  072B  0DCF               	rlf	___flmul@prod+1,f
  3763  072C  0DD0               	rlf	___flmul@prod+2,f
  3764  072D  0DD1               	rlf	___flmul@prod+3,f
  3765  072E  1BCD               	btfsc	___flmul@grs+3,7
  3766  072F  144E               	bsf	___flmul@prod,0
  3767  0730  30FF               	movlw	-1
  3768  0731  35CA               	lslf	___flmul@grs,f
  3769  0732  0DCB               	rlf	___flmul@grs+1,f
  3770  0733  0DCC               	rlf	___flmul@grs+2,f
  3771  0734  0DCD               	rlf	___flmul@grs+3,f
  3772  0735  2F25               	goto	L3
  3773  0736                     l3105:	
  3774  0736  01C8               	clrf	___flmul@aexp
  3775  0737  1FCD               	btfss	___flmul@grs+3,7
  3776  0738  2F4B               	goto	l3115
  3777  0739  084A               	movf	___flmul@grs,w
  3778  073A  00C3               	movwf	??___flmul
  3779  073B  084B               	movf	___flmul@grs+1,w
  3780  073C  00C4               	movwf	??___flmul+1
  3781  073D  084C               	movf	___flmul@grs+2,w
  3782  073E  00C5               	movwf	??___flmul+2
  3783  073F  307F               	movlw	127
  3784  0740  054D               	andwf	___flmul@grs+3,w
  3785  0741  00C6               	movwf	??___flmul+3
  3786  0742  0445               	iorwf	??___flmul+2,w
  3787  0743  0444               	iorwf	??___flmul+1,w
  3788  0744  0443               	iorwf	??___flmul,w
  3789  0745  1903               	skipnz
  3790  0746  184E               	btfsc	___flmul@prod,0
  3791  0747  2F49               	goto	l3111
  3792  0748  2F4B               	goto	l3115
  3793  0749                     l3111:	
  3794  0749  01C8               	clrf	___flmul@aexp
  3795  074A  0AC8               	incf	___flmul@aexp,f
  3796  074B                     l3115:	
  3797  074B  0848               	movf	___flmul@aexp,w
  3798  074C  1903               	btfsc	3,2
  3799  074D  2F5D               	goto	l3125
  3800  074E  3001               	movlw	1
  3801  074F  07CE               	addwf	___flmul@prod,f
  3802  0750  3000               	movlw	0
  3803  0751  3DCF               	addwfc	___flmul@prod+1,f
  3804  0752  3DD0               	addwfc	___flmul@prod+2,f
  3805  0753  3DD1               	addwfc	___flmul@prod+3,f
  3806  0754  1C51               	btfss	___flmul@prod+3,0
  3807  0755  2F5D               	goto	l3125
  3808  0756  37D1               	asrf	___flmul@prod+3,f
  3809  0757  0CD0               	rrf	___flmul@prod+2,f
  3810  0758  0CCF               	rrf	___flmul@prod+1,f
  3811  0759  0CCE               	rrf	___flmul@prod,f
  3812  075A  0AD2               	incf	___flmul@temp,f
  3813  075B  1903               	skipnz
  3814  075C  0AD3               	incf	___flmul@temp+1,f
  3815  075D                     l3125:	
  3816  075D  0853               	movf	___flmul@temp+1,w
  3817  075E  3A80               	xorlw	128
  3818  075F  00C3               	movwf	??___flmul
  3819  0760  3080               	movlw	128
  3820  0761  0243               	subwf	??___flmul,w
  3821  0762  1D03               	skipz
  3822  0763  2F66               	goto	u4195
  3823  0764  30FF               	movlw	255
  3824  0765  0252               	subwf	___flmul@temp,w
  3825  0766                     u4195:	
  3826  0766  1C03               	skipc
  3827  0767  2F70               	goto	l3129
  3828  0768  307F               	movlw	127
  3829  0769  0020               	movlb	0	; select bank0
  3830  076A  00D1               	movwf	___flmul@prod+3
  3831  076B  3080               	movlw	128
  3832  076C  00D0               	movwf	___flmul@prod+2
  3833  076D  01CF               	clrf	___flmul@prod+1
  3834  076E  01CE               	clrf	___flmul@prod
  3835  076F  2F91               	goto	l582
  3836  0770                     l3129:	
  3837  0770  0020               	movlb	0	; select bank0
  3838  0771  0853               	movf	___flmul@temp+1,w
  3839  0772  3A80               	xorlw	128
  3840  0773  00C3               	movwf	??___flmul
  3841  0774  3080               	movlw	128
  3842  0775  0243               	subwf	??___flmul,w
  3843  0776  1D03               	skipz
  3844  0777  2F7A               	goto	u4205
  3845  0778  3001               	movlw	1
  3846  0779  0252               	subwf	___flmul@temp,w
  3847  077A                     u4205:	
  3848  077A  1803               	skipnc
  3849  077B  2F83               	goto	l3135
  3850  077C  0020               	movlb	0	; select bank0
  3851  077D  01CE               	clrf	___flmul@prod
  3852  077E  01CF               	clrf	___flmul@prod+1
  3853  077F  01D0               	clrf	___flmul@prod+2
  3854  0780  01D1               	clrf	___flmul@prod+3
  3855  0781  01C7               	clrf	___flmul@sign
  3856  0782  2F91               	goto	l582
  3857  0783                     l3135:	
  3858  0783  0020               	movlb	0	; select bank0
  3859  0784  0852               	movf	___flmul@temp,w
  3860  0785  00C9               	movwf	___flmul@bexp
  3861  0786  30FF               	movlw	255
  3862  0787  05CE               	andwf	___flmul@prod,f
  3863  0788  05CF               	andwf	___flmul@prod+1,f
  3864  0789  307F               	movlw	127
  3865  078A  05D0               	andwf	___flmul@prod+2,f
  3866  078B  3000               	movlw	0
  3867  078C  01D1               	clrf	___flmul@prod+3
  3868  078D  1849               	btfsc	___flmul@bexp,0
  3869  078E  17D0               	bsf	___flmul@prod+2,7
  3870  078F  3649               	lsrf	___flmul@bexp,w
  3871  0790  00D1               	movwf	___flmul@prod+3
  3872  0791                     l582:	
  3873  0791  0847               	movf	___flmul@sign,w
  3874  0792  04D1               	iorwf	___flmul@prod+3,f
  3875  0793  0851               	movf	___flmul@prod+3,w
  3876  0794  00BE               	movwf	?___flmul+3
  3877  0795  0850               	movf	___flmul@prod+2,w
  3878  0796  00BD               	movwf	?___flmul+2
  3879  0797  084F               	movf	___flmul@prod+1,w
  3880  0798  00BC               	movwf	?___flmul+1
  3881  0799  084E               	movf	___flmul@prod,w
  3882  079A  00BB               	movwf	?___flmul
  3883  079B  0008               	return
  3884  079C                     __end_of___flmul:	
  3885  079C                     __ptext10:	
  3886 ;; *************** function __Umul8_16 *****************
  3887 ;; Defined at:
  3888 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul8_16.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  multiplier      1    wreg     unsigned char 
  3891 ;;  multiplicand    1    2[BANK0 ] unsigned char 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  multiplier      1    7[BANK0 ] unsigned char 
  3894 ;;  word_mpld       2    8[BANK0 ] unsigned int 
  3895 ;;  product         2    5[BANK0 ] unsigned int 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  2    2[BANK0 ] unsigned int 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 1F/0
  3902 ;;		On exit  : 1F/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3905 ;;      Params:         0       3       0       0
  3906 ;;      Locals:         0       5       0       0
  3907 ;;      Temps:          0       0       0       0
  3908 ;;      Totals:         0       8       0       0
  3909 ;;Total ram usage:        8 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    2
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		___flmul
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           
  3920                           ;psect for function __Umul8_16
  3921  079C                     __Umul8_16:	
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3925                           ;__Umul8_16@multiplier stored from wreg
  3926  079C  00A7               	movwf	__Umul8_16@multiplier
  3927  079D  01A5               	clrf	__Umul8_16@product
  3928  079E  01A6               	clrf	__Umul8_16@product+1
  3929  079F  0822               	movf	__Umul8_16@multiplicand,w
  3930  07A0  00A8               	movwf	__Umul8_16@word_mpld
  3931  07A1  01A9               	clrf	__Umul8_16@word_mpld+1
  3932  07A2  1C27               	btfss	__Umul8_16@multiplier,0
  3933  07A3  2FA8               	goto	l2771
  3934  07A4  0828               	movf	__Umul8_16@word_mpld,w
  3935  07A5  07A5               	addwf	__Umul8_16@product,f
  3936  07A6  0829               	movf	__Umul8_16@word_mpld+1,w
  3937  07A7  3DA6               	addwfc	__Umul8_16@product+1,f
  3938  07A8                     l2771:	
  3939  07A8  35A8               	lslf	__Umul8_16@word_mpld,f
  3940  07A9  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3941  07AA  1CA7               	btfss	__Umul8_16@multiplier,1
  3942  07AB  2FB0               	goto	l2777
  3943  07AC  0828               	movf	__Umul8_16@word_mpld,w
  3944  07AD  07A5               	addwf	__Umul8_16@product,f
  3945  07AE  0829               	movf	__Umul8_16@word_mpld+1,w
  3946  07AF  3DA6               	addwfc	__Umul8_16@product+1,f
  3947  07B0                     l2777:	
  3948  07B0  35A8               	lslf	__Umul8_16@word_mpld,f
  3949  07B1  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3950  07B2  1D27               	btfss	__Umul8_16@multiplier,2
  3951  07B3  2FB8               	goto	l2783
  3952  07B4  0828               	movf	__Umul8_16@word_mpld,w
  3953  07B5  07A5               	addwf	__Umul8_16@product,f
  3954  07B6  0829               	movf	__Umul8_16@word_mpld+1,w
  3955  07B7  3DA6               	addwfc	__Umul8_16@product+1,f
  3956  07B8                     l2783:	
  3957  07B8  35A8               	lslf	__Umul8_16@word_mpld,f
  3958  07B9  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3959  07BA  1DA7               	btfss	__Umul8_16@multiplier,3
  3960  07BB  2FC0               	goto	l2789
  3961  07BC  0828               	movf	__Umul8_16@word_mpld,w
  3962  07BD  07A5               	addwf	__Umul8_16@product,f
  3963  07BE  0829               	movf	__Umul8_16@word_mpld+1,w
  3964  07BF  3DA6               	addwfc	__Umul8_16@product+1,f
  3965  07C0                     l2789:	
  3966  07C0  35A8               	lslf	__Umul8_16@word_mpld,f
  3967  07C1  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3968  07C2  1E27               	btfss	__Umul8_16@multiplier,4
  3969  07C3  2FC8               	goto	l2795
  3970  07C4  0828               	movf	__Umul8_16@word_mpld,w
  3971  07C5  07A5               	addwf	__Umul8_16@product,f
  3972  07C6  0829               	movf	__Umul8_16@word_mpld+1,w
  3973  07C7  3DA6               	addwfc	__Umul8_16@product+1,f
  3974  07C8                     l2795:	
  3975  07C8  35A8               	lslf	__Umul8_16@word_mpld,f
  3976  07C9  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3977  07CA  1EA7               	btfss	__Umul8_16@multiplier,5
  3978  07CB  2FD0               	goto	l2801
  3979  07CC  0828               	movf	__Umul8_16@word_mpld,w
  3980  07CD  07A5               	addwf	__Umul8_16@product,f
  3981  07CE  0829               	movf	__Umul8_16@word_mpld+1,w
  3982  07CF  3DA6               	addwfc	__Umul8_16@product+1,f
  3983  07D0                     l2801:	
  3984  07D0  35A8               	lslf	__Umul8_16@word_mpld,f
  3985  07D1  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3986  07D2  1F27               	btfss	__Umul8_16@multiplier,6
  3987  07D3  2FD8               	goto	l2807
  3988  07D4  0828               	movf	__Umul8_16@word_mpld,w
  3989  07D5  07A5               	addwf	__Umul8_16@product,f
  3990  07D6  0829               	movf	__Umul8_16@word_mpld+1,w
  3991  07D7  3DA6               	addwfc	__Umul8_16@product+1,f
  3992  07D8                     l2807:	
  3993  07D8  35A8               	lslf	__Umul8_16@word_mpld,f
  3994  07D9  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  3995  07DA  1FA7               	btfss	__Umul8_16@multiplier,7
  3996  07DB  2FE0               	goto	l614
  3997  07DC  0828               	movf	__Umul8_16@word_mpld,w
  3998  07DD  07A5               	addwf	__Umul8_16@product,f
  3999  07DE  0829               	movf	__Umul8_16@word_mpld+1,w
  4000  07DF  3DA6               	addwfc	__Umul8_16@product+1,f
  4001  07E0                     l614:	
  4002  07E0  0826               	movf	__Umul8_16@product+1,w
  4003  07E1  00A3               	movwf	?__Umul8_16+1
  4004  07E2  0825               	movf	__Umul8_16@product,w
  4005  07E3  00A2               	movwf	?__Umul8_16
  4006  07E4  0008               	return
  4007  07E5                     __end_of__Umul8_16:	
  4008                           
  4009                           	psect	intentry
  4010  0004                     __pintentry:	
  4011 ;; *************** function _isr *****************
  4012 ;; Defined at:
  4013 ;;		line 79 in file "main.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 1F/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4027 ;;      Params:         0       0       0       0
  4028 ;;      Locals:         0       0       0       0
  4029 ;;      Temps:          0       2       0       0
  4030 ;;      Totals:         0       2       0       0
  4031 ;;Total ram usage:        2 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    1
  4034 ;; This function calls:
  4035 ;;		___lwdiv
  4036 ;;		i1___wmul
  4037 ;; This function is called by:
  4038 ;;		Interrupt level 1
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042  0004                     _isr:	
  4043                           
  4044                           ;incstack = 0
  4045  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4046                           
  4047                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4048  0005  3180               	pagesel	$
  4049                           
  4050                           ;main.c: 81: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  4051  0006  1C0B               	btfss	11,0	;volatile
  4052  0007  2821               	goto	i1l2413
  4053  0008  0027               	movlb	7	; select bank7
  4054  0009  1E13               	btfss	19,4	;volatile
  4055  000A  2821               	goto	i1l2413
  4056                           
  4057                           ;main.c: 82: {
  4058                           ;main.c: 83: INTCONbits.IOCIE = 0;
  4059  000B  118B               	bcf	11,3	;volatile
  4060                           
  4061                           ;main.c: 84: counter++;
  4062  000C  0021               	movlb	1	; select bank1
  4063  000D  0AD5               	incf	_counter^(0+128),f
  4064  000E  1903               	skipnz
  4065  000F  0AD6               	incf	(_counter+1)^(0+128),f
  4066                           
  4067                           ;main.c: 85: if (LATAbits.LATA0 == 0) {
  4068  0010  0022               	movlb	2	; select bank2
  4069  0011  180C               	btfsc	12,0	;volatile
  4070  0012  2817               	goto	i1l2407
  4071                           
  4072                           ;main.c: 86: I2C_buffer.data.DISTANCE--;
  4073  0013  30FF               	movlw	255
  4074  0014  0021               	movlb	1	; select bank1
  4075  0015  07AF               	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  4076  0016  281B               	goto	L7
  4077  0017                     i1l2407:	
  4078                           ;main.c: 87: }
  4079                           
  4080                           
  4081                           ;main.c: 88: else
  4082                           ;main.c: 89: {
  4083                           ;main.c: 90: I2C_buffer.data.DISTANCE++;
  4084  0017  3001               	movlw	1
  4085  0018  0021               	movlb	1	; select bank1
  4086  0019  07AF               	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  4087  001A  3000               	movlw	0
  4088  001B                     L7:	
  4089  001B  3DB0               	addwfc	((_I2C_buffer+1)^(0+128)+15),f	;volatile
  4090  001C  3DB1               	addwfc	((_I2C_buffer+2)^(0+128)+15),f	;volatile
  4091  001D  3DB2               	addwfc	((_I2C_buffer+3)^(0+128)+15),f	;volatile
  4092                           
  4093                           ;main.c: 91: }
  4094                           ;main.c: 92: IOCAFbits.IOCAF4 = 0;
  4095  001E  0027               	movlb	7	; select bank7
  4096  001F  1213               	bcf	19,4	;volatile
  4097                           
  4098                           ;main.c: 93: INTCONbits.IOCIE = 1;
  4099  0020  158B               	bsf	11,3	;volatile
  4100  0021                     i1l2413:	
  4101                           
  4102                           ;main.c: 94: }
  4103                           ;main.c: 96: if (PIR1bits.TMR1IF == 1)
  4104  0021  0020               	movlb	0	; select bank0
  4105  0022  1C11               	btfss	17,0	;volatile
  4106  0023  285C               	goto	i1l2431
  4107                           
  4108                           ;main.c: 97: {
  4109                           ;main.c: 98: INTCONbits.IOCIE = 0;
  4110  0024  118B               	bcf	11,3	;volatile
  4111                           
  4112                           ;main.c: 99: T1CONbits.TMR1ON = 0;
  4113  0025  1018               	bcf	24,0	;volatile
  4114                           
  4115                           ;main.c: 100: I2C_buffer.data.RPM = (counter * 300) / I2C_buffer.data.GEAR_RATIO;
  4116  0026  0021               	movlb	1	; select bank1
  4117  0027  0828               	movf	((_I2C_buffer+1)^(0+128)+7),w	;volatile
  4118  0028  00F7               	movwf	___lwdiv@divisor+1
  4119  0029  0827               	movf	(_I2C_buffer^(0+128)+7),w	;volatile
  4120  002A  00F6               	movwf	___lwdiv@divisor
  4121  002B  0856               	movf	(_counter+1)^(0+128),w
  4122  002C  00F1               	movwf	i1___wmul@multiplier+1
  4123  002D  0855               	movf	_counter^(0+128),w
  4124  002E  00F0               	movwf	i1___wmul@multiplier
  4125  002F  302C               	movlw	44
  4126  0030  00F2               	movwf	i1___wmul@multiplicand
  4127  0031  3001               	movlw	1
  4128  0032  00F3               	movwf	i1___wmul@multiplicand+1
  4129  0033  3187  27E5  3180   	fcall	i1___wmul
  4130  0036  0871               	movf	?i1___wmul+1,w
  4131  0037  00F9               	movwf	___lwdiv@dividend+1
  4132  0038  0870               	movf	?i1___wmul,w
  4133  0039  00F8               	movwf	___lwdiv@dividend
  4134  003A  318D  2591  3180   	fcall	___lwdiv
  4135  003D  0877               	movf	?___lwdiv+1,w
  4136  003E  00AC               	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  4137  003F  0876               	movf	?___lwdiv,w
  4138  0040  00AB               	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  4139                           
  4140                           ;main.c: 101: counter = 0;
  4141  0041  01D5               	clrf	_counter^(0+128)
  4142  0042  01D6               	clrf	(_counter+1)^(0+128)
  4143                           
  4144                           ;main.c: 102: if (LATAbits.LATA0 == 0) {
  4145  0043  0022               	movlb	2	; select bank2
  4146  0044  180C               	btfsc	12,0	;volatile
  4147  0045  2858               	goto	i1l2425
  4148                           
  4149                           ;main.c: 103: I2C_buffer.data.RPM = I2C_buffer.data.RPM *-1;
  4150  0046  0021               	movlb	1	; select bank1
  4151  0047  092B               	comf	(_I2C_buffer^(0+128)+11),w	;volatile
  4152  0048  0020               	movlb	0	; select bank0
  4153  0049  00A0               	movwf	??_isr
  4154  004A  0021               	movlb	1	; select bank1
  4155  004B  092C               	comf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  4156  004C  0020               	movlb	0	; select bank0
  4157  004D  00A1               	movwf	??_isr+1
  4158  004E  0AA0               	incf	??_isr,f
  4159  004F  1903               	skipnz
  4160  0050  0AA1               	incf	??_isr+1,f
  4161  0051  0820               	movf	??_isr,w
  4162  0052  0021               	movlb	1	; select bank1
  4163  0053  00AB               	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  4164  0054  0020               	movlb	0	; select bank0
  4165  0055  0821               	movf	??_isr+1,w
  4166  0056  0021               	movlb	1	; select bank1
  4167  0057  00AC               	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  4168  0058                     i1l2425:	
  4169                           
  4170                           ;main.c: 104: }
  4171                           ;main.c: 105: INTCONbits.IOCIE = 1;
  4172  0058  158B               	bsf	11,3	;volatile
  4173                           
  4174                           ;main.c: 106: PIR1bits.TMR1IF = 0;
  4175  0059  0020               	movlb	0	; select bank0
  4176  005A  1011               	bcf	17,0	;volatile
  4177                           
  4178                           ;main.c: 107: T1CONbits.TMR1ON = 1;
  4179  005B  1418               	bsf	24,0	;volatile
  4180  005C                     i1l2431:	
  4181                           
  4182                           ;main.c: 108: }
  4183                           ;main.c: 110: static unsigned char junk = 0;
  4184                           ;main.c: 112: if (PIR1bits.SSP1IF)
  4185  005C  1D91               	btfss	17,3	;volatile
  4186  005D  28B1               	goto	i1l2491
  4187                           
  4188                           ;main.c: 113: {
  4189                           ;main.c: 114: INTCONbits.IOCIE = 0;
  4190  005E  118B               	bcf	11,3	;volatile
  4191                           
  4192                           ;main.c: 115: PIE1bits.TMR1IE = 0;
  4193  005F  0021               	movlb	1	; select bank1
  4194  0060  1011               	bcf	17,0	;volatile
  4195                           
  4196                           ;main.c: 116: if (SSP1STATbits.R_nW)
  4197  0061  0024               	movlb	4	; select bank4
  4198  0062  1D14               	btfss	20,2	;volatile
  4199  0063  2880               	goto	i1l2451
  4200                           
  4201                           ;main.c: 117: {
  4202                           ;main.c: 118: if (!SSP1STATbits.D_nA)
  4203  0064  1A94               	btfsc	20,5	;volatile
  4204  0065  2872               	goto	i1l2443
  4205                           
  4206                           ;main.c: 119: {
  4207                           ;main.c: 120: SSP1BUF = I2C_buffer.byte[index_i2c++];
  4208  0066  0020               	movlb	0	; select bank0
  4209  0067  086C               	movf	_index_i2c,w
  4210  0068  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  4211  0069  0086               	movwf	6
  4212  006A  0187               	clrf	7
  4213  006B  0801               	movf	1,w
  4214  006C  0024               	movlb	4	; select bank4
  4215  006D  0091               	movwf	17	;volatile
  4216  006E  0020               	movlb	0	; select bank0
  4217  006F  0AEC               	incf	_index_i2c,f
  4218                           
  4219                           ;main.c: 121: SSP1CON1bits.CKP = 1;
  4220  0070  0024               	movlb	4	; select bank4
  4221  0071  1615               	bsf	21,4	;volatile
  4222  0072                     i1l2443:	
  4223                           
  4224                           ;main.c: 122: }
  4225                           ;main.c: 123: if (SSP1STATbits.D_nA)
  4226  0072  1E94               	btfss	20,5	;volatile
  4227  0073  2880               	goto	i1l2451
  4228                           
  4229                           ;main.c: 124: {
  4230                           ;main.c: 125: SSP1BUF = I2C_buffer.byte[index_i2c++];
  4231  0074  0020               	movlb	0	; select bank0
  4232  0075  086C               	movf	_index_i2c,w
  4233  0076  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  4234  0077  0086               	movwf	6
  4235  0078  0187               	clrf	7
  4236  0079  0801               	movf	1,w
  4237  007A  0024               	movlb	4	; select bank4
  4238  007B  0091               	movwf	17	;volatile
  4239  007C  0020               	movlb	0	; select bank0
  4240  007D  0AEC               	incf	_index_i2c,f
  4241                           
  4242                           ;main.c: 126: SSP1CON1bits.CKP = 1;
  4243  007E  0024               	movlb	4	; select bank4
  4244  007F  1615               	bsf	21,4	;volatile
  4245  0080                     i1l2451:	
  4246                           
  4247                           ;main.c: 127: }
  4248                           ;main.c: 128: }
  4249                           ;main.c: 129: if (!SSP1STATbits.R_nW)
  4250  0080  1914               	btfsc	20,2	;volatile
  4251  0081  28AC               	goto	i1l2485
  4252                           
  4253                           ;main.c: 130: {
  4254                           ;main.c: 131: if (!SSP1STATbits.D_nA)
  4255  0082  1A94               	btfsc	20,5	;volatile
  4256  0083  288A               	goto	i1l2461
  4257                           
  4258                           ;main.c: 132: {
  4259                           ;main.c: 133: first_i2c = 1;
  4260  0084  0020               	movlb	0	; select bank0
  4261  0085  01ED               	clrf	_first_i2c
  4262  0086  0AED               	incf	_first_i2c,f
  4263                           
  4264                           ;main.c: 134: junk = SSP1BUF;
  4265  0087  0024               	movlb	4	; select bank4
  4266  0088  0811               	movf	17,w	;volatile
  4267                           
  4268                           ;main.c: 135: SSP1CON1bits.CKP = 1;
  4269  0089  1615               	bsf	21,4	;volatile
  4270  008A                     i1l2461:	
  4271                           
  4272                           ;main.c: 136: }
  4273                           ;main.c: 137: if (SSP1STATbits.D_nA)
  4274  008A  1E94               	btfss	20,5	;volatile
  4275  008B  28AC               	goto	i1l2485
  4276                           
  4277                           ;main.c: 138: {
  4278                           ;main.c: 139: if (first_i2c) {
  4279  008C  0020               	movlb	0	; select bank0
  4280  008D  086D               	movf	_first_i2c,w
  4281  008E  1903               	btfsc	3,2
  4282  008F  2896               	goto	i1l2469
  4283                           
  4284                           ;main.c: 140: index_i2c = SSP1BUF;
  4285  0090  0024               	movlb	4	; select bank4
  4286  0091  0811               	movf	17,w	;volatile
  4287  0092  0020               	movlb	0	; select bank0
  4288  0093  00EC               	movwf	_index_i2c
  4289                           
  4290                           ;main.c: 141: first_i2c = 0;
  4291  0094  01ED               	clrf	_first_i2c
  4292                           
  4293                           ;main.c: 142: }
  4294  0095  28A6               	goto	i1l2477
  4295  0096                     i1l2469:	
  4296                           
  4297                           ;main.c: 144: else {
  4298                           ;main.c: 145: if (index_i2c < RX_ELMNTS)
  4299  0096  302B               	movlw	43
  4300  0097  026C               	subwf	_index_i2c,w
  4301  0098  1803               	skipnc
  4302  0099  28A4               	goto	i1l2475
  4303                           
  4304                           ;main.c: 146: {
  4305                           ;main.c: 147: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  4306  009A  086C               	movf	_index_i2c,w
  4307  009B  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  4308  009C  0086               	movwf	6
  4309  009D  0187               	clrf	7
  4310  009E  0024               	movlb	4	; select bank4
  4311  009F  0811               	movf	17,w	;volatile
  4312  00A0  0081               	movwf	1
  4313  00A1  0020               	movlb	0	; select bank0
  4314  00A2  0AEC               	incf	_index_i2c,f
  4315                           
  4316                           ;main.c: 148: }
  4317  00A3  28A6               	goto	i1l2477
  4318  00A4                     i1l2475:	
  4319                           
  4320                           ;main.c: 149: else {
  4321                           ;main.c: 150: junk = SSP1BUF;
  4322  00A4  0024               	movlb	4	; select bank4
  4323  00A5  0811               	movf	17,w	;volatile
  4324  00A6                     i1l2477:	
  4325                           
  4326                           ;main.c: 151: }
  4327                           ;main.c: 152: }
  4328                           ;main.c: 153: if (SSP1CON1bits.WCOL)
  4329  00A6  0024               	movlb	4	; select bank4
  4330  00A7  1F95               	btfss	21,7	;volatile
  4331  00A8  28AB               	goto	i1l2483
  4332                           
  4333                           ;main.c: 154: {
  4334                           ;main.c: 155: SSP1CON1bits.WCOL = 0;
  4335  00A9  1395               	bcf	21,7	;volatile
  4336                           
  4337                           ;main.c: 156: junk = SSP1BUF;
  4338  00AA  0811               	movf	17,w	;volatile
  4339  00AB                     i1l2483:	
  4340                           
  4341                           ;main.c: 157: }
  4342                           ;main.c: 158: SSP1CON1bits.CKP = 1;
  4343  00AB  1615               	bsf	21,4	;volatile
  4344  00AC                     i1l2485:	
  4345                           
  4346                           ;main.c: 159: }
  4347                           ;main.c: 160: }
  4348                           ;main.c: 161: PIR1bits.SSP1IF = 0;
  4349  00AC  0020               	movlb	0	; select bank0
  4350  00AD  1191               	bcf	17,3	;volatile
  4351                           
  4352                           ;main.c: 162: INTCONbits.IOCIE = 1;
  4353  00AE  158B               	bsf	11,3	;volatile
  4354                           
  4355                           ;main.c: 163: PIE1bits.TMR1IE = 1;
  4356  00AF  0021               	movlb	1	; select bank1
  4357  00B0  1411               	bsf	17,0	;volatile
  4358  00B1                     i1l2491:	
  4359                           
  4360                           ;main.c: 164: }
  4361                           ;main.c: 166: if (PIR2bits.BCL1IF)
  4362  00B1  0020               	movlb	0	; select bank0
  4363  00B2  1D92               	btfss	18,3	;volatile
  4364  00B3  28BC               	goto	i1l105
  4365                           
  4366                           ;main.c: 167: {
  4367                           ;main.c: 168: junk = SSP1BUF;
  4368  00B4  0024               	movlb	4	; select bank4
  4369  00B5  0811               	movf	17,w	;volatile
  4370                           
  4371                           ;main.c: 169: PIR2bits.BCL1IF = 0;
  4372  00B6  0020               	movlb	0	; select bank0
  4373  00B7  1192               	bcf	18,3	;volatile
  4374                           
  4375                           ;main.c: 170: SSP1CON1bits.CKP = 1;
  4376  00B8  0024               	movlb	4	; select bank4
  4377  00B9  1615               	bsf	21,4	;volatile
  4378                           
  4379                           ;main.c: 171: PIR1bits.SSP1IF = 0;
  4380  00BA  0020               	movlb	0	; select bank0
  4381  00BB  1191               	bcf	17,3	;volatile
  4382  00BC                     i1l105:	
  4383  00BC  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4384  00BD  0009               	retfie
  4385  00BE                     __end_of_isr:	
  4386                           
  4387                           	psect	text17
  4388  07E5                     __ptext17:	
  4389 ;; *************** function i1___wmul *****************
  4390 ;; Defined at:
  4391 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  multiplier      2    0[COMMON] unsigned int 
  4394 ;;  multiplicand    2    2[COMMON] unsigned int 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  __wmul          2    4[COMMON] unsigned int 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2    0[COMMON] unsigned int 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 1F/1
  4403 ;;		On exit  : 1F/1
  4404 ;;		Unchanged: 1F/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4406 ;;      Params:         4       0       0       0
  4407 ;;      Locals:         2       0       0       0
  4408 ;;      Temps:          0       0       0       0
  4409 ;;      Totals:         6       0       0       0
  4410 ;;Total ram usage:        6 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_isr
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function i1___wmul
  4421  07E5                     i1___wmul:	
  4422                           
  4423                           ;incstack = 0
  4424                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  4425  07E5  01F4               	clrf	i1___wmul@product
  4426  07E6  01F5               	clrf	i1___wmul@product+1
  4427  07E7                     i1l2381:	
  4428  07E7  1C70               	btfss	i1___wmul@multiplier,0
  4429  07E8  2FED               	goto	i1l2385
  4430  07E9  0872               	movf	i1___wmul@multiplicand,w
  4431  07EA  07F4               	addwf	i1___wmul@product,f
  4432  07EB  0873               	movf	i1___wmul@multiplicand+1,w
  4433  07EC  3DF5               	addwfc	i1___wmul@product+1,f
  4434  07ED                     i1l2385:	
  4435  07ED  35F2               	lslf	i1___wmul@multiplicand,f
  4436  07EE  0DF3               	rlf	i1___wmul@multiplicand+1,f
  4437  07EF  36F1               	lsrf	i1___wmul@multiplier+1,f
  4438  07F0  0CF0               	rrf	i1___wmul@multiplier,f
  4439  07F1  0870               	movf	i1___wmul@multiplier,w
  4440  07F2  0471               	iorwf	i1___wmul@multiplier+1,w
  4441  07F3  1D03               	btfss	3,2
  4442  07F4  2FE7               	goto	i1l2381
  4443  07F5  0875               	movf	i1___wmul@product+1,w
  4444  07F6  00F1               	movwf	?i1___wmul+1
  4445  07F7  0874               	movf	i1___wmul@product,w
  4446  07F8  00F0               	movwf	?i1___wmul
  4447  07F9  0008               	return
  4448  07FA                     __end_ofi1___wmul:	
  4449                           
  4450                           	psect	text18
  4451  0D91                     __ptext18:	
  4452 ;; *************** function ___lwdiv *****************
  4453 ;; Defined at:
  4454 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  divisor         2    6[COMMON] unsigned int 
  4457 ;;  dividend        2    8[COMMON] unsigned int 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  quotient        2   10[COMMON] unsigned int 
  4460 ;;  counter         1   12[COMMON] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  2    6[COMMON] unsigned int 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0
  4465 ;; Tracked objects:
  4466 ;;		On entry : 1F/1
  4467 ;;		On exit  : 1F/1
  4468 ;;		Unchanged: 1F/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4470 ;;      Params:         4       0       0       0
  4471 ;;      Locals:         3       0       0       0
  4472 ;;      Temps:          0       0       0       0
  4473 ;;      Totals:         7       0       0       0
  4474 ;;Total ram usage:        7 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_isr
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function ___lwdiv
  4485  0D91                     ___lwdiv:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4489  0D91  01FA               	clrf	___lwdiv@quotient
  4490  0D92  01FB               	clrf	___lwdiv@quotient+1
  4491  0D93  0876               	movf	___lwdiv@divisor,w
  4492  0D94  0477               	iorwf	___lwdiv@divisor+1,w
  4493  0D95  1903               	btfsc	3,2
  4494  0D96  2DB1               	goto	i1l2375
  4495  0D97  01FC               	clrf	___lwdiv@counter
  4496  0D98                     L8:	
  4497  0D98  0AFC               	incf	___lwdiv@counter,f
  4498  0D99  1BF7               	btfsc	___lwdiv@divisor+1,7
  4499  0D9A  2D9E               	goto	i1l2363
  4500  0D9B  35F6               	lslf	___lwdiv@divisor,f
  4501  0D9C  0DF7               	rlf	___lwdiv@divisor+1,f
  4502  0D9D  2D98               	goto	L8
  4503  0D9E                     i1l2363:	
  4504  0D9E  35FA               	lslf	___lwdiv@quotient,f
  4505  0D9F  0DFB               	rlf	___lwdiv@quotient+1,f
  4506  0DA0  0877               	movf	___lwdiv@divisor+1,w
  4507  0DA1  0279               	subwf	___lwdiv@dividend+1,w
  4508  0DA2  1D03               	skipz
  4509  0DA3  2DA6               	goto	u295_25
  4510  0DA4  0876               	movf	___lwdiv@divisor,w
  4511  0DA5  0278               	subwf	___lwdiv@dividend,w
  4512  0DA6                     u295_25:	
  4513  0DA6  1C03               	skipc
  4514  0DA7  2DAD               	goto	i1l2371
  4515  0DA8  0876               	movf	___lwdiv@divisor,w
  4516  0DA9  02F8               	subwf	___lwdiv@dividend,f
  4517  0DAA  0877               	movf	___lwdiv@divisor+1,w
  4518  0DAB  3BF9               	subwfb	___lwdiv@dividend+1,f
  4519  0DAC  147A               	bsf	___lwdiv@quotient,0
  4520  0DAD                     i1l2371:	
  4521  0DAD  36F7               	lsrf	___lwdiv@divisor+1,f
  4522  0DAE  0CF6               	rrf	___lwdiv@divisor,f
  4523  0DAF  0BFC               	decfsz	___lwdiv@counter,f
  4524  0DB0  2D9E               	goto	i1l2363
  4525  0DB1                     i1l2375:	
  4526  0DB1  087B               	movf	___lwdiv@quotient+1,w
  4527  0DB2  00F7               	movwf	?___lwdiv+1
  4528  0DB3  087A               	movf	___lwdiv@quotient,w
  4529  0DB4  00F6               	movwf	?___lwdiv
  4530  0DB5  0008               	return
  4531  0DB6                     __end_of___lwdiv:	
  4532  007E                     btemp	set	126	;btemp
  4533  007E                     int$flags	set	126
  4534  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     75      78
    BANK1            80     25      80
    BANK2            80      2       2

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    ___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _PID->_calculate_pid
    _calculate_pid->___fladd
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___fldiv
    _M_control->___fltol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_PID
    _PID->_calculate_pid
    _calculate_pid->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_PID

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18828
                                             24 BANK1      1     1      0
                                _PID
                           _PWM_Init
                       _PWM_set_duty
                    _init_I2C_buffer
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                  4     2      2   18375
                                             22 BANK1      2     0      2
                                              0 BANK2      2     2      0
                      _calculate_pid
 ---------------------------------------------------------------------------------
 (2) _calculate_pid                                       17    15      2   18130
                                             72 BANK0      3     1      2
                                              8 BANK1     14    14      0
                          _M_control
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     566
                                              2 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                              2 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4062
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3817
                                             52 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4313
                                             27 BANK0     25    17      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            8     5      3    1419
                                              2 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1166
                                              2 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1773
                                              2 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (3) _M_control                                            3     1      2    1189
                                             12 BANK0      3     1      2
                       _PWM_set_duty
                            ___fltol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     426
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PWM_set_duty                                         4     2      2     453
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0     458
                                              0 BANK0      2     2      0
                            ___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     314
                                              6 COMMON     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID
     _calculate_pid
       _M_control
         _PWM_set_duty
         ___fltol (ARG)
         ___wmul (ARG)
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
       ___fldiv
       ___flge
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
       ___flsub
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
       ___fltol
       ___xxtofl
   _PWM_Init
   _PWM_set_duty
   _init_I2C_buffer

 _isr (ROOT)
   ___lwdiv
     i1___wmul (ARG)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      AE       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4B      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     19      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      2       2      10        2.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      AE      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Sep 04 00:05:58 2018

            ___fldiv@aexp 003A              ___fldiv@bexp 0039              ___fldiv@sign 002E  
             __CFG_CP$OFF 0000       ___wmul@multiplicand 0024         calculate_pid@rpm2 00E3  
        i1___wmul@product 0074       __Umul8_16@word_mpld 0028                       l134 01BA  
                     l500 0FC8                       l602 0E58                       l515 0FFA  
                     l524 051B                       l525 0519                       l366 04C8  
                     l614 07E0                       l551 05F1                       l528 0531  
                     l368 04F6                       l560 062D                       l480 0F2F  
                     l472 0EDD                       l553 060C                       l529 052F  
                     l561 062B                       l481 0F35                       l473 0EDB  
                     l490 0F5E                       l482 0F36                       l467 0EC2  
                     l564 0643                       l468 0EC0                       l565 0641  
                     l582 0791                       l478 0F42                       l495 0FAF  
                     l489 0F5D                       l589 0E26                       _PR2 001B  
                     _PID 0182              __CFG_CPD$OFF 0000                       _isr 0004  
            __CFG_BORV$LO 0000                       wreg 0009        calculate_pid@error 00E5  
            ___flmul@aexp 0048              ___flmul@bexp 0049              ___flmul@sign 0047  
            ___flmul@temp 0052              ___flmul@prod 004E              __CFG_LVP$OFF 0000  
                    ?_PID 00ED              ___fltol@exp1 002B                      l3003 05DE  
                    l3013 0605                      l3111 0749                      l3105 0736  
                    l3041 0631                      l3019 060D                      l3115 074B  
                    l3125 075D                      l3053 0647                      l3213 03AB  
                    l3135 0783                      l3231 0468                      l3129 0770  
                    l3057 0651                      l3161 0E33                      l3153 0E1E  
                    l3225 043F                      l3217 03C9                      l3163 0E3D  
                    l3173 0E56                      l3157 0E31                      l3261 01D1  
                    l2703 0FA7                      l2631 0EE9                      l3175 0E4D  
                    l3239 048E                      l3191 0234                      l3255 01BD  
                    l3247 0189                      l2801 07D0                      l2721 0FCC  
                    l3169 0E48                      l2571 016F                      l2723 0FCE  
                    l3187 0E74                      l3179 0E61                      l2565 014E  
                    l2733 0FD9                      l2717 0FC9                      l2709 0FBD  
                    l2661 0F07                      l3381 0106                      l2575 0175  
                    l2815 0117                      l2807 07D8                      l2825 0136  
                    l2841 04DF                      l2753 0FF6                      l2745 0FEA  
                    l2729 0FD7                      l2681 0F4C                      l2819 0121  
                    l2931 054C                      l2835 04B7                      l2771 07A8  
                    l2675 0F3D                      l2757 0FFB                      l2693 0F66  
                    l2853 0DC5                      l2783 07B8                      l2855 0DCA  
                    l2777 07B0                      l2881 0DFA                      l2873 0DED  
                    l2963 059E                      l2939 0554                      l2795 07C8  
                    l2981 05A6                      l2957 0585                      l2965 0570  
                    l2789 07C0                      l2869 0DE6                      l2983 05B7  
                    l2967 05A0                      l2879 0DF1                      l2993 05CC  
                    l2989 05CA                      ?_isr 0070                      u4015 05E7  
                    u4025 05FB                      u3155 0157                      u4205 077A  
                    u3280 0F26                      u3290 0F27                      u3275 0F1B  
                    u4430 0197                      u3383 0F78                      u4345 041F  
                    u4195 0766                      u4507 0111                      u4444 0199  
                    u4365 0449                      u4517 01C7                      u4455 01A5  
                    u3665 012B                      u3745 0DD3                      u3915 0593  
                    u4475 01B6                      _WPUA 020C              __CFG_WRT$OFF 0000  
                    _main 00D0                      _lset 00D3                      fsr0h 0005  
                    fsr1h 0007                      indf0 0000                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 00BE             __CFG_IESO$OFF 0000  
         ___fldiv@new_exp 0033             __CFG_MCLRE$ON 0000                     ??_PID 0120  
                   ??_isr 0020             __CFG_PLLEN$ON 0000     __size_of_PWM_set_duty 001F  
           ___fltol@sign1 002A           __end_of___fladd 1000                     ?_main 0070  
         __end_of___fldiv 061A             __CFG_WDTE$OFF 0000           __end_of___flmul 079C  
         __end_of___flsub 0EAF           __end_of___fltol 0E09                     _T1CON 0018  
                   _T2CON 001C           __end_of___lwdiv 0DB6                     i1l105 00BC  
                   _TRISA 008C             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
          __pbitbssCOMMON 03E8          __end_of_PWM_Init 01EB          __end_ofi1___wmul 07FA  
                   status 0003       i1___wmul@multiplier 0070                     wtemp0 007E  
            _PWM_set_duty 014E           __initialization 00C0              __end_of_main 0117  
                  ??_main 00EF                    PID@set 00ED        __size_of_M_control 0037  
                  _CCPR1L 0291                    _ANSELA 018C                    i1l2413 0021  
                  i1l2431 005C                    i1l2407 0017                    i1l2425 0058  
                  i1l2371 0DAD                    i1l2363 0D9E                    i1l2443 0072  
                  i1l2451 0080                    i1l2381 07E7                    i1l2461 008A  
                  i1l2375 0DB1                    i1l2385 07ED                    i1l2483 00AB  
                  i1l2475 00A4                    i1l2491 00B1                    i1l2477 00A6  
                  i1l2469 0096                    i1l2485 00AC                    _INTCON 000B  
                  u295_25 0DA6                    _OSCCON 0099          __end_of___xxtofl 0E7D  
                  ___flge 04A6                 ??___fladd 005C                    ___wmul 016D  
               ??___fldiv 002A            __CFG_STVREN$ON 0000                 ??___flmul 0043  
               ??___flsub 0068                 ??___fltol 0026                 ??___lwdiv 007A  
__size_of_init_I2C_buffer 0049        __size_of__Umul8_16 0049                ___flge@ff1 0022  
              ___flge@ff2 0026              ___xxtofl@arg 002C              ___xxtofl@exp 002B  
            ___xxtofl@val 0022   __end_of__initialization 00CD                ___fltol@f1 0022  
          __pcstackCOMMON 0070              __pidataBANK0 0000         __end_of_M_control 014E  
               ?_PWM_Init 0070                 ?i1___wmul 0070            _OPTION_REGbits 0095  
              __pbssBANK0 006C                __pbssBANK1 00A0         __end_of__Umul8_16 07E5  
              __pmaintext 00D0                   ?___flge 0022                   ?___wmul 0022  
              __pintentry 0004                   _CCP1CON 0293                ??_PWM_Init 0022  
              ??i1___wmul 0074    __size_of_calculate_pid 0272                 ?___xxtofl 0022  
                 _SSP1ADD 0212                   _SSP1BUF 0211         ??_init_I2C_buffer 0022  
        PWM_set_duty@duty 0022           __size_of___flge 0062                   ___fladd 0EAF  
                 ___fldiv 0508                   ___flmul 061A                   ___flsub 0E7D  
                 ___fltol 0DB6           __size_of___wmul 0015                   ___lwdiv 0D91  
                 __ptext1 01EB                   __ptext2 01DF                   __ptext3 0182  
                 __ptext4 0234                   __ptext5 0E09                   __ptext6 0DB6  
                 __ptext7 0E7D                   __ptext8 0EAF                   __ptext9 061A  
            __size_of_PID 005D                 _T1CONbits 0018                   _counter 00D5  
            __size_of_isr 00BA                ??___xxtofl 0026                 _IOCAFbits 0393  
               _IOCANbits 0392                   clrloop0 07FB      end_of_initialization 00CD  
           _calculate_pid 0234     i1___wmul@multiplicand 0072               ___fladd@grs 0067  
              _warming_up 03E8          __CFG_FOSC$INTOSC 0000             ___xxtofl@sign 002A  
             ___fldiv@grs 0035               ___fldiv@rem 002F          calculate_pid@pid 00E9  
        calculate_pid@set 0068               ___flmul@grs 004A            ?_calculate_pid 0068  
              _zero_cross 0358            __end_of___flge 0508            __end_of___wmul 0182  
               _M_control 0117             __pbitbssBANK0 0358         __size_of_PWM_Init 000C  
     start_initialization 00C0         __size_ofi1___wmul 0015               __end_of_PID 01DF  
             __end_of_isr 00BE               _accumulator 00CF                  ??___flge 002A  
                ??___wmul 0026                 __Umul8_16 079C               __pdataBANK0 006D  
              ?_M_control 002C           _init_I2C_buffer 01EB                 ___fladd@a 0058  
               ___fladd@b 0054                 ___fldiv@a 0022                 ___fldiv@b 0026  
               ___flmul@a 003F                 ___flmul@b 003B                 ___flsub@a 00D7  
               ___flsub@b 00DB                 ___latbits 0001             __pcstackBANK0 0020  
           __pcstackBANK1 00D7             __pcstackBANK2 0120         __size_of___xxtofl 0074  
         ??_calculate_pid 006A             ?_PWM_set_duty 0022          ___lwdiv@dividend 0078  
      _calculate_pid$1070 00DF                  ?___fladd 0054                  ?___fldiv 0022  
                ?___flmul 003B                  ?___flsub 00D7                  ?___fltol 0022  
              ?__Umul8_16 0022                  ?___lwdiv 0076                 _first_i2c 006D  
               _index_i2c 006C          ___lwdiv@quotient 007A                 _lasterror 00CB  
          ___wmul@product 0026                  _LATAbits 010C                 clear_ram0 07FA  
                _PIE1bits 0091                  _PIE2bits 0092            ??_PWM_set_duty 0024  
                _PIR1bits 0011                  _PIR2bits 0012   __end_of_init_I2C_buffer 0234  
                _SSP1CON1 0215                  _SSP1STAT 0214               ??_M_control 002E  
                _PWM_Init 01DF         ___wmul@multiplier 0022                  i1___wmul 07E5  
              _I2C_buffer 00A0                _APFCONbits 011D               ??__Umul8_16 0025  
        __size_of___fladd 0151          __size_of___fldiv 0112          __size_of___flmul 0182  
        __size_of___flsub 0032          __size_of___fltol 0053          __size_of___lwdiv 0025  
                ___xxtofl 0E09           ___lwdiv@divisor 0076           ___lwdiv@counter 007C  
                __ptext10 079C                  __ptext11 04A6                  __ptext12 0508  
                __ptext13 0117                  __ptext14 016D                  __ptext15 014E  
                __ptext17 07E5                  __ptext18 0D91              _SSP1CON1bits 0215  
            _SSP1CON2bits 0216              _SSP1CON3bits 0217             __size_of_main 0047  
        ?_init_I2C_buffer 0070                  int$flags 007E              _SSP1STATbits 0214  
              _INTCONbits 000B      __end_of_PWM_set_duty 016D                  intlevel1 0000  
       __CFG_CLKOUTEN$OFF 0000    __Umul8_16@multiplicand 0022             ___fladd@signs 0064  
            ___fladd@aexp 0065              ___fladd@bexp 0066              M_control@ctr 002C  
   __end_of_calculate_pid 04A6      __Umul8_16@multiplier 0027         __Umul8_16@product 0025  
