

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Sep 05 15:03:18 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text16,local,class=CODE,merge=1,delta=2
    19                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	pa_nodes0,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.00
    24                           ; Generated 27/05/2018 GMT
    25                           ; 
    26                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F1840 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011D                     	;# 
   109  018C                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0197                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020C                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0294                     	;# 
   152  0295                     	;# 
   153  0295                     	;# 
   154  0296                     	;# 
   155  0391                     	;# 
   156  0392                     	;# 
   157  0393                     	;# 
   158  039A                     	;# 
   159  039C                     	;# 
   160  039D                     	;# 
   161  039E                     	;# 
   162  039F                     	;# 
   163  0FE4                     	;# 
   164  0FE5                     	;# 
   165  0FE6                     	;# 
   166  0FE7                     	;# 
   167  0FE8                     	;# 
   168  0FE9                     	;# 
   169  0FEA                     	;# 
   170  0FEB                     	;# 
   171  0FED                     	;# 
   172  0FEE                     	;# 
   173  0FEF                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  008C                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  010C                     	;# 
   215  0111                     	;# 
   216  0112                     	;# 
   217  0115                     	;# 
   218  0116                     	;# 
   219  0117                     	;# 
   220  0118                     	;# 
   221  0119                     	;# 
   222  011A                     	;# 
   223  011B                     	;# 
   224  011D                     	;# 
   225  011D                     	;# 
   226  018C                     	;# 
   227  0191                     	;# 
   228  0191                     	;# 
   229  0192                     	;# 
   230  0193                     	;# 
   231  0193                     	;# 
   232  0193                     	;# 
   233  0194                     	;# 
   234  0195                     	;# 
   235  0196                     	;# 
   236  0197                     	;# 
   237  0199                     	;# 
   238  019A                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019C                     	;# 
   244  019C                     	;# 
   245  019D                     	;# 
   246  019E                     	;# 
   247  019F                     	;# 
   248  020C                     	;# 
   249  0211                     	;# 
   250  0211                     	;# 
   251  0212                     	;# 
   252  0212                     	;# 
   253  0213                     	;# 
   254  0213                     	;# 
   255  0214                     	;# 
   256  0214                     	;# 
   257  0215                     	;# 
   258  0215                     	;# 
   259  0215                     	;# 
   260  0216                     	;# 
   261  0216                     	;# 
   262  0217                     	;# 
   263  0217                     	;# 
   264  0291                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0293                     	;# 
   268  0294                     	;# 
   269  0295                     	;# 
   270  0295                     	;# 
   271  0296                     	;# 
   272  0391                     	;# 
   273  0392                     	;# 
   274  0393                     	;# 
   275  039A                     	;# 
   276  039C                     	;# 
   277  039D                     	;# 
   278  039E                     	;# 
   279  039F                     	;# 
   280  0FE4                     	;# 
   281  0FE5                     	;# 
   282  0FE6                     	;# 
   283  0FE7                     	;# 
   284  0FE8                     	;# 
   285  0FE9                     	;# 
   286  0FEA                     	;# 
   287  0FEB                     	;# 
   288  0FED                     	;# 
   289  0FEE                     	;# 
   290  0FEF                     	;# 
   291                           
   292                           	psect	idataBANK1
   293  0000                     __pidataBANK1:	
   294  0018                     _T1CON	set	24
   295  000B                     _INTCON	set	11
   296  001C                     _T2CON	set	28
   297  001B                     _PR2	set	27
   298  0012                     _PIR2bits	set	18
   299  0018                     _T1CONbits	set	24
   300  0011                     _PIR1bits	set	17
   301  000B                     _INTCONbits	set	11
   302  0092                     _PIE2bits	set	146
   303  0095                     _OPTION_REGbits	set	149
   304  008C                     _TRISA	set	140
   305  0099                     _OSCCON	set	153
   306  0091                     _PIE1bits	set	145
   307  011D                     _APFCONbits	set	285
   308  010C                     _LATAbits	set	268
   309  018C                     _ANSELA	set	396
   310  0212                     _SSP1ADD	set	530
   311  0217                     _SSP1CON3bits	set	535
   312  0216                     _SSP1CON2bits	set	534
   313  0215                     _SSP1CON1	set	533
   314  0214                     _SSP1STAT	set	532
   315  020C                     _WPUA	set	524
   316  0215                     _SSP1CON1bits	set	533
   317  0211                     _SSP1BUF	set	529
   318  0214                     _SSP1STATbits	set	532
   319  0291                     _CCPR1L	set	657
   320  0293                     _CCP1CON	set	659
   321  0392                     _IOCANbits	set	914
   322  0393                     _IOCAFbits	set	915
   323                           
   324                           ; #config settings
   325  0000                     
   326                           	psect	cinit
   327  00C2                     start_initialization:	
   328  00C2                     __initialization:	
   329                           
   330                           ; Initialize objects allocated to BANK1
   331  00C2  0021               	movlb	1	; select bank1
   332                           
   333                           ;initializer for _first_i2c
   334  00C3  3001               	movlw	1
   335  00C4  00DC               	movwf	__pdataBANK1& (0+127)
   336                           
   337                           ; Clear objects allocated to BITBANK0
   338  00C5  0020               	movlb	0	; select bank0
   339  00C6  30A0               	movlw	low __pbssBANK1
   340  00C7  01ED               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   341                           
   342                           ; Clear objects allocated to BANK0
   343  00C8  01EE               	clrf	__pbssBANK0& (0+127)
   344                           
   345                           ; Clear objects allocated to BANK1
   346  00C9  0084               	movwf	4
   347  00CA  3000               	movlw	high __pbssBANK1
   348  00CB  0085               	movwf	5
   349  00CC  3037               	movlw	55
   350  00CD  318F  27FA  3180   	fcall	clear_ram0
   351  00D0                     end_of_initialization:	
   352                           ;End of C runtime variable initialization code
   353                           
   354  00D0                     __end_of__initialization:	
   355  00D0  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   356  00D1  0020               	movlb	0
   357  00D2  28D3               	ljmp	_main	;jump to C main() function
   358  00D3                     __pmaintext:	
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 309 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : B1F/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   378 ;;      Params:         0       0       0       0
   379 ;;      Locals:         0       0       0       0
   380 ;;      Temps:          0       0       1       0
   381 ;;      Totals:         0       0       1       0
   382 ;;Total ram usage:        1 bytes
   383 ;; Hardware stack levels required when called:    6
   384 ;; This function calls:
   385 ;;		_PID
   386 ;;		_PWM_Init
   387 ;;		_PWM_set_duty
   388 ;;		_init_I2C_buffer
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _main
   396  00D3                     _main:	
   397                           
   398                           ;main.c: 310: OSCCON = 0b11110000;
   399                           
   400                           ;incstack = 0
   401                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   402  00D3  30F0               	movlw	240
   403  00D4  0021               	movlb	1	; select bank1
   404  00D5  0099               	movwf	25	;volatile
   405                           
   406                           ;main.c: 311: init_I2C_buffer();
   407  00D6  21E0  3180         	fcall	_init_I2C_buffer
   408                           
   409                           ;main.c: 312: TRISA = 0b00011110;
   410  00D8  301E               	movlw	30
   411  00D9  008C               	movwf	12	;volatile
   412                           
   413                           ;main.c: 313: ANSELA = 0b00000000;
   414  00DA  0023               	movlb	3	; select bank3
   415  00DB  018C               	clrf	12	;volatile
   416                           
   417                           ;main.c: 314: WPUA = 0b00011110;
   418  00DC  0024               	movlb	4	; select bank4
   419  00DD  008C               	movwf	12	;volatile
   420                           
   421                           ;main.c: 315: OPTION_REGbits.nWPUEN = 0;
   422  00DE  0021               	movlb	1	; select bank1
   423  00DF  1395               	bcf	21,7	;volatile
   424                           
   425                           ;main.c: 316: APFCONbits.CCP1SEL = 1;
   426  00E0  0022               	movlb	2	; select bank2
   427  00E1  141D               	bsf	29,0	;volatile
   428                           
   429                           ;main.c: 317: LATAbits.LATA0 = 0;
   430  00E2  100C               	bcf	12,0	;volatile
   431                           
   432                           ;main.c: 318: SSP1STAT = 0b10000000;
   433  00E3  3080               	movlw	128
   434  00E4  0024               	movlb	4	; select bank4
   435  00E5  0094               	movwf	20	;volatile
   436                           
   437                           ;main.c: 319: SSP1CON1 = 0b00110110;
   438  00E6  3036               	movlw	54
   439  00E7  0095               	movwf	21	;volatile
   440                           
   441                           ;main.c: 320: SSP1CON2bits.SEN = 1;
   442  00E8  1416               	bsf	22,0	;volatile
   443                           
   444                           ;main.c: 321: SSP1CON3bits.BOEN = 1;
   445  00E9  1617               	bsf	23,4	;volatile
   446                           
   447                           ;main.c: 322: SSP1CON3bits.SDAHT = 1;
   448  00EA  1597               	bsf	23,3	;volatile
   449                           
   450                           ;main.c: 323: SSP1CON3bits.SBCDE = 1;
   451  00EB  1517               	bsf	23,2	;volatile
   452                           
   453                           ;main.c: 324: SSP1ADD = I2C_buffer.data.ADDRESS;
   454  00EC  0021               	movlb	1	; select bank1
   455  00ED  0821               	movf	(_I2C_buffer^(0+128)+1),w	;volatile
   456  00EE  0024               	movlb	4	; select bank4
   457  00EF  0092               	movwf	18	;volatile
   458                           
   459                           ;main.c: 325: PIR1bits.SSP1IF = 0;
   460  00F0  0020               	movlb	0	; select bank0
   461  00F1  1191               	bcf	17,3	;volatile
   462                           
   463                           ;main.c: 326: PIR2bits.BCL1IF = 0;
   464  00F2  1192               	bcf	18,3	;volatile
   465                           
   466                           ;main.c: 327: PIE2bits.BCL1IE = 1;
   467  00F3  0021               	movlb	1	; select bank1
   468  00F4  1592               	bsf	18,3	;volatile
   469                           
   470                           ;main.c: 328: PIE1bits.SSP1IE = 1;
   471  00F5  1591               	bsf	17,3	;volatile
   472                           
   473                           ;main.c: 329: INTCONbits.PEIE = 1;
   474  00F6  170B               	bsf	11,6	;volatile
   475                           
   476                           ;main.c: 330: PWM_Init();
   477  00F7  21D4  3180         	fcall	_PWM_Init
   478                           
   479                           ;main.c: 331: PWM_set_duty(0);
   480  00F9  01A2               	clrf	PWM_set_duty@duty
   481  00FA  01A3               	clrf	PWM_set_duty@duty+1
   482  00FB  2151  3180         	fcall	_PWM_set_duty
   483                           
   484                           ;main.c: 332: IOCANbits.IOCAN4 = 1;
   485  00FD  0027               	movlb	7	; select bank7
   486  00FE  1612               	bsf	18,4	;volatile
   487                           
   488                           ;main.c: 333: INTCON = 0b01001000;
   489  00FF  3048               	movlw	72
   490  0100  008B               	movwf	11	;volatile
   491                           
   492                           ;main.c: 334: T1CON = 0b00110100;
   493  0101  3034               	movlw	52
   494  0102  0020               	movlb	0	; select bank0
   495  0103  0098               	movwf	24	;volatile
   496                           
   497                           ;main.c: 335: PIE1bits.TMR1IE = 1;
   498  0104  0021               	movlb	1	; select bank1
   499  0105  1411               	bsf	17,0	;volatile
   500                           
   501                           ;main.c: 336: T1CONbits.TMR1ON = 1;
   502  0106  0020               	movlb	0	; select bank0
   503  0107  1418               	bsf	24,0	;volatile
   504                           
   505                           ;main.c: 337: INTCONbits.GIE = 1;
   506  0108  178B               	bsf	11,7	;volatile
   507  0109                     l3108:	
   508                           
   509                           ;main.c: 340: PID(I2C_buffer.data.SPEED);
   510  0109  0021               	movlb	1	; select bank1
   511  010A  082E               	movf	((_I2C_buffer+1)^(0+128)+13),w	;volatile
   512  010B  00D8               	movwf	(PID@set+1)^(0+128)
   513  010C  082D               	movf	(_I2C_buffer^(0+128)+13),w	;volatile
   514  010D  00D7               	movwf	PID@set^(0+128)
   515  010E  2185  3180         	fcall	_PID
   516                           
   517                           ;main.c: 341: _delay((unsigned long)((10)*(32000000/4000.0)));
   518  0110  3068               	movlw	104
   519  0111  0021               	movlb	1	; select bank1
   520  0112  00DB               	movwf	??_main^(0+128)
   521  0113  30E4               	movlw	228
   522  0114                     u3767:	
   523  0114  0B89               	decfsz	9,f
   524  0115  2914               	goto	u3767
   525  0116  0BDB               	decfsz	??_main^(0+128),f
   526  0117  2914               	goto	u3767
   527  0118  0000               	nop
   528  0119  2909               	goto	l3108
   529  011A                     __end_of_main:	
   530  011A                     __ptext12:	
   531 ;; *************** function _M_control *****************
   532 ;; Defined at:
   533 ;;		line 222 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  ctr             2   12[BANK0 ] int 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 1F/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   547 ;;      Params:         0       2       0       0
   548 ;;      Locals:         0       0       0       0
   549 ;;      Temps:          0       1       0       0
   550 ;;      Totals:         0       3       0       0
   551 ;;Total ram usage:        3 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    3
   554 ;; This function calls:
   555 ;;		_PWM_set_duty
   556 ;;		___wmul
   557 ;; This function is called by:
   558 ;;		_calculate_pid
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _M_control
   564  011A                     _M_control:	
   565  011A                     l2560:	
   566                           ;incstack = 0
   567                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
   568                           
   569                           
   570                           ;main.c: 224: if (ctr == 0)
   571  011A  082C               	movf	M_control@ctr,w
   572  011B  042D               	iorwf	M_control@ctr+1,w
   573  011C  1D03               	btfss	3,2
   574  011D  2924               	goto	l2564
   575                           
   576                           ;main.c: 225: {;main.c: 226: PWM_set_duty(ctr);
   577  011E  082D               	movf	M_control@ctr+1,w
   578  011F  00A3               	movwf	PWM_set_duty@duty+1
   579  0120  082C               	movf	M_control@ctr,w
   580  0121  00A2               	movwf	PWM_set_duty@duty
   581  0122  2151  3180         	fcall	_PWM_set_duty
   582  0124                     l2564:	
   583                           
   584                           ;main.c: 227: };main.c: 228: if (ctr > 0)
   585  0124  0020               	movlb	0	; select bank0
   586  0125  082D               	movf	M_control@ctr+1,w
   587  0126  3A80               	xorlw	128
   588  0127  00AE               	movwf	??_M_control
   589  0128  3080               	movlw	128
   590  0129  022E               	subwf	??_M_control,w
   591  012A  1D03               	skipz
   592  012B  292E               	goto	u3025
   593  012C  3001               	movlw	1
   594  012D  022C               	subwf	M_control@ctr,w
   595  012E                     u3025:	
   596  012E  1C03               	skipc
   597  012F  2939               	goto	l2570
   598                           
   599                           ;main.c: 229: {;main.c: 230: LATAbits.LATA0 = 1;
   600  0130  0022               	movlb	2	; select bank2
   601  0131  140C               	bsf	12,0	;volatile
   602                           
   603                           ;main.c: 231: PWM_set_duty(ctr);
   604  0132  0020               	movlb	0	; select bank0
   605  0133  082D               	movf	M_control@ctr+1,w
   606  0134  00A3               	movwf	PWM_set_duty@duty+1
   607  0135  082C               	movf	M_control@ctr,w
   608  0136  00A2               	movwf	PWM_set_duty@duty
   609  0137  2151  3180         	fcall	_PWM_set_duty
   610  0139                     l2570:	
   611                           
   612                           ;main.c: 232: };main.c: 233: if (ctr < 0)
   613  0139  0020               	movlb	0	; select bank0
   614  013A  1FAD               	btfss	M_control@ctr+1,7
   615  013B  0008               	return
   616                           
   617                           ;main.c: 234: {;main.c: 235: LATAbits.LATA0 = 0;
   618  013C  0022               	movlb	2	; select bank2
   619  013D  100C               	bcf	12,0	;volatile
   620                           
   621                           ;main.c: 236: ctr = ctr * -1;
   622  013E  30FF               	movlw	255
   623  013F  0020               	movlb	0	; select bank0
   624  0140  00A2               	movwf	___wmul@multiplier
   625  0141  00A3               	movwf	___wmul@multiplier+1
   626  0142  082D               	movf	M_control@ctr+1,w
   627  0143  00A5               	movwf	___wmul@multiplicand+1
   628  0144  082C               	movf	M_control@ctr,w
   629  0145  00A4               	movwf	___wmul@multiplicand
   630  0146  2170  3180         	fcall	___wmul
   631  0148  0823               	movf	?___wmul+1,w
   632  0149  00AD               	movwf	M_control@ctr+1
   633  014A  0822               	movf	?___wmul,w
   634  014B  00AC               	movwf	M_control@ctr
   635                           
   636                           ;main.c: 237: PWM_set_duty(ctr);
   637  014C  082D               	movf	M_control@ctr+1,w
   638  014D  00A3               	movwf	PWM_set_duty@duty+1
   639  014E  082C               	movf	M_control@ctr,w
   640  014F  00A2               	movwf	PWM_set_duty@duty
   641  0150  2951               	ljmp	l2310
   642  0151                     __end_of_M_control:	
   643  0151                     __ptext14:	
   644 ;; *************** function _PWM_set_duty *****************
   645 ;; Defined at:
   646 ;;		line 213 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  duty            2    2[BANK0 ] int 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  2    2[BANK0 ] int 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 1F/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   660 ;;      Params:         0       2       0       0
   661 ;;      Locals:         0       0       0       0
   662 ;;      Temps:          0       2       0       0
   663 ;;      Totals:         0       4       0       0
   664 ;;Total ram usage:        4 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    2
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_M_control
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _PWM_set_duty
   677  0151                     _PWM_set_duty:	
   678  0151                     l2310:	
   679                           ;incstack = 0
   680                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
   681                           
   682                           
   683                           ;main.c: 215: if (duty < 1024) {
   684  0151  0823               	movf	PWM_set_duty@duty+1,w
   685  0152  3A80               	xorlw	128
   686  0153  00A4               	movwf	??_PWM_set_duty
   687  0154  3084               	movlw	132
   688  0155  0224               	subwf	??_PWM_set_duty,w
   689  0156  1D03               	skipz
   690  0157  295A               	goto	u2515
   691  0158  3000               	movlw	0
   692  0159  0222               	subwf	PWM_set_duty@duty,w
   693  015A                     u2515:	
   694  015A  1803               	skipnc
   695  015B  0008               	return
   696                           
   697                           ;main.c: 216: CCPR1L = (0xFF & ((unsigned int) duty >> 2));
   698  015C  0020               	movlb	0	; select bank0
   699  015D  0823               	movf	PWM_set_duty@duty+1,w
   700  015E  00A5               	movwf	??_PWM_set_duty+1
   701  015F  0822               	movf	PWM_set_duty@duty,w
   702  0160  00A4               	movwf	??_PWM_set_duty
   703  0161  36A5               	lsrf	??_PWM_set_duty+1,f
   704  0162  0CA4               	rrf	??_PWM_set_duty,f
   705  0163  36A5               	lsrf	??_PWM_set_duty+1,f
   706  0164  0CA4               	rrf	??_PWM_set_duty,f
   707  0165  0824               	movf	??_PWM_set_duty,w
   708  0166  0025               	movlb	5	; select bank5
   709  0167  0091               	movwf	17	;volatile
   710                           
   711                           ;main.c: 217: CCP1CON = (0x0C | (0x30 & ((unsigned int) duty << 4)));
   712  0168  0020               	movlb	0	; select bank0
   713  0169  0E22               	swapf	PWM_set_duty@duty,w
   714  016A  39F0               	andlw	240
   715  016B  3930               	andlw	48
   716  016C  380C               	iorlw	12
   717  016D  0025               	movlb	5	; select bank5
   718  016E  0093               	movwf	19	;volatile
   719  016F  0008               	return
   720  0170                     __end_of_PWM_set_duty:	
   721  0170                     __ptext13:	
   722 ;; *************** function ___wmul *****************
   723 ;; Defined at:
   724 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  multiplier      2    2[BANK0 ] unsigned int 
   727 ;;  multiplicand    2    4[BANK0 ] unsigned int 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  product         2    6[BANK0 ] unsigned int 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  2    2[BANK0 ] unsigned int 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 1F/0
   736 ;;		On exit  : 1F/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   739 ;;      Params:         0       4       0       0
   740 ;;      Locals:         0       2       0       0
   741 ;;      Temps:          0       0       0       0
   742 ;;      Totals:         0       6       0       0
   743 ;;Total ram usage:        6 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    2
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_M_control
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function ___wmul
   755  0170                     ___wmul:	
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   759  0170  01A6               	clrf	___wmul@product
   760  0171  01A7               	clrf	___wmul@product+1
   761  0172                     l2316:	
   762  0172  1C22               	btfss	___wmul@multiplier,0
   763  0173  2978               	goto	l2320
   764  0174  0824               	movf	___wmul@multiplicand,w
   765  0175  07A6               	addwf	___wmul@product,f
   766  0176  0825               	movf	___wmul@multiplicand+1,w
   767  0177  3DA7               	addwfc	___wmul@product+1,f
   768  0178                     l2320:	
   769  0178  35A4               	lslf	___wmul@multiplicand,f
   770  0179  0DA5               	rlf	___wmul@multiplicand+1,f
   771  017A  36A3               	lsrf	___wmul@multiplier+1,f
   772  017B  0CA2               	rrf	___wmul@multiplier,f
   773  017C  0822               	movf	___wmul@multiplier,w
   774  017D  0423               	iorwf	___wmul@multiplier+1,w
   775  017E  1D03               	btfss	3,2
   776  017F  2972               	goto	l2316
   777  0180  0827               	movf	___wmul@product+1,w
   778  0181  00A3               	movwf	?___wmul+1
   779  0182  0826               	movf	___wmul@product,w
   780  0183  00A2               	movwf	?___wmul
   781  0184  0008               	return
   782  0185                     __end_of___wmul:	
   783  0185                     __ptext3:	
   784 ;; *************** function _PID *****************
   785 ;; Defined at:
   786 ;;		line 262 in file "main.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  set             2    0[BANK1 ] int 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 1F/1
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   800 ;;      Params:         0       0       2       0
   801 ;;      Locals:         0       0       0       0
   802 ;;      Temps:          0       0       2       0
   803 ;;      Totals:         0       0       4       0
   804 ;;Total ram usage:        4 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    5
   807 ;; This function calls:
   808 ;;		_calculate_pid
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           
   815                           ;psect for function _PID
   816  0185                     _PID:	
   817                           
   818                           ;main.c: 264: zero_cross = ((lset^set) < 0);
   819                           
   820                           ;incstack = 0
   821                           ; Regs used in _PID: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   822  0185  0857               	movf	PID@set^(0+128),w
   823  0186  0653               	xorwf	_lset^(0+128),w
   824  0187  00D9               	movwf	??_PID^(0+128)
   825  0188  0858               	movf	(PID@set+1)^(0+128),w
   826  0189  0654               	xorwf	(_lset+1)^(0+128),w
   827  018A  00DA               	movwf	(??_PID+1)^(0+128)
   828  018B  1FDA               	btfss	(??_PID+1)^(0+128),7
   829  018C  2990               	goto	u3470
   830  018D  0020               	movlb	0	; select bank0
   831  018E  146D               	bsf	_zero_cross/(0+8),_zero_cross& (0+7)
   832  018F  2992               	goto	u3484
   833  0190                     u3470:	
   834  0190  0020               	movlb	0	; select bank0
   835  0191  106D               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
   836  0192                     u3484:	
   837                           
   838                           ;main.c: 265: if (((zero_cross == 1) &(set <= 0) & (lset <= 0)))
   839  0192  0021               	movlb	1	; select bank1
   840  0193  0858               	movf	(PID@set+1)^(0+128),w
   841  0194  3A80               	xorlw	128
   842  0195  00D9               	movwf	??_PID^(0+128)
   843  0196  3080               	movlw	128
   844  0197  0259               	subwf	??_PID^(0+128),w
   845  0198  1D03               	skipz
   846  0199  299C               	goto	u3495
   847  019A  3001               	movlw	1
   848  019B  0257               	subwf	PID@set^(0+128),w
   849  019C                     u3495:	
   850  019C  1803               	skipnc
   851  019D  29AF               	goto	l124
   852  019E  0020               	movlb	0	; select bank0
   853  019F  1C6D               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
   854  01A0  29AF               	goto	l124
   855  01A1  0021               	movlb	1	; select bank1
   856  01A2  0854               	movf	(_lset+1)^(0+128),w
   857  01A3  3A80               	xorlw	128
   858  01A4  00D9               	movwf	??_PID^(0+128)
   859  01A5  3080               	movlw	128
   860  01A6  0259               	subwf	??_PID^(0+128),w
   861  01A7  1D03               	skipz
   862  01A8  29AB               	goto	u3515
   863  01A9  3001               	movlw	1
   864  01AA  0253               	subwf	_lset^(0+128),w
   865  01AB                     u3515:	
   866  01AB  1803               	skipnc
   867  01AC  29AF               	goto	l124
   868                           
   869                           ;main.c: 266: {;main.c: 267: zero_cross = 0;
   870  01AD  0020               	movlb	0	; select bank0
   871  01AE  106D               	bcf	_zero_cross/(0+8),_zero_cross& (0+7)
   872  01AF                     l124:	
   873                           
   874                           ;main.c: 268: };main.c: 269: if (zero_cross == 1) {
   875  01AF  0020               	movlb	0	; select bank0
   876  01B0  1C6D               	btfss	_zero_cross/(0+8),_zero_cross& (0+7)
   877  01B1  29C6               	goto	l2840
   878  01B2                     l2834:	
   879                           
   880                           ;main.c: 271: calculate_pid(0);
   881  01B2  0020               	movlb	0	; select bank0
   882  01B3  01DF               	clrf	calculate_pid@set
   883  01B4  01E0               	clrf	calculate_pid@set+1
   884  01B5  3182  2229  3180   	fcall	_calculate_pid
   885                           
   886                           ;main.c: 272: _delay((unsigned long)((10)*(32000000/4000.0)));
   887  01B8  3068               	movlw	104
   888  01B9  0021               	movlb	1	; select bank1
   889  01BA  00D9               	movwf	??_PID^(0+128)
   890  01BB  30E4               	movlw	228
   891  01BC                     u3777:	
   892  01BC  0B89               	decfsz	9,f
   893  01BD  29BC               	goto	u3777
   894  01BE  0BD9               	decfsz	??_PID^(0+128),f
   895  01BF  29BC               	goto	u3777
   896  01C0  0000               	nop
   897                           
   898                           ;main.c: 273: } while ((I2C_buffer.data.RPM != 0));
   899  01C1  0021               	movlb	1	; select bank1
   900  01C2  082B               	movf	(_I2C_buffer^(0+128)+11),w	;volatile
   901  01C3  042C               	iorwf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
   902  01C4  1D03               	btfss	3,2
   903  01C5  29B2               	goto	l2834
   904  01C6                     l2840:	
   905                           
   906                           ;main.c: 274: };main.c: 275: lset = set;
   907  01C6  0021               	movlb	1	; select bank1
   908  01C7  0858               	movf	(PID@set+1)^(0+128),w
   909  01C8  00D4               	movwf	(_lset+1)^(0+128)
   910  01C9  0857               	movf	PID@set^(0+128),w
   911  01CA  00D3               	movwf	_lset^(0+128)
   912                           
   913                           ;main.c: 276: calculate_pid(set);
   914  01CB  0858               	movf	(PID@set+1)^(0+128),w
   915  01CC  0020               	movlb	0	; select bank0
   916  01CD  00E0               	movwf	calculate_pid@set+1
   917  01CE  0021               	movlb	1	; select bank1
   918  01CF  0857               	movf	PID@set^(0+128),w
   919  01D0  0020               	movlb	0	; select bank0
   920  01D1  00DF               	movwf	calculate_pid@set
   921  01D2  3182  2A29         	ljmp	l2802
   922  01D4                     __end_of_PID:	
   923  01D4                     __ptext2:	
   924 ;; *************** function _PWM_Init *****************
   925 ;; Defined at:
   926 ;;		line 176 in file "main.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  2  105[None  ] int 
   933 ;; Registers used:
   934 ;;		wreg, status,2
   935 ;; Tracked objects:
   936 ;;		On entry : B1F/1
   937 ;;		On exit  : B1F/0
   938 ;;		Unchanged: B00/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   940 ;;      Params:         0       0       0       0
   941 ;;      Locals:         0       0       0       0
   942 ;;      Temps:          0       0       0       0
   943 ;;      Totals:         0       0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    2
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _PWM_Init
   956  01D4                     _PWM_Init:	
   957                           
   958                           ;main.c: 197: PR2 = 0xFF;
   959                           
   960                           ;incstack = 0
   961                           ; Regs used in _PWM_Init: [wreg+status,2]
   962  01D4  30FF               	movlw	255
   963  01D5  0020               	movlb	0	; select bank0
   964  01D6  009B               	movwf	27	;volatile
   965                           
   966                           ;main.c: 198: CCP1CON = 0b00001100;
   967  01D7  300C               	movlw	12
   968  01D8  0025               	movlb	5	; select bank5
   969  01D9  0093               	movwf	19	;volatile
   970                           
   971                           ;main.c: 199: CCPR1L = 0b00000000;
   972  01DA  0191               	clrf	17	;volatile
   973                           
   974                           ;main.c: 200: PIR1bits.TMR2IF = 0;
   975  01DB  0020               	movlb	0	; select bank0
   976  01DC  1091               	bcf	17,1	;volatile
   977                           
   978                           ;main.c: 201: T2CON = 0b00000100;
   979  01DD  3004               	movlw	4
   980  01DE  009C               	movwf	28	;volatile
   981  01DF  0008               	return
   982  01E0                     __end_of_PWM_Init:	
   983  01E0                     __ptext1:	
   984 ;; *************** function _init_I2C_buffer *****************
   985 ;; Defined at:
   986 ;;		line 286 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2
   995 ;; Tracked objects:
   996 ;;		On entry : B1F/1
   997 ;;		On exit  : B1F/1
   998 ;;		Unchanged: B00/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1000 ;;      Params:         0       0       0       0
  1001 ;;      Locals:         0       0       0       0
  1002 ;;      Temps:          0       0       0       0
  1003 ;;      Totals:         0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    2
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _init_I2C_buffer
  1016  01E0                     _init_I2C_buffer:	
  1017                           
  1018                           ;main.c: 287: I2C_buffer.data.ID = 0xF3;
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _init_I2C_buffer: [wreg+status,2]
  1022  01E0  30F3               	movlw	243
  1023  01E1  00A0               	movwf	_I2C_buffer^(0+128)	;volatile
  1024                           
  1025                           ;main.c: 288: I2C_buffer.data.ADDRESS = 0x24 << 1;
  1026  01E2  3048               	movlw	72
  1027  01E3  00A1               	movwf	(_I2C_buffer^(0+128)+1)	;volatile
  1028                           
  1029                           ;main.c: 289: I2C_buffer.data.START_STOP = 0;
  1030  01E4  01A2               	clrf	(_I2C_buffer^(0+128)+2)	;volatile
  1031                           
  1032                           ;main.c: 290: I2C_buffer.data.IOWPU = 1;
  1033  01E5  3001               	movlw	1
  1034  01E6  00A3               	movwf	(_I2C_buffer^(0+128)+3)	;volatile
  1035                           
  1036                           ;main.c: 291: I2C_buffer.data.MODE = 5;
  1037  01E7  3005               	movlw	5
  1038  01E8  00A4               	movwf	(_I2C_buffer^(0+128)+4)	;volatile
  1039                           
  1040                           ;main.c: 292: I2C_buffer.data.SAVE = 0;
  1041  01E9  01A5               	clrf	(_I2C_buffer^(0+128)+5)	;volatile
  1042                           
  1043                           ;main.c: 293: I2C_buffer.data.RESET = 0;
  1044  01EA  01A6               	clrf	(_I2C_buffer^(0+128)+6)	;volatile
  1045                           
  1046                           ;main.c: 294: I2C_buffer.data.GEAR_RATIO = 150;
  1047  01EB  3096               	movlw	150
  1048  01EC  00A7               	movwf	(_I2C_buffer^(0+128)+7)	;volatile
  1049  01ED  01A8               	clrf	((_I2C_buffer+1)^(0+128)+7)	;volatile
  1050                           
  1051                           ;main.c: 295: I2C_buffer.data.DIAMETER = 42;
  1052  01EE  302A               	movlw	42
  1053  01EF  00A9               	movwf	(_I2C_buffer^(0+128)+9)	;volatile
  1054  01F0  01AA               	clrf	((_I2C_buffer+1)^(0+128)+9)	;volatile
  1055                           
  1056                           ;main.c: 296: I2C_buffer.data.RPM = 0;
  1057  01F1  01AB               	clrf	(_I2C_buffer^(0+128)+11)	;volatile
  1058  01F2  01AC               	clrf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  1059                           
  1060                           ;main.c: 297: I2C_buffer.data.SPEED = 0;
  1061  01F3  01AD               	clrf	(_I2C_buffer^(0+128)+13)	;volatile
  1062  01F4  01AE               	clrf	((_I2C_buffer+1)^(0+128)+13)	;volatile
  1063                           
  1064                           ;main.c: 298: I2C_buffer.data.DISTANCE = 0;
  1065  01F5  01AF               	clrf	(_I2C_buffer^(0+128)+15)	;volatile
  1066  01F6  01B0               	clrf	((_I2C_buffer+1)^(0+128)+15)	;volatile
  1067  01F7  01B1               	clrf	((_I2C_buffer+2)^(0+128)+15)	;volatile
  1068  01F8  01B2               	clrf	((_I2C_buffer+3)^(0+128)+15)	;volatile
  1069                           
  1070                           ;main.c: 299: I2C_buffer.data.RPM_PID_KP = 0.1;
  1071  01F9  303D               	movlw	61
  1072  01FA  00B6               	movwf	((_I2C_buffer+3)^(0+128)+19)	;volatile
  1073  01FB  30CC               	movlw	204
  1074  01FC  00B5               	movwf	((_I2C_buffer+2)^(0+128)+19)	;volatile
  1075  01FD  00B4               	movwf	((_I2C_buffer+1)^(0+128)+19)	;volatile
  1076  01FE  30CD               	movlw	205
  1077  01FF  00B3               	movwf	(_I2C_buffer^(0+128)+19)	;volatile
  1078                           
  1079                           ;main.c: 300: I2C_buffer.data.RPM_PID_KD = 0.01;
  1080  0200  303C               	movlw	60
  1081  0201  00BA               	movwf	((_I2C_buffer+3)^(0+128)+23)	;volatile
  1082  0202  3023               	movlw	35
  1083  0203  00B9               	movwf	((_I2C_buffer+2)^(0+128)+23)	;volatile
  1084  0204  30D7               	movlw	215
  1085  0205  00B8               	movwf	((_I2C_buffer+1)^(0+128)+23)	;volatile
  1086  0206  300A               	movlw	10
  1087  0207  00B7               	movwf	(_I2C_buffer^(0+128)+23)	;volatile
  1088                           
  1089                           ;main.c: 301: I2C_buffer.data.RPM_PID_KI = 0.04;
  1090  0208  303D               	movlw	61
  1091  0209  00BE               	movwf	((_I2C_buffer+3)^(0+128)+27)	;volatile
  1092  020A  3023               	movlw	35
  1093  020B  00BD               	movwf	((_I2C_buffer+2)^(0+128)+27)	;volatile
  1094  020C  30D7               	movlw	215
  1095  020D  00BC               	movwf	((_I2C_buffer+1)^(0+128)+27)	;volatile
  1096  020E  300A               	movlw	10
  1097  020F  00BB               	movwf	(_I2C_buffer^(0+128)+27)	;volatile
  1098                           
  1099                           ;main.c: 302: I2C_buffer.data.ATS_PID_KP = 0.15;
  1100  0210  303E               	movlw	62
  1101  0211  00C2               	movwf	((_I2C_buffer+3)^(0+128)+31)	;volatile
  1102  0212  3019               	movlw	25
  1103  0213  00C1               	movwf	((_I2C_buffer+2)^(0+128)+31)	;volatile
  1104  0214  3099               	movlw	153
  1105  0215  00C0               	movwf	((_I2C_buffer+1)^(0+128)+31)	;volatile
  1106  0216  309A               	movlw	154
  1107  0217  00BF               	movwf	(_I2C_buffer^(0+128)+31)	;volatile
  1108                           
  1109                           ;main.c: 303: I2C_buffer.data.ATS_PID_KD = 0.08;
  1110  0218  303D               	movlw	61
  1111  0219  00C6               	movwf	((_I2C_buffer+3)^(0+128)+35)	;volatile
  1112  021A  30A3               	movlw	163
  1113  021B  00C5               	movwf	((_I2C_buffer+2)^(0+128)+35)	;volatile
  1114  021C  30D7               	movlw	215
  1115  021D  00C4               	movwf	((_I2C_buffer+1)^(0+128)+35)	;volatile
  1116  021E  300A               	movlw	10
  1117  021F  00C3               	movwf	(_I2C_buffer^(0+128)+35)	;volatile
  1118                           
  1119                           ;main.c: 304: I2C_buffer.data.ATS_PID_KI = 0.03;
  1120  0220  303C               	movlw	60
  1121  0221  00CA               	movwf	((_I2C_buffer+3)^(0+128)+39)	;volatile
  1122  0222  30F5               	movlw	245
  1123  0223  00C9               	movwf	((_I2C_buffer+2)^(0+128)+39)	;volatile
  1124  0224  30C2               	movlw	194
  1125  0225  00C8               	movwf	((_I2C_buffer+1)^(0+128)+39)	;volatile
  1126  0226  308F               	movlw	143
  1127  0227  00C7               	movwf	(_I2C_buffer^(0+128)+39)	;volatile
  1128  0228  0008               	return
  1129  0229                     __end_of_init_I2C_buffer:	
  1130                           
  1131                           	psect	bitbssBANK0
  1132  0368                     __pbitbssBANK0:	
  1133  0368                     _zero_cross:	
  1134  0368                     	ds	1
  1135                           
  1136                           	psect	bssBANK0
  1137  006E                     __pbssBANK0:	
  1138  006E                     _index_i2c:	
  1139  006E                     	ds	1
  1140                           
  1141                           	psect	bssBANK1
  1142  00A0                     __pbssBANK1:	
  1143  00A0                     _I2C_buffer:	
  1144  00A0                     	ds	43
  1145  00CB                     _lasterror:	
  1146  00CB                     	ds	4
  1147  00CF                     _accumulator:	
  1148  00CF                     	ds	4
  1149  00D3                     _lset:	
  1150  00D3                     	ds	2
  1151  00D5                     _counter:	
  1152  00D5                     	ds	2
  1153                           
  1154                           	psect	dataBANK1
  1155  00DC                     __pdataBANK1:	
  1156  00DC                     _first_i2c:	
  1157  00DC                     	ds	1
  1158                           
  1159                           	psect	clrtext
  1160  0FFA                     clear_ram0:	
  1161                           ;	Called with FSR0 containing the base address, and
  1162                           ;	WREG with the size to clear
  1163                           
  1164  0FFA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1165  0FFB                     clrloop0:	
  1166  0FFB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1167  0FFC  3101               	addfsr 0,1
  1168  0FFD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1169  0FFE  2FFB               	goto	clrloop0	;have we reached the end yet?
  1170  0FFF  3400               	retlw	0	;all done for this memory range, return
  1171                           
  1172                           	psect	cstackBANK1
  1173  00D7                     __pcstackBANK1:	
  1174  00D7                     ?_PID:	
  1175  00D7                     PID@set:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178                           
  1179                           ; 2 bytes @ 0x0
  1180  00D7                     	ds	2
  1181  00D9                     ??_PID:	
  1182                           
  1183                           ; 1 bytes @ 0x2
  1184  00D9                     	ds	2
  1185  00DB                     ??_main:	
  1186                           
  1187                           ; 1 bytes @ 0x4
  1188  00DB                     	ds	1
  1189                           
  1190                           	psect	cstackCOMMON
  1191  0070                     __pcstackCOMMON:	
  1192  0070                     ?_isr:	
  1193  0070                     ?_init_I2C_buffer:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ?_main:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_PWM_Init:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?i1___wmul:	
  1203                           ; 2 bytes @ 0x0
  1204                           
  1205  0070                     i1___wmul@multiplier:	
  1206                           ; 2 bytes @ 0x0
  1207                           
  1208                           
  1209                           ; 2 bytes @ 0x0
  1210  0070                     	ds	2
  1211  0072                     i1___wmul@multiplicand:	
  1212                           
  1213                           ; 2 bytes @ 0x2
  1214  0072                     	ds	2
  1215  0074                     ??i1___wmul:	
  1216  0074                     i1___wmul@product:	
  1217                           ; 1 bytes @ 0x4
  1218                           
  1219                           
  1220                           ; 2 bytes @ 0x4
  1221  0074                     	ds	2
  1222  0076                     ?___lwdiv:	
  1223  0076                     ___lwdiv@divisor:	
  1224                           ; 2 bytes @ 0x6
  1225                           
  1226                           
  1227                           ; 2 bytes @ 0x6
  1228  0076                     	ds	2
  1229  0078                     ___lwdiv@dividend:	
  1230                           
  1231                           ; 2 bytes @ 0x8
  1232  0078                     	ds	2
  1233  007A                     ??___lwdiv:	
  1234  007A                     ___lwdiv@counter:	
  1235                           ; 1 bytes @ 0xA
  1236                           
  1237                           
  1238                           ; 1 bytes @ 0xA
  1239  007A                     	ds	1
  1240  007B                     ___lwdiv@quotient:	
  1241                           
  1242                           ; 2 bytes @ 0xB
  1243  007B                     	ds	2
  1244                           
  1245                           	psect	cstackBANK0
  1246  0020                     __pcstackBANK0:	
  1247  0020                     ??_isr:	
  1248                           
  1249                           ; 1 bytes @ 0x0
  1250  0020                     	ds	2
  1251  0022                     ?___flge:	
  1252  0022                     ??_PWM_Init:	
  1253                           ; 1 bit 
  1254                           
  1255  0022                     ??_init_I2C_buffer:	
  1256                           ; 1 bytes @ 0x2
  1257                           
  1258  0022                     ?__Umul8_16:	
  1259                           ; 1 bytes @ 0x2
  1260                           
  1261  0022                     ?_PWM_set_duty:	
  1262                           ; 2 bytes @ 0x2
  1263                           
  1264  0022                     ?___wmul:	
  1265                           ; 2 bytes @ 0x2
  1266                           
  1267  0022                     ?___fltol:	
  1268                           ; 2 bytes @ 0x2
  1269                           
  1270  0022                     ?___xxtofl:	
  1271                           ; 4 bytes @ 0x2
  1272                           
  1273  0022                     __Umul8_16@multiplicand:	
  1274                           ; 4 bytes @ 0x2
  1275                           
  1276  0022                     PWM_set_duty@duty:	
  1277                           ; 1 bytes @ 0x2
  1278                           
  1279  0022                     ___wmul@multiplier:	
  1280                           ; 2 bytes @ 0x2
  1281                           
  1282  0022                     ___flge@ff1:	
  1283                           ; 2 bytes @ 0x2
  1284                           
  1285  0022                     ___fltol@f1:	
  1286                           ; 4 bytes @ 0x2
  1287                           
  1288  0022                     ___xxtofl@val:	
  1289                           ; 4 bytes @ 0x2
  1290                           
  1291                           
  1292                           ; 4 bytes @ 0x2
  1293  0022                     	ds	2
  1294  0024                     ??_PWM_set_duty:	
  1295  0024                     ___wmul@multiplicand:	
  1296                           ; 1 bytes @ 0x4
  1297                           
  1298                           
  1299                           ; 2 bytes @ 0x4
  1300  0024                     	ds	1
  1301  0025                     ??__Umul8_16:	
  1302  0025                     __Umul8_16@product:	
  1303                           ; 1 bytes @ 0x5
  1304                           
  1305                           
  1306                           ; 2 bytes @ 0x5
  1307  0025                     	ds	1
  1308  0026                     ??___wmul:	
  1309  0026                     ??___fltol:	
  1310                           ; 1 bytes @ 0x6
  1311                           
  1312  0026                     ??___xxtofl:	
  1313                           ; 1 bytes @ 0x6
  1314                           
  1315  0026                     ___wmul@product:	
  1316                           ; 1 bytes @ 0x6
  1317                           
  1318  0026                     ___flge@ff2:	
  1319                           ; 2 bytes @ 0x6
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0x6
  1323  0026                     	ds	1
  1324  0027                     __Umul8_16@multiplier:	
  1325                           
  1326                           ; 1 bytes @ 0x7
  1327  0027                     	ds	1
  1328  0028                     __Umul8_16@word_mpld:	
  1329                           
  1330                           ; 2 bytes @ 0x8
  1331  0028                     	ds	2
  1332  002A                     ??___flge:	
  1333  002A                     ?___flmul:	
  1334                           ; 1 bytes @ 0xA
  1335                           
  1336  002A                     ___fltol@sign1:	
  1337                           ; 4 bytes @ 0xA
  1338                           
  1339  002A                     ___xxtofl@sign:	
  1340                           ; 1 bytes @ 0xA
  1341                           
  1342  002A                     ___flmul@b:	
  1343                           ; 1 bytes @ 0xA
  1344                           
  1345                           
  1346                           ; 4 bytes @ 0xA
  1347  002A                     	ds	1
  1348  002B                     ___fltol@exp1:	
  1349  002B                     ___xxtofl@exp:	
  1350                           ; 1 bytes @ 0xB
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0xB
  1354  002B                     	ds	1
  1355  002C                     ?_M_control:	
  1356  002C                     M_control@ctr:	
  1357                           ; 1 bytes @ 0xC
  1358                           
  1359  002C                     ___xxtofl@arg:	
  1360                           ; 2 bytes @ 0xC
  1361                           
  1362                           
  1363                           ; 4 bytes @ 0xC
  1364  002C                     	ds	2
  1365  002E                     ??_M_control:	
  1366  002E                     ___flmul@a:	
  1367                           ; 1 bytes @ 0xE
  1368                           
  1369                           
  1370                           ; 4 bytes @ 0xE
  1371  002E                     	ds	4
  1372  0032                     ??___flmul:	
  1373                           
  1374                           ; 1 bytes @ 0x12
  1375  0032                     	ds	4
  1376  0036                     ___flmul@sign:	
  1377                           
  1378                           ; 1 bytes @ 0x16
  1379  0036                     	ds	1
  1380  0037                     ___flmul@aexp:	
  1381                           
  1382                           ; 1 bytes @ 0x17
  1383  0037                     	ds	1
  1384  0038                     ___flmul@bexp:	
  1385                           
  1386                           ; 1 bytes @ 0x18
  1387  0038                     	ds	1
  1388  0039                     ___flmul@grs:	
  1389                           
  1390                           ; 4 bytes @ 0x19
  1391  0039                     	ds	4
  1392  003D                     ___flmul@prod:	
  1393                           
  1394                           ; 4 bytes @ 0x1D
  1395  003D                     	ds	4
  1396  0041                     ___flmul@temp:	
  1397                           
  1398                           ; 2 bytes @ 0x21
  1399  0041                     	ds	2
  1400  0043                     ?___fladd:	
  1401  0043                     ___fladd@b:	
  1402                           ; 4 bytes @ 0x23
  1403                           
  1404                           
  1405                           ; 4 bytes @ 0x23
  1406  0043                     	ds	4
  1407  0047                     ___fladd@a:	
  1408                           
  1409                           ; 4 bytes @ 0x27
  1410  0047                     	ds	4
  1411  004B                     ??___fladd:	
  1412                           
  1413                           ; 1 bytes @ 0x2B
  1414  004B                     	ds	8
  1415  0053                     ___fladd@signs:	
  1416                           
  1417                           ; 1 bytes @ 0x33
  1418  0053                     	ds	1
  1419  0054                     ___fladd@aexp:	
  1420                           
  1421                           ; 1 bytes @ 0x34
  1422  0054                     	ds	1
  1423  0055                     ___fladd@bexp:	
  1424                           
  1425                           ; 1 bytes @ 0x35
  1426  0055                     	ds	1
  1427  0056                     ___fladd@grs:	
  1428                           
  1429                           ; 1 bytes @ 0x36
  1430  0056                     	ds	1
  1431  0057                     ?___flsub:	
  1432  0057                     ___flsub@a:	
  1433                           ; 4 bytes @ 0x37
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x37
  1437  0057                     	ds	4
  1438  005B                     ___flsub@b:	
  1439                           
  1440                           ; 4 bytes @ 0x3B
  1441  005B                     	ds	4
  1442  005F                     ?_calculate_pid:	
  1443  005F                     ??___flsub:	
  1444                           ; 1 bytes @ 0x3F
  1445                           
  1446  005F                     calculate_pid@set:	
  1447                           ; 1 bytes @ 0x3F
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x3F
  1451  005F                     	ds	2
  1452  0061                     ??_calculate_pid:	
  1453  0061                     _calculate_pid$1197:	
  1454                           ; 1 bytes @ 0x41
  1455                           
  1456                           
  1457                           ; 4 bytes @ 0x41
  1458  0061                     	ds	4
  1459  0065                     calculate_pid@error:	
  1460                           
  1461                           ; 4 bytes @ 0x45
  1462  0065                     	ds	4
  1463  0069                     calculate_pid@pid:	
  1464                           
  1465                           ; 4 bytes @ 0x49
  1466  0069                     	ds	4
  1467                           
  1468                           	psect	text4
  1469  0229                     __ptext4:	
  1470 ;; *************** function _calculate_pid *****************
  1471 ;; Defined at:
  1472 ;;		line 241 in file "main.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  set             2   63[BANK0 ] int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  pid             4   73[BANK0 ] float 
  1477 ;;  error           4   69[BANK0 ] float 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 1F/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1487 ;;      Params:         0       2       0       0
  1488 ;;      Locals:         0      12       0       0
  1489 ;;      Temps:          0       0       0       0
  1490 ;;      Totals:         0      14       0       0
  1491 ;;Total ram usage:       14 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    4
  1494 ;; This function calls:
  1495 ;;		_M_control
  1496 ;;		___fladd
  1497 ;;		___flge
  1498 ;;		___flmul
  1499 ;;		___flsub
  1500 ;;		___fltol
  1501 ;;		___xxtofl
  1502 ;; This function is called by:
  1503 ;;		_PID
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _calculate_pid
  1509  0229                     _calculate_pid:	
  1510  0229                     l2802:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _calculate_pid: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1513                           
  1514  0229  30AB               	movlw	((low (_I2C_buffer| 0))& (0+255)+11)
  1515                           
  1516                           ;main.c: 244: float pid = 0;
  1517  022A  01E9               	clrf	calculate_pid@pid
  1518  022B  01EA               	clrf	calculate_pid@pid+1
  1519  022C  01EB               	clrf	calculate_pid@pid+2
  1520  022D  01EC               	clrf	calculate_pid@pid+3
  1521                           
  1522                           ;main.c: 245: error = set - I2C_buffer.data.RPM;
  1523  022E  0086               	movwf	6
  1524  022F  0187               	clrf	7
  1525  0230  3F40               	moviw [0]fsr1
  1526  0231  025F               	subwf	calculate_pid@set,w
  1527  0232  00A2               	movwf	___xxtofl@val
  1528  0233  3F41               	moviw [1]fsr1
  1529  0234  3B60               	subwfb	calculate_pid@set+1,w
  1530  0235  00A3               	movwf	___xxtofl@val+1
  1531  0236  01A4               	clrf	___xxtofl@val+2
  1532  0237  1BA3               	btfsc	___xxtofl@val+1,7
  1533  0238  03A4               	decf	___xxtofl@val+2,f
  1534  0239  0824               	movf	___xxtofl@val+2,w
  1535  023A  00A5               	movwf	___xxtofl@val+3
  1536  023B  3001               	movlw	1
  1537  023C  25B6  3182         	fcall	___xxtofl
  1538  023E  0825               	movf	?___xxtofl+3,w
  1539  023F  00E8               	movwf	calculate_pid@error+3
  1540  0240  0824               	movf	?___xxtofl+2,w
  1541  0241  00E7               	movwf	calculate_pid@error+2
  1542  0242  0823               	movf	?___xxtofl+1,w
  1543  0243  00E6               	movwf	calculate_pid@error+1
  1544  0244  0822               	movf	?___xxtofl,w
  1545  0245  00E5               	movwf	calculate_pid@error
  1546                           
  1547                           ;main.c: 246: pid = error * I2C_buffer.data.RPM_PID_KP;
  1548  0246  0868               	movf	calculate_pid@error+3,w
  1549  0247  00AD               	movwf	___flmul@b+3
  1550  0248  0867               	movf	calculate_pid@error+2,w
  1551  0249  00AC               	movwf	___flmul@b+2
  1552  024A  0866               	movf	calculate_pid@error+1,w
  1553  024B  00AB               	movwf	___flmul@b+1
  1554  024C  0865               	movf	calculate_pid@error,w
  1555  024D  00AA               	movwf	___flmul@b
  1556  024E  3013               	movlw	19
  1557  024F  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1558  0250  0086               	movwf	6
  1559  0251  0187               	clrf	7
  1560  0252  3F40               	moviw [0]fsr1
  1561  0253  00AE               	movwf	___flmul@a
  1562  0254  3F41               	moviw [1]fsr1
  1563  0255  00AF               	movwf	___flmul@a+1
  1564  0256  3F42               	moviw [2]fsr1
  1565  0257  00B0               	movwf	___flmul@a+2
  1566  0258  3F43               	moviw [3]fsr1
  1567  0259  00B1               	movwf	___flmul@a+3
  1568  025A  236C               	fcall	___flmul
  1569  025B  082D               	movf	?___flmul+3,w
  1570  025C  00EC               	movwf	calculate_pid@pid+3
  1571  025D  082C               	movf	?___flmul+2,w
  1572  025E  00EB               	movwf	calculate_pid@pid+2
  1573  025F  082B               	movf	?___flmul+1,w
  1574  0260  00EA               	movwf	calculate_pid@pid+1
  1575  0261  082A               	movf	?___flmul,w
  1576  0262  00E9               	movwf	calculate_pid@pid
  1577                           
  1578                           ;main.c: 247: accumulator += error;
  1579  0263  0868               	movf	calculate_pid@error+3,w
  1580  0264  00C6               	movwf	___fladd@b+3
  1581  0265  0867               	movf	calculate_pid@error+2,w
  1582  0266  00C5               	movwf	___fladd@b+2
  1583  0267  0866               	movf	calculate_pid@error+1,w
  1584  0268  00C4               	movwf	___fladd@b+1
  1585  0269  0865               	movf	calculate_pid@error,w
  1586  026A  00C3               	movwf	___fladd@b
  1587  026B  0021               	movlb	1	; select bank1
  1588  026C  0852               	movf	(_accumulator+3)^(0+128),w
  1589  026D  0020               	movlb	0	; select bank0
  1590  026E  00CA               	movwf	___fladd@a+3
  1591  026F  0021               	movlb	1	; select bank1
  1592  0270  0851               	movf	(_accumulator+2)^(0+128),w
  1593  0271  0020               	movlb	0	; select bank0
  1594  0272  00C9               	movwf	___fladd@a+2
  1595  0273  0021               	movlb	1	; select bank1
  1596  0274  0850               	movf	(_accumulator+1)^(0+128),w
  1597  0275  0020               	movlb	0	; select bank0
  1598  0276  00C8               	movwf	___fladd@a+1
  1599  0277  0021               	movlb	1	; select bank1
  1600  0278  084F               	movf	_accumulator^(0+128),w
  1601  0279  0020               	movlb	0	; select bank0
  1602  027A  00C7               	movwf	___fladd@a
  1603  027B  3186  2623  3182   	fcall	___fladd
  1604  027E  0846               	movf	?___fladd+3,w
  1605  027F  0021               	movlb	1	; select bank1
  1606  0280  00D2               	movwf	(_accumulator+3)^(0+128)
  1607  0281  0020               	movlb	0	; select bank0
  1608  0282  0845               	movf	?___fladd+2,w
  1609  0283  0021               	movlb	1	; select bank1
  1610  0284  00D1               	movwf	(_accumulator+2)^(0+128)
  1611  0285  0020               	movlb	0	; select bank0
  1612  0286  0844               	movf	?___fladd+1,w
  1613  0287  0021               	movlb	1	; select bank1
  1614  0288  00D0               	movwf	(_accumulator+1)^(0+128)
  1615  0289  0020               	movlb	0	; select bank0
  1616  028A  0843               	movf	?___fladd,w
  1617  028B  0021               	movlb	1	; select bank1
  1618  028C  00CF               	movwf	_accumulator^(0+128)
  1619                           
  1620                           ;main.c: 248: pid += I2C_buffer.data.RPM_PID_KI*accumulator;
  1621  028D  301B               	movlw	27
  1622  028E  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1623  028F  0086               	movwf	6
  1624  0290  0187               	clrf	7
  1625  0291  3F40               	moviw [0]fsr1
  1626  0292  0020               	movlb	0	; select bank0
  1627  0293  00AE               	movwf	___flmul@a
  1628  0294  3F41               	moviw [1]fsr1
  1629  0295  00AF               	movwf	___flmul@a+1
  1630  0296  3F42               	moviw [2]fsr1
  1631  0297  00B0               	movwf	___flmul@a+2
  1632  0298  3F43               	moviw [3]fsr1
  1633  0299  00B1               	movwf	___flmul@a+3
  1634  029A  0021               	movlb	1	; select bank1
  1635  029B  0852               	movf	(_accumulator+3)^(0+128),w
  1636  029C  0020               	movlb	0	; select bank0
  1637  029D  00AD               	movwf	___flmul@b+3
  1638  029E  0021               	movlb	1	; select bank1
  1639  029F  0851               	movf	(_accumulator+2)^(0+128),w
  1640  02A0  0020               	movlb	0	; select bank0
  1641  02A1  00AC               	movwf	___flmul@b+2
  1642  02A2  0021               	movlb	1	; select bank1
  1643  02A3  0850               	movf	(_accumulator+1)^(0+128),w
  1644  02A4  0020               	movlb	0	; select bank0
  1645  02A5  00AB               	movwf	___flmul@b+1
  1646  02A6  0021               	movlb	1	; select bank1
  1647  02A7  084F               	movf	_accumulator^(0+128),w
  1648  02A8  0020               	movlb	0	; select bank0
  1649  02A9  00AA               	movwf	___flmul@b
  1650  02AA  236C               	fcall	___flmul
  1651  02AB  082D               	movf	?___flmul+3,w
  1652  02AC  00C6               	movwf	___fladd@b+3
  1653  02AD  082C               	movf	?___flmul+2,w
  1654  02AE  00C5               	movwf	___fladd@b+2
  1655  02AF  082B               	movf	?___flmul+1,w
  1656  02B0  00C4               	movwf	___fladd@b+1
  1657  02B1  082A               	movf	?___flmul,w
  1658  02B2  00C3               	movwf	___fladd@b
  1659  02B3  086C               	movf	calculate_pid@pid+3,w
  1660  02B4  00CA               	movwf	___fladd@a+3
  1661  02B5  086B               	movf	calculate_pid@pid+2,w
  1662  02B6  00C9               	movwf	___fladd@a+2
  1663  02B7  086A               	movf	calculate_pid@pid+1,w
  1664  02B8  00C8               	movwf	___fladd@a+1
  1665  02B9  0869               	movf	calculate_pid@pid,w
  1666  02BA  00C7               	movwf	___fladd@a
  1667  02BB  3186  2623  3182   	fcall	___fladd
  1668  02BE  0846               	movf	?___fladd+3,w
  1669  02BF  00EC               	movwf	calculate_pid@pid+3
  1670  02C0  0845               	movf	?___fladd+2,w
  1671  02C1  00EB               	movwf	calculate_pid@pid+2
  1672  02C2  0844               	movf	?___fladd+1,w
  1673  02C3  00EA               	movwf	calculate_pid@pid+1
  1674  02C4  0843               	movf	?___fladd,w
  1675  02C5  00E9               	movwf	calculate_pid@pid
  1676                           
  1677                           ;main.c: 249: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterror);
  1678  02C6  0868               	movf	calculate_pid@error+3,w
  1679  02C7  00DE               	movwf	___flsub@b+3
  1680  02C8  0867               	movf	calculate_pid@error+2,w
  1681  02C9  00DD               	movwf	___flsub@b+2
  1682  02CA  0866               	movf	calculate_pid@error+1,w
  1683  02CB  00DC               	movwf	___flsub@b+1
  1684  02CC  0865               	movf	calculate_pid@error,w
  1685  02CD  00DB               	movwf	___flsub@b
  1686  02CE  0021               	movlb	1	; select bank1
  1687  02CF  084E               	movf	(_lasterror+3)^(0+128),w
  1688  02D0  0020               	movlb	0	; select bank0
  1689  02D1  00DA               	movwf	___flsub@a+3
  1690  02D2  0021               	movlb	1	; select bank1
  1691  02D3  084D               	movf	(_lasterror+2)^(0+128),w
  1692  02D4  0020               	movlb	0	; select bank0
  1693  02D5  00D9               	movwf	___flsub@a+2
  1694  02D6  0021               	movlb	1	; select bank1
  1695  02D7  084C               	movf	(_lasterror+1)^(0+128),w
  1696  02D8  0020               	movlb	0	; select bank0
  1697  02D9  00D8               	movwf	___flsub@a+1
  1698  02DA  0021               	movlb	1	; select bank1
  1699  02DB  084B               	movf	_lasterror^(0+128),w
  1700  02DC  0020               	movlb	0	; select bank0
  1701  02DD  00D7               	movwf	___flsub@a
  1702  02DE  2599  3182         	fcall	___flsub
  1703  02E0  085A               	movf	?___flsub+3,w
  1704  02E1  00B1               	movwf	___flmul@a+3
  1705  02E2  0859               	movf	?___flsub+2,w
  1706  02E3  00B0               	movwf	___flmul@a+2
  1707  02E4  0858               	movf	?___flsub+1,w
  1708  02E5  00AF               	movwf	___flmul@a+1
  1709  02E6  0857               	movf	?___flsub,w
  1710  02E7  00AE               	movwf	___flmul@a
  1711  02E8  3017               	movlw	23
  1712  02E9  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  1713  02EA  0086               	movwf	6
  1714  02EB  0187               	clrf	7
  1715  02EC  3F40               	moviw [0]fsr1
  1716  02ED  00AA               	movwf	___flmul@b
  1717  02EE  3F41               	moviw [1]fsr1
  1718  02EF  00AB               	movwf	___flmul@b+1
  1719  02F0  3F42               	moviw [2]fsr1
  1720  02F1  00AC               	movwf	___flmul@b+2
  1721  02F2  3F43               	moviw [3]fsr1
  1722  02F3  00AD               	movwf	___flmul@b+3
  1723  02F4  236C               	fcall	___flmul
  1724  02F5  082D               	movf	?___flmul+3,w
  1725  02F6  00E4               	movwf	_calculate_pid$1197+3
  1726  02F7  082C               	movf	?___flmul+2,w
  1727  02F8  00E3               	movwf	_calculate_pid$1197+2
  1728  02F9  082B               	movf	?___flmul+1,w
  1729  02FA  00E2               	movwf	_calculate_pid$1197+1
  1730  02FB  082A               	movf	?___flmul,w
  1731  02FC  00E1               	movwf	_calculate_pid$1197
  1732                           
  1733                           ;main.c: 249: pid += I2C_buffer.data.RPM_PID_KD * (error - lasterror);
  1734  02FD  0864               	movf	_calculate_pid$1197+3,w
  1735  02FE  00C6               	movwf	___fladd@b+3
  1736  02FF  0863               	movf	_calculate_pid$1197+2,w
  1737  0300  00C5               	movwf	___fladd@b+2
  1738  0301  0862               	movf	_calculate_pid$1197+1,w
  1739  0302  00C4               	movwf	___fladd@b+1
  1740  0303  0861               	movf	_calculate_pid$1197,w
  1741  0304  00C3               	movwf	___fladd@b
  1742  0305  086C               	movf	calculate_pid@pid+3,w
  1743  0306  00CA               	movwf	___fladd@a+3
  1744  0307  086B               	movf	calculate_pid@pid+2,w
  1745  0308  00C9               	movwf	___fladd@a+2
  1746  0309  086A               	movf	calculate_pid@pid+1,w
  1747  030A  00C8               	movwf	___fladd@a+1
  1748  030B  0869               	movf	calculate_pid@pid,w
  1749  030C  00C7               	movwf	___fladd@a
  1750  030D  3186  2623  3182   	fcall	___fladd
  1751  0310  0846               	movf	?___fladd+3,w
  1752  0311  00EC               	movwf	calculate_pid@pid+3
  1753  0312  0845               	movf	?___fladd+2,w
  1754  0313  00EB               	movwf	calculate_pid@pid+2
  1755  0314  0844               	movf	?___fladd+1,w
  1756  0315  00EA               	movwf	calculate_pid@pid+1
  1757  0316  0843               	movf	?___fladd,w
  1758  0317  00E9               	movwf	calculate_pid@pid
  1759                           
  1760                           ;main.c: 250: lasterror = error;
  1761  0318  0868               	movf	calculate_pid@error+3,w
  1762  0319  0021               	movlb	1	; select bank1
  1763  031A  00CE               	movwf	(_lasterror+3)^(0+128)
  1764  031B  0020               	movlb	0	; select bank0
  1765  031C  0867               	movf	calculate_pid@error+2,w
  1766  031D  0021               	movlb	1	; select bank1
  1767  031E  00CD               	movwf	(_lasterror+2)^(0+128)
  1768  031F  0020               	movlb	0	; select bank0
  1769  0320  0866               	movf	calculate_pid@error+1,w
  1770  0321  0021               	movlb	1	; select bank1
  1771  0322  00CC               	movwf	(_lasterror+1)^(0+128)
  1772  0323  0020               	movlb	0	; select bank0
  1773  0324  0865               	movf	calculate_pid@error,w
  1774  0325  0021               	movlb	1	; select bank1
  1775  0326  00CB               	movwf	_lasterror^(0+128)
  1776                           
  1777                           ;main.c: 251: if (pid >= 1023)
  1778  0327  0020               	movlb	0	; select bank0
  1779  0328  086C               	movf	calculate_pid@pid+3,w
  1780  0329  00A5               	movwf	___flge@ff1+3
  1781  032A  086B               	movf	calculate_pid@pid+2,w
  1782  032B  00A4               	movwf	___flge@ff1+2
  1783  032C  086A               	movf	calculate_pid@pid+1,w
  1784  032D  00A3               	movwf	___flge@ff1+1
  1785  032E  0869               	movf	calculate_pid@pid,w
  1786  032F  00A2               	movwf	___flge@ff1
  1787  0330  3044               	movlw	68
  1788  0331  00A9               	movwf	___flge@ff2+3
  1789  0332  307F               	movlw	127
  1790  0333  00A8               	movwf	___flge@ff2+2
  1791  0334  30C0               	movlw	192
  1792  0335  00A7               	movwf	___flge@ff2+1
  1793  0336  01A6               	clrf	___flge@ff2
  1794  0337  2537  3182         	fcall	___flge
  1795  0339  1C03               	btfss	3,0
  1796  033A  2B42               	goto	l2820
  1797                           
  1798                           ;main.c: 252: {;main.c: 253: pid = 1023;
  1799  033B  3044               	movlw	68
  1800  033C  00EC               	movwf	calculate_pid@pid+3
  1801  033D  307F               	movlw	127
  1802  033E  00EB               	movwf	calculate_pid@pid+2
  1803  033F  30C0               	movlw	192
  1804  0340  00EA               	movwf	calculate_pid@pid+1
  1805  0341  01E9               	clrf	calculate_pid@pid
  1806  0342                     l2820:	
  1807                           
  1808                           ;main.c: 254: };main.c: 255: if (pid <= -1023)
  1809  0342  30C4               	movlw	196
  1810  0343  00A5               	movwf	___flge@ff1+3
  1811  0344  307F               	movlw	127
  1812  0345  00A4               	movwf	___flge@ff1+2
  1813  0346  30C0               	movlw	192
  1814  0347  00A3               	movwf	___flge@ff1+1
  1815  0348  01A2               	clrf	___flge@ff1
  1816  0349  086C               	movf	calculate_pid@pid+3,w
  1817  034A  00A9               	movwf	___flge@ff2+3
  1818  034B  086B               	movf	calculate_pid@pid+2,w
  1819  034C  00A8               	movwf	___flge@ff2+2
  1820  034D  086A               	movf	calculate_pid@pid+1,w
  1821  034E  00A7               	movwf	___flge@ff2+1
  1822  034F  0869               	movf	calculate_pid@pid,w
  1823  0350  00A6               	movwf	___flge@ff2
  1824  0351  2537  3182         	fcall	___flge
  1825  0353  1C03               	btfss	3,0
  1826  0354  2B5C               	goto	l2824
  1827                           
  1828                           ;main.c: 256: {;main.c: 257: pid = -1023;
  1829  0355  30C4               	movlw	196
  1830  0356  00EC               	movwf	calculate_pid@pid+3
  1831  0357  307F               	movlw	127
  1832  0358  00EB               	movwf	calculate_pid@pid+2
  1833  0359  30C0               	movlw	192
  1834  035A  00EA               	movwf	calculate_pid@pid+1
  1835  035B  01E9               	clrf	calculate_pid@pid
  1836  035C                     l2824:	
  1837                           
  1838                           ;main.c: 258: };main.c: 259: M_control((int) pid);
  1839  035C  086C               	movf	calculate_pid@pid+3,w
  1840  035D  00A5               	movwf	___fltol@f1+3
  1841  035E  086B               	movf	calculate_pid@pid+2,w
  1842  035F  00A4               	movwf	___fltol@f1+2
  1843  0360  086A               	movf	calculate_pid@pid+1,w
  1844  0361  00A3               	movwf	___fltol@f1+1
  1845  0362  0869               	movf	calculate_pid@pid,w
  1846  0363  00A2               	movwf	___fltol@f1
  1847  0364  3187  2773         	fcall	___fltol
  1848  0366  0823               	movf	?___fltol+1,w
  1849  0367  00AD               	movwf	M_control@ctr+1
  1850  0368  0822               	movf	?___fltol,w
  1851  0369  00AC               	movwf	M_control@ctr
  1852  036A  3181  291A         	ljmp	l2560
  1853  036C                     __end_of_calculate_pid:	
  1854  036C                     __ptext9:	
  1855 ;; *************** function ___flmul *****************
  1856 ;; Defined at:
  1857 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  b               4   10[BANK0 ] unsigned char 
  1860 ;;  a               4   14[BANK0 ] unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  prod            4   29[BANK0 ] struct .
  1863 ;;  grs             4   25[BANK0 ] unsigned long 
  1864 ;;  temp            2   33[BANK0 ] struct .
  1865 ;;  bexp            1   24[BANK0 ] unsigned char 
  1866 ;;  aexp            1   23[BANK0 ] unsigned char 
  1867 ;;  sign            1   22[BANK0 ] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  4   10[BANK0 ] unsigned char 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, pclath, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 1F/0
  1874 ;;		On exit  : 1F/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1877 ;;      Params:         0       8       0       0
  1878 ;;      Locals:         0      13       0       0
  1879 ;;      Temps:          0       4       0       0
  1880 ;;      Totals:         0      25       0       0
  1881 ;;Total ram usage:       25 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    3
  1884 ;; This function calls:
  1885 ;;		__Umul8_16
  1886 ;; This function is called by:
  1887 ;;		_calculate_pid
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function ___flmul
  1893  036C                     ___flmul:	
  1894                           
  1895                           ;incstack = 0
  1896                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  1897  036C  082D               	movf	___flmul@b+3,w
  1898  036D  00B6               	movwf	___flmul@sign
  1899  036E  3080               	movlw	128
  1900  036F  05B6               	andwf	___flmul@sign,f
  1901  0370  352D               	lslf	___flmul@b+3,w
  1902  0371  00B8               	movwf	___flmul@bexp
  1903  0372  1BAC               	btfsc	___flmul@b+2,7
  1904  0373  1438               	bsf	___flmul@bexp,0
  1905  0374  0838               	movf	___flmul@bexp,w
  1906  0375  1903               	btfsc	3,2
  1907  0376  2B7F               	goto	l609
  1908  0377  0F38               	incfsz	___flmul@bexp,w
  1909  0378  2B7D               	goto	l610
  1910  0379  01AA               	clrf	___flmul@b
  1911  037A  01AB               	clrf	___flmul@b+1
  1912  037B  01AC               	clrf	___flmul@b+2
  1913  037C  01AD               	clrf	___flmul@b+3
  1914  037D                     l610:	
  1915  037D  17AC               	bsf	___flmul@b+2,7
  1916  037E  2B83               	goto	l2652
  1917  037F                     l609:	
  1918  037F  01AA               	clrf	___flmul@b
  1919  0380  01AB               	clrf	___flmul@b+1
  1920  0381  01AC               	clrf	___flmul@b+2
  1921  0382  01AD               	clrf	___flmul@b+3
  1922  0383                     l2652:	
  1923  0383  0831               	movf	___flmul@a+3,w
  1924  0384  3980               	andlw	128
  1925  0385  06B6               	xorwf	___flmul@sign,f
  1926  0386  3531               	lslf	___flmul@a+3,w
  1927  0387  00B7               	movwf	___flmul@aexp
  1928  0388  1BB0               	btfsc	___flmul@a+2,7
  1929  0389  1437               	bsf	___flmul@aexp,0
  1930  038A  0837               	movf	___flmul@aexp,w
  1931  038B  1903               	btfsc	3,2
  1932  038C  2B95               	goto	l613
  1933  038D  0F37               	incfsz	___flmul@aexp,w
  1934  038E  2B93               	goto	l614
  1935  038F  01AE               	clrf	___flmul@a
  1936  0390  01AF               	clrf	___flmul@a+1
  1937  0391  01B0               	clrf	___flmul@a+2
  1938  0392  01B1               	clrf	___flmul@a+3
  1939  0393                     l614:	
  1940  0393  17B0               	bsf	___flmul@a+2,7
  1941  0394  2B99               	goto	l2664
  1942  0395                     l613:	
  1943  0395  01AE               	clrf	___flmul@a
  1944  0396  01AF               	clrf	___flmul@a+1
  1945  0397  01B0               	clrf	___flmul@a+2
  1946  0398  01B1               	clrf	___flmul@a+3
  1947  0399                     l2664:	
  1948  0399  0837               	movf	___flmul@aexp,w
  1949  039A  1D03               	btfss	3,2
  1950  039B  0838               	movf	___flmul@bexp,w
  1951  039C  1D03               	btfss	3,2
  1952  039D  2BA3               	goto	l2668
  1953  039E  01AA               	clrf	?___flmul
  1954  039F  01AB               	clrf	?___flmul+1
  1955  03A0  01AC               	clrf	?___flmul+2
  1956  03A1  01AD               	clrf	?___flmul+3
  1957  03A2  0008               	return
  1958  03A3                     l2668:	
  1959  03A3  082A               	movf	___flmul@b,w
  1960  03A4  00A2               	movwf	__Umul8_16@multiplicand
  1961  03A5  0830               	movf	___flmul@a+2,w
  1962  03A6  24EE  3182         	fcall	__Umul8_16
  1963  03A8  0823               	movf	?__Umul8_16+1,w
  1964  03A9  00C2               	movwf	___flmul@temp+1
  1965  03AA  0822               	movf	?__Umul8_16,w
  1966  03AB  00C1               	movwf	___flmul@temp
  1967  03AC  00B9               	movwf	___flmul@grs
  1968  03AD  01BA               	clrf	___flmul@grs+1
  1969  03AE  01BB               	clrf	___flmul@grs+2
  1970  03AF  01BC               	clrf	___flmul@grs+3
  1971  03B0  0842               	movf	___flmul@temp+1,w
  1972  03B1  00BD               	movwf	___flmul@prod
  1973  03B2  01BE               	clrf	___flmul@prod+1
  1974  03B3  01BF               	clrf	___flmul@prod+2
  1975  03B4  01C0               	clrf	___flmul@prod+3
  1976  03B5  082B               	movf	___flmul@b+1,w
  1977  03B6  00A2               	movwf	__Umul8_16@multiplicand
  1978  03B7  082F               	movf	___flmul@a+1,w
  1979  03B8  24EE  3182         	fcall	__Umul8_16
  1980  03BA  0823               	movf	?__Umul8_16+1,w
  1981  03BB  00C2               	movwf	___flmul@temp+1
  1982  03BC  0822               	movf	?__Umul8_16,w
  1983  03BD  00C1               	movwf	___flmul@temp
  1984  03BE  07B9               	addwf	___flmul@grs,f
  1985  03BF  3001               	movlw	1
  1986  03C0  1803               	skipnc
  1987  03C1  07BA               	addwf	___flmul@grs+1,f
  1988  03C2  1803               	skipnc
  1989  03C3  07BB               	addwf	___flmul@grs+2,f
  1990  03C4  1803               	skipnc
  1991  03C5  07BC               	addwf	___flmul@grs+3,f
  1992  03C6  0842               	movf	___flmul@temp+1,w
  1993  03C7  07BD               	addwf	___flmul@prod,f
  1994  03C8  3001               	movlw	1
  1995  03C9  1803               	skipnc
  1996  03CA  07BE               	addwf	___flmul@prod+1,f
  1997  03CB  1803               	skipnc
  1998  03CC  07BF               	addwf	___flmul@prod+2,f
  1999  03CD  1803               	skipnc
  2000  03CE  07C0               	addwf	___flmul@prod+3,f
  2001  03CF  082C               	movf	___flmul@b+2,w
  2002  03D0  00A2               	movwf	__Umul8_16@multiplicand
  2003  03D1  082E               	movf	___flmul@a,w
  2004  03D2  24EE  3182         	fcall	__Umul8_16
  2005  03D4  0823               	movf	?__Umul8_16+1,w
  2006  03D5  00C2               	movwf	___flmul@temp+1
  2007  03D6  0822               	movf	?__Umul8_16,w
  2008  03D7  00C1               	movwf	___flmul@temp
  2009  03D8  07B9               	addwf	___flmul@grs,f
  2010  03D9  3001               	movlw	1
  2011  03DA  1803               	skipnc
  2012  03DB  07BA               	addwf	___flmul@grs+1,f
  2013  03DC  1803               	skipnc
  2014  03DD  07BB               	addwf	___flmul@grs+2,f
  2015  03DE  1803               	skipnc
  2016  03DF  07BC               	addwf	___flmul@grs+3,f
  2017  03E0  0842               	movf	___flmul@temp+1,w
  2018  03E1  07BD               	addwf	___flmul@prod,f
  2019  03E2  3001               	movlw	1
  2020  03E3  1803               	skipnc
  2021  03E4  07BE               	addwf	___flmul@prod+1,f
  2022  03E5  1803               	skipnc
  2023  03E6  07BF               	addwf	___flmul@prod+2,f
  2024  03E7  1803               	skipnc
  2025  03E8  07C0               	addwf	___flmul@prod+3,f
  2026  03E9  083B               	movf	___flmul@grs+2,w
  2027  03EA  00BC               	movwf	___flmul@grs+3
  2028  03EB  083A               	movf	___flmul@grs+1,w
  2029  03EC  00BB               	movwf	___flmul@grs+2
  2030  03ED  0839               	movf	___flmul@grs,w
  2031  03EE  00BA               	movwf	___flmul@grs+1
  2032  03EF  01B9               	clrf	___flmul@grs
  2033  03F0  082B               	movf	___flmul@b+1,w
  2034  03F1  00A2               	movwf	__Umul8_16@multiplicand
  2035  03F2  082E               	movf	___flmul@a,w
  2036  03F3  24EE  3182         	fcall	__Umul8_16
  2037  03F5  0823               	movf	?__Umul8_16+1,w
  2038  03F6  00C2               	movwf	___flmul@temp+1
  2039  03F7  0822               	movf	?__Umul8_16,w
  2040  03F8  00C1               	movwf	___flmul@temp
  2041  03F9  07B9               	addwf	___flmul@grs,f
  2042  03FA  0842               	movf	___flmul@temp+1,w
  2043  03FB  3DBA               	addwfc	___flmul@grs+1,f
  2044  03FC  3000               	movlw	0
  2045  03FD  3DBB               	addwfc	___flmul@grs+2,f
  2046  03FE  3DBC               	addwfc	___flmul@grs+3,f
  2047  03FF  082A               	movf	___flmul@b,w
  2048  0400  00A2               	movwf	__Umul8_16@multiplicand
  2049  0401  082F               	movf	___flmul@a+1,w
  2050  0402  24EE  3182         	fcall	__Umul8_16
  2051  0404  0823               	movf	?__Umul8_16+1,w
  2052  0405  00C2               	movwf	___flmul@temp+1
  2053  0406  0822               	movf	?__Umul8_16,w
  2054  0407  00C1               	movwf	___flmul@temp
  2055  0408  07B9               	addwf	___flmul@grs,f
  2056  0409  0842               	movf	___flmul@temp+1,w
  2057  040A  3DBA               	addwfc	___flmul@grs+1,f
  2058  040B  3000               	movlw	0
  2059  040C  3DBB               	addwfc	___flmul@grs+2,f
  2060  040D  3DBC               	addwfc	___flmul@grs+3,f
  2061  040E  083B               	movf	___flmul@grs+2,w
  2062  040F  00BC               	movwf	___flmul@grs+3
  2063  0410  083A               	movf	___flmul@grs+1,w
  2064  0411  00BB               	movwf	___flmul@grs+2
  2065  0412  0839               	movf	___flmul@grs,w
  2066  0413  00BA               	movwf	___flmul@grs+1
  2067  0414  01B9               	clrf	___flmul@grs
  2068  0415  082A               	movf	___flmul@b,w
  2069  0416  00A2               	movwf	__Umul8_16@multiplicand
  2070  0417  082E               	movf	___flmul@a,w
  2071  0418  24EE  3182         	fcall	__Umul8_16
  2072  041A  0823               	movf	?__Umul8_16+1,w
  2073  041B  00C2               	movwf	___flmul@temp+1
  2074  041C  0822               	movf	?__Umul8_16,w
  2075  041D  00C1               	movwf	___flmul@temp
  2076  041E  07B9               	addwf	___flmul@grs,f
  2077  041F  0842               	movf	___flmul@temp+1,w
  2078  0420  3DBA               	addwfc	___flmul@grs+1,f
  2079  0421  3000               	movlw	0
  2080  0422  3DBB               	addwfc	___flmul@grs+2,f
  2081  0423  3DBC               	addwfc	___flmul@grs+3,f
  2082  0424  082B               	movf	___flmul@b+1,w
  2083  0425  00A2               	movwf	__Umul8_16@multiplicand
  2084  0426  0830               	movf	___flmul@a+2,w
  2085  0427  24EE  3182         	fcall	__Umul8_16
  2086  0429  0823               	movf	?__Umul8_16+1,w
  2087  042A  00C2               	movwf	___flmul@temp+1
  2088  042B  0822               	movf	?__Umul8_16,w
  2089  042C  00C1               	movwf	___flmul@temp
  2090  042D  07BD               	addwf	___flmul@prod,f
  2091  042E  0842               	movf	___flmul@temp+1,w
  2092  042F  3DBE               	addwfc	___flmul@prod+1,f
  2093  0430  3000               	movlw	0
  2094  0431  3DBF               	addwfc	___flmul@prod+2,f
  2095  0432  3DC0               	addwfc	___flmul@prod+3,f
  2096  0433  082C               	movf	___flmul@b+2,w
  2097  0434  00A2               	movwf	__Umul8_16@multiplicand
  2098  0435  082F               	movf	___flmul@a+1,w
  2099  0436  24EE  3182         	fcall	__Umul8_16
  2100  0438  0823               	movf	?__Umul8_16+1,w
  2101  0439  00C2               	movwf	___flmul@temp+1
  2102  043A  0822               	movf	?__Umul8_16,w
  2103  043B  00C1               	movwf	___flmul@temp
  2104  043C  07BD               	addwf	___flmul@prod,f
  2105  043D  0842               	movf	___flmul@temp+1,w
  2106  043E  3DBE               	addwfc	___flmul@prod+1,f
  2107  043F  3000               	movlw	0
  2108  0440  3DBF               	addwfc	___flmul@prod+2,f
  2109  0441  3DC0               	addwfc	___flmul@prod+3,f
  2110  0442  082C               	movf	___flmul@b+2,w
  2111  0443  00A2               	movwf	__Umul8_16@multiplicand
  2112  0444  0830               	movf	___flmul@a+2,w
  2113  0445  24EE  3182         	fcall	__Umul8_16
  2114  0447  0823               	movf	?__Umul8_16+1,w
  2115  0448  00C2               	movwf	___flmul@temp+1
  2116  0449  0822               	movf	?__Umul8_16,w
  2117  044A  00C1               	movwf	___flmul@temp
  2118  044B  00B2               	movwf	??___flmul
  2119  044C  0842               	movf	___flmul@temp+1,w
  2120  044D  00B3               	movwf	??___flmul+1
  2121  044E  01B4               	clrf	??___flmul+2
  2122  044F  01B5               	clrf	??___flmul+3
  2123  0450  0834               	movf	??___flmul+2,w
  2124  0451  00B5               	movwf	??___flmul+3
  2125  0452  0833               	movf	??___flmul+1,w
  2126  0453  00B4               	movwf	??___flmul+2
  2127  0454  0832               	movf	??___flmul,w
  2128  0455  00B3               	movwf	??___flmul+1
  2129  0456  01B2               	clrf	??___flmul
  2130  0457  0832               	movf	??___flmul,w
  2131  0458  07BD               	addwf	___flmul@prod,f
  2132  0459  0833               	movf	??___flmul+1,w
  2133  045A  3DBE               	addwfc	___flmul@prod+1,f
  2134  045B  0834               	movf	??___flmul+2,w
  2135  045C  3DBF               	addwfc	___flmul@prod+2,f
  2136  045D  0835               	movf	??___flmul+3,w
  2137  045E  3DC0               	addwfc	___flmul@prod+3,f
  2138  045F  083C               	movf	___flmul@grs+3,w
  2139  0460  07BD               	addwf	___flmul@prod,f
  2140  0461  3001               	movlw	1
  2141  0462  1803               	skipnc
  2142  0463  07BE               	addwf	___flmul@prod+1,f
  2143  0464  1803               	skipnc
  2144  0465  07BF               	addwf	___flmul@prod+2,f
  2145  0466  1803               	skipnc
  2146  0467  07C0               	addwf	___flmul@prod+3,f
  2147  0468  083B               	movf	___flmul@grs+2,w
  2148  0469  00BC               	movwf	___flmul@grs+3
  2149  046A  083A               	movf	___flmul@grs+1,w
  2150  046B  00BB               	movwf	___flmul@grs+2
  2151  046C  0839               	movf	___flmul@grs,w
  2152  046D  00BA               	movwf	___flmul@grs+1
  2153  046E  01B9               	clrf	___flmul@grs
  2154  046F  0838               	movf	___flmul@bexp,w
  2155  0470  00C1               	movwf	___flmul@temp
  2156  0471  01C2               	clrf	___flmul@temp+1
  2157  0472  0837               	movf	___flmul@aexp,w
  2158  0473  07C1               	addwf	___flmul@temp,f
  2159  0474  1803               	skipnc
  2160  0475  0AC2               	incf	___flmul@temp+1,f
  2161  0476  3082               	movlw	-126
  2162  0477                     L3:	
  2163  0477  07C1               	addwf	___flmul@temp,f
  2164  0478  1C03               	skipc
  2165  0479  03C2               	decf	___flmul@temp+1,f
  2166  047A  1BBF               	btfsc	___flmul@prod+2,7
  2167  047B  2C88               	goto	l2716
  2168  047C  35BD               	lslf	___flmul@prod,f
  2169  047D  0DBE               	rlf	___flmul@prod+1,f
  2170  047E  0DBF               	rlf	___flmul@prod+2,f
  2171  047F  0DC0               	rlf	___flmul@prod+3,f
  2172  0480  1BBC               	btfsc	___flmul@grs+3,7
  2173  0481  143D               	bsf	___flmul@prod,0
  2174  0482  30FF               	movlw	-1
  2175  0483  35B9               	lslf	___flmul@grs,f
  2176  0484  0DBA               	rlf	___flmul@grs+1,f
  2177  0485  0DBB               	rlf	___flmul@grs+2,f
  2178  0486  0DBC               	rlf	___flmul@grs+3,f
  2179  0487  2C77               	goto	L3
  2180  0488                     l2716:	
  2181  0488  01B7               	clrf	___flmul@aexp
  2182  0489  1FBC               	btfss	___flmul@grs+3,7
  2183  048A  2C9D               	goto	l2726
  2184  048B  0839               	movf	___flmul@grs,w
  2185  048C  00B2               	movwf	??___flmul
  2186  048D  083A               	movf	___flmul@grs+1,w
  2187  048E  00B3               	movwf	??___flmul+1
  2188  048F  083B               	movf	___flmul@grs+2,w
  2189  0490  00B4               	movwf	??___flmul+2
  2190  0491  307F               	movlw	127
  2191  0492  053C               	andwf	___flmul@grs+3,w
  2192  0493  00B5               	movwf	??___flmul+3
  2193  0494  0434               	iorwf	??___flmul+2,w
  2194  0495  0433               	iorwf	??___flmul+1,w
  2195  0496  0432               	iorwf	??___flmul,w
  2196  0497  1903               	skipnz
  2197  0498  183D               	btfsc	___flmul@prod,0
  2198  0499  2C9B               	goto	l2722
  2199  049A  2C9D               	goto	l2726
  2200  049B                     l2722:	
  2201  049B  01B7               	clrf	___flmul@aexp
  2202  049C  0AB7               	incf	___flmul@aexp,f
  2203  049D                     l2726:	
  2204  049D  0837               	movf	___flmul@aexp,w
  2205  049E  1903               	btfsc	3,2
  2206  049F  2CAF               	goto	l2736
  2207  04A0  3001               	movlw	1
  2208  04A1  07BD               	addwf	___flmul@prod,f
  2209  04A2  3000               	movlw	0
  2210  04A3  3DBE               	addwfc	___flmul@prod+1,f
  2211  04A4  3DBF               	addwfc	___flmul@prod+2,f
  2212  04A5  3DC0               	addwfc	___flmul@prod+3,f
  2213  04A6  1C40               	btfss	___flmul@prod+3,0
  2214  04A7  2CAF               	goto	l2736
  2215  04A8  37C0               	asrf	___flmul@prod+3,f
  2216  04A9  0CBF               	rrf	___flmul@prod+2,f
  2217  04AA  0CBE               	rrf	___flmul@prod+1,f
  2218  04AB  0CBD               	rrf	___flmul@prod,f
  2219  04AC  0AC1               	incf	___flmul@temp,f
  2220  04AD  1903               	skipnz
  2221  04AE  0AC2               	incf	___flmul@temp+1,f
  2222  04AF                     l2736:	
  2223  04AF  0842               	movf	___flmul@temp+1,w
  2224  04B0  3A80               	xorlw	128
  2225  04B1  00B2               	movwf	??___flmul
  2226  04B2  3080               	movlw	128
  2227  04B3  0232               	subwf	??___flmul,w
  2228  04B4  1D03               	skipz
  2229  04B5  2CB8               	goto	u3325
  2230  04B6  30FF               	movlw	255
  2231  04B7  0241               	subwf	___flmul@temp,w
  2232  04B8                     u3325:	
  2233  04B8  1C03               	skipc
  2234  04B9  2CC2               	goto	l2740
  2235  04BA  307F               	movlw	127
  2236  04BB  0020               	movlb	0	; select bank0
  2237  04BC  00C0               	movwf	___flmul@prod+3
  2238  04BD  3080               	movlw	128
  2239  04BE  00BF               	movwf	___flmul@prod+2
  2240  04BF  01BE               	clrf	___flmul@prod+1
  2241  04C0  01BD               	clrf	___flmul@prod
  2242  04C1  2CE3               	goto	l631
  2243  04C2                     l2740:	
  2244  04C2  0020               	movlb	0	; select bank0
  2245  04C3  0842               	movf	___flmul@temp+1,w
  2246  04C4  3A80               	xorlw	128
  2247  04C5  00B2               	movwf	??___flmul
  2248  04C6  3080               	movlw	128
  2249  04C7  0232               	subwf	??___flmul,w
  2250  04C8  1D03               	skipz
  2251  04C9  2CCC               	goto	u3335
  2252  04CA  3001               	movlw	1
  2253  04CB  0241               	subwf	___flmul@temp,w
  2254  04CC                     u3335:	
  2255  04CC  1803               	skipnc
  2256  04CD  2CD5               	goto	l2746
  2257  04CE  0020               	movlb	0	; select bank0
  2258  04CF  01BD               	clrf	___flmul@prod
  2259  04D0  01BE               	clrf	___flmul@prod+1
  2260  04D1  01BF               	clrf	___flmul@prod+2
  2261  04D2  01C0               	clrf	___flmul@prod+3
  2262  04D3  01B6               	clrf	___flmul@sign
  2263  04D4  2CE3               	goto	l631
  2264  04D5                     l2746:	
  2265  04D5  0020               	movlb	0	; select bank0
  2266  04D6  0841               	movf	___flmul@temp,w
  2267  04D7  00B8               	movwf	___flmul@bexp
  2268  04D8  30FF               	movlw	255
  2269  04D9  05BD               	andwf	___flmul@prod,f
  2270  04DA  05BE               	andwf	___flmul@prod+1,f
  2271  04DB  307F               	movlw	127
  2272  04DC  05BF               	andwf	___flmul@prod+2,f
  2273  04DD  3000               	movlw	0
  2274  04DE  01C0               	clrf	___flmul@prod+3
  2275  04DF  1838               	btfsc	___flmul@bexp,0
  2276  04E0  17BF               	bsf	___flmul@prod+2,7
  2277  04E1  3638               	lsrf	___flmul@bexp,w
  2278  04E2  00C0               	movwf	___flmul@prod+3
  2279  04E3                     l631:	
  2280  04E3  0836               	movf	___flmul@sign,w
  2281  04E4  04C0               	iorwf	___flmul@prod+3,f
  2282  04E5  0840               	movf	___flmul@prod+3,w
  2283  04E6  00AD               	movwf	?___flmul+3
  2284  04E7  083F               	movf	___flmul@prod+2,w
  2285  04E8  00AC               	movwf	?___flmul+2
  2286  04E9  083E               	movf	___flmul@prod+1,w
  2287  04EA  00AB               	movwf	?___flmul+1
  2288  04EB  083D               	movf	___flmul@prod,w
  2289  04EC  00AA               	movwf	?___flmul
  2290  04ED  0008               	return
  2291  04EE                     __end_of___flmul:	
  2292  04EE                     __ptext10:	
  2293 ;; *************** function __Umul8_16 *****************
  2294 ;; Defined at:
  2295 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  multiplier      1    wreg     unsigned char 
  2298 ;;  multiplicand    1    2[BANK0 ] unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  multiplier      1    7[BANK0 ] unsigned char 
  2301 ;;  word_mpld       2    8[BANK0 ] unsigned int 
  2302 ;;  product         2    5[BANK0 ] unsigned int 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  2    2[BANK0 ] unsigned int 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 1F/0
  2309 ;;		On exit  : 1F/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2312 ;;      Params:         0       3       0       0
  2313 ;;      Locals:         0       5       0       0
  2314 ;;      Temps:          0       0       0       0
  2315 ;;      Totals:         0       8       0       0
  2316 ;;Total ram usage:        8 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    2
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		___flmul
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function __Umul8_16
  2328  04EE                     __Umul8_16:	
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  2332                           ;__Umul8_16@multiplier stored from wreg
  2333  04EE  00A7               	movwf	__Umul8_16@multiplier
  2334  04EF  01A5               	clrf	__Umul8_16@product
  2335  04F0  01A6               	clrf	__Umul8_16@product+1
  2336  04F1  0822               	movf	__Umul8_16@multiplicand,w
  2337  04F2  00A8               	movwf	__Umul8_16@word_mpld
  2338  04F3  01A9               	clrf	__Umul8_16@word_mpld+1
  2339  04F4  1C27               	btfss	__Umul8_16@multiplier,0
  2340  04F5  2CFA               	goto	l2516
  2341  04F6  0828               	movf	__Umul8_16@word_mpld,w
  2342  04F7  07A5               	addwf	__Umul8_16@product,f
  2343  04F8  0829               	movf	__Umul8_16@word_mpld+1,w
  2344  04F9  3DA6               	addwfc	__Umul8_16@product+1,f
  2345  04FA                     l2516:	
  2346  04FA  35A8               	lslf	__Umul8_16@word_mpld,f
  2347  04FB  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2348  04FC  1CA7               	btfss	__Umul8_16@multiplier,1
  2349  04FD  2D02               	goto	l2522
  2350  04FE  0828               	movf	__Umul8_16@word_mpld,w
  2351  04FF  07A5               	addwf	__Umul8_16@product,f
  2352  0500  0829               	movf	__Umul8_16@word_mpld+1,w
  2353  0501  3DA6               	addwfc	__Umul8_16@product+1,f
  2354  0502                     l2522:	
  2355  0502  35A8               	lslf	__Umul8_16@word_mpld,f
  2356  0503  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2357  0504  1D27               	btfss	__Umul8_16@multiplier,2
  2358  0505  2D0A               	goto	l2528
  2359  0506  0828               	movf	__Umul8_16@word_mpld,w
  2360  0507  07A5               	addwf	__Umul8_16@product,f
  2361  0508  0829               	movf	__Umul8_16@word_mpld+1,w
  2362  0509  3DA6               	addwfc	__Umul8_16@product+1,f
  2363  050A                     l2528:	
  2364  050A  35A8               	lslf	__Umul8_16@word_mpld,f
  2365  050B  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2366  050C  1DA7               	btfss	__Umul8_16@multiplier,3
  2367  050D  2D12               	goto	l2534
  2368  050E  0828               	movf	__Umul8_16@word_mpld,w
  2369  050F  07A5               	addwf	__Umul8_16@product,f
  2370  0510  0829               	movf	__Umul8_16@word_mpld+1,w
  2371  0511  3DA6               	addwfc	__Umul8_16@product+1,f
  2372  0512                     l2534:	
  2373  0512  35A8               	lslf	__Umul8_16@word_mpld,f
  2374  0513  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2375  0514  1E27               	btfss	__Umul8_16@multiplier,4
  2376  0515  2D1A               	goto	l2540
  2377  0516  0828               	movf	__Umul8_16@word_mpld,w
  2378  0517  07A5               	addwf	__Umul8_16@product,f
  2379  0518  0829               	movf	__Umul8_16@word_mpld+1,w
  2380  0519  3DA6               	addwfc	__Umul8_16@product+1,f
  2381  051A                     l2540:	
  2382  051A  35A8               	lslf	__Umul8_16@word_mpld,f
  2383  051B  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2384  051C  1EA7               	btfss	__Umul8_16@multiplier,5
  2385  051D  2D22               	goto	l2546
  2386  051E  0828               	movf	__Umul8_16@word_mpld,w
  2387  051F  07A5               	addwf	__Umul8_16@product,f
  2388  0520  0829               	movf	__Umul8_16@word_mpld+1,w
  2389  0521  3DA6               	addwfc	__Umul8_16@product+1,f
  2390  0522                     l2546:	
  2391  0522  35A8               	lslf	__Umul8_16@word_mpld,f
  2392  0523  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2393  0524  1F27               	btfss	__Umul8_16@multiplier,6
  2394  0525  2D2A               	goto	l2552
  2395  0526  0828               	movf	__Umul8_16@word_mpld,w
  2396  0527  07A5               	addwf	__Umul8_16@product,f
  2397  0528  0829               	movf	__Umul8_16@word_mpld+1,w
  2398  0529  3DA6               	addwfc	__Umul8_16@product+1,f
  2399  052A                     l2552:	
  2400  052A  35A8               	lslf	__Umul8_16@word_mpld,f
  2401  052B  0DA9               	rlf	__Umul8_16@word_mpld+1,f
  2402  052C  1FA7               	btfss	__Umul8_16@multiplier,7
  2403  052D  2D32               	goto	l663
  2404  052E  0828               	movf	__Umul8_16@word_mpld,w
  2405  052F  07A5               	addwf	__Umul8_16@product,f
  2406  0530  0829               	movf	__Umul8_16@word_mpld+1,w
  2407  0531  3DA6               	addwfc	__Umul8_16@product+1,f
  2408  0532                     l663:	
  2409  0532  0826               	movf	__Umul8_16@product+1,w
  2410  0533  00A3               	movwf	?__Umul8_16+1
  2411  0534  0825               	movf	__Umul8_16@product,w
  2412  0535  00A2               	movwf	?__Umul8_16
  2413  0536  0008               	return
  2414  0537                     __end_of__Umul8_16:	
  2415  0537                     __ptext11:	
  2416 ;; *************** function ___flge *****************
  2417 ;; Defined at:
  2418 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  ff1             4    2[BANK0 ] unsigned int 
  2421 ;;  ff2             4    6[BANK0 ] unsigned int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;		None               void
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0
  2428 ;; Tracked objects:
  2429 ;;		On entry : 1F/0
  2430 ;;		On exit  : 1F/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2433 ;;      Params:         0       8       0       0
  2434 ;;      Locals:         0       0       0       0
  2435 ;;      Temps:          0       4       0       0
  2436 ;;      Totals:         0      12       0       0
  2437 ;;Total ram usage:       12 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    2
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_calculate_pid
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function ___flge
  2449  0537                     ___flge:	
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in ___flge: [wreg+status,2+status,0]
  2453  0537  3080               	movlw	128
  2454  0538  01AA               	clrf	??___flge
  2455  0539  01AB               	clrf	??___flge+1
  2456  053A  0524               	andwf	___flge@ff1+2,w
  2457  053B  00AC               	movwf	??___flge+2
  2458  053C  307F               	movlw	127
  2459  053D  0525               	andwf	___flge@ff1+3,w
  2460  053E  00AD               	movwf	??___flge+3
  2461  053F  042C               	iorwf	??___flge+2,w
  2462  0540  042B               	iorwf	??___flge+1,w
  2463  0541  042A               	iorwf	??___flge,w
  2464  0542  1D03               	skipz
  2465  0543  2D48               	goto	l2580
  2466  0544  01A2               	clrf	___flge@ff1
  2467  0545  01A3               	clrf	___flge@ff1+1
  2468  0546  01A4               	clrf	___flge@ff1+2
  2469  0547  01A5               	clrf	___flge@ff1+3
  2470  0548                     l2580:	
  2471  0548  3080               	movlw	128
  2472  0549  01AA               	clrf	??___flge
  2473  054A  01AB               	clrf	??___flge+1
  2474  054B  0528               	andwf	___flge@ff2+2,w
  2475  054C  00AC               	movwf	??___flge+2
  2476  054D  307F               	movlw	127
  2477  054E  0529               	andwf	___flge@ff2+3,w
  2478  054F  00AD               	movwf	??___flge+3
  2479  0550  042C               	iorwf	??___flge+2,w
  2480  0551  042B               	iorwf	??___flge+1,w
  2481  0552  042A               	iorwf	??___flge,w
  2482  0553  1D03               	skipz
  2483  0554  2D59               	goto	l405
  2484  0555  01A6               	clrf	___flge@ff2
  2485  0556  01A7               	clrf	___flge@ff2+1
  2486  0557  01A8               	clrf	___flge@ff2+2
  2487  0558  01A9               	clrf	___flge@ff2+3
  2488  0559                     l405:	
  2489  0559  1FA5               	btfss	___flge@ff1+3,7
  2490  055A  2D70               	goto	l2586
  2491  055B  3080               	movlw	128
  2492  055C  01AA               	clrf	??___flge
  2493  055D  01AB               	clrf	??___flge+1
  2494  055E  01AC               	clrf	??___flge+2
  2495  055F  00AD               	movwf	??___flge+3
  2496  0560  0822               	movf	___flge@ff1,w
  2497  0561  02AA               	subwf	??___flge,f
  2498  0562  0823               	movf	___flge@ff1+1,w
  2499  0563  3BAB               	subwfb	??___flge+1,f
  2500  0564  0824               	movf	___flge@ff1+2,w
  2501  0565  3BAC               	subwfb	??___flge+2,f
  2502  0566  0825               	movf	___flge@ff1+3,w
  2503  0567  3BAD               	subwfb	??___flge+3,f
  2504  0568  082D               	movf	??___flge+3,w
  2505  0569  00A5               	movwf	___flge@ff1+3
  2506  056A  082C               	movf	??___flge+2,w
  2507  056B  00A4               	movwf	___flge@ff1+2
  2508  056C  082B               	movf	??___flge+1,w
  2509  056D  00A3               	movwf	___flge@ff1+1
  2510  056E  082A               	movf	??___flge,w
  2511  056F  00A2               	movwf	___flge@ff1
  2512  0570                     l2586:	
  2513  0570  1FA9               	btfss	___flge@ff2+3,7
  2514  0571  2D87               	goto	l407
  2515  0572  3080               	movlw	128
  2516  0573  01AA               	clrf	??___flge
  2517  0574  01AB               	clrf	??___flge+1
  2518  0575  01AC               	clrf	??___flge+2
  2519  0576  00AD               	movwf	??___flge+3
  2520  0577  0826               	movf	___flge@ff2,w
  2521  0578  02AA               	subwf	??___flge,f
  2522  0579  0827               	movf	___flge@ff2+1,w
  2523  057A  3BAB               	subwfb	??___flge+1,f
  2524  057B  0828               	movf	___flge@ff2+2,w
  2525  057C  3BAC               	subwfb	??___flge+2,f
  2526  057D  0829               	movf	___flge@ff2+3,w
  2527  057E  3BAD               	subwfb	??___flge+3,f
  2528  057F  082D               	movf	??___flge+3,w
  2529  0580  00A9               	movwf	___flge@ff2+3
  2530  0581  082C               	movf	??___flge+2,w
  2531  0582  00A8               	movwf	___flge@ff2+2
  2532  0583  082B               	movf	??___flge+1,w
  2533  0584  00A7               	movwf	___flge@ff2+1
  2534  0585  082A               	movf	??___flge,w
  2535  0586  00A6               	movwf	___flge@ff2
  2536  0587                     l407:	
  2537  0587  3080               	movlw	128
  2538  0588  06A5               	xorwf	___flge@ff1+3,f
  2539  0589  06A9               	xorwf	___flge@ff2+3,f
  2540  058A  0829               	movf	___flge@ff2+3,w
  2541  058B  0225               	subwf	___flge@ff1+3,w
  2542  058C  1D03               	skipz
  2543  058D  0008               	return
  2544  058E  0828               	movf	___flge@ff2+2,w
  2545  058F  0224               	subwf	___flge@ff1+2,w
  2546  0590  1D03               	skipz
  2547  0591  0008               	return
  2548  0592  0827               	movf	___flge@ff2+1,w
  2549  0593  0223               	subwf	___flge@ff1+1,w
  2550  0594  1D03               	skipz
  2551  0595  0008               	return
  2552  0596  0826               	movf	___flge@ff2,w
  2553  0597  0222               	subwf	___flge@ff1,w
  2554  0598  0008               	return
  2555  0599                     __end_of___flge:	
  2556  0599                     __ptext7:	
  2557 ;; *************** function ___flsub *****************
  2558 ;; Defined at:
  2559 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  a               4   55[BANK0 ] long 
  2562 ;;  b               4   59[BANK0 ] long 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  4   55[BANK0 ] long 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0, pclath, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 1F/0
  2571 ;;		On exit  : 1F/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2574 ;;      Params:         0       8       0       0
  2575 ;;      Locals:         0       0       0       0
  2576 ;;      Temps:          0       0       0       0
  2577 ;;      Totals:         0       8       0       0
  2578 ;;Total ram usage:        8 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:    3
  2581 ;; This function calls:
  2582 ;;		___fladd
  2583 ;; This function is called by:
  2584 ;;		_calculate_pid
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           
  2589                           ;psect for function ___flsub
  2590  0599                     ___flsub:	
  2591                           
  2592                           ;incstack = 0
  2593                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  2594  0599  3080               	movlw	128
  2595  059A  06DA               	xorwf	___flsub@a+3,f
  2596  059B  085E               	movf	___flsub@b+3,w
  2597  059C  00C6               	movwf	___fladd@b+3
  2598  059D  085D               	movf	___flsub@b+2,w
  2599  059E  00C5               	movwf	___fladd@b+2
  2600  059F  085C               	movf	___flsub@b+1,w
  2601  05A0  00C4               	movwf	___fladd@b+1
  2602  05A1  085B               	movf	___flsub@b,w
  2603  05A2  00C3               	movwf	___fladd@b
  2604  05A3  085A               	movf	___flsub@a+3,w
  2605  05A4  00CA               	movwf	___fladd@a+3
  2606  05A5  0859               	movf	___flsub@a+2,w
  2607  05A6  00C9               	movwf	___fladd@a+2
  2608  05A7  0858               	movf	___flsub@a+1,w
  2609  05A8  00C8               	movwf	___fladd@a+1
  2610  05A9  0857               	movf	___flsub@a,w
  2611  05AA  00C7               	movwf	___fladd@a
  2612  05AB  3186  2623         	fcall	___fladd
  2613  05AD  0846               	movf	?___fladd+3,w
  2614  05AE  00DA               	movwf	?___flsub+3
  2615  05AF  0845               	movf	?___fladd+2,w
  2616  05B0  00D9               	movwf	?___flsub+2
  2617  05B1  0844               	movf	?___fladd+1,w
  2618  05B2  00D8               	movwf	?___flsub+1
  2619  05B3  0843               	movf	?___fladd,w
  2620  05B4  00D7               	movwf	?___flsub
  2621  05B5  0008               	return
  2622  05B6                     __end_of___flsub:	
  2623  05B6                     __ptext5:	
  2624 ;; *************** function ___xxtofl *****************
  2625 ;; Defined at:
  2626 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  sign            1    wreg     unsigned char 
  2629 ;;  val             4    2[BANK0 ] long 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  sign            1   10[BANK0 ] unsigned char 
  2632 ;;  arg             4   12[BANK0 ] unsigned long 
  2633 ;;  exp             1   11[BANK0 ] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  4    2[BANK0 ] unsigned char 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 1F/0
  2640 ;;		On exit  : 1F/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2643 ;;      Params:         0       4       0       0
  2644 ;;      Locals:         0       6       0       0
  2645 ;;      Temps:          0       4       0       0
  2646 ;;      Totals:         0      14       0       0
  2647 ;;Total ram usage:       14 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    2
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_calculate_pid
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function ___xxtofl
  2659  05B6                     ___xxtofl:	
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2663                           ;___xxtofl@sign stored from wreg
  2664  05B6  00AA               	movwf	___xxtofl@sign
  2665  05B7  082A               	movf	___xxtofl@sign,w
  2666  05B8  1D03               	btfss	3,2
  2667  05B9  1FA5               	btfss	___xxtofl@val+3,7
  2668  05BA  2DCB               	goto	l2764
  2669  05BB  0922               	comf	___xxtofl@val,w
  2670  05BC  00AC               	movwf	___xxtofl@arg
  2671  05BD  0923               	comf	___xxtofl@val+1,w
  2672  05BE  00AD               	movwf	___xxtofl@arg+1
  2673  05BF  0924               	comf	___xxtofl@val+2,w
  2674  05C0  00AE               	movwf	___xxtofl@arg+2
  2675  05C1  0925               	comf	___xxtofl@val+3,w
  2676  05C2  00AF               	movwf	___xxtofl@arg+3
  2677  05C3  0AAC               	incf	___xxtofl@arg,f
  2678  05C4  1903               	skipnz
  2679  05C5  0AAD               	incf	___xxtofl@arg+1,f
  2680  05C6  1903               	skipnz
  2681  05C7  0AAE               	incf	___xxtofl@arg+2,f
  2682  05C8  1903               	skipnz
  2683  05C9  0AAF               	incf	___xxtofl@arg+3,f
  2684  05CA  2DD3               	goto	l638
  2685  05CB                     l2764:	
  2686  05CB  0825               	movf	___xxtofl@val+3,w
  2687  05CC  00AF               	movwf	___xxtofl@arg+3
  2688  05CD  0824               	movf	___xxtofl@val+2,w
  2689  05CE  00AE               	movwf	___xxtofl@arg+2
  2690  05CF  0823               	movf	___xxtofl@val+1,w
  2691  05D0  00AD               	movwf	___xxtofl@arg+1
  2692  05D1  0822               	movf	___xxtofl@val,w
  2693  05D2  00AC               	movwf	___xxtofl@arg
  2694  05D3                     l638:	
  2695  05D3  0825               	movf	___xxtofl@val+3,w
  2696  05D4  0424               	iorwf	___xxtofl@val+2,w
  2697  05D5  0423               	iorwf	___xxtofl@val+1,w
  2698  05D6  0422               	iorwf	___xxtofl@val,w
  2699  05D7  1D03               	skipz
  2700  05D8  2DDE               	goto	l2768
  2701  05D9  01A2               	clrf	?___xxtofl
  2702  05DA  01A3               	clrf	?___xxtofl+1
  2703  05DB  01A4               	clrf	?___xxtofl+2
  2704  05DC  01A5               	clrf	?___xxtofl+3
  2705  05DD  0008               	return
  2706  05DE                     l2768:	
  2707  05DE  3096               	movlw	150
  2708  05DF  00AB               	movwf	___xxtofl@exp
  2709  05E0                     l2772:	
  2710  05E0  30FE               	movlw	254
  2711  05E1  052F               	andwf	___xxtofl@arg+3,w
  2712  05E2  1903               	btfsc	3,2
  2713  05E3  2DF5               	goto	l2780
  2714  05E4  0AAB               	incf	___xxtofl@exp,f
  2715  05E5  36AF               	lsrf	___xxtofl@arg+3,f
  2716  05E6  0CAE               	rrf	___xxtofl@arg+2,f
  2717  05E7  0CAD               	rrf	___xxtofl@arg+1,f
  2718  05E8  0CAC               	rrf	___xxtofl@arg,f
  2719  05E9  2DE0               	goto	l2772
  2720  05EA                     l2774:	
  2721  05EA  3001               	movlw	1
  2722  05EB  0AAB               	incf	___xxtofl@exp,f
  2723  05EC  07AC               	addwf	___xxtofl@arg,f
  2724  05ED  3000               	movlw	0
  2725  05EE  3DAD               	addwfc	___xxtofl@arg+1,f
  2726  05EF  3DAE               	addwfc	___xxtofl@arg+2,f
  2727  05F0  3DAF               	addwfc	___xxtofl@arg+3,f
  2728  05F1  36AF               	lsrf	___xxtofl@arg+3,f
  2729  05F2  0CAE               	rrf	___xxtofl@arg+2,f
  2730  05F3  0CAD               	rrf	___xxtofl@arg+1,f
  2731  05F4  0CAC               	rrf	___xxtofl@arg,f
  2732  05F5                     l2780:	
  2733  05F5  30FF               	movlw	255
  2734  05F6  052F               	andwf	___xxtofl@arg+3,w
  2735  05F7  1903               	btfsc	3,2
  2736  05F8  2E03               	goto	l2784
  2737  05F9  2DEA               	goto	l2774
  2738  05FA                     l2786:	
  2739  05FA  3002               	movlw	2
  2740  05FB  022B               	subwf	___xxtofl@exp,w
  2741  05FC  1C03               	btfss	3,0
  2742  05FD  2E05               	goto	l651
  2743  05FE  03AB               	decf	___xxtofl@exp,f
  2744  05FF  35AC               	lslf	___xxtofl@arg,f
  2745  0600  0DAD               	rlf	___xxtofl@arg+1,f
  2746  0601  0DAE               	rlf	___xxtofl@arg+2,f
  2747  0602  0DAF               	rlf	___xxtofl@arg+3,f
  2748  0603                     l2784:	
  2749  0603  1FAE               	btfss	___xxtofl@arg+2,7
  2750  0604  2DFA               	goto	l2786
  2751  0605                     l651:	
  2752  0605  1C2B               	btfss	___xxtofl@exp,0
  2753  0606  13AE               	bcf	___xxtofl@arg+2,7
  2754  0607  36AB               	lsrf	___xxtofl@exp,f
  2755  0608  082B               	movf	___xxtofl@exp,w
  2756  0609  00A9               	movwf	??___xxtofl+3
  2757  060A  01A8               	clrf	??___xxtofl+2
  2758  060B  01A7               	clrf	??___xxtofl+1
  2759  060C  01A6               	clrf	??___xxtofl
  2760  060D  0826               	movf	??___xxtofl,w
  2761  060E  04AC               	iorwf	___xxtofl@arg,f
  2762  060F  0827               	movf	??___xxtofl+1,w
  2763  0610  04AD               	iorwf	___xxtofl@arg+1,f
  2764  0611  0828               	movf	??___xxtofl+2,w
  2765  0612  04AE               	iorwf	___xxtofl@arg+2,f
  2766  0613  0829               	movf	??___xxtofl+3,w
  2767  0614  04AF               	iorwf	___xxtofl@arg+3,f
  2768  0615  082A               	movf	___xxtofl@sign,w
  2769  0616  1D03               	btfss	3,2
  2770  0617  1FA5               	btfss	___xxtofl@val+3,7
  2771  0618  2E1A               	goto	l2798
  2772  0619  17AF               	bsf	___xxtofl@arg+3,7
  2773  061A                     l2798:	
  2774  061A  082F               	movf	___xxtofl@arg+3,w
  2775  061B  00A5               	movwf	?___xxtofl+3
  2776  061C  082E               	movf	___xxtofl@arg+2,w
  2777  061D  00A4               	movwf	?___xxtofl+2
  2778  061E  082D               	movf	___xxtofl@arg+1,w
  2779  061F  00A3               	movwf	?___xxtofl+1
  2780  0620  082C               	movf	___xxtofl@arg,w
  2781  0621  00A2               	movwf	?___xxtofl
  2782  0622  0008               	return
  2783  0623                     __end_of___xxtofl:	
  2784                           
  2785                           	psect	text6
  2786  0773                     __ptext6:	
  2787 ;; *************** function ___fltol *****************
  2788 ;; Defined at:
  2789 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  f1              4    2[BANK0 ] unsigned char 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  exp1            1   11[BANK0 ] unsigned char 
  2794 ;;  sign1           1   10[BANK0 ] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  4    2[BANK0 ] long 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0
  2799 ;; Tracked objects:
  2800 ;;		On entry : 1F/0
  2801 ;;		On exit  : 1F/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2804 ;;      Params:         0       4       0       0
  2805 ;;      Locals:         0       2       0       0
  2806 ;;      Temps:          0       4       0       0
  2807 ;;      Totals:         0      10       0       0
  2808 ;;Total ram usage:       10 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    2
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_calculate_pid
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function ___fltol
  2820  0773                     ___fltol:	
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2824  0773  0822               	movf	___fltol@f1,w
  2825  0774  00A6               	movwf	??___fltol
  2826  0775  0823               	movf	___fltol@f1+1,w
  2827  0776  00A7               	movwf	??___fltol+1
  2828  0777  0824               	movf	___fltol@f1+2,w
  2829  0778  00A8               	movwf	??___fltol+2
  2830  0779  0825               	movf	___fltol@f1+3,w
  2831  077A  00A9               	movwf	??___fltol+3
  2832  077B  1003               	clrc
  2833  077C  0D28               	rlf	??___fltol+2,w
  2834  077D  0D29               	rlf	??___fltol+3,w
  2835  077E  00AB               	movwf	___fltol@exp1
  2836  077F  082B               	movf	___fltol@exp1,w
  2837  0780  1D03               	btfss	3,2
  2838  0781  2F87               	goto	l2600
  2839  0782                     l2598:	
  2840  0782  01A2               	clrf	?___fltol
  2841  0783  01A3               	clrf	?___fltol+1
  2842  0784  01A4               	clrf	?___fltol+2
  2843  0785  01A5               	clrf	?___fltol+3
  2844  0786  0008               	return
  2845  0787                     l2600:	
  2846  0787  0822               	movf	___fltol@f1,w
  2847  0788  00A6               	movwf	??___fltol
  2848  0789  0823               	movf	___fltol@f1+1,w
  2849  078A  00A7               	movwf	??___fltol+1
  2850  078B  0824               	movf	___fltol@f1+2,w
  2851  078C  00A8               	movwf	??___fltol+2
  2852  078D  0825               	movf	___fltol@f1+3,w
  2853  078E  00A9               	movwf	??___fltol+3
  2854  078F  301F               	movlw	31
  2855  0790                     u3105:	
  2856  0790  36A9               	lsrf	??___fltol+3,f
  2857  0791  0CA8               	rrf	??___fltol+2,f
  2858  0792  0CA7               	rrf	??___fltol+1,f
  2859  0793  0CA6               	rrf	??___fltol,f
  2860  0794  0B89               	decfsz	9,f
  2861  0795  2F90               	goto	u3105
  2862  0796  0826               	movf	??___fltol,w
  2863  0797  00AA               	movwf	___fltol@sign1
  2864  0798  3096               	movlw	150
  2865  0799  17A4               	bsf	___fltol@f1+2,7
  2866  079A  01A5               	clrf	___fltol@f1+3
  2867  079B  02AB               	subwf	___fltol@exp1,f
  2868  079C  1FAB               	btfss	___fltol@exp1,7
  2869  079D  2FAA               	goto	l2618
  2870  079E  082B               	movf	___fltol@exp1,w
  2871  079F  3A80               	xorlw	128
  2872  07A0  3E97               	addlw	151
  2873  07A1  1C03               	btfss	3,0
  2874  07A2  2F82               	goto	l2598
  2875  07A3                     l2614:	
  2876  07A3  36A5               	lsrf	___fltol@f1+3,f
  2877  07A4  0CA4               	rrf	___fltol@f1+2,f
  2878  07A5  0CA3               	rrf	___fltol@f1+1,f
  2879  07A6  0CA2               	rrf	___fltol@f1,f
  2880  07A7  0FAB               	incfsz	___fltol@exp1,f
  2881  07A8  2FA3               	goto	l2614
  2882  07A9  2FB7               	goto	l2626
  2883  07AA                     l2618:	
  2884  07AA  3020               	movlw	32
  2885  07AB  022B               	subwf	___fltol@exp1,w
  2886  07AC  1803               	btfsc	3,0
  2887  07AD  2F82               	goto	l2598
  2888  07AE                     l2624:	
  2889  07AE  082B               	movf	___fltol@exp1,w
  2890  07AF  1903               	btfsc	3,2
  2891  07B0  2FB7               	goto	l2626
  2892  07B1  35A2               	lslf	___fltol@f1,f
  2893  07B2  0DA3               	rlf	___fltol@f1+1,f
  2894  07B3  0DA4               	rlf	___fltol@f1+2,f
  2895  07B4  0DA5               	rlf	___fltol@f1+3,f
  2896  07B5  03AB               	decf	___fltol@exp1,f
  2897  07B6  2FAE               	goto	l2624
  2898  07B7                     l2626:	
  2899  07B7  082A               	movf	___fltol@sign1,w
  2900  07B8  1903               	btfsc	3,2
  2901  07B9  0008               	return
  2902  07BA  09A2               	comf	___fltol@f1,f
  2903  07BB  09A3               	comf	___fltol@f1+1,f
  2904  07BC  09A4               	comf	___fltol@f1+2,f
  2905  07BD  09A5               	comf	___fltol@f1+3,f
  2906  07BE  0AA2               	incf	___fltol@f1,f
  2907  07BF  1903               	skipnz
  2908  07C0  0AA3               	incf	___fltol@f1+1,f
  2909  07C1  1903               	skipnz
  2910  07C2  0AA4               	incf	___fltol@f1+2,f
  2911  07C3  1903               	skipnz
  2912  07C4  0AA5               	incf	___fltol@f1+3,f
  2913  07C5  0008               	return
  2914  07C6                     __end_of___fltol:	
  2915                           
  2916                           	psect	text8
  2917  0623                     __ptext8:	
  2918 ;; *************** function ___fladd *****************
  2919 ;; Defined at:
  2920 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  b               4   35[BANK0 ] long 
  2923 ;;  a               4   39[BANK0 ] long 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  grs             1   54[BANK0 ] unsigned char 
  2926 ;;  bexp            1   53[BANK0 ] unsigned char 
  2927 ;;  aexp            1   52[BANK0 ] unsigned char 
  2928 ;;  signs           1   51[BANK0 ] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  4   35[BANK0 ] unsigned char 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0
  2933 ;; Tracked objects:
  2934 ;;		On entry : 1F/0
  2935 ;;		On exit  : 1F/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2938 ;;      Params:         0       8       0       0
  2939 ;;      Locals:         0       4       0       0
  2940 ;;      Temps:          0       8       0       0
  2941 ;;      Totals:         0      20       0       0
  2942 ;;Total ram usage:       20 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    2
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_calculate_pid
  2949 ;;		___flsub
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function ___fladd
  2955  0623                     ___fladd:	
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  2959  0623  0846               	movf	___fladd@b+3,w
  2960  0624  00D3               	movwf	___fladd@signs
  2961  0625  3080               	movlw	128
  2962  0626  05D3               	andwf	___fladd@signs,f
  2963  0627  3546               	lslf	___fladd@b+3,w
  2964  0628  00D5               	movwf	___fladd@bexp
  2965  0629  1BC5               	btfsc	___fladd@b+2,7
  2966  062A  1455               	bsf	___fladd@bexp,0
  2967  062B  0855               	movf	___fladd@bexp,w
  2968  062C  1903               	btfsc	3,2
  2969  062D  2E36               	goto	l516
  2970  062E  0F55               	incfsz	___fladd@bexp,w
  2971  062F  2E34               	goto	l517
  2972  0630  01C3               	clrf	___fladd@b
  2973  0631  01C4               	clrf	___fladd@b+1
  2974  0632  01C5               	clrf	___fladd@b+2
  2975  0633  01C6               	clrf	___fladd@b+3
  2976  0634                     l517:	
  2977  0634  17C5               	bsf	___fladd@b+2,7
  2978  0635  2E39               	goto	L1
  2979  0636                     l516:	
  2980  0636  01C3               	clrf	___fladd@b
  2981  0637  01C4               	clrf	___fladd@b+1
  2982  0638  01C5               	clrf	___fladd@b+2
  2983  0639                     L1:	
  2984  0639  01C6               	clrf	___fladd@b+3
  2985  063A  084A               	movf	___fladd@a+3,w
  2986  063B  00D4               	movwf	___fladd@aexp
  2987  063C  3080               	movlw	128
  2988  063D  05D4               	andwf	___fladd@aexp,f
  2989  063E  0854               	movf	___fladd@aexp,w
  2990  063F  0653               	xorwf	___fladd@signs,w
  2991  0640  1D03               	btfss	3,2
  2992  0641  1753               	bsf	___fladd@signs,6
  2993  0642  354A               	lslf	___fladd@a+3,w
  2994  0643  00D4               	movwf	___fladd@aexp
  2995  0644  1BC9               	btfsc	___fladd@a+2,7
  2996  0645  1454               	bsf	___fladd@aexp,0
  2997  0646  0854               	movf	___fladd@aexp,w
  2998  0647  1903               	btfsc	3,2
  2999  0648  2E51               	goto	l521
  3000  0649  0F54               	incfsz	___fladd@aexp,w
  3001  064A  2E4F               	goto	l522
  3002  064B  01C7               	clrf	___fladd@a
  3003  064C  01C8               	clrf	___fladd@a+1
  3004  064D  01C9               	clrf	___fladd@a+2
  3005  064E  01CA               	clrf	___fladd@a+3
  3006  064F                     l522:	
  3007  064F  17C9               	bsf	___fladd@a+2,7
  3008  0650  2E54               	goto	L2
  3009  0651                     l521:	
  3010  0651  01C7               	clrf	___fladd@a
  3011  0652  01C8               	clrf	___fladd@a+1
  3012  0653  01C9               	clrf	___fladd@a+2
  3013  0654                     L2:	
  3014  0654  01CA               	clrf	___fladd@a+3
  3015  0655  0855               	movf	___fladd@bexp,w
  3016  0656  0254               	subwf	___fladd@aexp,w
  3017  0657  1803               	skipnc
  3018  0658  2E7B               	goto	l2406
  3019  0659  1F53               	btfss	___fladd@signs,6
  3020  065A  2E5D               	goto	l2376
  3021  065B  3080               	movlw	128
  3022  065C  06D3               	xorwf	___fladd@signs,f
  3023  065D                     l2376:	
  3024  065D  0855               	movf	___fladd@bexp,w
  3025  065E  00D6               	movwf	___fladd@grs
  3026  065F  0854               	movf	___fladd@aexp,w
  3027  0660  00D5               	movwf	___fladd@bexp
  3028  0661  0856               	movf	___fladd@grs,w
  3029  0662  00D4               	movwf	___fladd@aexp
  3030  0663  0843               	movf	___fladd@b,w
  3031  0664  00D6               	movwf	___fladd@grs
  3032  0665  0847               	movf	___fladd@a,w
  3033  0666  00C3               	movwf	___fladd@b
  3034  0667  0856               	movf	___fladd@grs,w
  3035  0668  00C7               	movwf	___fladd@a
  3036  0669  0844               	movf	___fladd@b+1,w
  3037  066A  00D6               	movwf	___fladd@grs
  3038  066B  0848               	movf	___fladd@a+1,w
  3039  066C  00C4               	movwf	___fladd@b+1
  3040  066D  0856               	movf	___fladd@grs,w
  3041  066E  00C8               	movwf	___fladd@a+1
  3042  066F  0845               	movf	___fladd@b+2,w
  3043  0670  00D6               	movwf	___fladd@grs
  3044  0671  0849               	movf	___fladd@a+2,w
  3045  0672  00C5               	movwf	___fladd@b+2
  3046  0673  0856               	movf	___fladd@grs,w
  3047  0674  00C9               	movwf	___fladd@a+2
  3048  0675  0846               	movf	___fladd@b+3,w
  3049  0676  00D6               	movwf	___fladd@grs
  3050  0677  084A               	movf	___fladd@a+3,w
  3051  0678  00C6               	movwf	___fladd@b+3
  3052  0679  0856               	movf	___fladd@grs,w
  3053  067A  00CA               	movwf	___fladd@a+3
  3054  067B                     l2406:	
  3055  067B  01D6               	clrf	___fladd@grs
  3056  067C  0854               	movf	___fladd@aexp,w
  3057  067D  00CB               	movwf	??___fladd
  3058  067E  01CC               	clrf	??___fladd+1
  3059  067F  084C               	movf	??___fladd+1,w
  3060  0680  00CE               	movwf	??___fladd+3
  3061  0681  0855               	movf	___fladd@bexp,w
  3062  0682  024B               	subwf	??___fladd,w
  3063  0683  00CD               	movwf	??___fladd+2
  3064  0684  1C03               	skipc
  3065  0685  03CE               	decf	??___fladd+3,f
  3066  0686  084E               	movf	??___fladd+3,w
  3067  0687  3A80               	xorlw	128
  3068  0688  00CF               	movwf	??___fladd+4
  3069  0689  3080               	movlw	128
  3070  068A  024F               	subwf	??___fladd+4,w
  3071  068B  1D03               	skipz
  3072  068C  2E8F               	goto	u2635
  3073  068D  301A               	movlw	26
  3074  068E  024D               	subwf	??___fladd+2,w
  3075  068F                     u2635:	
  3076  068F  1C03               	skipc
  3077  0690  2EB1               	goto	l2420
  3078  0691  0020               	movlb	0	; select bank0
  3079  0692  0846               	movf	___fladd@b+3,w
  3080  0693  0445               	iorwf	___fladd@b+2,w
  3081  0694  0444               	iorwf	___fladd@b+1,w
  3082  0695  0443               	iorwf	___fladd@b,w
  3083  0696  1903               	btfsc	3,2
  3084  0697  2E9A               	goto	u2640
  3085  0698  3001               	movlw	1
  3086  0699  2E9B               	goto	u2650
  3087  069A                     u2640:	
  3088  069A  3000               	movlw	0
  3089  069B                     u2650:	
  3090  069B  00D6               	movwf	___fladd@grs
  3091  069C  01C3               	clrf	___fladd@b
  3092  069D  01C4               	clrf	___fladd@b+1
  3093  069E  01C5               	clrf	___fladd@b+2
  3094  069F  01C6               	clrf	___fladd@b+3
  3095  06A0  0854               	movf	___fladd@aexp,w
  3096  06A1  00D5               	movwf	___fladd@bexp
  3097  06A2  2EB6               	goto	l527
  3098  06A3                     l529:	
  3099  06A3  1C56               	btfss	___fladd@grs,0
  3100  06A4  2EA9               	goto	l530
  3101  06A5  3656               	lsrf	___fladd@grs,w
  3102  06A6  3801               	iorlw	1
  3103  06A7  00D6               	movwf	___fladd@grs
  3104  06A8  2EAA               	goto	l531
  3105  06A9                     l530:	
  3106  06A9  36D6               	lsrf	___fladd@grs,f
  3107  06AA                     l531:	
  3108  06AA  1843               	btfsc	___fladd@b,0
  3109  06AB  17D6               	bsf	___fladd@grs,7
  3110  06AC  37C6               	asrf	___fladd@b+3,f
  3111  06AD  0CC5               	rrf	___fladd@b+2,f
  3112  06AE  0CC4               	rrf	___fladd@b+1,f
  3113  06AF  0CC3               	rrf	___fladd@b,f
  3114  06B0  0AD5               	incf	___fladd@bexp,f
  3115  06B1                     l2420:	
  3116  06B1  0020               	movlb	0	; select bank0
  3117  06B2  0854               	movf	___fladd@aexp,w
  3118  06B3  0255               	subwf	___fladd@bexp,w
  3119  06B4  1C03               	skipc
  3120  06B5  2EA3               	goto	l529
  3121  06B6                     l527:	
  3122  06B6  1B53               	btfsc	___fladd@signs,6
  3123  06B7  2ED9               	goto	l2438
  3124  06B8  0855               	movf	___fladd@bexp,w
  3125  06B9  1D03               	btfss	3,2
  3126  06BA  2EC0               	goto	l2426
  3127  06BB  01C3               	clrf	?___fladd
  3128  06BC  01C4               	clrf	?___fladd+1
  3129  06BD  01C5               	clrf	?___fladd+2
  3130  06BE  01C6               	clrf	?___fladd+3
  3131  06BF  0008               	return
  3132  06C0                     l2426:	
  3133  06C0  0847               	movf	___fladd@a,w
  3134  06C1  07C3               	addwf	___fladd@b,f
  3135  06C2  0848               	movf	___fladd@a+1,w
  3136  06C3  3DC4               	addwfc	___fladd@b+1,f
  3137  06C4  0849               	movf	___fladd@a+2,w
  3138  06C5  3DC5               	addwfc	___fladd@b+2,f
  3139  06C6  084A               	movf	___fladd@a+3,w
  3140  06C7  3DC6               	addwfc	___fladd@b+3,f
  3141  06C8  1C46               	btfss	___fladd@b+3,0
  3142  06C9  2F41               	goto	l2468
  3143  06CA  1C56               	btfss	___fladd@grs,0
  3144  06CB  2ED0               	goto	l538
  3145  06CC  3656               	lsrf	___fladd@grs,w
  3146  06CD  3801               	iorlw	1
  3147  06CE  00D6               	movwf	___fladd@grs
  3148  06CF  2ED1               	goto	l539
  3149  06D0                     l538:	
  3150  06D0  36D6               	lsrf	___fladd@grs,f
  3151  06D1                     l539:	
  3152  06D1  1843               	btfsc	___fladd@b,0
  3153  06D2  17D6               	bsf	___fladd@grs,7
  3154  06D3  37C6               	asrf	___fladd@b+3,f
  3155  06D4  0CC5               	rrf	___fladd@b+2,f
  3156  06D5  0CC4               	rrf	___fladd@b+1,f
  3157  06D6  0CC3               	rrf	___fladd@b,f
  3158  06D7  0AD5               	incf	___fladd@bexp,f
  3159  06D8  2F41               	goto	l2468
  3160  06D9                     l2438:	
  3161  06D9  0846               	movf	___fladd@b+3,w
  3162  06DA  3A80               	xorlw	128
  3163  06DB  00CB               	movwf	??___fladd
  3164  06DC  084A               	movf	___fladd@a+3,w
  3165  06DD  3A80               	xorlw	128
  3166  06DE  024B               	subwf	??___fladd,w
  3167  06DF  1D03               	skipz
  3168  06E0  2EEB               	goto	u2743
  3169  06E1  0849               	movf	___fladd@a+2,w
  3170  06E2  0245               	subwf	___fladd@b+2,w
  3171  06E3  1D03               	skipz
  3172  06E4  2EEB               	goto	u2743
  3173  06E5  0848               	movf	___fladd@a+1,w
  3174  06E6  0244               	subwf	___fladd@b+1,w
  3175  06E7  1D03               	skipz
  3176  06E8  2EEB               	goto	u2743
  3177  06E9  0847               	movf	___fladd@a,w
  3178  06EA  0243               	subwf	___fladd@b,w
  3179  06EB                     u2743:	
  3180  06EB  1803               	skipnc
  3181  06EC  2F1A               	goto	l2448
  3182  06ED  30FF               	movlw	255
  3183  06EE  00CB               	movwf	??___fladd
  3184  06EF  00CC               	movwf	??___fladd+1
  3185  06F0  00CD               	movwf	??___fladd+2
  3186  06F1  00CE               	movwf	??___fladd+3
  3187  06F2  0843               	movf	___fladd@b,w
  3188  06F3  0247               	subwf	___fladd@a,w
  3189  06F4  00CF               	movwf	??___fladd+4
  3190  06F5  0844               	movf	___fladd@b+1,w
  3191  06F6  3B48               	subwfb	___fladd@a+1,w
  3192  06F7  00D0               	movwf	??___fladd+5
  3193  06F8  0845               	movf	___fladd@b+2,w
  3194  06F9  3B49               	subwfb	___fladd@a+2,w
  3195  06FA  00D1               	movwf	??___fladd+6
  3196  06FB  0846               	movf	___fladd@b+3,w
  3197  06FC  3B4A               	subwfb	___fladd@a+3,w
  3198  06FD  00D2               	movwf	??___fladd+7
  3199  06FE  084F               	movf	??___fladd+4,w
  3200  06FF  07CB               	addwf	??___fladd,f
  3201  0700  0850               	movf	??___fladd+5,w
  3202  0701  3DCC               	addwfc	??___fladd+1,f
  3203  0702  0851               	movf	??___fladd+6,w
  3204  0703  3DCD               	addwfc	??___fladd+2,f
  3205  0704  0852               	movf	??___fladd+7,w
  3206  0705  3DCE               	addwfc	??___fladd+3,f
  3207  0706  084E               	movf	??___fladd+3,w
  3208  0707  00C6               	movwf	___fladd@b+3
  3209  0708  084D               	movf	??___fladd+2,w
  3210  0709  00C5               	movwf	___fladd@b+2
  3211  070A  084C               	movf	??___fladd+1,w
  3212  070B  00C4               	movwf	___fladd@b+1
  3213  070C  084B               	movf	??___fladd,w
  3214  070D  00C3               	movwf	___fladd@b
  3215  070E  3080               	movlw	128
  3216  070F  06D3               	xorwf	___fladd@signs,f
  3217  0710  09D6               	comf	___fladd@grs,f
  3218  0711  0FD6               	incfsz	___fladd@grs,f
  3219  0712  2F22               	goto	l544
  3220  0713  3001               	movlw	1
  3221  0714  07C3               	addwf	___fladd@b,f
  3222  0715  3000               	movlw	0
  3223  0716  3DC4               	addwfc	___fladd@b+1,f
  3224  0717  3DC5               	addwfc	___fladd@b+2,f
  3225  0718  3DC6               	addwfc	___fladd@b+3,f
  3226  0719  2F22               	goto	l544
  3227  071A                     l2448:	
  3228  071A  0847               	movf	___fladd@a,w
  3229  071B  02C3               	subwf	___fladd@b,f
  3230  071C  0848               	movf	___fladd@a+1,w
  3231  071D  3BC4               	subwfb	___fladd@b+1,f
  3232  071E  0849               	movf	___fladd@a+2,w
  3233  071F  3BC5               	subwfb	___fladd@b+2,f
  3234  0720  084A               	movf	___fladd@a+3,w
  3235  0721  3BC6               	subwfb	___fladd@b+3,f
  3236  0722                     l544:	
  3237  0722  0846               	movf	___fladd@b+3,w
  3238  0723  0445               	iorwf	___fladd@b+2,w
  3239  0724  0444               	iorwf	___fladd@b+1,w
  3240  0725  0443               	iorwf	___fladd@b,w
  3241  0726  1D03               	skipz
  3242  0727  2F3F               	goto	l2466
  3243  0728  0856               	movf	___fladd@grs,w
  3244  0729  1D03               	btfss	3,2
  3245  072A  2F3F               	goto	l2466
  3246  072B  01C3               	clrf	?___fladd
  3247  072C  01C4               	clrf	?___fladd+1
  3248  072D  01C5               	clrf	?___fladd+2
  3249  072E  01C6               	clrf	?___fladd+3
  3250  072F  0008               	return
  3251  0730                     l2454:	
  3252  0730  35C3               	lslf	___fladd@b,f
  3253  0731  0DC4               	rlf	___fladd@b+1,f
  3254  0732  0DC5               	rlf	___fladd@b+2,f
  3255  0733  0DC6               	rlf	___fladd@b+3,f
  3256  0734  1BD6               	btfsc	___fladd@grs,7
  3257  0735  1443               	bsf	___fladd@b,0
  3258  0736  1C56               	btfss	___fladd@grs,0
  3259  0737  2F3B               	goto	l549
  3260  0738  1403               	setc
  3261  0739  0DD6               	rlf	___fladd@grs,f
  3262  073A  2F3C               	goto	l2462
  3263  073B                     l549:	
  3264  073B  35D6               	lslf	___fladd@grs,f
  3265  073C                     l2462:	
  3266  073C  0855               	movf	___fladd@bexp,w
  3267  073D  1D03               	btfss	3,2
  3268  073E  03D5               	decf	___fladd@bexp,f
  3269  073F                     l2466:	
  3270  073F  1FC5               	btfss	___fladd@b+2,7
  3271  0740  2F30               	goto	l2454
  3272  0741                     l2468:	
  3273  0741  01D4               	clrf	___fladd@aexp
  3274  0742  1FD6               	btfss	___fladd@grs,7
  3275  0743  2F4C               	goto	l2478
  3276  0744  0856               	movf	___fladd@grs,w
  3277  0745  397F               	andlw	127
  3278  0746  1903               	btfsc	3,2
  3279  0747  1843               	btfsc	___fladd@b,0
  3280  0748  2F4A               	goto	l2474
  3281  0749  2F4C               	goto	l2478
  3282  074A                     l2474:	
  3283  074A  01D4               	clrf	___fladd@aexp
  3284  074B  0AD4               	incf	___fladd@aexp,f
  3285  074C                     l2478:	
  3286  074C  0854               	movf	___fladd@aexp,w
  3287  074D  1903               	btfsc	3,2
  3288  074E  2F5D               	goto	l2490
  3289  074F  3001               	movlw	1
  3290  0750  07C3               	addwf	___fladd@b,f
  3291  0751  3000               	movlw	0
  3292  0752  3DC4               	addwfc	___fladd@b+1,f
  3293  0753  3DC5               	addwfc	___fladd@b+2,f
  3294  0754  3DC6               	addwfc	___fladd@b+3,f
  3295  0755  1C46               	btfss	___fladd@b+3,0
  3296  0756  2F5D               	goto	l2490
  3297  0757  37C6               	asrf	___fladd@b+3,f
  3298  0758  0CC5               	rrf	___fladd@b+2,f
  3299  0759  0CC4               	rrf	___fladd@b+1,f
  3300  075A  0CC3               	rrf	___fladd@b,f
  3301  075B  0F55               	incfsz	___fladd@bexp,w
  3302  075C  0AD5               	incf	___fladd@bexp,f
  3303  075D                     l2490:	
  3304  075D  0A55               	incf	___fladd@bexp,w
  3305  075E  1D03               	btfss	3,2
  3306  075F  0855               	movf	___fladd@bexp,w
  3307  0760  1D03               	btfss	3,2
  3308  0761  2F69               	goto	l2498
  3309  0762  01C3               	clrf	___fladd@b
  3310  0763  01C4               	clrf	___fladd@b+1
  3311  0764  01C5               	clrf	___fladd@b+2
  3312  0765  01C6               	clrf	___fladd@b+3
  3313  0766  0855               	movf	___fladd@bexp,w
  3314  0767  1903               	btfsc	3,2
  3315  0768  01D3               	clrf	___fladd@signs
  3316  0769                     l2498:	
  3317  0769  1C55               	btfss	___fladd@bexp,0
  3318  076A  2F6D               	goto	l564
  3319  076B  17C5               	bsf	___fladd@b+2,7
  3320  076C  2F6E               	goto	l2502
  3321  076D                     l564:	
  3322  076D  13C5               	bcf	___fladd@b+2,7
  3323  076E                     l2502:	
  3324  076E  3655               	lsrf	___fladd@bexp,w
  3325  076F  00C6               	movwf	___fladd@b+3
  3326  0770  1BD3               	btfsc	___fladd@signs,7
  3327  0771  17C6               	bsf	___fladd@b+3,7
  3328  0772  0008               	return
  3329  0773                     __end_of___fladd:	
  3330                           
  3331                           	psect	intentry
  3332  0004                     __pintentry:	
  3333 ;; *************** function _isr *****************
  3334 ;; Defined at:
  3335 ;;		line 78 in file "main.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 1F/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3349 ;;      Params:         0       0       0       0
  3350 ;;      Locals:         0       0       0       0
  3351 ;;      Temps:          0       2       0       0
  3352 ;;      Totals:         0       2       0       0
  3353 ;;Total ram usage:        2 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    1
  3356 ;; This function calls:
  3357 ;;		___lwdiv
  3358 ;;		i1___wmul
  3359 ;; This function is called by:
  3360 ;;		Interrupt level 1
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364  0004                     _isr:	
  3365                           
  3366                           ;incstack = 0
  3367  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3368                           
  3369                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3370  0005  3180               	pagesel	$
  3371                           
  3372                           ;main.c: 80: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  3373  0006  1C0B               	btfss	11,0	;volatile
  3374  0007  2821               	goto	i1l2904
  3375  0008  0027               	movlb	7	; select bank7
  3376  0009  1E13               	btfss	19,4	;volatile
  3377  000A  2821               	goto	i1l2904
  3378                           
  3379                           ;main.c: 81: {;main.c: 82: INTCONbits.IOCIE = 0;
  3380  000B  118B               	bcf	11,3	;volatile
  3381                           
  3382                           ;main.c: 83: counter++;
  3383  000C  0021               	movlb	1	; select bank1
  3384  000D  0AD5               	incf	_counter^(0+128),f
  3385  000E  1903               	skipnz
  3386  000F  0AD6               	incf	(_counter+1)^(0+128),f
  3387                           
  3388                           ;main.c: 84: if (LATAbits.LATA0 == 0) {
  3389  0010  0022               	movlb	2	; select bank2
  3390  0011  180C               	btfsc	12,0	;volatile
  3391  0012  2817               	goto	i1l2898
  3392                           
  3393                           ;main.c: 85: I2C_buffer.data.DISTANCE--;
  3394  0013  30FF               	movlw	255
  3395  0014  0021               	movlb	1	; select bank1
  3396  0015  07AF               	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  3397  0016  281B               	goto	L5
  3398  0017                     i1l2898:	
  3399                           ;main.c: 86: }
  3400                           
  3401                           
  3402                           ;main.c: 87: else;main.c: 88: {;main.c: 89: I2C_buffer.data.DISTANCE++;
  3403  0017  3001               	movlw	1
  3404  0018  0021               	movlb	1	; select bank1
  3405  0019  07AF               	addwf	(_I2C_buffer^(0+128)+15),f	;volatile
  3406  001A  3000               	movlw	0
  3407  001B                     L5:	
  3408  001B  3DB0               	addwfc	((_I2C_buffer+1)^(0+128)+15),f	;volatile
  3409  001C  3DB1               	addwfc	((_I2C_buffer+2)^(0+128)+15),f	;volatile
  3410  001D  3DB2               	addwfc	((_I2C_buffer+3)^(0+128)+15),f	;volatile
  3411                           
  3412                           ;main.c: 90: };main.c: 91: IOCAFbits.IOCAF4 = 0;
  3413  001E  0027               	movlb	7	; select bank7
  3414  001F  1213               	bcf	19,4	;volatile
  3415                           
  3416                           ;main.c: 92: INTCONbits.IOCIE = 1;
  3417  0020  158B               	bsf	11,3	;volatile
  3418  0021                     i1l2904:	
  3419                           
  3420                           ;main.c: 93: };main.c: 95: if (PIR1bits.TMR1IF == 1)
  3421  0021  0020               	movlb	0	; select bank0
  3422  0022  1C11               	btfss	17,0	;volatile
  3423  0023  285C               	goto	i1l2922
  3424                           
  3425                           ;main.c: 96: {;main.c: 97: INTCONbits.IOCIE = 0;
  3426  0024  118B               	bcf	11,3	;volatile
  3427                           
  3428                           ;main.c: 98: T1CONbits.TMR1ON = 0;
  3429  0025  1018               	bcf	24,0	;volatile
  3430                           
  3431                           ;main.c: 99: I2C_buffer.data.RPM = (counter * 300) / I2C_buffer.data.GEAR_RATIO;
  3432  0026  0021               	movlb	1	; select bank1
  3433  0027  0828               	movf	((_I2C_buffer+1)^(0+128)+7),w	;volatile
  3434  0028  00F7               	movwf	___lwdiv@divisor+1
  3435  0029  0827               	movf	(_I2C_buffer^(0+128)+7),w	;volatile
  3436  002A  00F6               	movwf	___lwdiv@divisor
  3437  002B  0856               	movf	(_counter+1)^(0+128),w
  3438  002C  00F1               	movwf	i1___wmul@multiplier+1
  3439  002D  0855               	movf	_counter^(0+128),w
  3440  002E  00F0               	movwf	i1___wmul@multiplier
  3441  002F  302C               	movlw	44
  3442  0030  00F2               	movwf	i1___wmul@multiplicand
  3443  0031  3001               	movlw	1
  3444  0032  00F3               	movwf	i1___wmul@multiplicand+1
  3445  0033  3187  27EB  3180   	fcall	i1___wmul
  3446  0036  0871               	movf	?i1___wmul+1,w
  3447  0037  00F9               	movwf	___lwdiv@dividend+1
  3448  0038  0870               	movf	?i1___wmul,w
  3449  0039  00F8               	movwf	___lwdiv@dividend
  3450  003A  3187  27C6  3180   	fcall	___lwdiv
  3451  003D  0877               	movf	?___lwdiv+1,w
  3452  003E  00AC               	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  3453  003F  0876               	movf	?___lwdiv,w
  3454  0040  00AB               	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  3455                           
  3456                           ;main.c: 100: counter = 0;
  3457  0041  01D5               	clrf	_counter^(0+128)
  3458  0042  01D6               	clrf	(_counter+1)^(0+128)
  3459                           
  3460                           ;main.c: 101: if (LATAbits.LATA0 == 0) {
  3461  0043  0022               	movlb	2	; select bank2
  3462  0044  180C               	btfsc	12,0	;volatile
  3463  0045  2858               	goto	i1l2916
  3464                           
  3465                           ;main.c: 102: I2C_buffer.data.RPM = I2C_buffer.data.RPM *-1;
  3466  0046  0021               	movlb	1	; select bank1
  3467  0047  092B               	comf	(_I2C_buffer^(0+128)+11),w	;volatile
  3468  0048  0020               	movlb	0	; select bank0
  3469  0049  00A0               	movwf	??_isr
  3470  004A  0021               	movlb	1	; select bank1
  3471  004B  092C               	comf	((_I2C_buffer+1)^(0+128)+11),w	;volatile
  3472  004C  0020               	movlb	0	; select bank0
  3473  004D  00A1               	movwf	??_isr+1
  3474  004E  0AA0               	incf	??_isr,f
  3475  004F  1903               	skipnz
  3476  0050  0AA1               	incf	??_isr+1,f
  3477  0051  0820               	movf	??_isr,w
  3478  0052  0021               	movlb	1	; select bank1
  3479  0053  00AB               	movwf	(_I2C_buffer^(0+128)+11)	;volatile
  3480  0054  0020               	movlb	0	; select bank0
  3481  0055  0821               	movf	??_isr+1,w
  3482  0056  0021               	movlb	1	; select bank1
  3483  0057  00AC               	movwf	((_I2C_buffer+1)^(0+128)+11)	;volatile
  3484  0058                     i1l2916:	
  3485                           
  3486                           ;main.c: 103: };main.c: 104: INTCONbits.IOCIE = 1;
  3487  0058  158B               	bsf	11,3	;volatile
  3488                           
  3489                           ;main.c: 105: PIR1bits.TMR1IF = 0;
  3490  0059  0020               	movlb	0	; select bank0
  3491  005A  1011               	bcf	17,0	;volatile
  3492                           
  3493                           ;main.c: 106: T1CONbits.TMR1ON = 1;
  3494  005B  1418               	bsf	24,0	;volatile
  3495  005C                     i1l2922:	
  3496                           
  3497                           ;main.c: 107: };main.c: 109: static unsigned char junk = 0;;main.c: 111: if (PIR1bits.SS
      +                          P1IF)
  3498  005C  1D91               	btfss	17,3	;volatile
  3499  005D  28B3               	goto	i1l2982
  3500                           
  3501                           ;main.c: 112: {;main.c: 113: INTCONbits.IOCIE = 0;
  3502  005E  118B               	bcf	11,3	;volatile
  3503                           
  3504                           ;main.c: 114: PIE1bits.TMR1IE = 0;
  3505  005F  0021               	movlb	1	; select bank1
  3506  0060  1011               	bcf	17,0	;volatile
  3507                           
  3508                           ;main.c: 115: if (SSP1STATbits.R_nW)
  3509  0061  0024               	movlb	4	; select bank4
  3510  0062  1D14               	btfss	20,2	;volatile
  3511  0063  2880               	goto	i1l2942
  3512                           
  3513                           ;main.c: 116: {;main.c: 117: if (!SSP1STATbits.D_nA)
  3514  0064  1A94               	btfsc	20,5	;volatile
  3515  0065  2872               	goto	i1l2934
  3516                           
  3517                           ;main.c: 118: {;main.c: 119: SSP1BUF = I2C_buffer.byte[index_i2c++];
  3518  0066  0020               	movlb	0	; select bank0
  3519  0067  086E               	movf	_index_i2c,w
  3520  0068  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  3521  0069  0086               	movwf	6
  3522  006A  0187               	clrf	7
  3523  006B  0801               	movf	1,w
  3524  006C  0024               	movlb	4	; select bank4
  3525  006D  0091               	movwf	17	;volatile
  3526  006E  0020               	movlb	0	; select bank0
  3527  006F  0AEE               	incf	_index_i2c,f
  3528                           
  3529                           ;main.c: 120: SSP1CON1bits.CKP = 1;
  3530  0070  0024               	movlb	4	; select bank4
  3531  0071  1615               	bsf	21,4	;volatile
  3532  0072                     i1l2934:	
  3533                           
  3534                           ;main.c: 121: };main.c: 122: if (SSP1STATbits.D_nA)
  3535  0072  1E94               	btfss	20,5	;volatile
  3536  0073  2880               	goto	i1l2942
  3537                           
  3538                           ;main.c: 123: {;main.c: 124: SSP1BUF = I2C_buffer.byte[index_i2c++];
  3539  0074  0020               	movlb	0	; select bank0
  3540  0075  086E               	movf	_index_i2c,w
  3541  0076  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  3542  0077  0086               	movwf	6
  3543  0078  0187               	clrf	7
  3544  0079  0801               	movf	1,w
  3545  007A  0024               	movlb	4	; select bank4
  3546  007B  0091               	movwf	17	;volatile
  3547  007C  0020               	movlb	0	; select bank0
  3548  007D  0AEE               	incf	_index_i2c,f
  3549                           
  3550                           ;main.c: 125: SSP1CON1bits.CKP = 1;
  3551  007E  0024               	movlb	4	; select bank4
  3552  007F  1615               	bsf	21,4	;volatile
  3553  0080                     i1l2942:	
  3554                           
  3555                           ;main.c: 126: };main.c: 127: };main.c: 128: if (!SSP1STATbits.R_nW)
  3556  0080  1914               	btfsc	20,2	;volatile
  3557  0081  28AE               	goto	i1l2976
  3558                           
  3559                           ;main.c: 129: {;main.c: 130: if (!SSP1STATbits.D_nA)
  3560  0082  1A94               	btfsc	20,5	;volatile
  3561  0083  288A               	goto	i1l2952
  3562                           
  3563                           ;main.c: 131: {;main.c: 132: first_i2c = 1;
  3564  0084  0021               	movlb	1	; select bank1
  3565  0085  01DC               	clrf	_first_i2c^(0+128)
  3566  0086  0ADC               	incf	_first_i2c^(0+128),f
  3567                           
  3568                           ;main.c: 133: junk = SSP1BUF;
  3569  0087  0024               	movlb	4	; select bank4
  3570  0088  0811               	movf	17,w	;volatile
  3571                           
  3572                           ;main.c: 134: SSP1CON1bits.CKP = 1;
  3573  0089  1615               	bsf	21,4	;volatile
  3574  008A                     i1l2952:	
  3575                           
  3576                           ;main.c: 135: };main.c: 136: if (SSP1STATbits.D_nA)
  3577  008A  1E94               	btfss	20,5	;volatile
  3578  008B  28AE               	goto	i1l2976
  3579                           
  3580                           ;main.c: 137: {;main.c: 138: if (first_i2c) {
  3581  008C  0021               	movlb	1	; select bank1
  3582  008D  085C               	movf	_first_i2c^(0+128),w
  3583  008E  1903               	btfsc	3,2
  3584  008F  2897               	goto	i1l2960
  3585                           
  3586                           ;main.c: 139: index_i2c = SSP1BUF;
  3587  0090  0024               	movlb	4	; select bank4
  3588  0091  0811               	movf	17,w	;volatile
  3589  0092  0020               	movlb	0	; select bank0
  3590  0093  00EE               	movwf	_index_i2c
  3591                           
  3592                           ;main.c: 140: first_i2c = 0;
  3593  0094  0021               	movlb	1	; select bank1
  3594  0095  01DC               	clrf	_first_i2c^(0+128)
  3595                           
  3596                           ;main.c: 141: }
  3597  0096  28A8               	goto	i1l2968
  3598  0097                     i1l2960:	
  3599                           
  3600                           ;main.c: 143: else {;main.c: 144: if (index_i2c < RX_ELMNTS)
  3601  0097  302B               	movlw	43
  3602  0098  0020               	movlb	0	; select bank0
  3603  0099  026E               	subwf	_index_i2c,w
  3604  009A  1803               	skipnc
  3605  009B  28A6               	goto	i1l2966
  3606                           
  3607                           ;main.c: 145: {;main.c: 146: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  3608  009C  086E               	movf	_index_i2c,w
  3609  009D  3EA0               	addlw	(low (_I2C_buffer| 0))& (0+255)
  3610  009E  0086               	movwf	6
  3611  009F  0187               	clrf	7
  3612  00A0  0024               	movlb	4	; select bank4
  3613  00A1  0811               	movf	17,w	;volatile
  3614  00A2  0081               	movwf	1
  3615  00A3  0020               	movlb	0	; select bank0
  3616  00A4  0AEE               	incf	_index_i2c,f
  3617                           
  3618                           ;main.c: 147: }
  3619  00A5  28A8               	goto	i1l2968
  3620  00A6                     i1l2966:	
  3621                           
  3622                           ;main.c: 148: else {;main.c: 149: junk = SSP1BUF;
  3623  00A6  0024               	movlb	4	; select bank4
  3624  00A7  0811               	movf	17,w	;volatile
  3625  00A8                     i1l2968:	
  3626                           
  3627                           ;main.c: 150: };main.c: 151: };main.c: 152: if (SSP1CON1bits.WCOL)
  3628  00A8  0024               	movlb	4	; select bank4
  3629  00A9  1F95               	btfss	21,7	;volatile
  3630  00AA  28AD               	goto	i1l2974
  3631                           
  3632                           ;main.c: 153: {;main.c: 154: SSP1CON1bits.WCOL = 0;
  3633  00AB  1395               	bcf	21,7	;volatile
  3634                           
  3635                           ;main.c: 155: junk = SSP1BUF;
  3636  00AC  0811               	movf	17,w	;volatile
  3637  00AD                     i1l2974:	
  3638                           
  3639                           ;main.c: 156: };main.c: 157: SSP1CON1bits.CKP = 1;
  3640  00AD  1615               	bsf	21,4	;volatile
  3641  00AE                     i1l2976:	
  3642                           
  3643                           ;main.c: 158: };main.c: 159: };main.c: 160: PIR1bits.SSP1IF = 0;
  3644  00AE  0020               	movlb	0	; select bank0
  3645  00AF  1191               	bcf	17,3	;volatile
  3646                           
  3647                           ;main.c: 161: INTCONbits.IOCIE = 1;
  3648  00B0  158B               	bsf	11,3	;volatile
  3649                           
  3650                           ;main.c: 162: PIE1bits.TMR1IE = 1;
  3651  00B1  0021               	movlb	1	; select bank1
  3652  00B2  1411               	bsf	17,0	;volatile
  3653  00B3                     i1l2982:	
  3654                           
  3655                           ;main.c: 163: };main.c: 165: if (PIR2bits.BCL1IF)
  3656  00B3  0020               	movlb	0	; select bank0
  3657  00B4  1D92               	btfss	18,3	;volatile
  3658  00B5  28BE               	goto	i1l103
  3659                           
  3660                           ;main.c: 166: {;main.c: 167: junk = SSP1BUF;
  3661  00B6  0024               	movlb	4	; select bank4
  3662  00B7  0811               	movf	17,w	;volatile
  3663                           
  3664                           ;main.c: 168: PIR2bits.BCL1IF = 0;
  3665  00B8  0020               	movlb	0	; select bank0
  3666  00B9  1192               	bcf	18,3	;volatile
  3667                           
  3668                           ;main.c: 169: SSP1CON1bits.CKP = 1;
  3669  00BA  0024               	movlb	4	; select bank4
  3670  00BB  1615               	bsf	21,4	;volatile
  3671                           
  3672                           ;main.c: 170: PIR1bits.SSP1IF = 0;
  3673  00BC  0020               	movlb	0	; select bank0
  3674  00BD  1191               	bcf	17,3	;volatile
  3675  00BE                     i1l103:	
  3676  00BE  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3677  00BF  0009               	retfie
  3678  00C0                     __end_of_isr:	
  3679                           
  3680                           	psect	text16
  3681  07EB                     __ptext16:	
  3682 ;; *************** function i1___wmul *****************
  3683 ;; Defined at:
  3684 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  multiplier      2    0[COMMON] unsigned int 
  3687 ;;  multiplicand    2    2[COMMON] unsigned int 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  __wmul          2    4[COMMON] unsigned int 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  2    0[COMMON] unsigned int 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 1F/1
  3696 ;;		On exit  : 1F/1
  3697 ;;		Unchanged: 1F/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3699 ;;      Params:         4       0       0       0
  3700 ;;      Locals:         2       0       0       0
  3701 ;;      Temps:          0       0       0       0
  3702 ;;      Totals:         6       0       0       0
  3703 ;;Total ram usage:        6 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_isr
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           
  3713                           ;psect for function i1___wmul
  3714  07EB                     i1___wmul:	
  3715                           
  3716                           ;incstack = 0
  3717                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  3718  07EB  01F4               	clrf	i1___wmul@product
  3719  07EC  01F5               	clrf	i1___wmul@product+1
  3720  07ED                     i1l2872:	
  3721  07ED  1C70               	btfss	i1___wmul@multiplier,0
  3722  07EE  2FF3               	goto	i1l2876
  3723  07EF  0872               	movf	i1___wmul@multiplicand,w
  3724  07F0  07F4               	addwf	i1___wmul@product,f
  3725  07F1  0873               	movf	i1___wmul@multiplicand+1,w
  3726  07F2  3DF5               	addwfc	i1___wmul@product+1,f
  3727  07F3                     i1l2876:	
  3728  07F3  35F2               	lslf	i1___wmul@multiplicand,f
  3729  07F4  0DF3               	rlf	i1___wmul@multiplicand+1,f
  3730  07F5  36F1               	lsrf	i1___wmul@multiplier+1,f
  3731  07F6  0CF0               	rrf	i1___wmul@multiplier,f
  3732  07F7  0870               	movf	i1___wmul@multiplier,w
  3733  07F8  0471               	iorwf	i1___wmul@multiplier+1,w
  3734  07F9  1D03               	btfss	3,2
  3735  07FA  2FED               	goto	i1l2872
  3736  07FB  0875               	movf	i1___wmul@product+1,w
  3737  07FC  00F1               	movwf	?i1___wmul+1
  3738  07FD  0874               	movf	i1___wmul@product,w
  3739  07FE  00F0               	movwf	?i1___wmul
  3740  07FF  0008               	return
  3741  0800                     __end_ofi1___wmul:	
  3742                           
  3743                           	psect	text17
  3744  07C6                     __ptext17:	
  3745 ;; *************** function ___lwdiv *****************
  3746 ;; Defined at:
  3747 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  divisor         2    6[COMMON] unsigned int 
  3750 ;;  dividend        2    8[COMMON] unsigned int 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  quotient        2   11[COMMON] unsigned int 
  3753 ;;  counter         1   10[COMMON] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2    6[COMMON] unsigned int 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 1F/1
  3760 ;;		On exit  : 1F/1
  3761 ;;		Unchanged: 1F/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3763 ;;      Params:         4       0       0       0
  3764 ;;      Locals:         3       0       0       0
  3765 ;;      Temps:          0       0       0       0
  3766 ;;      Totals:         7       0       0       0
  3767 ;;Total ram usage:        7 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_isr
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function ___lwdiv
  3778  07C6                     ___lwdiv:	
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3782  07C6  01FB               	clrf	___lwdiv@quotient
  3783  07C7  01FC               	clrf	___lwdiv@quotient+1
  3784  07C8  0876               	movf	___lwdiv@divisor,w
  3785  07C9  0477               	iorwf	___lwdiv@divisor+1,w
  3786  07CA  1903               	btfsc	3,2
  3787  07CB  2FE6               	goto	i1l2866
  3788  07CC  01FA               	clrf	___lwdiv@counter
  3789  07CD                     L6:	
  3790  07CD  0AFA               	incf	___lwdiv@counter,f
  3791  07CE  1BF7               	btfsc	___lwdiv@divisor+1,7
  3792  07CF  2FD3               	goto	i1l2854
  3793  07D0  35F6               	lslf	___lwdiv@divisor,f
  3794  07D1  0DF7               	rlf	___lwdiv@divisor+1,f
  3795  07D2  2FCD               	goto	L6
  3796  07D3                     i1l2854:	
  3797  07D3  35FB               	lslf	___lwdiv@quotient,f
  3798  07D4  0DFC               	rlf	___lwdiv@quotient+1,f
  3799  07D5  0877               	movf	___lwdiv@divisor+1,w
  3800  07D6  0279               	subwf	___lwdiv@dividend+1,w
  3801  07D7  1D03               	skipz
  3802  07D8  2FDB               	goto	u356_25
  3803  07D9  0876               	movf	___lwdiv@divisor,w
  3804  07DA  0278               	subwf	___lwdiv@dividend,w
  3805  07DB                     u356_25:	
  3806  07DB  1C03               	skipc
  3807  07DC  2FE2               	goto	i1l2862
  3808  07DD  0876               	movf	___lwdiv@divisor,w
  3809  07DE  02F8               	subwf	___lwdiv@dividend,f
  3810  07DF  0877               	movf	___lwdiv@divisor+1,w
  3811  07E0  3BF9               	subwfb	___lwdiv@dividend+1,f
  3812  07E1  147B               	bsf	___lwdiv@quotient,0
  3813  07E2                     i1l2862:	
  3814  07E2  36F7               	lsrf	___lwdiv@divisor+1,f
  3815  07E3  0CF6               	rrf	___lwdiv@divisor,f
  3816  07E4  0BFA               	decfsz	___lwdiv@counter,f
  3817  07E5  2FD3               	goto	i1l2854
  3818  07E6                     i1l2866:	
  3819  07E6  087C               	movf	___lwdiv@quotient+1,w
  3820  07E7  00F7               	movwf	?___lwdiv+1
  3821  07E8  087B               	movf	___lwdiv@quotient,w
  3822  07E9  00F6               	movwf	?___lwdiv
  3823  07EA  0008               	return
  3824  07EB                     __end_of___lwdiv:	
  3825  007E                     btemp	set	126	;btemp
  3826  007E                     int$flags	set	126
  3827  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     77      79
    BANK1            80      5      61
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    ___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _PID->_calculate_pid
    _calculate_pid->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->__Umul8_16
    _M_control->___fltol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_PID

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   15675
                                              4 BANK1      1     1      0
                                _PID
                           _PWM_Init
                       _PWM_set_duty
                    _init_I2C_buffer
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                  4     2      2   15222
                                              0 BANK1      4     2      2
                      _calculate_pid
 ---------------------------------------------------------------------------------
 (2) _calculate_pid                                       14    12      2   15008
                                             63 BANK0     14    12      2
                          _M_control
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     566
                                              2 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                              2 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3882
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3637
                                             35 BANK0     20    12      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4133
                                             10 BANK0     25    17      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            8     5      3    1419
                                              2 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     626
                                              2 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _M_control                                            3     1      2    1189
                                             12 BANK0      3     1      2
                       _PWM_set_duty
                            ___fltol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     426
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PWM_set_duty                                         4     2      2     453
                                              2 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0     627
                                              0 BANK0      2     2      0
                            ___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4     206
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              6 COMMON     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID
     _calculate_pid
       _M_control
         _PWM_set_duty
         ___fltol (ARG)
         ___wmul (ARG)
       ___fladd
         ___flmul (ARG)
           __Umul8_16
       ___flge
       ___flmul
         __Umul8_16
       ___flsub
         ___fladd
           ___flmul (ARG)
             __Umul8_16
         ___flmul (ARG)
           __Umul8_16
       ___fltol
       ___xxtofl
   _PWM_Init
   _PWM_set_duty
   _init_I2C_buffer

 _isr (ROOT)
   ___lwdiv
     i1___wmul (ARG)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      99       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4D      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      5      3D       8       76.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      99      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Sep 05 15:03:18 2018

             __CFG_CP$OFF 0000       ___wmul@multiplicand 0024          i1___wmul@product 0074  
     __Umul8_16@word_mpld 0028                       l124 01AF                       l405 0559  
                     l407 0587                       l521 0651                       l610 037D  
                     l530 06A9                       l522 064F                       l531 06AA  
                     l516 0636                       l613 0395                       l517 0634  
                     l614 0393                       l631 04E3                       l527 06B6  
                     l544 0722                       l609 037F                       l529 06A3  
                     l538 06D0                       l539 06D1                       l651 0605  
                     l564 076D                       l549 073B                       l638 05D3  
                     l663 0532                       _PR2 001B                       _PID 0185  
            __CFG_CPD$OFF 0000                       _isr 0004              __CFG_BORV$LO 0000  
                     wreg 0009        calculate_pid@error 0065              ___flmul@aexp 0037  
            ___flmul@bexp 0038              ___flmul@sign 0036              ___flmul@temp 0041  
            ___flmul@prod 003D              __CFG_LVP$OFF 0000                      ?_PID 00D7  
            ___fltol@exp1 002B                      l2310 0151                      l2320 0178  
                    l2316 0172                      l2420 06B1                      l3108 0109  
                    l2502 076E                      l2406 067B                      l2600 0787  
                    l2522 0502                      l2426 06C0                      l2540 051A  
                    l2516 04FA                      l2534 0512                      l2462 073C  
                    l2454 0730                      l2438 06D9                      l2614 07A3  
                    l2560 011A                      l2552 052A                      l2528 050A  
                    l2448 071A                      l2376 065D                      l2624 07AE  
                    l2570 0139                      l2546 0522                      l2722 049B  
                    l2490 075D                      l2474 074A                      l2466 073F  
                    l2626 07B7                      l2618 07AA                      l2802 0229  
                    l2564 0124                      l2580 0548                      l2740 04C2  
                    l2716 0488                      l2652 0383                      l2468 0741  
                    l2820 0342                      l2726 049D                      l2478 074C  
                    l2736 04AF                      l2664 0399                      l2824 035C  
                    l2840 01C6                      l2586 0570                      l2746 04D5  
                    l2498 0769                      l2834 01B2                      l2668 03A3  
                    l2780 05F5                      l2772 05E0                      l2764 05CB  
                    l2598 0782                      l2774 05EA                      l2784 0603  
                    l2768 05DE                      l2786 05FA                      l2798 061A  
                    ?_isr 0070                      u3025 012E                      u3105 0790  
                    u2515 015A                      u3325 04B8                      u3335 04CC  
                    u2640 069A                      u2650 069B                      u2635 068F  
                    u3515 01AB                      u3470 0190                      u2743 06EB  
                    u3484 0192                      u3495 019C                      u3767 0114  
                    u3777 01BC                      _WPUA 020C              __CFG_WRT$OFF 0000  
                    _main 00D3                      _lset 00D3                      fsr0h 0005  
                    fsr1h 0007                      indf0 0000                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 00C0             __CFG_IESO$OFF 0000  
           __CFG_MCLRE$ON 0000                     ??_PID 00D9                     ??_isr 0020  
           __CFG_PLLEN$ON 0000     __size_of_PWM_set_duty 001F             ___fltol@sign1 002A  
         __end_of___fladd 0773                     ?_main 0070             __CFG_WDTE$OFF 0000  
         __end_of___flmul 04EE           __end_of___flsub 05B6           __end_of___fltol 07C6  
                   _T1CON 0018                     _T2CON 001C           __end_of___lwdiv 07EB  
                   i1l103 00BE                     _TRISA 008C             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000          __end_of_PWM_Init 01E0          __end_ofi1___wmul 0800  
                   status 0003       i1___wmul@multiplier 0070                     wtemp0 007E  
            _PWM_set_duty 0151           __initialization 00C2              __end_of_main 011A  
                  ??_main 00DB                    PID@set 00D7        __size_of_M_control 0037  
                  _CCPR1L 0291                    _ANSELA 018C                    i1l2904 0021  
                  i1l2922 005C                    i1l2916 0058                    i1l2862 07E2  
                  i1l2854 07D3                    i1l2934 0072                    i1l2942 0080  
                  i1l2872 07ED                    i1l2960 0097                    i1l2952 008A  
                  i1l2866 07E6                    i1l2876 07F3                    i1l2974 00AD  
                  i1l2966 00A6                    i1l2982 00B3                    i1l2968 00A8  
                  i1l2976 00AE                    i1l2898 0017                    _INTCON 000B  
                  u356_25 07DB                    _OSCCON 0099          __end_of___xxtofl 0623  
                  ___flge 0537                 ??___fladd 004B                    ___wmul 0170  
          __CFG_STVREN$ON 0000                 ??___flmul 0032                 ??___flsub 005F  
               ??___fltol 0026                 ??___lwdiv 007A  __size_of_init_I2C_buffer 0049  
      __size_of__Umul8_16 0049                ___flge@ff1 0022                ___flge@ff2 0026  
            ___xxtofl@arg 002C              ___xxtofl@exp 002B              ___xxtofl@val 0022  
 __end_of__initialization 00D0                ___fltol@f1 0022            __pcstackCOMMON 0070  
            __pidataBANK1 0000         __end_of_M_control 0151                 ?_PWM_Init 0070  
               ?i1___wmul 0070            _OPTION_REGbits 0095                __pbssBANK0 006E  
              __pbssBANK1 00A0         __end_of__Umul8_16 0537                __pmaintext 00D3  
                 ?___flge 0022                   ?___wmul 0022                __pintentry 0004  
                 _CCP1CON 0293                ??_PWM_Init 0022                ??i1___wmul 0074  
  __size_of_calculate_pid 0143                 ?___xxtofl 0022                   _SSP1ADD 0212  
                 _SSP1BUF 0211         ??_init_I2C_buffer 0022          PWM_set_duty@duty 0022  
         __size_of___flge 0062                   ___fladd 0623                   ___flmul 036C  
                 ___flsub 0599                   ___fltol 0773           __size_of___wmul 0015  
                 ___lwdiv 07C6                   __ptext1 01E0                   __ptext2 01D4  
                 __ptext3 0185                   __ptext4 0229                   __ptext5 05B6  
                 __ptext6 0773                   __ptext7 0599                   __ptext8 0623  
                 __ptext9 036C              __size_of_PID 004F                 _T1CONbits 0018  
                 _counter 00D5              __size_of_isr 00BC                ??___xxtofl 0026  
               _IOCAFbits 0393                 _IOCANbits 0392                   clrloop0 0FFB  
    end_of_initialization 00D0             _calculate_pid 0229     i1___wmul@multiplicand 0072  
             ___fladd@grs 0056          __CFG_FOSC$INTOSC 0000             ___xxtofl@sign 002A  
        calculate_pid@pid 0069          calculate_pid@set 005F               ___flmul@grs 0039  
          ?_calculate_pid 005F                _zero_cross 0368            __end_of___flge 0599  
          __end_of___wmul 0185                 _M_control 011A             __pbitbssBANK0 0368  
       __size_of_PWM_Init 000C       start_initialization 00C2         __size_ofi1___wmul 0015  
             __end_of_PID 01D4               __end_of_isr 00C0               _accumulator 00CF  
                ??___flge 002A                  ??___wmul 0026                 __Umul8_16 04EE  
             __pdataBANK1 00DC                ?_M_control 002C           _init_I2C_buffer 01E0  
               ___fladd@a 0047                 ___fladd@b 0043                 ___flmul@a 002E  
               ___flmul@b 002A                 ___flsub@a 0057                 ___flsub@b 005B  
               ___latbits 0001             __pcstackBANK0 0020             __pcstackBANK1 00D7  
       __size_of___xxtofl 006D           ??_calculate_pid 0061             ?_PWM_set_duty 0022  
        ___lwdiv@dividend 0078        _calculate_pid$1197 0061                  ?___fladd 0043  
                ?___flmul 002A                  ?___flsub 0057                  ?___fltol 0022  
              ?__Umul8_16 0022                  ?___lwdiv 0076                 _first_i2c 00DC  
               _index_i2c 006E          ___lwdiv@quotient 007B                 _lasterror 00CB  
          ___wmul@product 0026                  _LATAbits 010C                 clear_ram0 0FFA  
                _PIE1bits 0091                  _PIE2bits 0092            ??_PWM_set_duty 0024  
                _PIR1bits 0011                  _PIR2bits 0012   __end_of_init_I2C_buffer 0229  
                _SSP1CON1 0215                  _SSP1STAT 0214               ??_M_control 002E  
                _PWM_Init 01D4         ___wmul@multiplier 0022                  i1___wmul 07EB  
              _I2C_buffer 00A0                _APFCONbits 011D               ??__Umul8_16 0025  
        __size_of___fladd 0150          __size_of___flmul 0182          __size_of___flsub 001D  
        __size_of___fltol 0053          __size_of___lwdiv 0025                  ___xxtofl 05B6  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007A                  __ptext10 04EE  
                __ptext11 0537                  __ptext12 011A                  __ptext13 0170  
                __ptext14 0151                  __ptext16 07EB                  __ptext17 07C6  
            _SSP1CON1bits 0215              _SSP1CON2bits 0216              _SSP1CON3bits 0217  
           __size_of_main 0047          ?_init_I2C_buffer 0070                  int$flags 007E  
            _SSP1STATbits 0214                _INTCONbits 000B      __end_of_PWM_set_duty 0170  
                intlevel1 0000         __CFG_CLKOUTEN$OFF 0000    __Umul8_16@multiplicand 0022  
           ___fladd@signs 0053              ___fladd@aexp 0054              ___fladd@bexp 0055  
            M_control@ctr 002C     __end_of_calculate_pid 036C      __Umul8_16@multiplier 0027  
       __Umul8_16@product 0025  
