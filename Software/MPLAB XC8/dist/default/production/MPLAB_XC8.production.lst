

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Jul 09 23:32:40 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 1.43
    32                           ; Generated 25/07/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC12F1822 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  0111                     	;# 
   107  0112                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0117                     	;# 
   111  0118                     	;# 
   112  0119                     	;# 
   113  011A                     	;# 
   114  011B                     	;# 
   115  011D                     	;# 
   116  011D                     	;# 
   117  018C                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0194                     	;# 
   125  0195                     	;# 
   126  0196                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019F                     	;# 
   138  020C                     	;# 
   139  0211                     	;# 
   140  0211                     	;# 
   141  0212                     	;# 
   142  0212                     	;# 
   143  0213                     	;# 
   144  0213                     	;# 
   145  0214                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0216                     	;# 
   151  0216                     	;# 
   152  0217                     	;# 
   153  0217                     	;# 
   154  0291                     	;# 
   155  0291                     	;# 
   156  0292                     	;# 
   157  0293                     	;# 
   158  0294                     	;# 
   159  0295                     	;# 
   160  0295                     	;# 
   161  0296                     	;# 
   162  0391                     	;# 
   163  0392                     	;# 
   164  0393                     	;# 
   165  039A                     	;# 
   166  039C                     	;# 
   167  039D                     	;# 
   168  039E                     	;# 
   169  039F                     	;# 
   170  0FE4                     	;# 
   171  0FE5                     	;# 
   172  0FE6                     	;# 
   173  0FE7                     	;# 
   174  0FE8                     	;# 
   175  0FE9                     	;# 
   176  0FEA                     	;# 
   177  0FEB                     	;# 
   178  0FED                     	;# 
   179  0FEE                     	;# 
   180  0FEF                     	;# 
   181                           
   182                           	psect	idataBANK1
   183  06BC                     __pidataBANK1:	
   184                           
   185                           ;initializer for _ki
   186  06BC  34CD               	retlw	205
   187  06BD  34CC               	retlw	204
   188  06BE  343D               	retlw	61
   189                           
   190                           ;initializer for _kd
   191  06BF  3412               	retlw	18
   192  06C0  3483               	retlw	131
   193  06C1  343A               	retlw	58
   194                           
   195                           ;initializer for _kp
   196  06C2  349A               	retlw	154
   197  06C3  3499               	retlw	153
   198  06C4  343E               	retlw	62
   199                           
   200                           ;initializer for _gear
   201  06C5  3496               	retlw	150
   202  06C6  3400               	retlw	0
   203  0018                     _T1CON	set	24
   204  000B                     _INTCON	set	11
   205  0018                     _T1CONbits	set	24
   206  000B                     _INTCONbits	set	11
   207  001C                     _T2CON	set	28
   208  0011                     _PIR1bits	set	17
   209  001B                     _PR2	set	27
   210  0091                     _PIE1bits	set	145
   211  0095                     _OPTION_REGbits	set	149
   212  008C                     _TRISA	set	140
   213  0099                     _OSCCON	set	153
   214  011D                     _APFCONbits	set	285
   215  010C                     _LATAbits	set	268
   216  018C                     _ANSELA	set	396
   217  020C                     _WPUA	set	524
   218  0291                     _CCPR1L	set	657
   219  0293                     _CCP1CON	set	659
   220  0392                     _IOCANbits	set	914
   221  0393                     _IOCAFbits	set	915
   222                           
   223                           ; #config settings
   224  0000                     
   225                           	psect	cinit
   226  0049                     start_initialization:	
   227  0049                     __initialization:	
   228                           
   229                           ; Initialize objects allocated to BANK1
   230  0049  30BC               	movlw	low __pidataBANK1
   231  004A  0084               	movwf	4
   232  004B  3086               	movlw	(high __pidataBANK1)| (0+128)
   233  004C  0085               	movwf	5
   234  004D  30A0               	movlw	low __pdataBANK1
   235  004E  0086               	movwf	6
   236  004F  3000               	movlw	high __pdataBANK1
   237  0050  0087               	movwf	7
   238  0051  300B               	movlw	11
   239  0052  26D0               	fcall	init_ram
   240                           
   241                           ; Clear objects allocated to BANK0
   242  0053  01EA               	clrf	__pbssBANK0& (0+127)
   243  0054  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   244                           
   245                           ; Clear objects allocated to BANK1
   246  0055  0021               	movlb	1	; select bank1
   247  0056  01AB               	clrf	__pbssBANK1& (0+127)
   248  0057  01AC               	clrf	(__pbssBANK1+1)& (0+127)
   249  0058  01AD               	clrf	(__pbssBANK1+2)& (0+127)
   250  0059  01AE               	clrf	(__pbssBANK1+3)& (0+127)
   251  005A  01AF               	clrf	(__pbssBANK1+4)& (0+127)
   252  005B  01B0               	clrf	(__pbssBANK1+5)& (0+127)
   253  005C  01B1               	clrf	(__pbssBANK1+6)& (0+127)
   254  005D  01B2               	clrf	(__pbssBANK1+7)& (0+127)
   255  005E                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  005E                     __end_of__initialization:	
   259  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   260  005F  0020               	movlb	0
   261  0060  2CD4               	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bssBANK0
   264  006A                     __pbssBANK0:	
   265  006A                     _rpm:	
   266  006A                     	ds	2
   267                           
   268                           	psect	bssBANK1
   269  00AB                     __pbssBANK1:	
   270  00AB                     _lasterror:	
   271  00AB                     	ds	3
   272  00AE                     _accumulator:	
   273  00AE                     	ds	3
   274  00B1                     _counter:	
   275  00B1                     	ds	2
   276                           
   277                           	psect	dataBANK1
   278  00A0                     __pdataBANK1:	
   279  00A0                     _ki:	
   280  00A0                     	ds	3
   281  00A3                     _kd:	
   282  00A3                     	ds	3
   283  00A6                     _kp:	
   284  00A6                     	ds	3
   285  00A9                     _gear:	
   286  00A9                     	ds	2
   287                           
   288                           	psect	inittext
   289  06D0                     init_ram:	
   290  06D0  00FE               	movwf	126
   291  06D1                     initloop:	
   292  06D1  0012               	moviw fsr0++
   293  06D2  001E               	movwi fsr1++
   294  06D3  0BFE               	decfsz	126,f
   295  06D4  2ED1               	goto	initloop
   296  06D5  3400               	retlw	0
   297                           
   298                           	psect	cstackBANK1
   299  00B3                     __pcstackBANK1:	
   300  00B3                     main@x:	
   301                           
   302                           ; 2 bytes @ 0x0
   303  00B3                     	ds	2
   304  00B5                     main@x_364:	
   305                           
   306                           ; 2 bytes @ 0x2
   307  00B5                     	ds	2
   308                           
   309                           	psect	cstackCOMMON
   310  0070                     __pcstackCOMMON:	
   311  0070                     ?_isr:	
   312  0070                     ?_PWM_Init:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?___wmul:	
   316                           ; 2 bytes @ 0x0
   317                           
   318  0070                     ___wmul@multiplier:	
   319                           ; 2 bytes @ 0x0
   320                           
   321                           
   322                           ; 2 bytes @ 0x0
   323  0070                     	ds	2
   324  0072                     ___wmul@multiplicand:	
   325                           
   326                           ; 2 bytes @ 0x2
   327  0072                     	ds	2
   328  0074                     ??___wmul:	
   329  0074                     ___wmul@product:	
   330                           ; 1 bytes @ 0x4
   331                           
   332                           
   333                           ; 2 bytes @ 0x4
   334  0074                     	ds	2
   335  0076                     ?___lwdiv:	
   336  0076                     ___lwdiv@divisor:	
   337                           ; 2 bytes @ 0x6
   338                           
   339                           
   340                           ; 2 bytes @ 0x6
   341  0076                     	ds	2
   342  0078                     ___lwdiv@dividend:	
   343                           
   344                           ; 2 bytes @ 0x8
   345  0078                     	ds	2
   346  007A                     ??___lwdiv:	
   347                           
   348                           ; 1 bytes @ 0xA
   349  007A                     	ds	1
   350  007B                     ___lwdiv@quotient:	
   351                           
   352                           ; 2 bytes @ 0xB
   353  007B                     	ds	2
   354  007D                     ___lwdiv@counter:	
   355                           
   356                           ; 1 bytes @ 0xD
   357  007D                     	ds	1
   358                           
   359                           	psect	cstackBANK0
   360  0020                     __pcstackBANK0:	
   361  0020                     ??_isr:	
   362                           
   363                           ; 1 bytes @ 0x0
   364  0020                     	ds	1
   365  0021                     ?___ftge:	
   366  0021                     ??_PWM_Init:	
   367                           ; 1 bit 
   368                           
   369  0021                     ?_PWM_set_duty:	
   370                           ; 1 bytes @ 0x1
   371                           
   372  0021                     ?___ftpack:	
   373                           ; 2 bytes @ 0x1
   374                           
   375  0021                     ?___ftneg:	
   376                           ; 3 bytes @ 0x1
   377                           
   378  0021                     ?___fttol:	
   379                           ; 3 bytes @ 0x1
   380                           
   381  0021                     PWM_set_duty@duty:	
   382                           ; 4 bytes @ 0x1
   383                           
   384  0021                     ___ftpack@arg:	
   385                           ; 2 bytes @ 0x1
   386                           
   387  0021                     ___ftge@ff1:	
   388                           ; 3 bytes @ 0x1
   389                           
   390  0021                     ___ftneg@f1:	
   391                           ; 3 bytes @ 0x1
   392                           
   393  0021                     ___fttol@f1:	
   394                           ; 3 bytes @ 0x1
   395                           
   396                           
   397                           ; 3 bytes @ 0x1
   398  0021                     	ds	2
   399  0023                     ??_PWM_set_duty:	
   400                           
   401                           ; 1 bytes @ 0x3
   402  0023                     	ds	1
   403  0024                     ??___ftneg:	
   404  0024                     ___ftpack@exp:	
   405                           ; 1 bytes @ 0x4
   406                           
   407  0024                     ___ftge@ff2:	
   408                           ; 1 bytes @ 0x4
   409                           
   410                           
   411                           ; 3 bytes @ 0x4
   412  0024                     	ds	1
   413  0025                     ??___fttol:	
   414  0025                     ___ftpack@sign:	
   415                           ; 1 bytes @ 0x5
   416                           
   417                           
   418                           ; 1 bytes @ 0x5
   419  0025                     	ds	1
   420  0026                     ??___ftpack:	
   421                           
   422                           ; 1 bytes @ 0x6
   423  0026                     	ds	1
   424  0027                     ??___ftge:	
   425                           
   426                           ; 1 bytes @ 0x7
   427  0027                     	ds	2
   428  0029                     ?___awtoft:	
   429  0029                     ?___ftdiv:	
   430                           ; 3 bytes @ 0x9
   431                           
   432  0029                     ___fttol@sign1:	
   433                           ; 3 bytes @ 0x9
   434                           
   435  0029                     ___awtoft@c:	
   436                           ; 1 bytes @ 0x9
   437                           
   438  0029                     ___ftdiv@f2:	
   439                           ; 2 bytes @ 0x9
   440                           
   441                           
   442                           ; 3 bytes @ 0x9
   443  0029                     	ds	1
   444  002A                     ___fttol@lval:	
   445                           
   446                           ; 4 bytes @ 0xA
   447  002A                     	ds	2
   448  002C                     ??___awtoft:	
   449  002C                     ___ftdiv@f1:	
   450                           ; 1 bytes @ 0xC
   451                           
   452                           
   453                           ; 3 bytes @ 0xC
   454  002C                     	ds	2
   455  002E                     ___awtoft@sign:	
   456  002E                     ___fttol@exp1:	
   457                           ; 1 bytes @ 0xE
   458                           
   459                           
   460                           ; 1 bytes @ 0xE
   461  002E                     	ds	1
   462  002F                     ?_M_control:	
   463  002F                     ??___ftdiv:	
   464                           ; 1 bytes @ 0xF
   465                           
   466  002F                     M_control@ctr:	
   467                           ; 1 bytes @ 0xF
   468                           
   469                           
   470                           ; 2 bytes @ 0xF
   471  002F                     	ds	2
   472  0031                     ??_M_control:	
   473                           
   474                           ; 1 bytes @ 0x11
   475  0031                     	ds	2
   476  0033                     ___ftdiv@cntr:	
   477                           
   478                           ; 1 bytes @ 0x13
   479  0033                     	ds	1
   480  0034                     ___ftdiv@f3:	
   481                           
   482                           ; 3 bytes @ 0x14
   483  0034                     	ds	3
   484  0037                     ___ftdiv@exp:	
   485                           
   486                           ; 1 bytes @ 0x17
   487  0037                     	ds	1
   488  0038                     ___ftdiv@sign:	
   489                           
   490                           ; 1 bytes @ 0x18
   491  0038                     	ds	1
   492  0039                     ?___ftmul:	
   493  0039                     ___ftmul@f1:	
   494                           ; 3 bytes @ 0x19
   495                           
   496                           
   497                           ; 3 bytes @ 0x19
   498  0039                     	ds	3
   499  003C                     ___ftmul@f2:	
   500                           
   501                           ; 3 bytes @ 0x1C
   502  003C                     	ds	3
   503  003F                     ??___ftmul:	
   504                           
   505                           ; 1 bytes @ 0x1F
   506  003F                     	ds	4
   507  0043                     ___ftmul@exp:	
   508                           
   509                           ; 1 bytes @ 0x23
   510  0043                     	ds	1
   511  0044                     ___ftmul@f3_as_product:	
   512                           
   513                           ; 3 bytes @ 0x24
   514  0044                     	ds	3
   515  0047                     ___ftmul@cntr:	
   516                           
   517                           ; 1 bytes @ 0x27
   518  0047                     	ds	1
   519  0048                     ___ftmul@sign:	
   520                           
   521                           ; 1 bytes @ 0x28
   522  0048                     	ds	1
   523  0049                     ?___ftadd:	
   524  0049                     ___ftadd@f1:	
   525                           ; 3 bytes @ 0x29
   526                           
   527                           
   528                           ; 3 bytes @ 0x29
   529  0049                     	ds	3
   530  004C                     ___ftadd@f2:	
   531                           
   532                           ; 3 bytes @ 0x2C
   533  004C                     	ds	3
   534  004F                     ??___ftadd:	
   535                           
   536                           ; 1 bytes @ 0x2F
   537  004F                     	ds	4
   538  0053                     ___ftadd@sign:	
   539                           
   540                           ; 1 bytes @ 0x33
   541  0053                     	ds	1
   542  0054                     ___ftadd@exp2:	
   543                           
   544                           ; 1 bytes @ 0x34
   545  0054                     	ds	1
   546  0055                     ___ftadd@exp1:	
   547                           
   548                           ; 1 bytes @ 0x35
   549  0055                     	ds	1
   550  0056                     ?_PID:	
   551  0056                     PID@set:	
   552                           ; 1 bytes @ 0x36
   553                           
   554                           
   555                           ; 2 bytes @ 0x36
   556  0056                     	ds	2
   557  0058                     ??_PID:	
   558                           
   559                           ; 1 bytes @ 0x38
   560  0058                     	ds	2
   561  005A                     _PID$756:	
   562                           
   563                           ; 3 bytes @ 0x3A
   564  005A                     	ds	3
   565  005D                     PID@rpm2:	
   566                           
   567                           ; 2 bytes @ 0x3D
   568  005D                     	ds	2
   569  005F                     PID@error:	
   570                           
   571                           ; 3 bytes @ 0x3F
   572  005F                     	ds	3
   573  0062                     PID@pid:	
   574                           
   575                           ; 3 bytes @ 0x42
   576  0062                     	ds	3
   577  0065                     ?_main:	
   578  0065                     main@argc:	
   579                           ; 2 bytes @ 0x45
   580                           
   581                           
   582                           ; 2 bytes @ 0x45
   583  0065                     	ds	2
   584  0067                     main@argv:	
   585                           
   586                           ; 2 bytes @ 0x47
   587  0067                     	ds	2
   588  0069                     ??_main:	
   589                           
   590                           ; 1 bytes @ 0x49
   591  0069                     	ds	1
   592                           
   593                           	psect	maintext
   594  04D4                     __pmaintext:	
   595 ;;
   596 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   597 ;;
   598 ;; *************** function _main *****************
   599 ;; Defined at:
   600 ;;		line 188 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  argc            2   69[BANK0 ] int 
   603 ;;  argv            2   71[BANK0 ] PTR PTR unsigned char 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  x               2    2[BANK1 ] int 
   606 ;;  x               2    0[BANK1 ] int 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  2   69[BANK0 ] int 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : B1F/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1
   616 ;;      Params:         0       4       0
   617 ;;      Locals:         0       0       4
   618 ;;      Temps:          0       1       0
   619 ;;      Totals:         0       5       4
   620 ;;Total ram usage:        9 bytes
   621 ;; Hardware stack levels required when called:    5
   622 ;; This function calls:
   623 ;;		_PID
   624 ;;		_PWM_Init
   625 ;;		_PWM_set_duty
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _main
   633  04D4                     _main:	
   634                           
   635                           ;main.c: 190: OSCCON = 0b11110000;
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   639  04D4  30F0               	movlw	240
   640  04D5  0021               	movlb	1	; select bank1
   641  04D6  0099               	movwf	25	;volatile
   642                           
   643                           ;main.c: 191: TRISA = 0b00011000;
   644  04D7  3018               	movlw	24
   645  04D8  008C               	movwf	12	;volatile
   646                           
   647                           ;main.c: 192: ANSELA = 0b00000000;
   648  04D9  0023               	movlb	3	; select bank3
   649  04DA  018C               	clrf	12	;volatile
   650                           
   651                           ;main.c: 193: WPUA = 0b00011110;
   652  04DB  301E               	movlw	30
   653  04DC  0024               	movlb	4	; select bank4
   654  04DD  008C               	movwf	12	;volatile
   655                           
   656                           ;main.c: 194: OPTION_REGbits.nWPUEN = 0;
   657  04DE  0021               	movlb	1	; select bank1
   658  04DF  1395               	bcf	21,7	;volatile
   659                           
   660                           ;main.c: 195: APFCONbits.CCP1SEL = 1;
   661  04E0  0022               	movlb	2	; select bank2
   662  04E1  141D               	bsf	29,0	;volatile
   663                           
   664                           ;main.c: 196: LATAbits.LATA0 = 0;
   665  04E2  100C               	bcf	12,0	;volatile
   666                           
   667                           ;main.c: 197: PWM_Init();
   668  04E3  26B0               	fcall	_PWM_Init
   669                           
   670                           ;main.c: 198: PWM_set_duty(0);
   671  04E4  3000               	movlw	0
   672  04E5  0020               	movlb	0	; select bank0
   673  04E6  00A1               	movwf	PWM_set_duty@duty
   674  04E7  00A2               	movwf	PWM_set_duty@duty+1
   675  04E8  264E               	fcall	_PWM_set_duty
   676                           
   677                           ;main.c: 199: IOCANbits.IOCAN4 = 1;
   678  04E9  0027               	movlb	7	; select bank7
   679  04EA  1612               	bsf	18,4	;volatile
   680                           
   681                           ;main.c: 200: INTCON = 0b01001000;
   682  04EB  3048               	movlw	72
   683  04EC  008B               	movwf	11	;volatile
   684                           
   685                           ;main.c: 201: T1CON = 0b00110100;
   686  04ED  3034               	movlw	52
   687  04EE  0020               	movlb	0	; select bank0
   688  04EF  0098               	movwf	24	;volatile
   689                           
   690                           ;main.c: 202: PIE1bits.TMR1IE = 1;
   691  04F0  0021               	movlb	1	; select bank1
   692  04F1  1411               	bsf	17,0	;volatile
   693                           
   694                           ;main.c: 203: T1CONbits.TMR1ON = 1;
   695  04F2  0020               	movlb	0	; select bank0
   696  04F3  1418               	bsf	24,0	;volatile
   697                           
   698                           ;main.c: 204: INTCONbits.GIE = 1;
   699  04F4  178B               	bsf	11,7	;volatile
   700  04F5                     l91:	
   701                           ;main.c: 206: while(1)
   702                           
   703                           
   704                           ;main.c: 207: {
   705                           ;main.c: 208: for(int x = 0;x<1000;x++)
   706  04F5  0021               	movlb	1	; select bank1
   707  04F6  01B3               	clrf	main@x^(0+128)
   708  04F7  01B4               	clrf	(main@x+1)^(0+128)
   709  04F8  0834               	movf	(main@x+1)^(0+128),w
   710  04F9  3A80               	xorlw	128
   711  04FA  0020               	movlb	0	; select bank0
   712  04FB  00E9               	movwf	??_main
   713  04FC  3083               	movlw	131
   714  04FD  0269               	subwf	??_main,w
   715  04FE  1D03               	skipz
   716  04FF  2D03               	goto	u2825
   717  0500  30E8               	movlw	232
   718  0501  0021               	movlb	1	; select bank1
   719  0502  0233               	subwf	main@x^(0+128),w
   720  0503                     u2825:	
   721  0503  1803               	btfsc	3,0
   722  0504  2D26               	goto	l1904
   723  0505                     l1896:	
   724                           
   725                           ;main.c: 209: {
   726                           ;main.c: 210: PID(100);
   727  0505  3064               	movlw	100
   728  0506  0020               	movlb	0	; select bank0
   729  0507  00D6               	movwf	PID@set
   730  0508  3000               	movlw	0
   731  0509  00D7               	movwf	PID@set+1
   732  050A  2061               	fcall	_PID
   733                           
   734                           ;main.c: 211: _delay((unsigned long)((10)*(32000000/4000.0)));
   735  050B  3068               	movlw	104
   736  050C  0020               	movlb	0	; select bank0
   737  050D  00E9               	movwf	??_main
   738  050E  30E4               	movlw	228
   739  050F                     u2867:	
   740  050F  0B89               	decfsz	9,f
   741  0510  2D0F               	goto	u2867
   742  0511  0BE9               	decfsz	??_main,f
   743  0512  2D0F               	goto	u2867
   744  0513  0000               	nop
   745  0514  3001               	movlw	1
   746  0515  0021               	movlb	1	; select bank1
   747  0516  07B3               	addwf	main@x^(0+128),f
   748  0517  3000               	movlw	0
   749  0518  3DB4               	addwfc	(main@x+1)^(0+128),f
   750  0519  0834               	movf	(main@x+1)^(0+128),w
   751  051A  3A80               	xorlw	128
   752  051B  0020               	movlb	0	; select bank0
   753  051C  00E9               	movwf	??_main
   754  051D  3083               	movlw	131
   755  051E  0269               	subwf	??_main,w
   756  051F  1D03               	skipz
   757  0520  2D24               	goto	u2835
   758  0521  30E8               	movlw	232
   759  0522  0021               	movlb	1	; select bank1
   760  0523  0233               	subwf	main@x^(0+128),w
   761  0524                     u2835:	
   762  0524  1C03               	skipc
   763  0525  2D05               	goto	l1896
   764  0526                     l1904:	
   765                           
   766                           ;main.c: 212: }
   767                           ;main.c: 213: for(int x = 0;x<1000;x++)
   768  0526  0021               	movlb	1	; select bank1
   769  0527  01B5               	clrf	main@x_364^(0+128)
   770  0528  01B6               	clrf	(main@x_364+1)^(0+128)
   771  0529                     L1:	
   772  0529  0836               	movf	(main@x_364+1)^(0+128),w
   773  052A  3A80               	xorlw	128
   774  052B  0020               	movlb	0	; select bank0
   775  052C  00E9               	movwf	??_main
   776  052D  3083               	movlw	131
   777  052E  0269               	subwf	??_main,w
   778  052F  1D03               	skipz
   779  0530  2D34               	goto	u2845
   780  0531  30E8               	movlw	232
   781  0532  0021               	movlb	1	; select bank1
   782  0533  0235               	subwf	main@x_364^(0+128),w
   783  0534                     u2845:	
   784  0534  1803               	btfsc	3,0
   785  0535  2CF5               	goto	l91
   786                           
   787                           ;main.c: 214: {
   788                           ;main.c: 215: PID(0);
   789  0536  3000               	movlw	0
   790  0537  0020               	movlb	0	; select bank0
   791  0538  00D6               	movwf	PID@set
   792  0539  00D7               	movwf	PID@set+1
   793  053A  2061               	fcall	_PID
   794                           
   795                           ;main.c: 216: _delay((unsigned long)((10)*(32000000/4000.0)));
   796  053B  3068               	movlw	104
   797  053C  0020               	movlb	0	; select bank0
   798  053D  00E9               	movwf	??_main
   799  053E  30E4               	movlw	228
   800  053F                     u2877:	
   801  053F  0B89               	decfsz	9,f
   802  0540  2D3F               	goto	u2877
   803  0541  0BE9               	decfsz	??_main,f
   804  0542  2D3F               	goto	u2877
   805  0543  0000               	nop
   806  0544  3001               	movlw	1
   807  0545  0021               	movlb	1	; select bank1
   808  0546  07B5               	addwf	main@x_364^(0+128),f
   809  0547  3000               	movlw	0
   810  0548  3DB6               	addwfc	(main@x_364+1)^(0+128),f
   811  0549  2D29               	goto	L1
   812  054A                     __end_of_main:	
   813                           ;main.c: 217: }
   814                           ;main.c: 218: }
   815                           ;main.c: 220: return (0);
   816                           ;	Return value of _main is never used
   817                           
   818                           
   819                           	psect	text1
   820  06B0                     __ptext1:	
   821 ;; *************** function _PWM_Init *****************
   822 ;; Defined at:
   823 ;;		line 51 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  2   58[None  ] int 
   830 ;; Registers used:
   831 ;;		wreg, status,2
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1
   837 ;;      Params:         0       0       0
   838 ;;      Locals:         0       0       0
   839 ;;      Temps:          0       0       0
   840 ;;      Totals:         0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; Hardware stack levels required when called:    2
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _PWM_Init
   853  06B0                     _PWM_Init:	
   854                           
   855                           ;main.c: 72: PR2 = 0xFF;
   856                           
   857                           ;incstack = 0
   858                           ; Regs used in _PWM_Init: [wreg+status,2]
   859  06B0  30FF               	movlw	255
   860  06B1  0020               	movlb	0	; select bank0
   861  06B2  009B               	movwf	27	;volatile
   862                           
   863                           ;main.c: 73: CCP1CON = 0b00001100;
   864  06B3  300C               	movlw	12
   865  06B4  0025               	movlb	5	; select bank5
   866  06B5  0093               	movwf	19	;volatile
   867                           
   868                           ;main.c: 74: CCPR1L = 0b00000000;
   869  06B6  0191               	clrf	17	;volatile
   870                           
   871                           ;main.c: 75: PIR1bits.TMR2IF = 0;
   872  06B7  0020               	movlb	0	; select bank0
   873  06B8  1091               	bcf	17,1	;volatile
   874                           
   875                           ;main.c: 76: T2CON = 0b00000100;
   876  06B9  3004               	movlw	4
   877  06BA  009C               	movwf	28	;volatile
   878  06BB  0008               	return
   879  06BC                     __end_of_PWM_Init:	
   880                           
   881                           	psect	text2
   882  0061                     __ptext2:	
   883 ;; *************** function _PID *****************
   884 ;; Defined at:
   885 ;;		line 147 in file "main.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  set             2   54[BANK0 ] int 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  pid             3   66[BANK0 ] float 
   890 ;;  error           3   63[BANK0 ] float 
   891 ;;  rpm2            2   61[BANK0 ] int 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1
   901 ;;      Params:         0       2       0
   902 ;;      Locals:         0      11       0
   903 ;;      Temps:          0       2       0
   904 ;;      Totals:         0      15       0
   905 ;;Total ram usage:       15 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    4
   908 ;; This function calls:
   909 ;;		_M_control
   910 ;;		___awtoft
   911 ;;		___ftadd
   912 ;;		___ftdiv
   913 ;;		___ftge
   914 ;;		___ftmul
   915 ;;		___ftneg
   916 ;;		___fttol
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _PID
   924  0061                     _PID:	
   925                           
   926                           ;main.c: 149: float error = 0;
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _PID: [wreg+status,2+status,0+pclath+cstack]
   930  0061  3000               	movlw	0
   931  0062  0020               	movlb	0	; select bank0
   932  0063  00DF               	movwf	PID@error
   933  0064  3000               	movlw	0
   934  0065  00E0               	movwf	PID@error+1
   935  0066  3000               	movlw	0
   936  0067  00E1               	movwf	PID@error+2
   937                           
   938                           ;main.c: 150: float pid = 0;
   939  0068  3000               	movlw	0
   940  0069  00E2               	movwf	PID@pid
   941  006A  3000               	movlw	0
   942  006B  00E3               	movwf	PID@pid+1
   943  006C  3000               	movlw	0
   944  006D  00E4               	movwf	PID@pid+2
   945                           
   946                           ;main.c: 151: int rpm2 = rpm + 600;
   947  006E  086A               	movf	_rpm,w
   948  006F  3E58               	addlw	88
   949  0070  00DD               	movwf	PID@rpm2
   950  0071  3002               	movlw	2
   951  0072  3D6B               	addwfc	_rpm+1,w
   952  0073  00DE               	movwf	PID@rpm2+1
   953                           
   954                           ;main.c: 152: set = set + 600;
   955  0074  0856               	movf	PID@set,w
   956  0075  3E58               	addlw	88
   957  0076  00D6               	movwf	PID@set
   958  0077  3002               	movlw	2
   959  0078  3D57               	addwfc	PID@set+1,w
   960  0079  00D7               	movwf	PID@set+1
   961                           
   962                           ;main.c: 153: error = set-rpm2;
   963  007A  095D               	comf	PID@rpm2,w
   964  007B  00D8               	movwf	??_PID
   965  007C  095E               	comf	PID@rpm2+1,w
   966  007D  00D9               	movwf	??_PID+1
   967  007E  0AD8               	incf	??_PID,f
   968  007F  1903               	skipnz
   969  0080  0AD9               	incf	??_PID+1,f
   970  0081  0856               	movf	PID@set,w
   971  0082  0758               	addwf	??_PID,w
   972  0083  00A9               	movwf	___awtoft@c
   973  0084  0857               	movf	PID@set+1,w
   974  0085  3D59               	addwfc	??_PID+1,w
   975  0086  00AA               	movwf	___awtoft@c+1
   976  0087  2674               	fcall	___awtoft
   977  0088  0020               	movlb	0	; select bank0
   978  0089  0829               	movf	?___awtoft,w
   979  008A  00DF               	movwf	PID@error
   980  008B  082A               	movf	?___awtoft+1,w
   981  008C  00E0               	movwf	PID@error+1
   982  008D  082B               	movf	?___awtoft+2,w
   983  008E  00E1               	movwf	PID@error+2
   984                           
   985                           ;main.c: 154: pid = error*kp;
   986  008F  0021               	movlb	1	; select bank1
   987  0090  0826               	movf	_kp^(0+128),w
   988  0091  0020               	movlb	0	; select bank0
   989  0092  00B9               	movwf	___ftmul@f1
   990  0093  0021               	movlb	1	; select bank1
   991  0094  0827               	movf	(_kp+1)^(0+128),w
   992  0095  0020               	movlb	0	; select bank0
   993  0096  00BA               	movwf	___ftmul@f1+1
   994  0097  0021               	movlb	1	; select bank1
   995  0098  0828               	movf	(_kp+2)^(0+128),w
   996  0099  0020               	movlb	0	; select bank0
   997  009A  00BB               	movwf	___ftmul@f1+2
   998  009B  085F               	movf	PID@error,w
   999  009C  00BC               	movwf	___ftmul@f2
  1000  009D  0860               	movf	PID@error+1,w
  1001  009E  00BD               	movwf	___ftmul@f2+1
  1002  009F  0861               	movf	PID@error+2,w
  1003  00A0  00BE               	movwf	___ftmul@f2+2
  1004  00A1  22F2               	fcall	___ftmul
  1005  00A2  0020               	movlb	0	; select bank0
  1006  00A3  0839               	movf	?___ftmul,w
  1007  00A4  00E2               	movwf	PID@pid
  1008  00A5  083A               	movf	?___ftmul+1,w
  1009  00A6  00E3               	movwf	PID@pid+1
  1010  00A7  083B               	movf	?___ftmul+2,w
  1011  00A8  00E4               	movwf	PID@pid+2
  1012                           
  1013                           ;main.c: 155: accumulator += error;
  1014  00A9  085F               	movf	PID@error,w
  1015  00AA  00C9               	movwf	___ftadd@f1
  1016  00AB  0860               	movf	PID@error+1,w
  1017  00AC  00CA               	movwf	___ftadd@f1+1
  1018  00AD  0861               	movf	PID@error+2,w
  1019  00AE  00CB               	movwf	___ftadd@f1+2
  1020  00AF  0021               	movlb	1	; select bank1
  1021  00B0  082E               	movf	_accumulator^(0+128),w
  1022  00B1  0020               	movlb	0	; select bank0
  1023  00B2  00CC               	movwf	___ftadd@f2
  1024  00B3  0021               	movlb	1	; select bank1
  1025  00B4  082F               	movf	(_accumulator+1)^(0+128),w
  1026  00B5  0020               	movlb	0	; select bank0
  1027  00B6  00CD               	movwf	___ftadd@f2+1
  1028  00B7  0021               	movlb	1	; select bank1
  1029  00B8  0830               	movf	(_accumulator+2)^(0+128),w
  1030  00B9  0020               	movlb	0	; select bank0
  1031  00BA  00CE               	movwf	___ftadd@f2+2
  1032  00BB  21FD               	fcall	___ftadd
  1033  00BC  0020               	movlb	0	; select bank0
  1034  00BD  0849               	movf	?___ftadd,w
  1035  00BE  0021               	movlb	1	; select bank1
  1036  00BF  00AE               	movwf	_accumulator^(0+128)
  1037  00C0  0020               	movlb	0	; select bank0
  1038  00C1  084A               	movf	?___ftadd+1,w
  1039  00C2  0021               	movlb	1	; select bank1
  1040  00C3  00AF               	movwf	(_accumulator+1)^(0+128)
  1041  00C4  0020               	movlb	0	; select bank0
  1042  00C5  084B               	movf	?___ftadd+2,w
  1043  00C6  0021               	movlb	1	; select bank1
  1044  00C7  00B0               	movwf	(_accumulator+2)^(0+128)
  1045                           
  1046                           ;main.c: 156: pid += ki*accumulator;
  1047  00C8  0820               	movf	_ki^(0+128),w
  1048  00C9  0020               	movlb	0	; select bank0
  1049  00CA  00BC               	movwf	___ftmul@f2
  1050  00CB  0021               	movlb	1	; select bank1
  1051  00CC  0821               	movf	(_ki+1)^(0+128),w
  1052  00CD  0020               	movlb	0	; select bank0
  1053  00CE  00BD               	movwf	___ftmul@f2+1
  1054  00CF  0021               	movlb	1	; select bank1
  1055  00D0  0822               	movf	(_ki+2)^(0+128),w
  1056  00D1  0020               	movlb	0	; select bank0
  1057  00D2  00BE               	movwf	___ftmul@f2+2
  1058  00D3  0021               	movlb	1	; select bank1
  1059  00D4  082E               	movf	_accumulator^(0+128),w
  1060  00D5  0020               	movlb	0	; select bank0
  1061  00D6  00B9               	movwf	___ftmul@f1
  1062  00D7  0021               	movlb	1	; select bank1
  1063  00D8  082F               	movf	(_accumulator+1)^(0+128),w
  1064  00D9  0020               	movlb	0	; select bank0
  1065  00DA  00BA               	movwf	___ftmul@f1+1
  1066  00DB  0021               	movlb	1	; select bank1
  1067  00DC  0830               	movf	(_accumulator+2)^(0+128),w
  1068  00DD  0020               	movlb	0	; select bank0
  1069  00DE  00BB               	movwf	___ftmul@f1+2
  1070  00DF  22F2               	fcall	___ftmul
  1071  00E0  0020               	movlb	0	; select bank0
  1072  00E1  0839               	movf	?___ftmul,w
  1073  00E2  00C9               	movwf	___ftadd@f1
  1074  00E3  083A               	movf	?___ftmul+1,w
  1075  00E4  00CA               	movwf	___ftadd@f1+1
  1076  00E5  083B               	movf	?___ftmul+2,w
  1077  00E6  00CB               	movwf	___ftadd@f1+2
  1078  00E7  0862               	movf	PID@pid,w
  1079  00E8  00CC               	movwf	___ftadd@f2
  1080  00E9  0863               	movf	PID@pid+1,w
  1081  00EA  00CD               	movwf	___ftadd@f2+1
  1082  00EB  0864               	movf	PID@pid+2,w
  1083  00EC  00CE               	movwf	___ftadd@f2+2
  1084  00ED  21FD               	fcall	___ftadd
  1085  00EE  0020               	movlb	0	; select bank0
  1086  00EF  0849               	movf	?___ftadd,w
  1087  00F0  00E2               	movwf	PID@pid
  1088  00F1  084A               	movf	?___ftadd+1,w
  1089  00F2  00E3               	movwf	PID@pid+1
  1090  00F3  084B               	movf	?___ftadd+2,w
  1091  00F4  00E4               	movwf	PID@pid+2
  1092                           
  1093                           ;main.c: 157: pid += kd*(error-lasterror);
  1094  00F5  0021               	movlb	1	; select bank1
  1095  00F6  082B               	movf	_lasterror^(0+128),w
  1096  00F7  0020               	movlb	0	; select bank0
  1097  00F8  00A1               	movwf	___ftneg@f1
  1098  00F9  0021               	movlb	1	; select bank1
  1099  00FA  082C               	movf	(_lasterror+1)^(0+128),w
  1100  00FB  0020               	movlb	0	; select bank0
  1101  00FC  00A2               	movwf	___ftneg@f1+1
  1102  00FD  0021               	movlb	1	; select bank1
  1103  00FE  082D               	movf	(_lasterror+2)^(0+128),w
  1104  00FF  0020               	movlb	0	; select bank0
  1105  0100  00A3               	movwf	___ftneg@f1+2
  1106  0101  26C7               	fcall	___ftneg
  1107  0102  0020               	movlb	0	; select bank0
  1108  0103  0821               	movf	?___ftneg,w
  1109  0104  00CC               	movwf	___ftadd@f2
  1110  0105  0822               	movf	?___ftneg+1,w
  1111  0106  00CD               	movwf	___ftadd@f2+1
  1112  0107  0823               	movf	?___ftneg+2,w
  1113  0108  00CE               	movwf	___ftadd@f2+2
  1114  0109  085F               	movf	PID@error,w
  1115  010A  00C9               	movwf	___ftadd@f1
  1116  010B  0860               	movf	PID@error+1,w
  1117  010C  00CA               	movwf	___ftadd@f1+1
  1118  010D  0861               	movf	PID@error+2,w
  1119  010E  00CB               	movwf	___ftadd@f1+2
  1120  010F  21FD               	fcall	___ftadd
  1121  0110  0020               	movlb	0	; select bank0
  1122  0111  0849               	movf	?___ftadd,w
  1123  0112  00BC               	movwf	___ftmul@f2
  1124  0113  084A               	movf	?___ftadd+1,w
  1125  0114  00BD               	movwf	___ftmul@f2+1
  1126  0115  084B               	movf	?___ftadd+2,w
  1127  0116  00BE               	movwf	___ftmul@f2+2
  1128  0117  0021               	movlb	1	; select bank1
  1129  0118  0823               	movf	_kd^(0+128),w
  1130  0119  0020               	movlb	0	; select bank0
  1131  011A  00B9               	movwf	___ftmul@f1
  1132  011B  0021               	movlb	1	; select bank1
  1133  011C  0824               	movf	(_kd+1)^(0+128),w
  1134  011D  0020               	movlb	0	; select bank0
  1135  011E  00BA               	movwf	___ftmul@f1+1
  1136  011F  0021               	movlb	1	; select bank1
  1137  0120  0825               	movf	(_kd+2)^(0+128),w
  1138  0121  0020               	movlb	0	; select bank0
  1139  0122  00BB               	movwf	___ftmul@f1+2
  1140  0123  22F2               	fcall	___ftmul
  1141  0124  0020               	movlb	0	; select bank0
  1142  0125  0839               	movf	?___ftmul,w
  1143  0126  00DA               	movwf	_PID$756
  1144  0127  083A               	movf	?___ftmul+1,w
  1145  0128  00DB               	movwf	_PID$756+1
  1146  0129  083B               	movf	?___ftmul+2,w
  1147  012A  00DC               	movwf	_PID$756+2
  1148                           
  1149                           ;main.c: 157: pid += kd*(error-lasterror);
  1150  012B  085A               	movf	_PID$756,w
  1151  012C  00C9               	movwf	___ftadd@f1
  1152  012D  085B               	movf	_PID$756+1,w
  1153  012E  00CA               	movwf	___ftadd@f1+1
  1154  012F  085C               	movf	_PID$756+2,w
  1155  0130  00CB               	movwf	___ftadd@f1+2
  1156  0131  0862               	movf	PID@pid,w
  1157  0132  00CC               	movwf	___ftadd@f2
  1158  0133  0863               	movf	PID@pid+1,w
  1159  0134  00CD               	movwf	___ftadd@f2+1
  1160  0135  0864               	movf	PID@pid+2,w
  1161  0136  00CE               	movwf	___ftadd@f2+2
  1162  0137  21FD               	fcall	___ftadd
  1163  0138  0020               	movlb	0	; select bank0
  1164  0139  0849               	movf	?___ftadd,w
  1165  013A  00E2               	movwf	PID@pid
  1166  013B  084A               	movf	?___ftadd+1,w
  1167  013C  00E3               	movwf	PID@pid+1
  1168  013D  084B               	movf	?___ftadd+2,w
  1169  013E  00E4               	movwf	PID@pid+2
  1170                           
  1171                           ;main.c: 158: lasterror = error;
  1172  013F  085F               	movf	PID@error,w
  1173  0140  0021               	movlb	1	; select bank1
  1174  0141  00AB               	movwf	_lasterror^(0+128)
  1175  0142  0020               	movlb	0	; select bank0
  1176  0143  0860               	movf	PID@error+1,w
  1177  0144  0021               	movlb	1	; select bank1
  1178  0145  00AC               	movwf	(_lasterror+1)^(0+128)
  1179  0146  0020               	movlb	0	; select bank0
  1180  0147  0861               	movf	PID@error+2,w
  1181  0148  0021               	movlb	1	; select bank1
  1182  0149  00AD               	movwf	(_lasterror+2)^(0+128)
  1183                           
  1184                           ;main.c: 159: if(pid >= 2047)
  1185  014A  0020               	movlb	0	; select bank0
  1186  014B  0862               	movf	PID@pid,w
  1187  014C  00A1               	movwf	___ftge@ff1
  1188  014D  0863               	movf	PID@pid+1,w
  1189  014E  00A2               	movwf	___ftge@ff1+1
  1190  014F  0864               	movf	PID@pid+2,w
  1191  0150  00A3               	movwf	___ftge@ff1+2
  1192  0151  30E0               	movlw	224
  1193  0152  00A4               	movwf	___ftge@ff2
  1194  0153  30FF               	movlw	255
  1195  0154  00A5               	movwf	___ftge@ff2+1
  1196  0155  3044               	movlw	68
  1197  0156  00A6               	movwf	___ftge@ff2+2
  1198  0157  25AF               	fcall	___ftge
  1199  0158  1C03               	btfss	3,0
  1200  0159  2961               	goto	l1846
  1201                           
  1202                           ;main.c: 160: {
  1203                           ;main.c: 161: pid = 2047;
  1204  015A  30E0               	movlw	224
  1205  015B  0020               	movlb	0	; select bank0
  1206  015C  00E2               	movwf	PID@pid
  1207  015D  30FF               	movlw	255
  1208  015E  00E3               	movwf	PID@pid+1
  1209  015F  3044               	movlw	68
  1210  0160  00E4               	movwf	PID@pid+2
  1211  0161                     l1846:	
  1212                           
  1213                           ;main.c: 162: }
  1214                           ;main.c: 163: if(pid <= 0)
  1215  0161  3000               	movlw	0
  1216  0162  0020               	movlb	0	; select bank0
  1217  0163  00A1               	movwf	___ftge@ff1
  1218  0164  3000               	movlw	0
  1219  0165  00A2               	movwf	___ftge@ff1+1
  1220  0166  3000               	movlw	0
  1221  0167  00A3               	movwf	___ftge@ff1+2
  1222  0168  0862               	movf	PID@pid,w
  1223  0169  00A4               	movwf	___ftge@ff2
  1224  016A  0863               	movf	PID@pid+1,w
  1225  016B  00A5               	movwf	___ftge@ff2+1
  1226  016C  0864               	movf	PID@pid+2,w
  1227  016D  00A6               	movwf	___ftge@ff2+2
  1228  016E  25AF               	fcall	___ftge
  1229  016F  1C03               	btfss	3,0
  1230  0170  2978               	goto	l1850
  1231                           
  1232                           ;main.c: 164: {
  1233                           ;main.c: 165: pid = 0;
  1234  0171  3000               	movlw	0
  1235  0172  0020               	movlb	0	; select bank0
  1236  0173  00E2               	movwf	PID@pid
  1237  0174  3000               	movlw	0
  1238  0175  00E3               	movwf	PID@pid+1
  1239  0176  3000               	movlw	0
  1240  0177  00E4               	movwf	PID@pid+2
  1241  0178                     l1850:	
  1242                           
  1243                           ;main.c: 166: }
  1244                           ;main.c: 167: pid = (-1023+((2046)*((pid)/(2047))));
  1245  0178  30C0               	movlw	192
  1246  0179  0020               	movlb	0	; select bank0
  1247  017A  00C9               	movwf	___ftadd@f1
  1248  017B  307F               	movlw	127
  1249  017C  00CA               	movwf	___ftadd@f1+1
  1250  017D  30C4               	movlw	196
  1251  017E  00CB               	movwf	___ftadd@f1+2
  1252  017F  30C0               	movlw	192
  1253  0180  00B9               	movwf	___ftmul@f1
  1254  0181  30FF               	movlw	255
  1255  0182  00BA               	movwf	___ftmul@f1+1
  1256  0183  3044               	movlw	68
  1257  0184  00BB               	movwf	___ftmul@f1+2
  1258  0185  30E0               	movlw	224
  1259  0186  00A9               	movwf	___ftdiv@f2
  1260  0187  30FF               	movlw	255
  1261  0188  00AA               	movwf	___ftdiv@f2+1
  1262  0189  3044               	movlw	68
  1263  018A  00AB               	movwf	___ftdiv@f2+2
  1264  018B  0862               	movf	PID@pid,w
  1265  018C  00AC               	movwf	___ftdiv@f1
  1266  018D  0863               	movf	PID@pid+1,w
  1267  018E  00AD               	movwf	___ftdiv@f1+1
  1268  018F  0864               	movf	PID@pid+2,w
  1269  0190  00AE               	movwf	___ftdiv@f1+2
  1270  0191  23A5               	fcall	___ftdiv
  1271  0192  0020               	movlb	0	; select bank0
  1272  0193  0829               	movf	?___ftdiv,w
  1273  0194  00BC               	movwf	___ftmul@f2
  1274  0195  082A               	movf	?___ftdiv+1,w
  1275  0196  00BD               	movwf	___ftmul@f2+1
  1276  0197  082B               	movf	?___ftdiv+2,w
  1277  0198  00BE               	movwf	___ftmul@f2+2
  1278  0199  22F2               	fcall	___ftmul
  1279  019A  0020               	movlb	0	; select bank0
  1280  019B  0839               	movf	?___ftmul,w
  1281  019C  00CC               	movwf	___ftadd@f2
  1282  019D  083A               	movf	?___ftmul+1,w
  1283  019E  00CD               	movwf	___ftadd@f2+1
  1284  019F  083B               	movf	?___ftmul+2,w
  1285  01A0  00CE               	movwf	___ftadd@f2+2
  1286  01A1  21FD               	fcall	___ftadd
  1287  01A2  0020               	movlb	0	; select bank0
  1288  01A3  0849               	movf	?___ftadd,w
  1289  01A4  00E2               	movwf	PID@pid
  1290  01A5  084A               	movf	?___ftadd+1,w
  1291  01A6  00E3               	movwf	PID@pid+1
  1292  01A7  084B               	movf	?___ftadd+2,w
  1293  01A8  00E4               	movwf	PID@pid+2
  1294                           
  1295                           ;main.c: 168: if(set < 600)
  1296  01A9  0857               	movf	PID@set+1,w
  1297  01AA  3A80               	xorlw	128
  1298  01AB  00D8               	movwf	??_PID
  1299  01AC  3082               	movlw	130
  1300  01AD  0258               	subwf	??_PID,w
  1301  01AE  1D03               	skipz
  1302  01AF  29B2               	goto	u2785
  1303  01B0  3058               	movlw	88
  1304  01B1  0256               	subwf	PID@set,w
  1305  01B2                     u2785:	
  1306  01B2  1803               	skipnc
  1307  01B3  29CB               	goto	l82
  1308                           
  1309                           ;main.c: 169: {
  1310                           ;main.c: 170: if(pid > 0)
  1311  01B4  3000               	movlw	0
  1312  01B5  0020               	movlb	0	; select bank0
  1313  01B6  00A1               	movwf	___ftge@ff1
  1314  01B7  3000               	movlw	0
  1315  01B8  00A2               	movwf	___ftge@ff1+1
  1316  01B9  3000               	movlw	0
  1317  01BA  00A3               	movwf	___ftge@ff1+2
  1318  01BB  0862               	movf	PID@pid,w
  1319  01BC  00A4               	movwf	___ftge@ff2
  1320  01BD  0863               	movf	PID@pid+1,w
  1321  01BE  00A5               	movwf	___ftge@ff2+1
  1322  01BF  0864               	movf	PID@pid+2,w
  1323  01C0  00A6               	movwf	___ftge@ff2+2
  1324  01C1  25AF               	fcall	___ftge
  1325  01C2  1803               	btfsc	3,0
  1326  01C3  29CB               	goto	l82
  1327                           
  1328                           ;main.c: 171: {
  1329                           ;main.c: 172: pid = 0;
  1330  01C4  3000               	movlw	0
  1331  01C5  0020               	movlb	0	; select bank0
  1332  01C6  00E2               	movwf	PID@pid
  1333  01C7  3000               	movlw	0
  1334  01C8  00E3               	movwf	PID@pid+1
  1335  01C9  3000               	movlw	0
  1336  01CA  00E4               	movwf	PID@pid+2
  1337  01CB                     l82:	
  1338                           
  1339                           ;main.c: 173: }
  1340                           ;main.c: 174: }
  1341                           ;main.c: 175: if(set > 600)
  1342  01CB  0020               	movlb	0	; select bank0
  1343  01CC  0857               	movf	PID@set+1,w
  1344  01CD  3A80               	xorlw	128
  1345  01CE  00D8               	movwf	??_PID
  1346  01CF  3082               	movlw	130
  1347  01D0  0258               	subwf	??_PID,w
  1348  01D1  1D03               	skipz
  1349  01D2  29D5               	goto	u2805
  1350  01D3  3059               	movlw	89
  1351  01D4  0256               	subwf	PID@set,w
  1352  01D5                     u2805:	
  1353  01D5  1C03               	skipc
  1354  01D6  29EE               	goto	l1862
  1355                           
  1356                           ;main.c: 176: {
  1357                           ;main.c: 177: if(pid < 0)
  1358  01D7  0020               	movlb	0	; select bank0
  1359  01D8  0862               	movf	PID@pid,w
  1360  01D9  00A1               	movwf	___ftge@ff1
  1361  01DA  0863               	movf	PID@pid+1,w
  1362  01DB  00A2               	movwf	___ftge@ff1+1
  1363  01DC  0864               	movf	PID@pid+2,w
  1364  01DD  00A3               	movwf	___ftge@ff1+2
  1365  01DE  3000               	movlw	0
  1366  01DF  00A4               	movwf	___ftge@ff2
  1367  01E0  3000               	movlw	0
  1368  01E1  00A5               	movwf	___ftge@ff2+1
  1369  01E2  3000               	movlw	0
  1370  01E3  00A6               	movwf	___ftge@ff2+2
  1371  01E4  25AF               	fcall	___ftge
  1372  01E5  1803               	btfsc	3,0
  1373  01E6  29EE               	goto	l1862
  1374                           
  1375                           ;main.c: 178: {
  1376                           ;main.c: 179: pid = 0;
  1377  01E7  3000               	movlw	0
  1378  01E8  0020               	movlb	0	; select bank0
  1379  01E9  00E2               	movwf	PID@pid
  1380  01EA  3000               	movlw	0
  1381  01EB  00E3               	movwf	PID@pid+1
  1382  01EC  3000               	movlw	0
  1383  01ED  00E4               	movwf	PID@pid+2
  1384  01EE                     l1862:	
  1385                           
  1386                           ;main.c: 180: }
  1387                           ;main.c: 181: }
  1388                           ;main.c: 182: M_control((int)pid);
  1389  01EE  0020               	movlb	0	; select bank0
  1390  01EF  0862               	movf	PID@pid,w
  1391  01F0  00A1               	movwf	___fttol@f1
  1392  01F1  0863               	movf	PID@pid+1,w
  1393  01F2  00A2               	movwf	___fttol@f1+1
  1394  01F3  0864               	movf	PID@pid+2,w
  1395  01F4  00A3               	movwf	___fttol@f1+2
  1396  01F5  244D               	fcall	___fttol
  1397  01F6  0020               	movlb	0	; select bank0
  1398  01F7  0822               	movf	?___fttol+1,w
  1399  01F8  00B0               	movwf	M_control@ctr+1
  1400  01F9  0821               	movf	?___fttol,w
  1401  01FA  00AF               	movwf	M_control@ctr
  1402  01FB  261F               	fcall	_M_control
  1403  01FC  0008               	return
  1404  01FD                     __end_of_PID:	
  1405                           
  1406                           	psect	text3
  1407  044D                     __ptext3:	
  1408 ;; *************** function ___fttol *****************
  1409 ;; Defined at:
  1410 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  f1              3    1[BANK0 ] float 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  lval            4   10[BANK0 ] unsigned long 
  1415 ;;  exp1            1   14[BANK0 ] unsigned char 
  1416 ;;  sign1           1    9[BANK0 ] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  4    1[BANK0 ] long 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1
  1426 ;;      Params:         0       4       0
  1427 ;;      Locals:         0       6       0
  1428 ;;      Temps:          0       4       0
  1429 ;;      Totals:         0      14       0
  1430 ;;Total ram usage:       14 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    2
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_PID
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function ___fttol
  1442  044D                     ___fttol:	
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1446  044D  0020               	movlb	0	; select bank0
  1447  044E  0821               	movf	___fttol@f1,w
  1448  044F  00A5               	movwf	??___fttol
  1449  0450  0822               	movf	___fttol@f1+1,w
  1450  0451  00A6               	movwf	??___fttol+1
  1451  0452  0823               	movf	___fttol@f1+2,w
  1452  0453  00A7               	movwf	??___fttol+2
  1453  0454  1003               	clrc
  1454  0455  0D26               	rlf	??___fttol+1,w
  1455  0456  0D27               	rlf	??___fttol+2,w
  1456  0457  00A8               	movwf	??___fttol+3
  1457  0458  0828               	movf	??___fttol+3,w
  1458  0459  00AE               	movwf	___fttol@exp1
  1459  045A  082E               	movf	___fttol@exp1,w
  1460  045B  1D03               	btfss	3,2
  1461  045C  2C66               	goto	l1780
  1462  045D  3000               	movlw	0
  1463  045E  00A4               	movwf	?___fttol+3
  1464  045F  3000               	movlw	0
  1465  0460  00A3               	movwf	?___fttol+2
  1466  0461  3000               	movlw	0
  1467  0462  00A2               	movwf	?___fttol+1
  1468  0463  3000               	movlw	0
  1469  0464  00A1               	movwf	?___fttol
  1470  0465  0008               	return
  1471  0466                     l1780:	
  1472  0466  0821               	movf	___fttol@f1,w
  1473  0467  00A5               	movwf	??___fttol
  1474  0468  0822               	movf	___fttol@f1+1,w
  1475  0469  00A6               	movwf	??___fttol+1
  1476  046A  0823               	movf	___fttol@f1+2,w
  1477  046B  00A7               	movwf	??___fttol+2
  1478  046C  3017               	movlw	23
  1479  046D                     u2675:	
  1480  046D  36A7               	lsrf	??___fttol+2,f
  1481  046E  0CA6               	rrf	??___fttol+1,f
  1482  046F  0CA5               	rrf	??___fttol,f
  1483  0470  0B89               	decfsz	9,f
  1484  0471  2C6D               	goto	u2675
  1485  0472  0825               	movf	??___fttol,w
  1486  0473  00A8               	movwf	??___fttol+3
  1487  0474  0828               	movf	??___fttol+3,w
  1488  0475  00A9               	movwf	___fttol@sign1
  1489  0476  17A2               	bsf	___fttol@f1+1,7
  1490  0477  30FF               	movlw	255
  1491  0478  05A1               	andwf	___fttol@f1,f
  1492  0479  30FF               	movlw	255
  1493  047A  05A2               	andwf	___fttol@f1+1,f
  1494  047B  3000               	movlw	0
  1495  047C  05A3               	andwf	___fttol@f1+2,f
  1496  047D  0821               	movf	___fttol@f1,w
  1497  047E  00AA               	movwf	___fttol@lval
  1498  047F  0822               	movf	___fttol@f1+1,w
  1499  0480  00AB               	movwf	___fttol@lval+1
  1500  0481  0823               	movf	___fttol@f1+2,w
  1501  0482  00AC               	movwf	___fttol@lval+2
  1502  0483  01AD               	clrf	___fttol@lval+3
  1503  0484  308E               	movlw	142
  1504  0485  02AE               	subwf	___fttol@exp1,f
  1505  0486  1FAE               	btfss	___fttol@exp1,7
  1506  0487  2CA4               	goto	l1800
  1507  0488  082E               	movf	___fttol@exp1,w
  1508  0489  3A80               	xorlw	128
  1509  048A  3E8F               	addlw	143
  1510  048B  1803               	skipnc
  1511  048C  2C96               	goto	l1798
  1512  048D  3000               	movlw	0
  1513  048E  00A4               	movwf	?___fttol+3
  1514  048F  3000               	movlw	0
  1515  0490  00A3               	movwf	?___fttol+2
  1516  0491  3000               	movlw	0
  1517  0492  00A2               	movwf	?___fttol+1
  1518  0493  3000               	movlw	0
  1519  0494  00A1               	movwf	?___fttol
  1520  0495  0008               	return
  1521  0496                     l1798:	
  1522  0496  3001               	movlw	1
  1523  0497                     u2705:	
  1524  0497  36AD               	lsrf	___fttol@lval+3,f
  1525  0498  0CAC               	rrf	___fttol@lval+2,f
  1526  0499  0CAB               	rrf	___fttol@lval+1,f
  1527  049A  0CAA               	rrf	___fttol@lval,f
  1528  049B  0B89               	decfsz	9,f
  1529  049C  2C97               	goto	u2705
  1530  049D  3001               	movlw	1
  1531  049E  00A5               	movwf	??___fttol
  1532  049F  0825               	movf	??___fttol,w
  1533  04A0  07AE               	addwf	___fttol@exp1,f
  1534  04A1  1903               	btfsc	3,2
  1535  04A2  2CBD               	goto	l1808
  1536  04A3  2C96               	goto	l1798
  1537  04A4                     l1800:	
  1538  04A4  3018               	movlw	24
  1539  04A5  022E               	subwf	___fttol@exp1,w
  1540  04A6  1C03               	skipc
  1541  04A7  2CBA               	goto	l434
  1542  04A8  3000               	movlw	0
  1543  04A9  00A4               	movwf	?___fttol+3
  1544  04AA  3000               	movlw	0
  1545  04AB  00A3               	movwf	?___fttol+2
  1546  04AC  3000               	movlw	0
  1547  04AD  00A2               	movwf	?___fttol+1
  1548  04AE  3000               	movlw	0
  1549  04AF  00A1               	movwf	?___fttol
  1550  04B0  0008               	return
  1551  04B1                     l1806:	
  1552  04B1  3001               	movlw	1
  1553  04B2                     u2735:	
  1554  04B2  35AA               	lslf	___fttol@lval,f
  1555  04B3  0DAB               	rlf	___fttol@lval+1,f
  1556  04B4  0DAC               	rlf	___fttol@lval+2,f
  1557  04B5  0DAD               	rlf	___fttol@lval+3,f
  1558  04B6  0B89               	decfsz	9,f
  1559  04B7  2CB2               	goto	u2735
  1560  04B8  3001               	movlw	1
  1561  04B9  02AE               	subwf	___fttol@exp1,f
  1562  04BA                     l434:	
  1563  04BA  082E               	movf	___fttol@exp1,w
  1564  04BB  1D03               	btfss	3,2
  1565  04BC  2CB1               	goto	l1806
  1566  04BD                     l1808:	
  1567  04BD  0829               	movf	___fttol@sign1,w
  1568  04BE  1903               	btfsc	3,2
  1569  04BF  2CCB               	goto	l1812
  1570  04C0  09AA               	comf	___fttol@lval,f
  1571  04C1  09AB               	comf	___fttol@lval+1,f
  1572  04C2  09AC               	comf	___fttol@lval+2,f
  1573  04C3  09AD               	comf	___fttol@lval+3,f
  1574  04C4  0AAA               	incf	___fttol@lval,f
  1575  04C5  1903               	skipnz
  1576  04C6  0AAB               	incf	___fttol@lval+1,f
  1577  04C7  1903               	skipnz
  1578  04C8  0AAC               	incf	___fttol@lval+2,f
  1579  04C9  1903               	skipnz
  1580  04CA  0AAD               	incf	___fttol@lval+3,f
  1581  04CB                     l1812:	
  1582  04CB  082D               	movf	___fttol@lval+3,w
  1583  04CC  00A4               	movwf	?___fttol+3
  1584  04CD  082C               	movf	___fttol@lval+2,w
  1585  04CE  00A3               	movwf	?___fttol+2
  1586  04CF  082B               	movf	___fttol@lval+1,w
  1587  04D0  00A2               	movwf	?___fttol+1
  1588  04D1  082A               	movf	___fttol@lval,w
  1589  04D2  00A1               	movwf	?___fttol
  1590  04D3  0008               	return
  1591  04D4                     __end_of___fttol:	
  1592                           
  1593                           	psect	text4
  1594  06C7                     __ptext4:	
  1595 ;; *************** function ___ftneg *****************
  1596 ;; Defined at:
  1597 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  f1              3    1[BANK0 ] float 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  3    1[BANK0 ] float 
  1604 ;; Registers used:
  1605 ;;		wreg
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1
  1611 ;;      Params:         0       3       0
  1612 ;;      Locals:         0       0       0
  1613 ;;      Temps:          0       0       0
  1614 ;;      Totals:         0       3       0
  1615 ;;Total ram usage:        3 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    2
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_PID
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function ___ftneg
  1627  06C7                     ___ftneg:	
  1628                           
  1629                           ;incstack = 0
  1630                           ; Regs used in ___ftneg: [wreg]
  1631  06C7  0020               	movlb	0	; select bank0
  1632  06C8  0823               	movf	___ftneg@f1+2,w
  1633  06C9  0422               	iorwf	___ftneg@f1+1,w
  1634  06CA  0421               	iorwf	___ftneg@f1,w
  1635  06CB  1903               	skipnz
  1636  06CC  0008               	return
  1637  06CD  3080               	movlw	128
  1638  06CE  06A3               	xorwf	___ftneg@f1+2,f
  1639  06CF  0008               	return
  1640  06D0                     __end_of___ftneg:	
  1641                           
  1642                           	psect	text5
  1643  02F2                     __ptext5:	
  1644 ;; *************** function ___ftmul *****************
  1645 ;; Defined at:
  1646 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  f1              3   25[BANK0 ] float 
  1649 ;;  f2              3   28[BANK0 ] float 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  1652 ;;  sign            1   40[BANK0 ] unsigned char 
  1653 ;;  cntr            1   39[BANK0 ] unsigned char 
  1654 ;;  exp             1   35[BANK0 ] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  3   25[BANK0 ] float 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1
  1664 ;;      Params:         0       6       0
  1665 ;;      Locals:         0       6       0
  1666 ;;      Temps:          0       4       0
  1667 ;;      Totals:         0      16       0
  1668 ;;Total ram usage:       16 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		___ftpack
  1673 ;; This function is called by:
  1674 ;;		_PID
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function ___ftmul
  1680  02F2                     ___ftmul:	
  1681                           
  1682                           ;incstack = 0
  1683                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1684  02F2  0020               	movlb	0	; select bank0
  1685  02F3  0839               	movf	___ftmul@f1,w
  1686  02F4  00BF               	movwf	??___ftmul
  1687  02F5  083A               	movf	___ftmul@f1+1,w
  1688  02F6  00C0               	movwf	??___ftmul+1
  1689  02F7  083B               	movf	___ftmul@f1+2,w
  1690  02F8  00C1               	movwf	??___ftmul+2
  1691  02F9  1003               	clrc
  1692  02FA  0D40               	rlf	??___ftmul+1,w
  1693  02FB  0D41               	rlf	??___ftmul+2,w
  1694  02FC  00C2               	movwf	??___ftmul+3
  1695  02FD  0842               	movf	??___ftmul+3,w
  1696  02FE  00C3               	movwf	___ftmul@exp
  1697  02FF  0843               	movf	___ftmul@exp,w
  1698  0300  1D03               	btfss	3,2
  1699  0301  2B09               	goto	l1722
  1700  0302  3000               	movlw	0
  1701  0303  00B9               	movwf	?___ftmul
  1702  0304  3000               	movlw	0
  1703  0305  00BA               	movwf	?___ftmul+1
  1704  0306  3000               	movlw	0
  1705  0307  00BB               	movwf	?___ftmul+2
  1706  0308  0008               	return
  1707  0309                     l1722:	
  1708  0309  083C               	movf	___ftmul@f2,w
  1709  030A  00BF               	movwf	??___ftmul
  1710  030B  083D               	movf	___ftmul@f2+1,w
  1711  030C  00C0               	movwf	??___ftmul+1
  1712  030D  083E               	movf	___ftmul@f2+2,w
  1713  030E  00C1               	movwf	??___ftmul+2
  1714  030F  1003               	clrc
  1715  0310  0D40               	rlf	??___ftmul+1,w
  1716  0311  0D41               	rlf	??___ftmul+2,w
  1717  0312  00C2               	movwf	??___ftmul+3
  1718  0313  0842               	movf	??___ftmul+3,w
  1719  0314  00C8               	movwf	___ftmul@sign
  1720  0315  0848               	movf	___ftmul@sign,w
  1721  0316  1D03               	btfss	3,2
  1722  0317  2B1F               	goto	l1728
  1723  0318  3000               	movlw	0
  1724  0319  00B9               	movwf	?___ftmul
  1725  031A  3000               	movlw	0
  1726  031B  00BA               	movwf	?___ftmul+1
  1727  031C  3000               	movlw	0
  1728  031D  00BB               	movwf	?___ftmul+2
  1729  031E  0008               	return
  1730  031F                     l1728:	
  1731  031F  0848               	movf	___ftmul@sign,w
  1732  0320  3E7B               	addlw	123
  1733  0321  00BF               	movwf	??___ftmul
  1734  0322  083F               	movf	??___ftmul,w
  1735  0323  07C3               	addwf	___ftmul@exp,f
  1736  0324  0839               	movf	___ftmul@f1,w
  1737  0325  00BF               	movwf	??___ftmul
  1738  0326  083A               	movf	___ftmul@f1+1,w
  1739  0327  00C0               	movwf	??___ftmul+1
  1740  0328  083B               	movf	___ftmul@f1+2,w
  1741  0329  00C1               	movwf	??___ftmul+2
  1742  032A  3010               	movlw	16
  1743  032B                     u2555:	
  1744  032B  36C1               	lsrf	??___ftmul+2,f
  1745  032C  0CC0               	rrf	??___ftmul+1,f
  1746  032D  0CBF               	rrf	??___ftmul,f
  1747  032E  0B89               	decfsz	9,f
  1748  032F  2B2B               	goto	u2555
  1749  0330  083F               	movf	??___ftmul,w
  1750  0331  00C2               	movwf	??___ftmul+3
  1751  0332  0842               	movf	??___ftmul+3,w
  1752  0333  00C8               	movwf	___ftmul@sign
  1753  0334  083C               	movf	___ftmul@f2,w
  1754  0335  00BF               	movwf	??___ftmul
  1755  0336  083D               	movf	___ftmul@f2+1,w
  1756  0337  00C0               	movwf	??___ftmul+1
  1757  0338  083E               	movf	___ftmul@f2+2,w
  1758  0339  00C1               	movwf	??___ftmul+2
  1759  033A  3010               	movlw	16
  1760  033B                     u2565:	
  1761  033B  36C1               	lsrf	??___ftmul+2,f
  1762  033C  0CC0               	rrf	??___ftmul+1,f
  1763  033D  0CBF               	rrf	??___ftmul,f
  1764  033E  0B89               	decfsz	9,f
  1765  033F  2B3B               	goto	u2565
  1766  0340  083F               	movf	??___ftmul,w
  1767  0341  00C2               	movwf	??___ftmul+3
  1768  0342  0842               	movf	??___ftmul+3,w
  1769  0343  06C8               	xorwf	___ftmul@sign,f
  1770  0344  3080               	movlw	128
  1771  0345  00BF               	movwf	??___ftmul
  1772  0346  083F               	movf	??___ftmul,w
  1773  0347  05C8               	andwf	___ftmul@sign,f
  1774  0348  17BA               	bsf	___ftmul@f1+1,7
  1775  0349  17BD               	bsf	___ftmul@f2+1,7
  1776  034A  30FF               	movlw	255
  1777  034B  05BC               	andwf	___ftmul@f2,f
  1778  034C  30FF               	movlw	255
  1779  034D  05BD               	andwf	___ftmul@f2+1,f
  1780  034E  3000               	movlw	0
  1781  034F  05BE               	andwf	___ftmul@f2+2,f
  1782  0350  3000               	movlw	0
  1783  0351  00C4               	movwf	___ftmul@f3_as_product
  1784  0352  3000               	movlw	0
  1785  0353  00C5               	movwf	___ftmul@f3_as_product+1
  1786  0354  3000               	movlw	0
  1787  0355  00C6               	movwf	___ftmul@f3_as_product+2
  1788  0356  3007               	movlw	7
  1789  0357  00BF               	movwf	??___ftmul
  1790  0358  083F               	movf	??___ftmul,w
  1791  0359  00C7               	movwf	___ftmul@cntr
  1792  035A                     l1740:	
  1793  035A  1C39               	btfss	___ftmul@f1,0
  1794  035B  2B62               	goto	l1744
  1795  035C  083C               	movf	___ftmul@f2,w
  1796  035D  07C4               	addwf	___ftmul@f3_as_product,f
  1797  035E  083D               	movf	___ftmul@f2+1,w
  1798  035F  3DC5               	addwfc	___ftmul@f3_as_product+1,f
  1799  0360  083E               	movf	___ftmul@f2+2,w
  1800  0361  3DC6               	addwfc	___ftmul@f3_as_product+2,f
  1801  0362                     l1744:	
  1802  0362  3001               	movlw	1
  1803  0363                     u2585:	
  1804  0363  36BB               	lsrf	___ftmul@f1+2,f
  1805  0364  0CBA               	rrf	___ftmul@f1+1,f
  1806  0365  0CB9               	rrf	___ftmul@f1,f
  1807  0366  0B89               	decfsz	9,f
  1808  0367  2B63               	goto	u2585
  1809  0368  3001               	movlw	1
  1810  0369                     u2595:	
  1811  0369  35BC               	lslf	___ftmul@f2,f
  1812  036A  0DBD               	rlf	___ftmul@f2+1,f
  1813  036B  0DBE               	rlf	___ftmul@f2+2,f
  1814  036C  0B89               	decfsz	9,f
  1815  036D  2B69               	goto	u2595
  1816  036E  3001               	movlw	1
  1817  036F  02C7               	subwf	___ftmul@cntr,f
  1818  0370  1D03               	btfss	3,2
  1819  0371  2B5A               	goto	l1740
  1820  0372  3009               	movlw	9
  1821  0373  00BF               	movwf	??___ftmul
  1822  0374  083F               	movf	??___ftmul,w
  1823  0375  00C7               	movwf	___ftmul@cntr
  1824  0376                     l1752:	
  1825  0376  1C39               	btfss	___ftmul@f1,0
  1826  0377  2B7E               	goto	l1756
  1827  0378  083C               	movf	___ftmul@f2,w
  1828  0379  07C4               	addwf	___ftmul@f3_as_product,f
  1829  037A  083D               	movf	___ftmul@f2+1,w
  1830  037B  3DC5               	addwfc	___ftmul@f3_as_product+1,f
  1831  037C  083E               	movf	___ftmul@f2+2,w
  1832  037D  3DC6               	addwfc	___ftmul@f3_as_product+2,f
  1833  037E                     l1756:	
  1834  037E  3001               	movlw	1
  1835  037F                     u2625:	
  1836  037F  36BB               	lsrf	___ftmul@f1+2,f
  1837  0380  0CBA               	rrf	___ftmul@f1+1,f
  1838  0381  0CB9               	rrf	___ftmul@f1,f
  1839  0382  0B89               	decfsz	9,f
  1840  0383  2B7F               	goto	u2625
  1841  0384  3001               	movlw	1
  1842  0385                     u2635:	
  1843  0385  36C6               	lsrf	___ftmul@f3_as_product+2,f
  1844  0386  0CC5               	rrf	___ftmul@f3_as_product+1,f
  1845  0387  0CC4               	rrf	___ftmul@f3_as_product,f
  1846  0388  0B89               	decfsz	9,f
  1847  0389  2B85               	goto	u2635
  1848  038A  3001               	movlw	1
  1849  038B  02C7               	subwf	___ftmul@cntr,f
  1850  038C  1D03               	btfss	3,2
  1851  038D  2B76               	goto	l1752
  1852  038E  0844               	movf	___ftmul@f3_as_product,w
  1853  038F  00A1               	movwf	___ftpack@arg
  1854  0390  0845               	movf	___ftmul@f3_as_product+1,w
  1855  0391  00A2               	movwf	___ftpack@arg+1
  1856  0392  0846               	movf	___ftmul@f3_as_product+2,w
  1857  0393  00A3               	movwf	___ftpack@arg+2
  1858  0394  0843               	movf	___ftmul@exp,w
  1859  0395  00BF               	movwf	??___ftmul
  1860  0396  083F               	movf	??___ftmul,w
  1861  0397  00A4               	movwf	___ftpack@exp
  1862  0398  0848               	movf	___ftmul@sign,w
  1863  0399  00C0               	movwf	??___ftmul+1
  1864  039A  0840               	movf	??___ftmul+1,w
  1865  039B  00A5               	movwf	___ftpack@sign
  1866  039C  254A               	fcall	___ftpack
  1867  039D  0020               	movlb	0	; select bank0
  1868  039E  0821               	movf	?___ftpack,w
  1869  039F  00B9               	movwf	?___ftmul
  1870  03A0  0822               	movf	?___ftpack+1,w
  1871  03A1  00BA               	movwf	?___ftmul+1
  1872  03A2  0823               	movf	?___ftpack+2,w
  1873  03A3  00BB               	movwf	?___ftmul+2
  1874  03A4  0008               	return
  1875  03A5                     __end_of___ftmul:	
  1876                           
  1877                           	psect	text6
  1878  05AF                     __ptext6:	
  1879 ;; *************** function ___ftge *****************
  1880 ;; Defined at:
  1881 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  ff1             3    1[BANK0 ] float 
  1884 ;;  ff2             3    4[BANK0 ] float 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;		None               void
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1
  1896 ;;      Params:         0       6       0
  1897 ;;      Locals:         0       0       0
  1898 ;;      Temps:          0       3       0
  1899 ;;      Totals:         0       9       0
  1900 ;;Total ram usage:        9 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    2
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_PID
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function ___ftge
  1912  05AF                     ___ftge:	
  1913                           
  1914                           ;incstack = 0
  1915                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1916  05AF  0020               	movlb	0	; select bank0
  1917  05B0  1FA3               	btfss	___ftge@ff1+2,7
  1918  05B1  2DC6               	goto	l1700
  1919  05B2  0921               	comf	___ftge@ff1,w
  1920  05B3  00A7               	movwf	??___ftge
  1921  05B4  0922               	comf	___ftge@ff1+1,w
  1922  05B5  00A8               	movwf	??___ftge+1
  1923  05B6  0923               	comf	___ftge@ff1+2,w
  1924  05B7  00A9               	movwf	??___ftge+2
  1925  05B8  0AA7               	incf	??___ftge,f
  1926  05B9  1903               	skipnz
  1927  05BA  0AA8               	incf	??___ftge+1,f
  1928  05BB  1903               	skipnz
  1929  05BC  0AA9               	incf	??___ftge+2,f
  1930  05BD  3000               	movlw	0
  1931  05BE  0727               	addwf	??___ftge,w
  1932  05BF  00A1               	movwf	___ftge@ff1
  1933  05C0  3000               	movlw	0
  1934  05C1  3D28               	addwfc	??___ftge+1,w
  1935  05C2  00A2               	movwf	___ftge@ff1+1
  1936  05C3  3080               	movlw	128
  1937  05C4  3D29               	addwfc	??___ftge+2,w
  1938  05C5  00A3               	movwf	___ftge@ff1+2
  1939  05C6                     l1700:	
  1940  05C6  1FA6               	btfss	___ftge@ff2+2,7
  1941  05C7  2DDC               	goto	l1704
  1942  05C8  0924               	comf	___ftge@ff2,w
  1943  05C9  00A7               	movwf	??___ftge
  1944  05CA  0925               	comf	___ftge@ff2+1,w
  1945  05CB  00A8               	movwf	??___ftge+1
  1946  05CC  0926               	comf	___ftge@ff2+2,w
  1947  05CD  00A9               	movwf	??___ftge+2
  1948  05CE  0AA7               	incf	??___ftge,f
  1949  05CF  1903               	skipnz
  1950  05D0  0AA8               	incf	??___ftge+1,f
  1951  05D1  1903               	skipnz
  1952  05D2  0AA9               	incf	??___ftge+2,f
  1953  05D3  3000               	movlw	0
  1954  05D4  0727               	addwf	??___ftge,w
  1955  05D5  00A4               	movwf	___ftge@ff2
  1956  05D6  3000               	movlw	0
  1957  05D7  3D28               	addwfc	??___ftge+1,w
  1958  05D8  00A5               	movwf	___ftge@ff2+1
  1959  05D9  3080               	movlw	128
  1960  05DA  3D29               	addwfc	??___ftge+2,w
  1961  05DB  00A6               	movwf	___ftge@ff2+2
  1962  05DC                     l1704:	
  1963  05DC  3080               	movlw	128
  1964  05DD  06A3               	xorwf	___ftge@ff1+2,f
  1965  05DE  3080               	movlw	128
  1966  05DF  06A6               	xorwf	___ftge@ff2+2,f
  1967  05E0  0826               	movf	___ftge@ff2+2,w
  1968  05E1  0223               	subwf	___ftge@ff1+2,w
  1969  05E2  1D03               	skipz
  1970  05E3  0008               	return
  1971  05E4  0825               	movf	___ftge@ff2+1,w
  1972  05E5  0222               	subwf	___ftge@ff1+1,w
  1973  05E6  1D03               	skipz
  1974  05E7  0008               	return
  1975  05E8  0824               	movf	___ftge@ff2,w
  1976  05E9  0221               	subwf	___ftge@ff1,w
  1977  05EA  0008               	return
  1978  05EB                     __end_of___ftge:	
  1979                           
  1980                           	psect	text7
  1981  03A5                     __ptext7:	
  1982 ;; *************** function ___ftdiv *****************
  1983 ;; Defined at:
  1984 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  f2              3    9[BANK0 ] float 
  1987 ;;  f1              3   12[BANK0 ] float 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  f3              3   20[BANK0 ] float 
  1990 ;;  sign            1   24[BANK0 ] unsigned char 
  1991 ;;  exp             1   23[BANK0 ] unsigned char 
  1992 ;;  cntr            1   19[BANK0 ] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  3    9[BANK0 ] float 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1
  2002 ;;      Params:         0       6       0
  2003 ;;      Locals:         0       6       0
  2004 ;;      Temps:          0       4       0
  2005 ;;      Totals:         0      16       0
  2006 ;;Total ram usage:       16 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    3
  2009 ;; This function calls:
  2010 ;;		___ftpack
  2011 ;; This function is called by:
  2012 ;;		_PID
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function ___ftdiv
  2018  03A5                     ___ftdiv:	
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2022  03A5  0020               	movlb	0	; select bank0
  2023  03A6  082C               	movf	___ftdiv@f1,w
  2024  03A7  00AF               	movwf	??___ftdiv
  2025  03A8  082D               	movf	___ftdiv@f1+1,w
  2026  03A9  00B0               	movwf	??___ftdiv+1
  2027  03AA  082E               	movf	___ftdiv@f1+2,w
  2028  03AB  00B1               	movwf	??___ftdiv+2
  2029  03AC  1003               	clrc
  2030  03AD  0D30               	rlf	??___ftdiv+1,w
  2031  03AE  0D31               	rlf	??___ftdiv+2,w
  2032  03AF  00B2               	movwf	??___ftdiv+3
  2033  03B0  0832               	movf	??___ftdiv+3,w
  2034  03B1  00B7               	movwf	___ftdiv@exp
  2035  03B2  0837               	movf	___ftdiv@exp,w
  2036  03B3  1D03               	btfss	3,2
  2037  03B4  2BBC               	goto	l1660
  2038  03B5  3000               	movlw	0
  2039  03B6  00A9               	movwf	?___ftdiv
  2040  03B7  3000               	movlw	0
  2041  03B8  00AA               	movwf	?___ftdiv+1
  2042  03B9  3000               	movlw	0
  2043  03BA  00AB               	movwf	?___ftdiv+2
  2044  03BB  0008               	return
  2045  03BC                     l1660:	
  2046  03BC  0829               	movf	___ftdiv@f2,w
  2047  03BD  00AF               	movwf	??___ftdiv
  2048  03BE  082A               	movf	___ftdiv@f2+1,w
  2049  03BF  00B0               	movwf	??___ftdiv+1
  2050  03C0  082B               	movf	___ftdiv@f2+2,w
  2051  03C1  00B1               	movwf	??___ftdiv+2
  2052  03C2  1003               	clrc
  2053  03C3  0D30               	rlf	??___ftdiv+1,w
  2054  03C4  0D31               	rlf	??___ftdiv+2,w
  2055  03C5  00B2               	movwf	??___ftdiv+3
  2056  03C6  0832               	movf	??___ftdiv+3,w
  2057  03C7  00B8               	movwf	___ftdiv@sign
  2058  03C8  0838               	movf	___ftdiv@sign,w
  2059  03C9  1D03               	btfss	3,2
  2060  03CA  2BD2               	goto	l1666
  2061  03CB  3000               	movlw	0
  2062  03CC  00A9               	movwf	?___ftdiv
  2063  03CD  3000               	movlw	0
  2064  03CE  00AA               	movwf	?___ftdiv+1
  2065  03CF  3000               	movlw	0
  2066  03D0  00AB               	movwf	?___ftdiv+2
  2067  03D1  0008               	return
  2068  03D2                     l1666:	
  2069  03D2  3000               	movlw	0
  2070  03D3  00B4               	movwf	___ftdiv@f3
  2071  03D4  3000               	movlw	0
  2072  03D5  00B5               	movwf	___ftdiv@f3+1
  2073  03D6  3000               	movlw	0
  2074  03D7  00B6               	movwf	___ftdiv@f3+2
  2075  03D8  3089               	movlw	137
  2076  03D9  0738               	addwf	___ftdiv@sign,w
  2077  03DA  00AF               	movwf	??___ftdiv
  2078  03DB  082F               	movf	??___ftdiv,w
  2079  03DC  02B7               	subwf	___ftdiv@exp,f
  2080  03DD  082C               	movf	___ftdiv@f1,w
  2081  03DE  00AF               	movwf	??___ftdiv
  2082  03DF  082D               	movf	___ftdiv@f1+1,w
  2083  03E0  00B0               	movwf	??___ftdiv+1
  2084  03E1  082E               	movf	___ftdiv@f1+2,w
  2085  03E2  00B1               	movwf	??___ftdiv+2
  2086  03E3  3010               	movlw	16
  2087  03E4                     u2445:	
  2088  03E4  36B1               	lsrf	??___ftdiv+2,f
  2089  03E5  0CB0               	rrf	??___ftdiv+1,f
  2090  03E6  0CAF               	rrf	??___ftdiv,f
  2091  03E7  0B89               	decfsz	9,f
  2092  03E8  2BE4               	goto	u2445
  2093  03E9  082F               	movf	??___ftdiv,w
  2094  03EA  00B2               	movwf	??___ftdiv+3
  2095  03EB  0832               	movf	??___ftdiv+3,w
  2096  03EC  00B8               	movwf	___ftdiv@sign
  2097  03ED  0829               	movf	___ftdiv@f2,w
  2098  03EE  00AF               	movwf	??___ftdiv
  2099  03EF  082A               	movf	___ftdiv@f2+1,w
  2100  03F0  00B0               	movwf	??___ftdiv+1
  2101  03F1  082B               	movf	___ftdiv@f2+2,w
  2102  03F2  00B1               	movwf	??___ftdiv+2
  2103  03F3  3010               	movlw	16
  2104  03F4                     u2455:	
  2105  03F4  36B1               	lsrf	??___ftdiv+2,f
  2106  03F5  0CB0               	rrf	??___ftdiv+1,f
  2107  03F6  0CAF               	rrf	??___ftdiv,f
  2108  03F7  0B89               	decfsz	9,f
  2109  03F8  2BF4               	goto	u2455
  2110  03F9  082F               	movf	??___ftdiv,w
  2111  03FA  00B2               	movwf	??___ftdiv+3
  2112  03FB  0832               	movf	??___ftdiv+3,w
  2113  03FC  06B8               	xorwf	___ftdiv@sign,f
  2114  03FD  3080               	movlw	128
  2115  03FE  00AF               	movwf	??___ftdiv
  2116  03FF  082F               	movf	??___ftdiv,w
  2117  0400  05B8               	andwf	___ftdiv@sign,f
  2118  0401  17AD               	bsf	___ftdiv@f1+1,7
  2119  0402  30FF               	movlw	255
  2120  0403  05AC               	andwf	___ftdiv@f1,f
  2121  0404  30FF               	movlw	255
  2122  0405  05AD               	andwf	___ftdiv@f1+1,f
  2123  0406  3000               	movlw	0
  2124  0407  05AE               	andwf	___ftdiv@f1+2,f
  2125  0408  17AA               	bsf	___ftdiv@f2+1,7
  2126  0409  30FF               	movlw	255
  2127  040A  05A9               	andwf	___ftdiv@f2,f
  2128  040B  30FF               	movlw	255
  2129  040C  05AA               	andwf	___ftdiv@f2+1,f
  2130  040D  3000               	movlw	0
  2131  040E  05AB               	andwf	___ftdiv@f2+2,f
  2132  040F  3018               	movlw	24
  2133  0410  00AF               	movwf	??___ftdiv
  2134  0411  082F               	movf	??___ftdiv,w
  2135  0412  00B3               	movwf	___ftdiv@cntr
  2136  0413                     l1680:	
  2137  0413  3001               	movlw	1
  2138  0414                     u2465:	
  2139  0414  35B4               	lslf	___ftdiv@f3,f
  2140  0415  0DB5               	rlf	___ftdiv@f3+1,f
  2141  0416  0DB6               	rlf	___ftdiv@f3+2,f
  2142  0417  0B89               	decfsz	9,f
  2143  0418  2C14               	goto	u2465
  2144  0419  082B               	movf	___ftdiv@f2+2,w
  2145  041A  022E               	subwf	___ftdiv@f1+2,w
  2146  041B  1D03               	skipz
  2147  041C  2C23               	goto	u2475
  2148  041D  082A               	movf	___ftdiv@f2+1,w
  2149  041E  022D               	subwf	___ftdiv@f1+1,w
  2150  041F  1D03               	skipz
  2151  0420  2C23               	goto	u2475
  2152  0421  0829               	movf	___ftdiv@f2,w
  2153  0422  022C               	subwf	___ftdiv@f1,w
  2154  0423                     u2475:	
  2155  0423  1C03               	skipc
  2156  0424  2C2C               	goto	l1688
  2157  0425  0829               	movf	___ftdiv@f2,w
  2158  0426  02AC               	subwf	___ftdiv@f1,f
  2159  0427  082A               	movf	___ftdiv@f2+1,w
  2160  0428  3BAD               	subwfb	___ftdiv@f1+1,f
  2161  0429  082B               	movf	___ftdiv@f2+2,w
  2162  042A  3BAE               	subwfb	___ftdiv@f1+2,f
  2163  042B  1434               	bsf	___ftdiv@f3,0
  2164  042C                     l1688:	
  2165  042C  3001               	movlw	1
  2166  042D                     u2485:	
  2167  042D  35AC               	lslf	___ftdiv@f1,f
  2168  042E  0DAD               	rlf	___ftdiv@f1+1,f
  2169  042F  0DAE               	rlf	___ftdiv@f1+2,f
  2170  0430  0B89               	decfsz	9,f
  2171  0431  2C2D               	goto	u2485
  2172  0432  3001               	movlw	1
  2173  0433  02B3               	subwf	___ftdiv@cntr,f
  2174  0434  1D03               	btfss	3,2
  2175  0435  2C13               	goto	l1680
  2176  0436  0834               	movf	___ftdiv@f3,w
  2177  0437  00A1               	movwf	___ftpack@arg
  2178  0438  0835               	movf	___ftdiv@f3+1,w
  2179  0439  00A2               	movwf	___ftpack@arg+1
  2180  043A  0836               	movf	___ftdiv@f3+2,w
  2181  043B  00A3               	movwf	___ftpack@arg+2
  2182  043C  0837               	movf	___ftdiv@exp,w
  2183  043D  00AF               	movwf	??___ftdiv
  2184  043E  082F               	movf	??___ftdiv,w
  2185  043F  00A4               	movwf	___ftpack@exp
  2186  0440  0838               	movf	___ftdiv@sign,w
  2187  0441  00B0               	movwf	??___ftdiv+1
  2188  0442  0830               	movf	??___ftdiv+1,w
  2189  0443  00A5               	movwf	___ftpack@sign
  2190  0444  254A               	fcall	___ftpack
  2191  0445  0020               	movlb	0	; select bank0
  2192  0446  0821               	movf	?___ftpack,w
  2193  0447  00A9               	movwf	?___ftdiv
  2194  0448  0822               	movf	?___ftpack+1,w
  2195  0449  00AA               	movwf	?___ftdiv+1
  2196  044A  0823               	movf	?___ftpack+2,w
  2197  044B  00AB               	movwf	?___ftdiv+2
  2198  044C  0008               	return
  2199  044D                     __end_of___ftdiv:	
  2200                           
  2201                           	psect	text8
  2202  01FD                     __ptext8:	
  2203 ;; *************** function ___ftadd *****************
  2204 ;; Defined at:
  2205 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  f1              3   41[BANK0 ] float 
  2208 ;;  f2              3   44[BANK0 ] float 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  exp1            1   53[BANK0 ] unsigned char 
  2211 ;;  exp2            1   52[BANK0 ] unsigned char 
  2212 ;;  sign            1   51[BANK0 ] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  3   41[BANK0 ] float 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1
  2222 ;;      Params:         0       6       0
  2223 ;;      Locals:         0       3       0
  2224 ;;      Temps:          0       4       0
  2225 ;;      Totals:         0      13       0
  2226 ;;Total ram usage:       13 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    3
  2229 ;; This function calls:
  2230 ;;		___ftpack
  2231 ;; This function is called by:
  2232 ;;		_PID
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function ___ftadd
  2238  01FD                     ___ftadd:	
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2242  01FD  0020               	movlb	0	; select bank0
  2243  01FE  0849               	movf	___ftadd@f1,w
  2244  01FF  00CF               	movwf	??___ftadd
  2245  0200  084A               	movf	___ftadd@f1+1,w
  2246  0201  00D0               	movwf	??___ftadd+1
  2247  0202  084B               	movf	___ftadd@f1+2,w
  2248  0203  00D1               	movwf	??___ftadd+2
  2249  0204  1003               	clrc
  2250  0205  0D50               	rlf	??___ftadd+1,w
  2251  0206  0D51               	rlf	??___ftadd+2,w
  2252  0207  00D2               	movwf	??___ftadd+3
  2253  0208  0852               	movf	??___ftadd+3,w
  2254  0209  00D5               	movwf	___ftadd@exp1
  2255  020A  084C               	movf	___ftadd@f2,w
  2256  020B  00CF               	movwf	??___ftadd
  2257  020C  084D               	movf	___ftadd@f2+1,w
  2258  020D  00D0               	movwf	??___ftadd+1
  2259  020E  084E               	movf	___ftadd@f2+2,w
  2260  020F  00D1               	movwf	??___ftadd+2
  2261  0210  1003               	clrc
  2262  0211  0D50               	rlf	??___ftadd+1,w
  2263  0212  0D51               	rlf	??___ftadd+2,w
  2264  0213  00D2               	movwf	??___ftadd+3
  2265  0214  0852               	movf	??___ftadd+3,w
  2266  0215  00D4               	movwf	___ftadd@exp2
  2267  0216  0855               	movf	___ftadd@exp1,w
  2268  0217  1903               	btfsc	3,2
  2269  0218  2A25               	goto	l1590
  2270  0219  0854               	movf	___ftadd@exp2,w
  2271  021A  0255               	subwf	___ftadd@exp1,w
  2272  021B  1803               	skipnc
  2273  021C  2A2C               	goto	l1594
  2274  021D  0355               	decf	___ftadd@exp1,w
  2275  021E  3AFF               	xorlw	255
  2276  021F  0754               	addwf	___ftadd@exp2,w
  2277  0220  00CF               	movwf	??___ftadd
  2278  0221  3019               	movlw	25
  2279  0222  024F               	subwf	??___ftadd,w
  2280  0223  1C03               	skipc
  2281  0224  2A2C               	goto	l1594
  2282  0225                     l1590:	
  2283  0225  084C               	movf	___ftadd@f2,w
  2284  0226  00C9               	movwf	?___ftadd
  2285  0227  084D               	movf	___ftadd@f2+1,w
  2286  0228  00CA               	movwf	?___ftadd+1
  2287  0229  084E               	movf	___ftadd@f2+2,w
  2288  022A  00CB               	movwf	?___ftadd+2
  2289  022B  0008               	return
  2290  022C                     l1594:	
  2291  022C  0854               	movf	___ftadd@exp2,w
  2292  022D  1903               	btfsc	3,2
  2293  022E  0008               	return
  2294  022F  0855               	movf	___ftadd@exp1,w
  2295  0230  0254               	subwf	___ftadd@exp2,w
  2296  0231  1803               	skipnc
  2297  0232  2A3B               	goto	l1600
  2298  0233  0354               	decf	___ftadd@exp2,w
  2299  0234  3AFF               	xorlw	255
  2300  0235  0755               	addwf	___ftadd@exp1,w
  2301  0236  00CF               	movwf	??___ftadd
  2302  0237  3019               	movlw	25
  2303  0238  024F               	subwf	??___ftadd,w
  2304  0239  1803               	btfsc	3,0
  2305  023A  0008               	return
  2306  023B                     l1600:	
  2307  023B  3006               	movlw	6
  2308  023C  00CF               	movwf	??___ftadd
  2309  023D  084F               	movf	??___ftadd,w
  2310  023E  00D3               	movwf	___ftadd@sign
  2311  023F  1BCB               	btfsc	___ftadd@f1+2,7
  2312  0240  17D3               	bsf	___ftadd@sign,7
  2313  0241  1BCE               	btfsc	___ftadd@f2+2,7
  2314  0242  1753               	bsf	___ftadd@sign,6
  2315  0243  17CA               	bsf	___ftadd@f1+1,7
  2316  0244  30FF               	movlw	255
  2317  0245  05C9               	andwf	___ftadd@f1,f
  2318  0246  30FF               	movlw	255
  2319  0247  05CA               	andwf	___ftadd@f1+1,f
  2320  0248  3000               	movlw	0
  2321  0249  05CB               	andwf	___ftadd@f1+2,f
  2322  024A  17CD               	bsf	___ftadd@f2+1,7
  2323  024B  30FF               	movlw	255
  2324  024C  05CC               	andwf	___ftadd@f2,f
  2325  024D  30FF               	movlw	255
  2326  024E  05CD               	andwf	___ftadd@f2+1,f
  2327  024F  3000               	movlw	0
  2328  0250  05CE               	andwf	___ftadd@f2+2,f
  2329  0251  0854               	movf	___ftadd@exp2,w
  2330  0252  0255               	subwf	___ftadd@exp1,w
  2331  0253  1803               	skipnc
  2332  0254  2A77               	goto	l1622
  2333  0255                     l1612:	
  2334  0255  3001               	movlw	1
  2335  0256                     u2285:	
  2336  0256  35CC               	lslf	___ftadd@f2,f
  2337  0257  0DCD               	rlf	___ftadd@f2+1,f
  2338  0258  0DCE               	rlf	___ftadd@f2+2,f
  2339  0259  0B89               	decfsz	9,f
  2340  025A  2A56               	goto	u2285
  2341  025B  3001               	movlw	1
  2342  025C  02D4               	subwf	___ftadd@exp2,f
  2343  025D  0854               	movf	___ftadd@exp2,w
  2344  025E  0655               	xorwf	___ftadd@exp1,w
  2345  025F  1903               	skipnz
  2346  0260  2A72               	goto	l1620
  2347  0261  3001               	movlw	1
  2348  0262  02D3               	subwf	___ftadd@sign,f
  2349  0263  0853               	movf	___ftadd@sign,w
  2350  0264  3907               	andlw	7
  2351  0265  1903               	btfsc	3,2
  2352  0266  2A72               	goto	l1620
  2353  0267  2A55               	goto	l1612
  2354  0268                     l1618:	
  2355  0268  3001               	movlw	1
  2356  0269                     u2315:	
  2357  0269  36CB               	lsrf	___ftadd@f1+2,f
  2358  026A  0CCA               	rrf	___ftadd@f1+1,f
  2359  026B  0CC9               	rrf	___ftadd@f1,f
  2360  026C  0B89               	decfsz	9,f
  2361  026D  2A69               	goto	u2315
  2362  026E  3001               	movlw	1
  2363  026F  00CF               	movwf	??___ftadd
  2364  0270  084F               	movf	??___ftadd,w
  2365  0271  07D5               	addwf	___ftadd@exp1,f
  2366  0272                     l1620:	
  2367  0272  0855               	movf	___ftadd@exp1,w
  2368  0273  0654               	xorwf	___ftadd@exp2,w
  2369  0274  1903               	btfsc	3,2
  2370  0275  2A9C               	goto	l374
  2371  0276  2A68               	goto	l1618
  2372  0277                     l1622:	
  2373  0277  0855               	movf	___ftadd@exp1,w
  2374  0278  0254               	subwf	___ftadd@exp2,w
  2375  0279  1803               	skipnc
  2376  027A  2A9C               	goto	l374
  2377  027B                     l1624:	
  2378  027B  3001               	movlw	1
  2379  027C                     u2345:	
  2380  027C  35C9               	lslf	___ftadd@f1,f
  2381  027D  0DCA               	rlf	___ftadd@f1+1,f
  2382  027E  0DCB               	rlf	___ftadd@f1+2,f
  2383  027F  0B89               	decfsz	9,f
  2384  0280  2A7C               	goto	u2345
  2385  0281  3001               	movlw	1
  2386  0282  02D5               	subwf	___ftadd@exp1,f
  2387  0283  0854               	movf	___ftadd@exp2,w
  2388  0284  0655               	xorwf	___ftadd@exp1,w
  2389  0285  1903               	skipnz
  2390  0286  2A98               	goto	l1632
  2391  0287  3001               	movlw	1
  2392  0288  02D3               	subwf	___ftadd@sign,f
  2393  0289  0853               	movf	___ftadd@sign,w
  2394  028A  3907               	andlw	7
  2395  028B  1903               	btfsc	3,2
  2396  028C  2A98               	goto	l1632
  2397  028D  2A7B               	goto	l1624
  2398  028E                     l1630:	
  2399  028E  3001               	movlw	1
  2400  028F                     u2375:	
  2401  028F  36CE               	lsrf	___ftadd@f2+2,f
  2402  0290  0CCD               	rrf	___ftadd@f2+1,f
  2403  0291  0CCC               	rrf	___ftadd@f2,f
  2404  0292  0B89               	decfsz	9,f
  2405  0293  2A8F               	goto	u2375
  2406  0294  3001               	movlw	1
  2407  0295  00CF               	movwf	??___ftadd
  2408  0296  084F               	movf	??___ftadd,w
  2409  0297  07D4               	addwf	___ftadd@exp2,f
  2410  0298                     l1632:	
  2411  0298  0855               	movf	___ftadd@exp1,w
  2412  0299  0654               	xorwf	___ftadd@exp2,w
  2413  029A  1D03               	skipz
  2414  029B  2A8E               	goto	l1630
  2415  029C                     l374:	
  2416  029C  1FD3               	btfss	___ftadd@sign,7
  2417  029D  2AAE               	goto	l1636
  2418  029E  30FF               	movlw	255
  2419  029F  06C9               	xorwf	___ftadd@f1,f
  2420  02A0  30FF               	movlw	255
  2421  02A1  06CA               	xorwf	___ftadd@f1+1,f
  2422  02A2  30FF               	movlw	255
  2423  02A3  06CB               	xorwf	___ftadd@f1+2,f
  2424  02A4  3001               	movlw	1
  2425  02A5  07C9               	addwf	___ftadd@f1,f
  2426  02A6  3000               	movlw	0
  2427  02A7  1803               	skipnc
  2428  02A8  3001               	movlw	1
  2429  02A9  07CA               	addwf	___ftadd@f1+1,f
  2430  02AA  3000               	movlw	0
  2431  02AB  1803               	skipnc
  2432  02AC  3001               	movlw	1
  2433  02AD  07CB               	addwf	___ftadd@f1+2,f
  2434  02AE                     l1636:	
  2435  02AE  1F53               	btfss	___ftadd@sign,6
  2436  02AF  2AC0               	goto	l1640
  2437  02B0  30FF               	movlw	255
  2438  02B1  06CC               	xorwf	___ftadd@f2,f
  2439  02B2  30FF               	movlw	255
  2440  02B3  06CD               	xorwf	___ftadd@f2+1,f
  2441  02B4  30FF               	movlw	255
  2442  02B5  06CE               	xorwf	___ftadd@f2+2,f
  2443  02B6  3001               	movlw	1
  2444  02B7  07CC               	addwf	___ftadd@f2,f
  2445  02B8  3000               	movlw	0
  2446  02B9  1803               	skipnc
  2447  02BA  3001               	movlw	1
  2448  02BB  07CD               	addwf	___ftadd@f2+1,f
  2449  02BC  3000               	movlw	0
  2450  02BD  1803               	skipnc
  2451  02BE  3001               	movlw	1
  2452  02BF  07CE               	addwf	___ftadd@f2+2,f
  2453  02C0                     l1640:	
  2454  02C0  01D3               	clrf	___ftadd@sign
  2455  02C1  0849               	movf	___ftadd@f1,w
  2456  02C2  07CC               	addwf	___ftadd@f2,f
  2457  02C3  084A               	movf	___ftadd@f1+1,w
  2458  02C4  3DCD               	addwfc	___ftadd@f2+1,f
  2459  02C5  084B               	movf	___ftadd@f1+2,w
  2460  02C6  3DCE               	addwfc	___ftadd@f2+2,f
  2461  02C7  1FCE               	btfss	___ftadd@f2+2,7
  2462  02C8  2ADB               	goto	l1650
  2463  02C9  30FF               	movlw	255
  2464  02CA  06CC               	xorwf	___ftadd@f2,f
  2465  02CB  30FF               	movlw	255
  2466  02CC  06CD               	xorwf	___ftadd@f2+1,f
  2467  02CD  30FF               	movlw	255
  2468  02CE  06CE               	xorwf	___ftadd@f2+2,f
  2469  02CF  3001               	movlw	1
  2470  02D0  07CC               	addwf	___ftadd@f2,f
  2471  02D1  3000               	movlw	0
  2472  02D2  1803               	skipnc
  2473  02D3  3001               	movlw	1
  2474  02D4  07CD               	addwf	___ftadd@f2+1,f
  2475  02D5  3000               	movlw	0
  2476  02D6  1803               	skipnc
  2477  02D7  3001               	movlw	1
  2478  02D8  07CE               	addwf	___ftadd@f2+2,f
  2479  02D9  01D3               	clrf	___ftadd@sign
  2480  02DA  0AD3               	incf	___ftadd@sign,f
  2481  02DB                     l1650:	
  2482  02DB  084C               	movf	___ftadd@f2,w
  2483  02DC  00A1               	movwf	___ftpack@arg
  2484  02DD  084D               	movf	___ftadd@f2+1,w
  2485  02DE  00A2               	movwf	___ftpack@arg+1
  2486  02DF  084E               	movf	___ftadd@f2+2,w
  2487  02E0  00A3               	movwf	___ftpack@arg+2
  2488  02E1  0855               	movf	___ftadd@exp1,w
  2489  02E2  00CF               	movwf	??___ftadd
  2490  02E3  084F               	movf	??___ftadd,w
  2491  02E4  00A4               	movwf	___ftpack@exp
  2492  02E5  0853               	movf	___ftadd@sign,w
  2493  02E6  00D0               	movwf	??___ftadd+1
  2494  02E7  0850               	movf	??___ftadd+1,w
  2495  02E8  00A5               	movwf	___ftpack@sign
  2496  02E9  254A               	fcall	___ftpack
  2497  02EA  0020               	movlb	0	; select bank0
  2498  02EB  0821               	movf	?___ftpack,w
  2499  02EC  00C9               	movwf	?___ftadd
  2500  02ED  0822               	movf	?___ftpack+1,w
  2501  02EE  00CA               	movwf	?___ftadd+1
  2502  02EF  0823               	movf	?___ftpack+2,w
  2503  02F0  00CB               	movwf	?___ftadd+2
  2504  02F1  0008               	return
  2505  02F2                     __end_of___ftadd:	
  2506                           
  2507                           	psect	text9
  2508  0674                     __ptext9:	
  2509 ;; *************** function ___awtoft *****************
  2510 ;; Defined at:
  2511 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  c               2    9[BANK0 ] int 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  sign            1   14[BANK0 ] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  3    9[BANK0 ] float 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, pclath, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1
  2525 ;;      Params:         0       3       0
  2526 ;;      Locals:         0       1       0
  2527 ;;      Temps:          0       2       0
  2528 ;;      Totals:         0       6       0
  2529 ;;Total ram usage:        6 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    3
  2532 ;; This function calls:
  2533 ;;		___ftpack
  2534 ;; This function is called by:
  2535 ;;		_PID
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function ___awtoft
  2541  0674                     ___awtoft:	
  2542                           
  2543                           ;incstack = 0
  2544                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2545  0674  0020               	movlb	0	; select bank0
  2546  0675  01AE               	clrf	___awtoft@sign
  2547  0676  1FAA               	btfss	___awtoft@c+1,7
  2548  0677  2E7F               	goto	l1580
  2549  0678  09A9               	comf	___awtoft@c,f
  2550  0679  09AA               	comf	___awtoft@c+1,f
  2551  067A  0AA9               	incf	___awtoft@c,f
  2552  067B  1903               	skipnz
  2553  067C  0AAA               	incf	___awtoft@c+1,f
  2554  067D  01AE               	clrf	___awtoft@sign
  2555  067E  0AAE               	incf	___awtoft@sign,f
  2556  067F                     l1580:	
  2557  067F  0829               	movf	___awtoft@c,w
  2558  0680  00A1               	movwf	___ftpack@arg
  2559  0681  082A               	movf	___awtoft@c+1,w
  2560  0682  00A2               	movwf	___ftpack@arg+1
  2561  0683  01A3               	clrf	___ftpack@arg+2
  2562  0684  308E               	movlw	142
  2563  0685  00AC               	movwf	??___awtoft
  2564  0686  082C               	movf	??___awtoft,w
  2565  0687  00A4               	movwf	___ftpack@exp
  2566  0688  082E               	movf	___awtoft@sign,w
  2567  0689  00AD               	movwf	??___awtoft+1
  2568  068A  082D               	movf	??___awtoft+1,w
  2569  068B  00A5               	movwf	___ftpack@sign
  2570  068C  254A               	fcall	___ftpack
  2571  068D  0020               	movlb	0	; select bank0
  2572  068E  0821               	movf	?___ftpack,w
  2573  068F  00A9               	movwf	?___awtoft
  2574  0690  0822               	movf	?___ftpack+1,w
  2575  0691  00AA               	movwf	?___awtoft+1
  2576  0692  0823               	movf	?___ftpack+2,w
  2577  0693  00AB               	movwf	?___awtoft+2
  2578  0694  0008               	return
  2579  0695                     __end_of___awtoft:	
  2580                           
  2581                           	psect	text10
  2582  054A                     __ptext10:	
  2583 ;; *************** function ___ftpack *****************
  2584 ;; Defined at:
  2585 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  arg             3    1[BANK0 ] unsigned um
  2588 ;;  exp             1    4[BANK0 ] unsigned char 
  2589 ;;  sign            1    5[BANK0 ] unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  3    1[BANK0 ] float 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1
  2601 ;;      Params:         0       5       0
  2602 ;;      Locals:         0       0       0
  2603 ;;      Temps:          0       3       0
  2604 ;;      Totals:         0       8       0
  2605 ;;Total ram usage:        8 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    2
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		___awtoft
  2612 ;;		___ftadd
  2613 ;;		___ftdiv
  2614 ;;		___ftmul
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function ___ftpack
  2620  054A                     ___ftpack:	
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2624  054A  0020               	movlb	0	; select bank0
  2625  054B  0824               	movf	___ftpack@exp,w
  2626  054C  1903               	btfsc	3,2
  2627  054D  2D53               	goto	l1526
  2628  054E  0823               	movf	___ftpack@arg+2,w
  2629  054F  0422               	iorwf	___ftpack@arg+1,w
  2630  0550  0421               	iorwf	___ftpack@arg,w
  2631  0551  1D03               	skipz
  2632  0552  2D64               	goto	l1532
  2633  0553                     l1526:	
  2634  0553  3000               	movlw	0
  2635  0554  00A1               	movwf	?___ftpack
  2636  0555  3000               	movlw	0
  2637  0556  00A2               	movwf	?___ftpack+1
  2638  0557  3000               	movlw	0
  2639  0558  00A3               	movwf	?___ftpack+2
  2640  0559  0008               	return
  2641  055A                     l1530:	
  2642  055A  3001               	movlw	1
  2643  055B  00A6               	movwf	??___ftpack
  2644  055C  0826               	movf	??___ftpack,w
  2645  055D  07A4               	addwf	___ftpack@exp,f
  2646  055E  3001               	movlw	1
  2647  055F                     u2055:	
  2648  055F  36A3               	lsrf	___ftpack@arg+2,f
  2649  0560  0CA2               	rrf	___ftpack@arg+1,f
  2650  0561  0CA1               	rrf	___ftpack@arg,f
  2651  0562  0B89               	decfsz	9,f
  2652  0563  2D5F               	goto	u2055
  2653  0564                     l1532:	
  2654  0564  30FE               	movlw	254
  2655  0565  0523               	andwf	___ftpack@arg+2,w
  2656  0566  1903               	btfsc	3,2
  2657  0567  2D7D               	goto	l343
  2658  0568  2D5A               	goto	l1530
  2659  0569                     l1534:	
  2660  0569  3001               	movlw	1
  2661  056A  00A6               	movwf	??___ftpack
  2662  056B  0826               	movf	??___ftpack,w
  2663  056C  07A4               	addwf	___ftpack@exp,f
  2664  056D  3001               	movlw	1
  2665  056E  07A1               	addwf	___ftpack@arg,f
  2666  056F  3000               	movlw	0
  2667  0570  1803               	skipnc
  2668  0571  3001               	movlw	1
  2669  0572  07A2               	addwf	___ftpack@arg+1,f
  2670  0573  3000               	movlw	0
  2671  0574  1803               	skipnc
  2672  0575  3001               	movlw	1
  2673  0576  07A3               	addwf	___ftpack@arg+2,f
  2674  0577  3001               	movlw	1
  2675  0578                     u2075:	
  2676  0578  36A3               	lsrf	___ftpack@arg+2,f
  2677  0579  0CA2               	rrf	___ftpack@arg+1,f
  2678  057A  0CA1               	rrf	___ftpack@arg,f
  2679  057B  0B89               	decfsz	9,f
  2680  057C  2D78               	goto	u2075
  2681  057D                     l343:	
  2682  057D  30FF               	movlw	255
  2683  057E  0523               	andwf	___ftpack@arg+2,w
  2684  057F  1903               	btfsc	3,2
  2685  0580  2D8A               	goto	l1542
  2686  0581  2D69               	goto	l1534
  2687  0582                     l1540:	
  2688  0582  3001               	movlw	1
  2689  0583  02A4               	subwf	___ftpack@exp,f
  2690  0584  3001               	movlw	1
  2691  0585                     u2095:	
  2692  0585  35A1               	lslf	___ftpack@arg,f
  2693  0586  0DA2               	rlf	___ftpack@arg+1,f
  2694  0587  0DA3               	rlf	___ftpack@arg+2,f
  2695  0588  0B89               	decfsz	9,f
  2696  0589  2D85               	goto	u2095
  2697  058A                     l1542:	
  2698  058A  1BA2               	btfsc	___ftpack@arg+1,7
  2699  058B  2D90               	goto	l350
  2700  058C  3002               	movlw	2
  2701  058D  0224               	subwf	___ftpack@exp,w
  2702  058E  1803               	skipnc
  2703  058F  2D82               	goto	l1540
  2704  0590                     l350:	
  2705  0590  1824               	btfsc	___ftpack@exp,0
  2706  0591  2D98               	goto	l351
  2707  0592  30FF               	movlw	255
  2708  0593  05A1               	andwf	___ftpack@arg,f
  2709  0594  307F               	movlw	127
  2710  0595  05A2               	andwf	___ftpack@arg+1,f
  2711  0596  30FF               	movlw	255
  2712  0597  05A3               	andwf	___ftpack@arg+2,f
  2713  0598                     l351:	
  2714  0598  1003               	clrc
  2715  0599  0CA4               	rrf	___ftpack@exp,f
  2716  059A  0824               	movf	___ftpack@exp,w
  2717  059B  00A6               	movwf	??___ftpack
  2718  059C  01A7               	clrf	??___ftpack+1
  2719  059D  01A8               	clrf	??___ftpack+2
  2720  059E  3010               	movlw	16
  2721  059F                     u2135:	
  2722  059F  35A6               	lslf	??___ftpack,f
  2723  05A0  0DA7               	rlf	??___ftpack+1,f
  2724  05A1  0DA8               	rlf	??___ftpack+2,f
  2725  05A2  0B89               	decfsz	9,f
  2726  05A3  2D9F               	goto	u2135
  2727  05A4  0826               	movf	??___ftpack,w
  2728  05A5  04A1               	iorwf	___ftpack@arg,f
  2729  05A6  0827               	movf	??___ftpack+1,w
  2730  05A7  04A2               	iorwf	___ftpack@arg+1,f
  2731  05A8  0828               	movf	??___ftpack+2,w
  2732  05A9  04A3               	iorwf	___ftpack@arg+2,f
  2733  05AA  0825               	movf	___ftpack@sign,w
  2734  05AB  1903               	btfsc	3,2
  2735  05AC  0008               	return
  2736  05AD  17A3               	bsf	___ftpack@arg+2,7
  2737  05AE  0008               	return
  2738  05AF                     __end_of___ftpack:	
  2739                           
  2740                           	psect	text11
  2741  061F                     __ptext11:	
  2742 ;; *************** function _M_control *****************
  2743 ;; Defined at:
  2744 ;;		line 128 in file "main.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  ctr             2   15[BANK0 ] int 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1
  2758 ;;      Params:         0       2       0
  2759 ;;      Locals:         0       0       0
  2760 ;;      Temps:          0       1       0
  2761 ;;      Totals:         0       3       0
  2762 ;;Total ram usage:        3 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    3
  2765 ;; This function calls:
  2766 ;;		_PWM_set_duty
  2767 ;; This function is called by:
  2768 ;;		_PID
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           
  2773                           ;psect for function _M_control
  2774  061F                     _M_control:	
  2775                           
  2776                           ;main.c: 130: if (ctr == 0)
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
  2780  061F  0020               	movlb	0	; select bank0
  2781  0620  082F               	movf	M_control@ctr,w
  2782  0621  0430               	iorwf	M_control@ctr+1,w
  2783  0622  1D03               	btfss	3,2
  2784  0623  2E29               	goto	l1558
  2785                           
  2786                           ;main.c: 131: {
  2787                           ;main.c: 132: PWM_set_duty(ctr);
  2788  0624  0830               	movf	M_control@ctr+1,w
  2789  0625  00A2               	movwf	PWM_set_duty@duty+1
  2790  0626  082F               	movf	M_control@ctr,w
  2791  0627  00A1               	movwf	PWM_set_duty@duty
  2792  0628  264E               	fcall	_PWM_set_duty
  2793  0629                     l1558:	
  2794                           
  2795                           ;main.c: 133: }
  2796                           ;main.c: 134: if (ctr > 0)
  2797  0629  0020               	movlb	0	; select bank0
  2798  062A  0830               	movf	M_control@ctr+1,w
  2799  062B  3A80               	xorlw	128
  2800  062C  00B1               	movwf	??_M_control
  2801  062D  3080               	movlw	128
  2802  062E  0231               	subwf	??_M_control,w
  2803  062F  1D03               	skipz
  2804  0630  2E33               	goto	u2165
  2805  0631  3001               	movlw	1
  2806  0632  022F               	subwf	M_control@ctr,w
  2807  0633                     u2165:	
  2808  0633  1C03               	skipc
  2809  0634  2E3D               	goto	l1564
  2810                           
  2811                           ;main.c: 135: {
  2812                           ;main.c: 136: LATAbits.LATA0 = 1;
  2813  0635  0022               	movlb	2	; select bank2
  2814  0636  140C               	bsf	12,0	;volatile
  2815                           
  2816                           ;main.c: 137: PWM_set_duty(ctr);
  2817  0637  0020               	movlb	0	; select bank0
  2818  0638  0830               	movf	M_control@ctr+1,w
  2819  0639  00A2               	movwf	PWM_set_duty@duty+1
  2820  063A  082F               	movf	M_control@ctr,w
  2821  063B  00A1               	movwf	PWM_set_duty@duty
  2822  063C  264E               	fcall	_PWM_set_duty
  2823  063D                     l1564:	
  2824                           
  2825                           ;main.c: 138: }
  2826                           ;main.c: 139: if (ctr < 0)
  2827  063D  0020               	movlb	0	; select bank0
  2828  063E  1FB0               	btfss	M_control@ctr+1,7
  2829  063F  0008               	return
  2830                           
  2831                           ;main.c: 140: {
  2832                           ;main.c: 141: LATAbits.LATA0 = 0;
  2833  0640  0022               	movlb	2	; select bank2
  2834  0641  100C               	bcf	12,0	;volatile
  2835                           
  2836                           ;main.c: 142: ctr = ctr * -1;
  2837  0642  0020               	movlb	0	; select bank0
  2838  0643  09AF               	comf	M_control@ctr,f
  2839  0644  09B0               	comf	M_control@ctr+1,f
  2840  0645  0AAF               	incf	M_control@ctr,f
  2841  0646  1903               	skipnz
  2842  0647  0AB0               	incf	M_control@ctr+1,f
  2843                           
  2844                           ;main.c: 143: PWM_set_duty(ctr);
  2845  0648  0830               	movf	M_control@ctr+1,w
  2846  0649  00A2               	movwf	PWM_set_duty@duty+1
  2847  064A  082F               	movf	M_control@ctr,w
  2848  064B  00A1               	movwf	PWM_set_duty@duty
  2849  064C  264E               	fcall	_PWM_set_duty
  2850  064D  0008               	return
  2851  064E                     __end_of_M_control:	
  2852                           
  2853                           	psect	text12
  2854  064E                     __ptext12:	
  2855 ;; *************** function _PWM_set_duty *****************
  2856 ;; Defined at:
  2857 ;;		line 89 in file "main.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  duty            2    1[BANK0 ] int 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  2    1[BANK0 ] int 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1
  2871 ;;      Params:         0       2       0
  2872 ;;      Locals:         0       0       0
  2873 ;;      Temps:          0       2       0
  2874 ;;      Totals:         0       4       0
  2875 ;;Total ram usage:        4 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    2
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_M_control
  2882 ;;		_main
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function _PWM_set_duty
  2888  064E                     _PWM_set_duty:	
  2889                           
  2890                           ;main.c: 91: if(duty<1024)
  2891                           
  2892                           ;incstack = 0
  2893                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
  2894  064E  0020               	movlb	0	; select bank0
  2895  064F  0822               	movf	PWM_set_duty@duty+1,w
  2896  0650  3A80               	xorlw	128
  2897  0651  00A3               	movwf	??_PWM_set_duty
  2898  0652  3084               	movlw	132
  2899  0653  0223               	subwf	??_PWM_set_duty,w
  2900  0654  1D03               	skipz
  2901  0655  2E58               	goto	u2015
  2902  0656  3000               	movlw	0
  2903  0657  0221               	subwf	PWM_set_duty@duty,w
  2904  0658                     u2015:	
  2905  0658  1803               	skipnc
  2906  0659  0008               	return
  2907                           
  2908                           ;main.c: 92: {
  2909                           ;main.c: 93: CCPR1L = (0xFF & ((unsigned int)duty>>2));
  2910  065A  0020               	movlb	0	; select bank0
  2911  065B  0822               	movf	PWM_set_duty@duty+1,w
  2912  065C  00A4               	movwf	??_PWM_set_duty+1
  2913  065D  0821               	movf	PWM_set_duty@duty,w
  2914  065E  00A3               	movwf	??_PWM_set_duty
  2915  065F  36A4               	lsrf	??_PWM_set_duty+1,f
  2916  0660  0CA3               	rrf	??_PWM_set_duty,f
  2917  0661  36A4               	lsrf	??_PWM_set_duty+1,f
  2918  0662  0CA3               	rrf	??_PWM_set_duty,f
  2919  0663  0823               	movf	??_PWM_set_duty,w
  2920  0664  0025               	movlb	5	; select bank5
  2921  0665  0091               	movwf	17	;volatile
  2922                           
  2923                           ;main.c: 94: CCP1CON = (0x0C |(0x30 & ((unsigned int)duty<<4)));
  2924  0666  0020               	movlb	0	; select bank0
  2925  0667  0821               	movf	PWM_set_duty@duty,w
  2926  0668  00A3               	movwf	??_PWM_set_duty
  2927  0669  3003               	movlw	3
  2928  066A                     u2025:	
  2929  066A  35A3               	lslf	??_PWM_set_duty,f
  2930  066B  3EFF               	addlw	-1
  2931  066C  1D03               	skipz
  2932  066D  2E6A               	goto	u2025
  2933  066E  3523               	lslf	??_PWM_set_duty,w
  2934  066F  3930               	andlw	48
  2935  0670  380C               	iorlw	12
  2936  0671  0025               	movlb	5	; select bank5
  2937  0672  0093               	movwf	19	;volatile
  2938  0673  0008               	return
  2939  0674                     __end_of_PWM_set_duty:	
  2940                           
  2941                           	psect	intentry
  2942  0004                     __pintentry:	
  2943 ;; *************** function _isr *****************
  2944 ;; Defined at:
  2945 ;;		line 101 in file "main.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg, status,2, status,0, pclath, cstack
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMMON   BANK0   BANK1
  2959 ;;      Params:         0       0       0
  2960 ;;      Locals:         0       0       0
  2961 ;;      Temps:          0       1       0
  2962 ;;      Totals:         0       1       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    1
  2966 ;; This function calls:
  2967 ;;		___lwdiv
  2968 ;;		___wmul
  2969 ;; This function is called by:
  2970 ;;		Interrupt level 1
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974  0004                     _isr:	
  2975                           
  2976                           ;incstack = 0
  2977  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2978                           
  2979                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2980  0005  3180               	pagesel	$
  2981  0006  0020               	movlb	0	; select bank0
  2982  0007  087F               	movf	127,w
  2983  0008  00A0               	movwf	??_isr
  2984                           
  2985                           ;main.c: 103: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  2986  0009  1C0B               	btfss	11,0	;volatile
  2987  000A  2817               	goto	i1l1442
  2988  000B  0027               	movlb	7	; select bank7
  2989  000C  1E13               	btfss	19,4	;volatile
  2990  000D  2817               	goto	i1l1442
  2991                           
  2992                           ;main.c: 104: {
  2993                           ;main.c: 105: INTCONbits.IOCIE = 0;
  2994  000E  118B               	bcf	11,3	;volatile
  2995                           
  2996                           ;main.c: 106: counter ++;
  2997  000F  3001               	movlw	1
  2998  0010  0021               	movlb	1	; select bank1
  2999  0011  07B1               	addwf	_counter^(0+128),f
  3000  0012  3000               	movlw	0
  3001  0013  3DB2               	addwfc	(_counter+1)^(0+128),f
  3002                           
  3003                           ;main.c: 107: IOCAFbits.IOCAF4 = 0;
  3004  0014  0027               	movlb	7	; select bank7
  3005  0015  1213               	bcf	19,4	;volatile
  3006                           
  3007                           ;main.c: 108: INTCONbits.IOCIE = 1;
  3008  0016  158B               	bsf	11,3	;volatile
  3009  0017                     i1l1442:	
  3010                           
  3011                           ;main.c: 109: }
  3012                           ;main.c: 110: if(PIR1bits.TMR1IF == 1)
  3013  0017  0020               	movlb	0	; select bank0
  3014  0018  1C11               	btfss	17,0	;volatile
  3015  0019  2844               	goto	i1l71
  3016                           
  3017                           ;main.c: 111: {
  3018                           ;main.c: 112: INTCONbits.IOCIE = 0;
  3019  001A  118B               	bcf	11,3	;volatile
  3020                           
  3021                           ;main.c: 113: T1CONbits.TMR1ON = 0;
  3022  001B  1018               	bcf	24,0	;volatile
  3023                           
  3024                           ;main.c: 114: rpm = (counter * 300)/gear;
  3025  001C  0021               	movlb	1	; select bank1
  3026  001D  082A               	movf	(_gear+1)^(0+128),w
  3027  001E  00F7               	movwf	___lwdiv@divisor+1
  3028  001F  0829               	movf	_gear^(0+128),w
  3029  0020  00F6               	movwf	___lwdiv@divisor
  3030  0021  0832               	movf	(_counter+1)^(0+128),w
  3031  0022  00F1               	movwf	___wmul@multiplier+1
  3032  0023  0831               	movf	_counter^(0+128),w
  3033  0024  00F0               	movwf	___wmul@multiplier
  3034  0025  302C               	movlw	44
  3035  0026  00F2               	movwf	___wmul@multiplicand
  3036  0027  3001               	movlw	1
  3037  0028  00F3               	movwf	___wmul@multiplicand+1
  3038  0029  2695               	fcall	___wmul
  3039  002A  0871               	movf	?___wmul+1,w
  3040  002B  00F9               	movwf	___lwdiv@dividend+1
  3041  002C  0870               	movf	?___wmul,w
  3042  002D  00F8               	movwf	___lwdiv@dividend
  3043  002E  25EB               	fcall	___lwdiv
  3044  002F  0877               	movf	?___lwdiv+1,w
  3045  0030  0020               	movlb	0	; select bank0
  3046  0031  00EB               	movwf	_rpm+1
  3047  0032  0876               	movf	?___lwdiv,w
  3048  0033  00EA               	movwf	_rpm
  3049                           
  3050                           ;main.c: 115: counter = 0;
  3051  0034  0021               	movlb	1	; select bank1
  3052  0035  01B1               	clrf	_counter^(0+128)
  3053  0036  01B2               	clrf	(_counter+1)^(0+128)
  3054                           
  3055                           ;main.c: 116: if(LATAbits.LATA0 == 0)
  3056  0037  0022               	movlb	2	; select bank2
  3057  0038  180C               	btfsc	12,0	;volatile
  3058  0039  2840               	goto	i1l1454
  3059                           
  3060                           ;main.c: 117: {
  3061                           ;main.c: 118: rpm = rpm *-1;
  3062  003A  0020               	movlb	0	; select bank0
  3063  003B  09EA               	comf	_rpm,f
  3064  003C  09EB               	comf	_rpm+1,f
  3065  003D  0AEA               	incf	_rpm,f
  3066  003E  1903               	skipnz
  3067  003F  0AEB               	incf	_rpm+1,f
  3068  0040                     i1l1454:	
  3069                           
  3070                           ;main.c: 119: }
  3071                           ;main.c: 120: INTCONbits.IOCIE = 1;
  3072  0040  158B               	bsf	11,3	;volatile
  3073                           
  3074                           ;main.c: 121: PIR1bits.TMR1IF = 0;
  3075  0041  0020               	movlb	0	; select bank0
  3076  0042  1011               	bcf	17,0	;volatile
  3077                           
  3078                           ;main.c: 122: T1CONbits.TMR1ON = 1;
  3079  0043  1418               	bsf	24,0	;volatile
  3080  0044                     i1l71:	
  3081  0044  0820               	movf	??_isr,w
  3082  0045  00FF               	movwf	127
  3083  0046  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3084  0047  0009               	retfie
  3085  0048                     __end_of_isr:	
  3086                           
  3087                           	psect	text14
  3088  0695                     __ptext14:	
  3089 ;; *************** function ___wmul *****************
  3090 ;; Defined at:
  3091 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  multiplier      2    0[COMMON] unsigned int 
  3094 ;;  multiplicand    2    2[COMMON] unsigned int 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  product         2    4[COMMON] unsigned int 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  2    0[COMMON] unsigned int 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1
  3106 ;;      Params:         4       0       0
  3107 ;;      Locals:         2       0       0
  3108 ;;      Temps:          0       0       0
  3109 ;;      Totals:         6       0       0
  3110 ;;Total ram usage:        6 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_isr
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function ___wmul
  3121  0695                     ___wmul:	
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3125  0695  01F4               	clrf	___wmul@product
  3126  0696  01F5               	clrf	___wmul@product+1
  3127  0697                     i1l1392:	
  3128  0697  1C70               	btfss	___wmul@multiplier,0
  3129  0698  2E9D               	goto	i1l182
  3130  0699  0872               	movf	___wmul@multiplicand,w
  3131  069A  07F4               	addwf	___wmul@product,f
  3132  069B  0873               	movf	___wmul@multiplicand+1,w
  3133  069C  3DF5               	addwfc	___wmul@product+1,f
  3134  069D                     i1l182:	
  3135  069D  3001               	movlw	1
  3136  069E                     u183_25:	
  3137  069E  35F2               	lslf	___wmul@multiplicand,f
  3138  069F  0DF3               	rlf	___wmul@multiplicand+1,f
  3139  06A0  0B89               	decfsz	9,f
  3140  06A1  2E9E               	goto	u183_25
  3141  06A2  3001               	movlw	1
  3142  06A3                     u184_25:	
  3143  06A3  36F1               	lsrf	___wmul@multiplier+1,f
  3144  06A4  0CF0               	rrf	___wmul@multiplier,f
  3145  06A5  0B89               	decfsz	9,f
  3146  06A6  2EA3               	goto	u184_25
  3147  06A7  0870               	movf	___wmul@multiplier,w
  3148  06A8  0471               	iorwf	___wmul@multiplier+1,w
  3149  06A9  1D03               	btfss	3,2
  3150  06AA  2E97               	goto	i1l1392
  3151  06AB  0875               	movf	___wmul@product+1,w
  3152  06AC  00F1               	movwf	?___wmul+1
  3153  06AD  0874               	movf	___wmul@product,w
  3154  06AE  00F0               	movwf	?___wmul
  3155  06AF  0008               	return
  3156  06B0                     __end_of___wmul:	
  3157                           
  3158                           	psect	text15
  3159  05EB                     __ptext15:	
  3160 ;; *************** function ___lwdiv *****************
  3161 ;; Defined at:
  3162 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  divisor         2    6[COMMON] unsigned int 
  3165 ;;  dividend        2    8[COMMON] unsigned int 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  quotient        2   11[COMMON] unsigned int 
  3168 ;;  counter         1   13[COMMON] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  2    6[COMMON] unsigned int 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1
  3178 ;;      Params:         4       0       0
  3179 ;;      Locals:         3       0       0
  3180 ;;      Temps:          1       0       0
  3181 ;;      Totals:         8       0       0
  3182 ;;Total ram usage:        8 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_isr
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function ___lwdiv
  3193  05EB                     ___lwdiv:	
  3194                           
  3195                           ;incstack = 0
  3196                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3197  05EB  01FB               	clrf	___lwdiv@quotient
  3198  05EC  01FC               	clrf	___lwdiv@quotient+1
  3199  05ED  0876               	movf	___lwdiv@divisor,w
  3200  05EE  0477               	iorwf	___lwdiv@divisor+1,w
  3201  05EF  1903               	btfsc	3,2
  3202  05F0  2E1A               	goto	i1l1426
  3203  05F1  01FD               	clrf	___lwdiv@counter
  3204  05F2  0AFD               	incf	___lwdiv@counter,f
  3205  05F3                     i1l1414:	
  3206  05F3  1BF7               	btfsc	___lwdiv@divisor+1,7
  3207  05F4  2DFF               	goto	i1l1416
  3208  05F5  3001               	movlw	1
  3209  05F6                     u187_25:	
  3210  05F6  35F6               	lslf	___lwdiv@divisor,f
  3211  05F7  0DF7               	rlf	___lwdiv@divisor+1,f
  3212  05F8  0B89               	decfsz	9,f
  3213  05F9  2DF6               	goto	u187_25
  3214  05FA  3001               	movlw	1
  3215  05FB  00FA               	movwf	??___lwdiv
  3216  05FC  087A               	movf	??___lwdiv,w
  3217  05FD  07FD               	addwf	___lwdiv@counter,f
  3218  05FE  2DF3               	goto	i1l1414
  3219  05FF                     i1l1416:	
  3220  05FF  3001               	movlw	1
  3221  0600                     u189_25:	
  3222  0600  35FB               	lslf	___lwdiv@quotient,f
  3223  0601  0DFC               	rlf	___lwdiv@quotient+1,f
  3224  0602  0B89               	decfsz	9,f
  3225  0603  2E00               	goto	u189_25
  3226  0604  0877               	movf	___lwdiv@divisor+1,w
  3227  0605  0279               	subwf	___lwdiv@dividend+1,w
  3228  0606  1D03               	skipz
  3229  0607  2E0A               	goto	u190_25
  3230  0608  0876               	movf	___lwdiv@divisor,w
  3231  0609  0278               	subwf	___lwdiv@dividend,w
  3232  060A                     u190_25:	
  3233  060A  1C03               	skipc
  3234  060B  2E11               	goto	i1l1422
  3235  060C  0876               	movf	___lwdiv@divisor,w
  3236  060D  02F8               	subwf	___lwdiv@dividend,f
  3237  060E  0877               	movf	___lwdiv@divisor+1,w
  3238  060F  3BF9               	subwfb	___lwdiv@dividend+1,f
  3239  0610  147B               	bsf	___lwdiv@quotient,0
  3240  0611                     i1l1422:	
  3241  0611  3001               	movlw	1
  3242  0612                     u191_25:	
  3243  0612  36F7               	lsrf	___lwdiv@divisor+1,f
  3244  0613  0CF6               	rrf	___lwdiv@divisor,f
  3245  0614  0B89               	decfsz	9,f
  3246  0615  2E12               	goto	u191_25
  3247  0616  3001               	movlw	1
  3248  0617  02FD               	subwf	___lwdiv@counter,f
  3249  0618  1D03               	btfss	3,2
  3250  0619  2DFF               	goto	i1l1416
  3251  061A                     i1l1426:	
  3252  061A  087C               	movf	___lwdiv@quotient+1,w
  3253  061B  00F7               	movwf	?___lwdiv+1
  3254  061C  087B               	movf	___lwdiv@quotient,w
  3255  061D  00F6               	movwf	?___lwdiv
  3256  061E  0008               	return
  3257  061F                     __end_of___lwdiv:	
  3258  007E                     btemp	set	126	;btemp
  3259  007E                     int$flags	set	126
  3260  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      76
    BANK1            32      4      23

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_PID
    _PID->___ftadd
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _M_control->___fttol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4   15134
                                             69 BANK0      5     1      4
                                              0 BANK1      4     4      0
                                _PID
                           _PWM_Init
                       _PWM_set_duty
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                 15    13      2   14645
                                             54 BANK0     15    13      2
                          _M_control
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     436
                                              1 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     130
                                              1 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3076
                                             25 BANK0     16    10      6
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     718
                                              1 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2618
                                              9 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4033
                                             41 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2266
                                              9 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2068
                                              1 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _M_control                                            3     1      2     638
                                             15 BANK0      3     1      2
                       _PWM_set_duty
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_set_duty                                         4     2      2     353
                                              1 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  1     1      0     466
                                              0 BANK0      1     1      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID
     _M_control
       _PWM_set_duty
       ___fttol (ARG)
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftdiv (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___fttol
   _PWM_Init
   _PWM_set_duty

 _isr (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      71       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4A      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      4      17       8       71.9%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      71       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Jul 09 23:32:40 2018

            __CFG_CP$OFF 0000                       l82 01CB                       l91 04F5  
                     _kd 00A3                       _ki 00A0                       _kp 00A6  
    ___wmul@multiplicand 0072             ___ftadd@exp1 0055             ___ftadd@exp2 0054  
           ___ftadd@sign 0053                      l350 0590                      l351 0598  
                    l343 057D                      l434 04BA                      l374 029C  
                    _PR2 001B                      _PID 0061             __CFG_CPD$OFF 0000  
                    _isr 0004                      _rpm 006A             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_LVP$OFF 0000                     ?_PID 0056  
           ___ftdiv@cntr 0033             ___ftdiv@sign 0038                     l1600 023B  
                   l1530 055A                     l1540 0582                     l1532 0564  
                   l1620 0272                     l1612 0255                     l1700 05C6  
                   l1542 058A                     l1534 0569                     l1526 0553  
                   l1630 028E                     l1622 0277                     l1640 02C0  
                   l1632 0298                     l1624 027B                     l1704 05DC  
                   l1800 04A4                     l1650 02DB                     l1618 0268  
                   l1722 0309                     l1564 063D                     l1580 067F  
                   l1636 02AE                     l1660 03BC                     l1740 035A  
                   l1812 04CB                     l1558 0629                     l1590 0225  
                   l1806 04B1                     l1680 0413                     l1752 0376  
                   l1744 0362                     l1728 031F                     l1808 04BD  
                   l1904 0526                     l1594 022C                     l1666 03D2  
                   l1850 0178                     l1756 037E                     l1780 0466  
                   l1862 01EE                     l1846 0161                     l1688 042C  
                   l1798 0496                     l1896 0505                     ?_isr 0070  
                   u2015 0658                     u2025 066A                     u2135 059F  
                   u2055 055F                     u2075 0578                     u2315 0269  
                   u2165 0633                     u2095 0585                     u2345 027C  
                   u2285 0256                     u2445 03E4                     u2375 028F  
                   u2455 03F4                     u2465 0414                     u2625 037F  
                   u2705 0497                     u2475 0423                     u2635 0385  
                   u2555 032B                     u2485 042D                     u2565 033B  
                   u2805 01D5                     u2735 04B2                     u2585 0363  
                   u2825 0503                     u2595 0369                     u2675 046D  
                   u2835 0524                     u2845 0534                     u2785 01B2  
                   u2867 050F                     u2877 053F                     i1l71 0044  
                   _WPUA 020C             __CFG_WRT$OFF 0000                     _gear 00A9  
                   _main 04D4             ___ftpack@arg 0021             ___ftpack@exp 0024  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0048            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0047             ___ftmul@sign 0048                    ??_PID 0058  
           ___fttol@exp1 002E             ___fttol@lval 002A                    ??_isr 0020  
          __CFG_PLLEN$ON 0000    __size_of_PWM_set_duty 0026                    ?_main 0065  
        __end_of___ftadd 02F2            __CFG_WDTE$OFF 0000          __end_of___ftdiv 044D  
        __end_of___ftneg 06D0          __end_of___ftmul 03A5                    _T1CON 0018  
        __end_of___fttol 04D4                    _T2CON 001C          __end_of___lwdiv 061F  
                  i1l182 069D                    _TRISA 008C            __CFG_PWRTE$ON 0000  
         __CFG_FCMEN$OFF 0000            ___awtoft@sign 002E            ___ftpack@sign 0025  
                  main@x 00B3         __end_of_PWM_Init 06BC                    status 0003  
                  wtemp0 007E             _PWM_set_duty 064E          __initialization 0049  
           __end_of_main 054A                   ??_main 0069            ___fttol@sign1 0029  
                 PID@pid 0062                   PID@set 0056       __size_of_M_control 002F  
                 _CCPR1L 0291         __end_of___awtoft 0695                   _ANSELA 018C  
       __end_of___ftpack 05AF                   i1l1422 0611                   i1l1414 05F3  
                 i1l1416 05FF                   i1l1426 061A                   i1l1442 0017  
                 i1l1454 0040                   i1l1392 0697                   _INTCON 000B  
                 u190_25 060A                   u191_25 0612                   u183_25 069E  
                 u184_25 06A3                   u187_25 05F6                   u189_25 0600  
                 _OSCCON 0099                   ___ftge 05AF                   ___wmul 0695  
              ??___ftadd 004F           __CFG_STVREN$ON 0000                ??___ftdiv 002F  
              ??___ftneg 0024                ??___ftmul 003F                ??___fttol 0025  
              ??___lwdiv 007A    ___ftmul@f3_as_product 0044  __end_of__initialization 005E  
             ___ftadd@f1 0049               ___ftadd@f2 004C               ___ftge@ff1 0021  
             ___ftge@ff2 0024               ___ftdiv@f1 002C               ___ftdiv@f2 0029  
             ___ftdiv@f3 0034               ___ftneg@f1 0021               ___awtoft@c 0029  
             ___ftmul@f1 0039               ___ftmul@f2 003C               ___fttol@f1 0021  
         __pcstackCOMMON 0070             __pidataBANK1 06BC        __end_of_M_control 064E  
              ?_PWM_Init 0070           _OPTION_REGbits 0095               __pbssBANK0 006A  
             __pbssBANK1 00AB                  PID@rpm2 005D               __pmaintext 04D4  
                ?___ftge 0021                  ?___wmul 0070               __pintentry 0004  
                _CCP1CON 0293                ?___awtoft 0029                ?___ftpack 0021  
             ??_PWM_Init 0021                  _PID$756 005A         PWM_set_duty@duty 0021  
        __size_of___ftge 003C                  ___ftadd 01FD                  ___ftdiv 03A5  
                ___ftneg 06C7          __size_of___wmul 001B                  ___ftmul 02F2  
                ___fttol 044D                  ___lwdiv 05EB               ??___awtoft 002C  
             ??___ftpack 0026                  __ptext1 06B0                  __ptext2 0061  
                __ptext3 044D                  __ptext4 06C7                  __ptext5 02F2  
                __ptext6 05AF                  __ptext7 03A5                  __ptext8 01FD  
                __ptext9 0674             __size_of_PID 019C                _T1CONbits 0018  
                _counter 00B1             __size_of_isr 0044                _IOCAFbits 0393  
              _IOCANbits 0392     end_of_initialization 005E                  init_ram 06D0  
                initloop 06D1         __CFG_FOSC$INTOSC 0000              ___ftdiv@exp 0037  
            ___ftmul@exp 0043           __end_of___ftge 05EB           __end_of___wmul 06B0  
              _M_control 061F        __size_of_PWM_Init 000C      start_initialization 0049  
            __end_of_PID 01FD              __end_of_isr 0048              _accumulator 00AE  
               ??___ftge 0027                 ??___wmul 0074              __pdataBANK1 00A0  
             ?_M_control 002F        __size_of___awtoft 0021        __size_of___ftpack 0065  
              ___latbits 0000            __pcstackBANK0 0020            __pcstackBANK1 00B3  
               PID@error 005F            ?_PWM_set_duty 0021         ___lwdiv@dividend 0078  
               ?___ftadd 0049                 ?___ftdiv 0029                 ?___ftneg 0021  
               ?___ftmul 0039                 ?___fttol 0021                 ?___lwdiv 0076  
       ___lwdiv@quotient 007B                _lasterror 00AB           ___wmul@product 0074  
               _LATAbits 010C                 _PIE1bits 0091           ??_PWM_set_duty 0023  
               _PIR1bits 0011              ??_M_control 0031                 _PWM_Init 06B0  
      ___wmul@multiplier 0070                main@x_364 00B5               _APFCONbits 011D  
       __size_of___ftadd 00F5         __size_of___ftdiv 00A8         __size_of___ftneg 0009  
       __size_of___ftmul 00B3         __size_of___fttol 0087         __size_of___lwdiv 0034  
               ___awtoft 0674                 ___ftpack 054A          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 054A                 __ptext11 061F  
               __ptext12 064E                 __ptext14 0695                 __ptext15 05EB  
          __size_of_main 0076                 int$flags 007E                 main@argc 0065  
               main@argv 0067               _INTCONbits 000B     __end_of_PWM_set_duty 0674  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000             M_control@ctr 002F  
