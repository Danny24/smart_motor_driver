

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Jul 08 20:19:27 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.43
    31                           ; Generated 25/07/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC12F1822 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011D                     	;# 
   115  011D                     	;# 
   116  018C                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0199                     	;# 
   127  019A                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019C                     	;# 
   133  019C                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  019F                     	;# 
   137  020C                     	;# 
   138  0211                     	;# 
   139  0211                     	;# 
   140  0212                     	;# 
   141  0212                     	;# 
   142  0213                     	;# 
   143  0213                     	;# 
   144  0214                     	;# 
   145  0214                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0216                     	;# 
   150  0216                     	;# 
   151  0217                     	;# 
   152  0217                     	;# 
   153  0291                     	;# 
   154  0291                     	;# 
   155  0292                     	;# 
   156  0293                     	;# 
   157  0294                     	;# 
   158  0295                     	;# 
   159  0295                     	;# 
   160  0296                     	;# 
   161  0391                     	;# 
   162  0392                     	;# 
   163  0393                     	;# 
   164  039A                     	;# 
   165  039C                     	;# 
   166  039D                     	;# 
   167  039E                     	;# 
   168  039F                     	;# 
   169  0FE4                     	;# 
   170  0FE5                     	;# 
   171  0FE6                     	;# 
   172  0FE7                     	;# 
   173  0FE8                     	;# 
   174  0FE9                     	;# 
   175  0FEA                     	;# 
   176  0FEB                     	;# 
   177  0FED                     	;# 
   178  0FEE                     	;# 
   179  0FEF                     	;# 
   180                           
   181                           	psect	idataBANK1
   182  0649                     __pidataBANK1:	
   183                           
   184                           ;initializer for _ki
   185  0649  3412               	retlw	18
   186  064A  3403               	retlw	3
   187  064B  343B               	retlw	59
   188                           
   189                           ;initializer for _kd
   190  064C  34B7               	retlw	183
   191  064D  34D1               	retlw	209
   192  064E  3438               	retlw	56
   193                           
   194                           ;initializer for _kp
   195  064F  34CD               	retlw	205
   196  0650  34CC               	retlw	204
   197  0651  343E               	retlw	62
   198                           
   199                           ;initializer for _gear
   200  0652  3496               	retlw	150
   201  0653  3400               	retlw	0
   202  0018                     _T1CON	set	24
   203  000B                     _INTCON	set	11
   204  0018                     _T1CONbits	set	24
   205  000B                     _INTCONbits	set	11
   206  001C                     _T2CON	set	28
   207  0011                     _PIR1bits	set	17
   208  001B                     _PR2	set	27
   209  0091                     _PIE1bits	set	145
   210  0095                     _OPTION_REGbits	set	149
   211  008C                     _TRISA	set	140
   212  0099                     _OSCCON	set	153
   213  011D                     _APFCONbits	set	285
   214  010C                     _LATAbits	set	268
   215  018C                     _ANSELA	set	396
   216  020C                     _WPUA	set	524
   217  0291                     _CCPR1L	set	657
   218  0293                     _CCP1CON	set	659
   219  0392                     _IOCANbits	set	914
   220  0393                     _IOCAFbits	set	915
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  0049                     start_initialization:	
   226  0049                     __initialization:	
   227                           
   228                           ; Initialize objects allocated to BANK1
   229  0049  3049               	movlw	low __pidataBANK1
   230  004A  0084               	movwf	4
   231  004B  3086               	movlw	(high __pidataBANK1)| (0+128)
   232  004C  0085               	movwf	5
   233  004D  30A0               	movlw	low __pdataBANK1
   234  004E  0086               	movwf	6
   235  004F  3000               	movlw	high __pdataBANK1
   236  0050  0087               	movwf	7
   237  0051  300B               	movlw	11
   238  0052  265D               	fcall	init_ram
   239                           
   240                           ; Clear objects allocated to BANK0
   241  0053  01EA               	clrf	__pbssBANK0& (0+127)
   242  0054  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   243  0055  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   244  0056  01ED               	clrf	(__pbssBANK0+3)& (0+127)
   245  0057  01EE               	clrf	(__pbssBANK0+4)& (0+127)
   246                           
   247                           ; Clear objects allocated to BANK1
   248  0058  0021               	movlb	1	; select bank1
   249  0059  01B3               	clrf	__pbssBANK1& (0+127)
   250  005A  01B4               	clrf	(__pbssBANK1+1)& (0+127)
   251  005B  01B5               	clrf	(__pbssBANK1+2)& (0+127)
   252  005C  01B6               	clrf	(__pbssBANK1+3)& (0+127)
   253  005D  01B7               	clrf	(__pbssBANK1+4)& (0+127)
   254  005E                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  005E                     __end_of__initialization:	
   258  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   259  005F  0020               	movlb	0
   260  0060  2ADA               	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssBANK0
   263  006A                     __pbssBANK0:	
   264  006A                     _accumulator:	
   265  006A                     	ds	3
   266  006D                     _rpm:	
   267  006D                     	ds	2
   268                           
   269                           	psect	bssBANK1
   270  00B3                     __pbssBANK1:	
   271  00B3                     _lasterror:	
   272  00B3                     	ds	3
   273  00B6                     _counter:	
   274  00B6                     	ds	2
   275                           
   276                           	psect	dataBANK1
   277  00A0                     __pdataBANK1:	
   278  00A0                     _ki:	
   279  00A0                     	ds	3
   280  00A3                     _kd:	
   281  00A3                     	ds	3
   282  00A6                     _kp:	
   283  00A6                     	ds	3
   284  00A9                     _gear:	
   285  00A9                     	ds	2
   286                           
   287                           	psect	inittext
   288  065D                     init_ram:	
   289  065D  00FE               	movwf	126
   290  065E                     initloop:	
   291  065E  0012               	moviw fsr0++
   292  065F  001E               	movwi fsr1++
   293  0660  0BFE               	decfsz	126,f
   294  0661  2E5E               	goto	initloop
   295  0662  3400               	retlw	0
   296                           
   297                           	psect	cstackBANK1
   298  00AB                     __pcstackBANK1:	
   299  00AB                     main@x:	
   300                           
   301                           ; 2 bytes @ 0x0
   302  00AB                     	ds	2
   303  00AD                     main@x_364:	
   304                           
   305                           ; 2 bytes @ 0x2
   306  00AD                     	ds	2
   307  00AF                     main@x_365:	
   308                           
   309                           ; 2 bytes @ 0x4
   310  00AF                     	ds	2
   311  00B1                     main@x_366:	
   312                           
   313                           ; 2 bytes @ 0x6
   314  00B1                     	ds	2
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:	
   318  0070                     ?_all_of_them:	
   319  0070                     ?_PWM_Init:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?___wmul:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ___wmul@multiplier:	
   326                           ; 2 bytes @ 0x0
   327                           
   328                           
   329                           ; 2 bytes @ 0x0
   330  0070                     	ds	2
   331  0072                     ___wmul@multiplicand:	
   332                           
   333                           ; 2 bytes @ 0x2
   334  0072                     	ds	2
   335  0074                     ??___wmul:	
   336  0074                     ___wmul@product:	
   337                           ; 1 bytes @ 0x4
   338                           
   339                           
   340                           ; 2 bytes @ 0x4
   341  0074                     	ds	2
   342  0076                     ?___lwdiv:	
   343  0076                     ___lwdiv@divisor:	
   344                           ; 2 bytes @ 0x6
   345                           
   346                           
   347                           ; 2 bytes @ 0x6
   348  0076                     	ds	2
   349  0078                     ___lwdiv@dividend:	
   350                           
   351                           ; 2 bytes @ 0x8
   352  0078                     	ds	2
   353  007A                     ??___lwdiv:	
   354                           
   355                           ; 1 bytes @ 0xA
   356  007A                     	ds	1
   357  007B                     ___lwdiv@quotient:	
   358                           
   359                           ; 2 bytes @ 0xB
   360  007B                     	ds	2
   361  007D                     ___lwdiv@counter:	
   362                           
   363                           ; 1 bytes @ 0xD
   364  007D                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367  0020                     __pcstackBANK0:	
   368  0020                     ??_all_of_them:	
   369                           
   370                           ; 1 bytes @ 0x0
   371  0020                     	ds	1
   372  0021                     ?___ftge:	
   373  0021                     ??_PWM_Init:	
   374                           ; 1 bit 
   375                           
   376  0021                     ?_PWM_set_duty:	
   377                           ; 1 bytes @ 0x1
   378                           
   379  0021                     ?___ftpack:	
   380                           ; 2 bytes @ 0x1
   381                           
   382  0021                     ?___ftneg:	
   383                           ; 3 bytes @ 0x1
   384                           
   385  0021                     PWM_set_duty@duty:	
   386                           ; 3 bytes @ 0x1
   387                           
   388  0021                     ___ftpack@arg:	
   389                           ; 2 bytes @ 0x1
   390                           
   391  0021                     ___ftge@ff1:	
   392                           ; 3 bytes @ 0x1
   393                           
   394  0021                     ___ftneg@f1:	
   395                           ; 3 bytes @ 0x1
   396                           
   397                           
   398                           ; 3 bytes @ 0x1
   399  0021                     	ds	2
   400  0023                     ??_PWM_set_duty:	
   401                           
   402                           ; 1 bytes @ 0x3
   403  0023                     	ds	1
   404  0024                     ?_M_control:	
   405  0024                     ??___ftneg:	
   406                           ; 1 bytes @ 0x4
   407                           
   408  0024                     ___ftpack@exp:	
   409                           ; 1 bytes @ 0x4
   410                           
   411  0024                     M_control@ctr:	
   412                           ; 1 bytes @ 0x4
   413                           
   414  0024                     ___ftge@ff2:	
   415                           ; 2 bytes @ 0x4
   416                           
   417                           
   418                           ; 3 bytes @ 0x4
   419  0024                     	ds	1
   420  0025                     ___ftpack@sign:	
   421                           
   422                           ; 1 bytes @ 0x5
   423  0025                     	ds	1
   424  0026                     ??___ftpack:	
   425  0026                     ??_M_control:	
   426                           ; 1 bytes @ 0x6
   427                           
   428                           
   429                           ; 1 bytes @ 0x6
   430  0026                     	ds	1
   431  0027                     ??___ftge:	
   432                           
   433                           ; 1 bytes @ 0x7
   434  0027                     	ds	2
   435  0029                     ?___awtoft:	
   436  0029                     ?___ftdiv:	
   437                           ; 3 bytes @ 0x9
   438                           
   439  0029                     ___awtoft@c:	
   440                           ; 3 bytes @ 0x9
   441                           
   442  0029                     ___ftdiv@f2:	
   443                           ; 2 bytes @ 0x9
   444                           
   445                           
   446                           ; 3 bytes @ 0x9
   447  0029                     	ds	3
   448  002C                     ??___awtoft:	
   449  002C                     ___ftdiv@f1:	
   450                           ; 1 bytes @ 0xC
   451                           
   452                           
   453                           ; 3 bytes @ 0xC
   454  002C                     	ds	2
   455  002E                     ___awtoft@sign:	
   456                           
   457                           ; 1 bytes @ 0xE
   458  002E                     	ds	1
   459  002F                     ??___ftdiv:	
   460                           
   461                           ; 1 bytes @ 0xF
   462  002F                     	ds	4
   463  0033                     ___ftdiv@cntr:	
   464                           
   465                           ; 1 bytes @ 0x13
   466  0033                     	ds	1
   467  0034                     ___ftdiv@f3:	
   468                           
   469                           ; 3 bytes @ 0x14
   470  0034                     	ds	3
   471  0037                     ___ftdiv@exp:	
   472                           
   473                           ; 1 bytes @ 0x17
   474  0037                     	ds	1
   475  0038                     ___ftdiv@sign:	
   476                           
   477                           ; 1 bytes @ 0x18
   478  0038                     	ds	1
   479  0039                     ?___ftmul:	
   480  0039                     ___ftmul@f1:	
   481                           ; 3 bytes @ 0x19
   482                           
   483                           
   484                           ; 3 bytes @ 0x19
   485  0039                     	ds	3
   486  003C                     ___ftmul@f2:	
   487                           
   488                           ; 3 bytes @ 0x1C
   489  003C                     	ds	3
   490  003F                     ??___ftmul:	
   491                           
   492                           ; 1 bytes @ 0x1F
   493  003F                     	ds	4
   494  0043                     ___ftmul@exp:	
   495                           
   496                           ; 1 bytes @ 0x23
   497  0043                     	ds	1
   498  0044                     ___ftmul@f3_as_product:	
   499                           
   500                           ; 3 bytes @ 0x24
   501  0044                     	ds	3
   502  0047                     ___ftmul@cntr:	
   503                           
   504                           ; 1 bytes @ 0x27
   505  0047                     	ds	1
   506  0048                     ___ftmul@sign:	
   507                           
   508                           ; 1 bytes @ 0x28
   509  0048                     	ds	1
   510  0049                     ?___ftadd:	
   511  0049                     ___ftadd@f1:	
   512                           ; 3 bytes @ 0x29
   513                           
   514                           
   515                           ; 3 bytes @ 0x29
   516  0049                     	ds	3
   517  004C                     ___ftadd@f2:	
   518                           
   519                           ; 3 bytes @ 0x2C
   520  004C                     	ds	3
   521  004F                     ??___ftadd:	
   522                           
   523                           ; 1 bytes @ 0x2F
   524  004F                     	ds	4
   525  0053                     ___ftadd@sign:	
   526                           
   527                           ; 1 bytes @ 0x33
   528  0053                     	ds	1
   529  0054                     ___ftadd@exp2:	
   530                           
   531                           ; 1 bytes @ 0x34
   532  0054                     	ds	1
   533  0055                     ___ftadd@exp1:	
   534                           
   535                           ; 1 bytes @ 0x35
   536  0055                     	ds	1
   537  0056                     ?_PID:	
   538  0056                     PID@set:	
   539                           ; 1 bytes @ 0x36
   540                           
   541                           
   542                           ; 2 bytes @ 0x36
   543  0056                     	ds	2
   544  0058                     ??_PID:	
   545                           
   546                           ; 1 bytes @ 0x38
   547  0058                     	ds	2
   548  005A                     _PID$758:	
   549                           
   550                           ; 3 bytes @ 0x3A
   551  005A                     	ds	3
   552  005D                     PID@rpm2:	
   553                           
   554                           ; 2 bytes @ 0x3D
   555  005D                     	ds	2
   556  005F                     PID@error:	
   557                           
   558                           ; 3 bytes @ 0x3F
   559  005F                     	ds	3
   560  0062                     PID@pid:	
   561                           
   562                           ; 3 bytes @ 0x42
   563  0062                     	ds	3
   564  0065                     ?_main:	
   565  0065                     main@argc:	
   566                           ; 2 bytes @ 0x45
   567                           
   568                           
   569                           ; 2 bytes @ 0x45
   570  0065                     	ds	2
   571  0067                     main@argv:	
   572                           
   573                           ; 2 bytes @ 0x47
   574  0067                     	ds	2
   575  0069                     ??_main:	
   576                           
   577                           ; 1 bytes @ 0x49
   578  0069                     	ds	1
   579                           
   580                           	psect	maintext
   581  02DA                     __pmaintext:	
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 163 in file "main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  argc            2   69[BANK0 ] int 
   590 ;;  argv            2   71[BANK0 ] PTR PTR unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  x               2    6[BANK1 ] int 
   593 ;;  x               2    4[BANK1 ] int 
   594 ;;  x               2    2[BANK1 ] int 
   595 ;;  x               2    0[BANK1 ] int 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  2   69[BANK0 ] int 
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0, pclath, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : B1F/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1
   605 ;;      Params:         0       4       0
   606 ;;      Locals:         0       0       8
   607 ;;      Temps:          0       1       0
   608 ;;      Totals:         0       5       8
   609 ;;Total ram usage:       13 bytes
   610 ;; Hardware stack levels required when called:    5
   611 ;; This function calls:
   612 ;;		_PID
   613 ;;		_PWM_Init
   614 ;;		_PWM_set_duty
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _main
   622  02DA                     _main:	
   623                           
   624                           ;main.c: 165: OSCCON = 0b11110000;
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   628  02DA  30F0               	movlw	240
   629  02DB  0021               	movlb	1	; select bank1
   630  02DC  0099               	movwf	25	;volatile
   631                           
   632                           ;main.c: 166: TRISA = 0b00011000;
   633  02DD  3018               	movlw	24
   634  02DE  008C               	movwf	12	;volatile
   635                           
   636                           ;main.c: 167: ANSELA = 0b00000000;
   637  02DF  0023               	movlb	3	; select bank3
   638  02E0  018C               	clrf	12	;volatile
   639                           
   640                           ;main.c: 168: WPUA = 0b00011110;
   641  02E1  301E               	movlw	30
   642  02E2  0024               	movlb	4	; select bank4
   643  02E3  008C               	movwf	12	;volatile
   644                           
   645                           ;main.c: 169: OPTION_REGbits.nWPUEN = 0;
   646  02E4  0021               	movlb	1	; select bank1
   647  02E5  1395               	bcf	21,7	;volatile
   648                           
   649                           ;main.c: 170: APFCONbits.CCP1SEL = 1;
   650  02E6  0022               	movlb	2	; select bank2
   651  02E7  141D               	bsf	29,0	;volatile
   652                           
   653                           ;main.c: 171: LATAbits.LATA0 = 0;
   654  02E8  100C               	bcf	12,0	;volatile
   655                           
   656                           ;main.c: 172: PWM_Init();
   657  02E9  263D               	fcall	_PWM_Init
   658                           
   659                           ;main.c: 173: PWM_set_duty(0);
   660  02EA  3000               	movlw	0
   661  02EB  0020               	movlb	0	; select bank0
   662  02EC  00A1               	movwf	PWM_set_duty@duty
   663  02ED  00A2               	movwf	PWM_set_duty@duty+1
   664  02EE  262C               	fcall	_PWM_set_duty
   665                           
   666                           ;main.c: 174: IOCANbits.IOCAN4 = 1;
   667  02EF  0027               	movlb	7	; select bank7
   668  02F0  1612               	bsf	18,4	;volatile
   669                           
   670                           ;main.c: 175: INTCON = 0b01001000;
   671  02F1  3048               	movlw	72
   672  02F2  008B               	movwf	11	;volatile
   673                           
   674                           ;main.c: 176: T1CON = 0b00110100;
   675  02F3  3034               	movlw	52
   676  02F4  0020               	movlb	0	; select bank0
   677  02F5  0098               	movwf	24	;volatile
   678                           
   679                           ;main.c: 177: PIE1bits.TMR1IE = 1;
   680  02F6  0021               	movlb	1	; select bank1
   681  02F7  1411               	bsf	17,0	;volatile
   682                           
   683                           ;main.c: 178: T1CONbits.TMR1ON = 1;
   684  02F8  0020               	movlb	0	; select bank0
   685  02F9  1418               	bsf	24,0	;volatile
   686                           
   687                           ;main.c: 179: INTCONbits.IOCIF = 1;
   688  02FA  140B               	bsf	11,0	;volatile
   689  02FB                     l91:	
   690                           ;main.c: 183: while(1)
   691                           
   692                           
   693                           ;main.c: 184: {
   694                           ;main.c: 185: for(int x=0;x<10;x++)
   695  02FB  0021               	movlb	1	; select bank1
   696  02FC  01AB               	clrf	main@x^(0+128)
   697  02FD  01AC               	clrf	(main@x+1)^(0+128)
   698  02FE  082C               	movf	(main@x+1)^(0+128),w
   699  02FF  3A80               	xorlw	128
   700  0300  0020               	movlb	0	; select bank0
   701  0301  00E9               	movwf	??_main
   702  0302  3080               	movlw	128
   703  0303  0269               	subwf	??_main,w
   704  0304  1D03               	skipz
   705  0305  2B09               	goto	u1795
   706  0306  300A               	movlw	10
   707  0307  0021               	movlb	1	; select bank1
   708  0308  022B               	subwf	main@x^(0+128),w
   709  0309                     u1795:	
   710  0309  1803               	btfsc	3,0
   711  030A  2B24               	goto	l1448
   712  030B                     l1440:	
   713                           
   714                           ;main.c: 186: {
   715                           ;main.c: 187: PID(50);
   716  030B  3032               	movlw	50
   717  030C  0020               	movlb	0	; select bank0
   718  030D  00D6               	movwf	PID@set
   719  030E  3000               	movlw	0
   720  030F  00D7               	movwf	PID@set+1
   721  0310  2061               	fcall	_PID
   722                           
   723                           ;main.c: 188: _delay(1);
   724  0311  0000               	nop
   725  0312  3001               	movlw	1
   726  0313  0021               	movlb	1	; select bank1
   727  0314  07AB               	addwf	main@x^(0+128),f
   728  0315  3000               	movlw	0
   729  0316  3DAC               	addwfc	(main@x+1)^(0+128),f
   730  0317  082C               	movf	(main@x+1)^(0+128),w
   731  0318  3A80               	xorlw	128
   732  0319  0020               	movlb	0	; select bank0
   733  031A  00E9               	movwf	??_main
   734  031B  3080               	movlw	128
   735  031C  0269               	subwf	??_main,w
   736  031D  1D03               	skipz
   737  031E  2B22               	goto	u1805
   738  031F  300A               	movlw	10
   739  0320  0021               	movlb	1	; select bank1
   740  0321  022B               	subwf	main@x^(0+128),w
   741  0322                     u1805:	
   742  0322  1C03               	skipc
   743  0323  2B0B               	goto	l1440
   744  0324                     l1448:	
   745                           
   746                           ;main.c: 189: }
   747                           ;main.c: 190: for(int x=0;x<5;x++)
   748  0324  0021               	movlb	1	; select bank1
   749  0325  01AD               	clrf	main@x_364^(0+128)
   750  0326  01AE               	clrf	(main@x_364+1)^(0+128)
   751  0327  082E               	movf	(main@x_364+1)^(0+128),w
   752  0328  3A80               	xorlw	128
   753  0329  0020               	movlb	0	; select bank0
   754  032A  00E9               	movwf	??_main
   755  032B  3080               	movlw	128
   756  032C  0269               	subwf	??_main,w
   757  032D  1D03               	skipz
   758  032E  2B32               	goto	u1815
   759  032F  3005               	movlw	5
   760  0330  0021               	movlb	1	; select bank1
   761  0331  022D               	subwf	main@x_364^(0+128),w
   762  0332                     u1815:	
   763  0332  1803               	btfsc	3,0
   764  0333  2B4C               	goto	l1462
   765  0334                     l1454:	
   766                           
   767                           ;main.c: 191: {
   768                           ;main.c: 192: PID(0);
   769  0334  3000               	movlw	0
   770  0335  0020               	movlb	0	; select bank0
   771  0336  00D6               	movwf	PID@set
   772  0337  00D7               	movwf	PID@set+1
   773  0338  2061               	fcall	_PID
   774                           
   775                           ;main.c: 193: _delay(1);
   776  0339  0000               	nop
   777  033A  3001               	movlw	1
   778  033B  0021               	movlb	1	; select bank1
   779  033C  07AD               	addwf	main@x_364^(0+128),f
   780  033D  3000               	movlw	0
   781  033E  3DAE               	addwfc	(main@x_364+1)^(0+128),f
   782  033F  082E               	movf	(main@x_364+1)^(0+128),w
   783  0340  3A80               	xorlw	128
   784  0341  0020               	movlb	0	; select bank0
   785  0342  00E9               	movwf	??_main
   786  0343  3080               	movlw	128
   787  0344  0269               	subwf	??_main,w
   788  0345  1D03               	skipz
   789  0346  2B4A               	goto	u1825
   790  0347  3005               	movlw	5
   791  0348  0021               	movlb	1	; select bank1
   792  0349  022D               	subwf	main@x_364^(0+128),w
   793  034A                     u1825:	
   794  034A  1C03               	skipc
   795  034B  2B34               	goto	l1454
   796  034C                     l1462:	
   797                           
   798                           ;main.c: 194: }
   799                           ;main.c: 195: for(int x=0;x<10;x++)
   800  034C  0021               	movlb	1	; select bank1
   801  034D  01AF               	clrf	main@x_365^(0+128)
   802  034E  01B0               	clrf	(main@x_365+1)^(0+128)
   803  034F  0830               	movf	(main@x_365+1)^(0+128),w
   804  0350  3A80               	xorlw	128
   805  0351  0020               	movlb	0	; select bank0
   806  0352  00E9               	movwf	??_main
   807  0353  3080               	movlw	128
   808  0354  0269               	subwf	??_main,w
   809  0355  1D03               	skipz
   810  0356  2B5A               	goto	u1835
   811  0357  300A               	movlw	10
   812  0358  0021               	movlb	1	; select bank1
   813  0359  022F               	subwf	main@x_365^(0+128),w
   814  035A                     u1835:	
   815  035A  1803               	btfsc	3,0
   816  035B  2B75               	goto	l1476
   817  035C                     l1468:	
   818                           
   819                           ;main.c: 196: {
   820                           ;main.c: 197: PID(-150);
   821  035C  306A               	movlw	106
   822  035D  0020               	movlb	0	; select bank0
   823  035E  00D6               	movwf	PID@set
   824  035F  30FF               	movlw	255
   825  0360  00D7               	movwf	PID@set+1
   826  0361  2061               	fcall	_PID
   827                           
   828                           ;main.c: 198: _delay(1);
   829  0362  0000               	nop
   830  0363  3001               	movlw	1
   831  0364  0021               	movlb	1	; select bank1
   832  0365  07AF               	addwf	main@x_365^(0+128),f
   833  0366  3000               	movlw	0
   834  0367  3DB0               	addwfc	(main@x_365+1)^(0+128),f
   835  0368  0830               	movf	(main@x_365+1)^(0+128),w
   836  0369  3A80               	xorlw	128
   837  036A  0020               	movlb	0	; select bank0
   838  036B  00E9               	movwf	??_main
   839  036C  3080               	movlw	128
   840  036D  0269               	subwf	??_main,w
   841  036E  1D03               	skipz
   842  036F  2B73               	goto	u1845
   843  0370  300A               	movlw	10
   844  0371  0021               	movlb	1	; select bank1
   845  0372  022F               	subwf	main@x_365^(0+128),w
   846  0373                     u1845:	
   847  0373  1C03               	skipc
   848  0374  2B5C               	goto	l1468
   849  0375                     l1476:	
   850                           
   851                           ;main.c: 199: }
   852                           ;main.c: 200: for(int x=0;x<5;x++)
   853  0375  0021               	movlb	1	; select bank1
   854  0376  01B1               	clrf	main@x_366^(0+128)
   855  0377  01B2               	clrf	(main@x_366+1)^(0+128)
   856  0378                     L1:	
   857  0378  0832               	movf	(main@x_366+1)^(0+128),w
   858  0379  3A80               	xorlw	128
   859  037A  0020               	movlb	0	; select bank0
   860  037B  00E9               	movwf	??_main
   861  037C  3080               	movlw	128
   862  037D  0269               	subwf	??_main,w
   863  037E  1D03               	skipz
   864  037F  2B83               	goto	u1855
   865  0380  3005               	movlw	5
   866  0381  0021               	movlb	1	; select bank1
   867  0382  0231               	subwf	main@x_366^(0+128),w
   868  0383                     u1855:	
   869  0383  1803               	btfsc	3,0
   870  0384  2AFB               	goto	l91
   871                           
   872                           ;main.c: 201: {
   873                           ;main.c: 202: PID(0);
   874  0385  3000               	movlw	0
   875  0386  0020               	movlb	0	; select bank0
   876  0387  00D6               	movwf	PID@set
   877  0388  00D7               	movwf	PID@set+1
   878  0389  2061               	fcall	_PID
   879                           
   880                           ;main.c: 203: _delay(1);
   881  038A  0000               	nop
   882  038B  3001               	movlw	1
   883  038C  0021               	movlb	1	; select bank1
   884  038D  07B1               	addwf	main@x_366^(0+128),f
   885  038E  3000               	movlw	0
   886  038F  3DB2               	addwfc	(main@x_366+1)^(0+128),f
   887  0390  2B78               	goto	L1
   888  0391                     __end_of_main:	
   889                           ;main.c: 204: }
   890                           ;main.c: 205: }
   891                           ;main.c: 207: return (0);
   892                           ;	Return value of _main is never used
   893                           
   894                           
   895                           	psect	text1
   896  063D                     __ptext1:	
   897 ;; *************** function _PWM_Init *****************
   898 ;; Defined at:
   899 ;;		line 54 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  2   58[None  ] int 
   906 ;; Registers used:
   907 ;;		wreg, status,2
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1
   913 ;;      Params:         0       0       0
   914 ;;      Locals:         0       0       0
   915 ;;      Temps:          0       0       0
   916 ;;      Totals:         0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    2
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function _PWM_Init
   929  063D                     _PWM_Init:	
   930                           
   931                           ;main.c: 56: PR2 = 39;
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _PWM_Init: [wreg+status,2]
   935  063D  3027               	movlw	39
   936  063E  0020               	movlb	0	; select bank0
   937  063F  009B               	movwf	27	;volatile
   938                           
   939                           ;main.c: 57: CCP1CON = 0b00001100;
   940  0640  300C               	movlw	12
   941  0641  0025               	movlb	5	; select bank5
   942  0642  0093               	movwf	19	;volatile
   943                           
   944                           ;main.c: 58: CCPR1L = 0b00000000;
   945  0643  0191               	clrf	17	;volatile
   946                           
   947                           ;main.c: 59: PIR1bits.TMR2IF = 0;
   948  0644  0020               	movlb	0	; select bank0
   949  0645  1091               	bcf	17,1	;volatile
   950                           
   951                           ;main.c: 60: T2CON = 0b00000101;
   952  0646  3005               	movlw	5
   953  0647  009C               	movwf	28	;volatile
   954  0648  0008               	return
   955  0649                     __end_of_PWM_Init:	
   956                           
   957                           	psect	text2
   958  0061                     __ptext2:	
   959 ;; *************** function _PID *****************
   960 ;; Defined at:
   961 ;;		line 122 in file "main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  set             2   54[BANK0 ] int 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  pid             3   66[BANK0 ] float 
   966 ;;  error           3   63[BANK0 ] float 
   967 ;;  rpm2            2   61[BANK0 ] int 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, pclath, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1
   977 ;;      Params:         0       2       0
   978 ;;      Locals:         0      11       0
   979 ;;      Temps:          0       2       0
   980 ;;      Totals:         0      15       0
   981 ;;Total ram usage:       15 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    4
   984 ;; This function calls:
   985 ;;		_M_control
   986 ;;		___awtoft
   987 ;;		___ftadd
   988 ;;		___ftdiv
   989 ;;		___ftge
   990 ;;		___ftmul
   991 ;;		___ftneg
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _PID
   999  0061                     _PID:	
  1000                           
  1001                           ;main.c: 124: float error = 0;
  1002                           
  1003                           ;incstack = 0
  1004                           ; Regs used in _PID: [wreg+status,2+status,0+pclath+cstack]
  1005  0061  3000               	movlw	0
  1006  0062  0020               	movlb	0	; select bank0
  1007  0063  00DF               	movwf	PID@error
  1008  0064  3000               	movlw	0
  1009  0065  00E0               	movwf	PID@error+1
  1010  0066  3000               	movlw	0
  1011  0067  00E1               	movwf	PID@error+2
  1012                           
  1013                           ;main.c: 125: float pid = 0;
  1014  0068  3000               	movlw	0
  1015  0069  00E2               	movwf	PID@pid
  1016  006A  3000               	movlw	0
  1017  006B  00E3               	movwf	PID@pid+1
  1018  006C  3000               	movlw	0
  1019  006D  00E4               	movwf	PID@pid+2
  1020                           
  1021                           ;main.c: 126: int rpm2 = rpm + 600;
  1022  006E  086D               	movf	_rpm,w
  1023  006F  3E58               	addlw	88
  1024  0070  00DD               	movwf	PID@rpm2
  1025  0071  3002               	movlw	2
  1026  0072  3D6E               	addwfc	_rpm+1,w
  1027  0073  00DE               	movwf	PID@rpm2+1
  1028                           
  1029                           ;main.c: 127: set = set + 600;
  1030  0074  0856               	movf	PID@set,w
  1031  0075  3E58               	addlw	88
  1032  0076  00D6               	movwf	PID@set
  1033  0077  3002               	movlw	2
  1034  0078  3D57               	addwfc	PID@set+1,w
  1035  0079  00D7               	movwf	PID@set+1
  1036                           
  1037                           ;main.c: 128: error = set-rpm2;
  1038  007A  095D               	comf	PID@rpm2,w
  1039  007B  00D8               	movwf	??_PID
  1040  007C  095E               	comf	PID@rpm2+1,w
  1041  007D  00D9               	movwf	??_PID+1
  1042  007E  0AD8               	incf	??_PID,f
  1043  007F  1903               	skipnz
  1044  0080  0AD9               	incf	??_PID+1,f
  1045  0081  0856               	movf	PID@set,w
  1046  0082  0758               	addwf	??_PID,w
  1047  0083  00A9               	movwf	___awtoft@c
  1048  0084  0857               	movf	PID@set+1,w
  1049  0085  3D59               	addwfc	??_PID+1,w
  1050  0086  00AA               	movwf	___awtoft@c+1
  1051  0087  25F0               	fcall	___awtoft
  1052  0088  0020               	movlb	0	; select bank0
  1053  0089  0829               	movf	?___awtoft,w
  1054  008A  00DF               	movwf	PID@error
  1055  008B  082A               	movf	?___awtoft+1,w
  1056  008C  00E0               	movwf	PID@error+1
  1057  008D  082B               	movf	?___awtoft+2,w
  1058  008E  00E1               	movwf	PID@error+2
  1059                           
  1060                           ;main.c: 129: pid = error*kp;
  1061  008F  0021               	movlb	1	; select bank1
  1062  0090  0826               	movf	_kp^(0+128),w
  1063  0091  0020               	movlb	0	; select bank0
  1064  0092  00B9               	movwf	___ftmul@f1
  1065  0093  0021               	movlb	1	; select bank1
  1066  0094  0827               	movf	(_kp+1)^(0+128),w
  1067  0095  0020               	movlb	0	; select bank0
  1068  0096  00BA               	movwf	___ftmul@f1+1
  1069  0097  0021               	movlb	1	; select bank1
  1070  0098  0828               	movf	(_kp+2)^(0+128),w
  1071  0099  0020               	movlb	0	; select bank0
  1072  009A  00BB               	movwf	___ftmul@f1+2
  1073  009B  085F               	movf	PID@error,w
  1074  009C  00BC               	movwf	___ftmul@f2
  1075  009D  0860               	movf	PID@error+1,w
  1076  009E  00BD               	movwf	___ftmul@f2+1
  1077  009F  0861               	movf	PID@error+2,w
  1078  00A0  00BE               	movwf	___ftmul@f2+2
  1079  00A1  2391               	fcall	___ftmul
  1080  00A2  0020               	movlb	0	; select bank0
  1081  00A3  0839               	movf	?___ftmul,w
  1082  00A4  00E2               	movwf	PID@pid
  1083  00A5  083A               	movf	?___ftmul+1,w
  1084  00A6  00E3               	movwf	PID@pid+1
  1085  00A7  083B               	movf	?___ftmul+2,w
  1086  00A8  00E4               	movwf	PID@pid+2
  1087                           
  1088                           ;main.c: 130: accumulator += error;
  1089  00A9  085F               	movf	PID@error,w
  1090  00AA  00C9               	movwf	___ftadd@f1
  1091  00AB  0860               	movf	PID@error+1,w
  1092  00AC  00CA               	movwf	___ftadd@f1+1
  1093  00AD  0861               	movf	PID@error+2,w
  1094  00AE  00CB               	movwf	___ftadd@f1+2
  1095  00AF  086A               	movf	_accumulator,w
  1096  00B0  00CC               	movwf	___ftadd@f2
  1097  00B1  086B               	movf	_accumulator+1,w
  1098  00B2  00CD               	movwf	___ftadd@f2+1
  1099  00B3  086C               	movf	_accumulator+2,w
  1100  00B4  00CE               	movwf	___ftadd@f2+2
  1101  00B5  21E5               	fcall	___ftadd
  1102  00B6  0020               	movlb	0	; select bank0
  1103  00B7  0849               	movf	?___ftadd,w
  1104  00B8  00EA               	movwf	_accumulator
  1105  00B9  084A               	movf	?___ftadd+1,w
  1106  00BA  00EB               	movwf	_accumulator+1
  1107  00BB  084B               	movf	?___ftadd+2,w
  1108  00BC  00EC               	movwf	_accumulator+2
  1109                           
  1110                           ;main.c: 131: pid += ki*accumulator;
  1111  00BD  0021               	movlb	1	; select bank1
  1112  00BE  0820               	movf	_ki^(0+128),w
  1113  00BF  0020               	movlb	0	; select bank0
  1114  00C0  00BC               	movwf	___ftmul@f2
  1115  00C1  0021               	movlb	1	; select bank1
  1116  00C2  0821               	movf	(_ki+1)^(0+128),w
  1117  00C3  0020               	movlb	0	; select bank0
  1118  00C4  00BD               	movwf	___ftmul@f2+1
  1119  00C5  0021               	movlb	1	; select bank1
  1120  00C6  0822               	movf	(_ki+2)^(0+128),w
  1121  00C7  0020               	movlb	0	; select bank0
  1122  00C8  00BE               	movwf	___ftmul@f2+2
  1123  00C9  086A               	movf	_accumulator,w
  1124  00CA  00B9               	movwf	___ftmul@f1
  1125  00CB  086B               	movf	_accumulator+1,w
  1126  00CC  00BA               	movwf	___ftmul@f1+1
  1127  00CD  086C               	movf	_accumulator+2,w
  1128  00CE  00BB               	movwf	___ftmul@f1+2
  1129  00CF  2391               	fcall	___ftmul
  1130  00D0  0020               	movlb	0	; select bank0
  1131  00D1  0839               	movf	?___ftmul,w
  1132  00D2  00C9               	movwf	___ftadd@f1
  1133  00D3  083A               	movf	?___ftmul+1,w
  1134  00D4  00CA               	movwf	___ftadd@f1+1
  1135  00D5  083B               	movf	?___ftmul+2,w
  1136  00D6  00CB               	movwf	___ftadd@f1+2
  1137  00D7  0862               	movf	PID@pid,w
  1138  00D8  00CC               	movwf	___ftadd@f2
  1139  00D9  0863               	movf	PID@pid+1,w
  1140  00DA  00CD               	movwf	___ftadd@f2+1
  1141  00DB  0864               	movf	PID@pid+2,w
  1142  00DC  00CE               	movwf	___ftadd@f2+2
  1143  00DD  21E5               	fcall	___ftadd
  1144  00DE  0020               	movlb	0	; select bank0
  1145  00DF  0849               	movf	?___ftadd,w
  1146  00E0  00E2               	movwf	PID@pid
  1147  00E1  084A               	movf	?___ftadd+1,w
  1148  00E2  00E3               	movwf	PID@pid+1
  1149  00E3  084B               	movf	?___ftadd+2,w
  1150  00E4  00E4               	movwf	PID@pid+2
  1151                           
  1152                           ;main.c: 132: pid += kd*(error-lasterror);
  1153  00E5  0021               	movlb	1	; select bank1
  1154  00E6  0833               	movf	_lasterror^(0+128),w
  1155  00E7  0020               	movlb	0	; select bank0
  1156  00E8  00A1               	movwf	___ftneg@f1
  1157  00E9  0021               	movlb	1	; select bank1
  1158  00EA  0834               	movf	(_lasterror+1)^(0+128),w
  1159  00EB  0020               	movlb	0	; select bank0
  1160  00EC  00A2               	movwf	___ftneg@f1+1
  1161  00ED  0021               	movlb	1	; select bank1
  1162  00EE  0835               	movf	(_lasterror+2)^(0+128),w
  1163  00EF  0020               	movlb	0	; select bank0
  1164  00F0  00A3               	movwf	___ftneg@f1+2
  1165  00F1  2654               	fcall	___ftneg
  1166  00F2  0020               	movlb	0	; select bank0
  1167  00F3  0821               	movf	?___ftneg,w
  1168  00F4  00CC               	movwf	___ftadd@f2
  1169  00F5  0822               	movf	?___ftneg+1,w
  1170  00F6  00CD               	movwf	___ftadd@f2+1
  1171  00F7  0823               	movf	?___ftneg+2,w
  1172  00F8  00CE               	movwf	___ftadd@f2+2
  1173  00F9  085F               	movf	PID@error,w
  1174  00FA  00C9               	movwf	___ftadd@f1
  1175  00FB  0860               	movf	PID@error+1,w
  1176  00FC  00CA               	movwf	___ftadd@f1+1
  1177  00FD  0861               	movf	PID@error+2,w
  1178  00FE  00CB               	movwf	___ftadd@f1+2
  1179  00FF  21E5               	fcall	___ftadd
  1180  0100  0020               	movlb	0	; select bank0
  1181  0101  0849               	movf	?___ftadd,w
  1182  0102  00BC               	movwf	___ftmul@f2
  1183  0103  084A               	movf	?___ftadd+1,w
  1184  0104  00BD               	movwf	___ftmul@f2+1
  1185  0105  084B               	movf	?___ftadd+2,w
  1186  0106  00BE               	movwf	___ftmul@f2+2
  1187  0107  0021               	movlb	1	; select bank1
  1188  0108  0823               	movf	_kd^(0+128),w
  1189  0109  0020               	movlb	0	; select bank0
  1190  010A  00B9               	movwf	___ftmul@f1
  1191  010B  0021               	movlb	1	; select bank1
  1192  010C  0824               	movf	(_kd+1)^(0+128),w
  1193  010D  0020               	movlb	0	; select bank0
  1194  010E  00BA               	movwf	___ftmul@f1+1
  1195  010F  0021               	movlb	1	; select bank1
  1196  0110  0825               	movf	(_kd+2)^(0+128),w
  1197  0111  0020               	movlb	0	; select bank0
  1198  0112  00BB               	movwf	___ftmul@f1+2
  1199  0113  2391               	fcall	___ftmul
  1200  0114  0020               	movlb	0	; select bank0
  1201  0115  0839               	movf	?___ftmul,w
  1202  0116  00DA               	movwf	_PID$758
  1203  0117  083A               	movf	?___ftmul+1,w
  1204  0118  00DB               	movwf	_PID$758+1
  1205  0119  083B               	movf	?___ftmul+2,w
  1206  011A  00DC               	movwf	_PID$758+2
  1207                           
  1208                           ;main.c: 132: pid += kd*(error-lasterror);
  1209  011B  085A               	movf	_PID$758,w
  1210  011C  00C9               	movwf	___ftadd@f1
  1211  011D  085B               	movf	_PID$758+1,w
  1212  011E  00CA               	movwf	___ftadd@f1+1
  1213  011F  085C               	movf	_PID$758+2,w
  1214  0120  00CB               	movwf	___ftadd@f1+2
  1215  0121  0862               	movf	PID@pid,w
  1216  0122  00CC               	movwf	___ftadd@f2
  1217  0123  0863               	movf	PID@pid+1,w
  1218  0124  00CD               	movwf	___ftadd@f2+1
  1219  0125  0864               	movf	PID@pid+2,w
  1220  0126  00CE               	movwf	___ftadd@f2+2
  1221  0127  21E5               	fcall	___ftadd
  1222  0128  0020               	movlb	0	; select bank0
  1223  0129  0849               	movf	?___ftadd,w
  1224  012A  00E2               	movwf	PID@pid
  1225  012B  084A               	movf	?___ftadd+1,w
  1226  012C  00E3               	movwf	PID@pid+1
  1227  012D  084B               	movf	?___ftadd+2,w
  1228  012E  00E4               	movwf	PID@pid+2
  1229                           
  1230                           ;main.c: 133: lasterror = error;
  1231  012F  085F               	movf	PID@error,w
  1232  0130  0021               	movlb	1	; select bank1
  1233  0131  00B3               	movwf	_lasterror^(0+128)
  1234  0132  0020               	movlb	0	; select bank0
  1235  0133  0860               	movf	PID@error+1,w
  1236  0134  0021               	movlb	1	; select bank1
  1237  0135  00B4               	movwf	(_lasterror+1)^(0+128)
  1238  0136  0020               	movlb	0	; select bank0
  1239  0137  0861               	movf	PID@error+2,w
  1240  0138  0021               	movlb	1	; select bank1
  1241  0139  00B5               	movwf	(_lasterror+2)^(0+128)
  1242                           
  1243                           ;main.c: 134: if(pid >= 511)
  1244  013A  0020               	movlb	0	; select bank0
  1245  013B  0862               	movf	PID@pid,w
  1246  013C  00A1               	movwf	___ftge@ff1
  1247  013D  0863               	movf	PID@pid+1,w
  1248  013E  00A2               	movwf	___ftge@ff1+1
  1249  013F  0864               	movf	PID@pid+2,w
  1250  0140  00A3               	movwf	___ftge@ff1+2
  1251  0141  3080               	movlw	128
  1252  0142  00A4               	movwf	___ftge@ff2
  1253  0143  30FF               	movlw	255
  1254  0144  00A5               	movwf	___ftge@ff2+1
  1255  0145  3043               	movlw	67
  1256  0146  00A6               	movwf	___ftge@ff2+2
  1257  0147  2551               	fcall	___ftge
  1258  0148  1C03               	btfss	3,0
  1259  0149  2951               	goto	l1320
  1260                           
  1261                           ;main.c: 135: {
  1262                           ;main.c: 136: pid = 511;
  1263  014A  3080               	movlw	128
  1264  014B  0020               	movlb	0	; select bank0
  1265  014C  00E2               	movwf	PID@pid
  1266  014D  30FF               	movlw	255
  1267  014E  00E3               	movwf	PID@pid+1
  1268  014F  3043               	movlw	67
  1269  0150  00E4               	movwf	PID@pid+2
  1270  0151                     l1320:	
  1271                           
  1272                           ;main.c: 137: }
  1273                           ;main.c: 138: if(pid <= 0)
  1274  0151  3000               	movlw	0
  1275  0152  0020               	movlb	0	; select bank0
  1276  0153  00A1               	movwf	___ftge@ff1
  1277  0154  3000               	movlw	0
  1278  0155  00A2               	movwf	___ftge@ff1+1
  1279  0156  3000               	movlw	0
  1280  0157  00A3               	movwf	___ftge@ff1+2
  1281  0158  0862               	movf	PID@pid,w
  1282  0159  00A4               	movwf	___ftge@ff2
  1283  015A  0863               	movf	PID@pid+1,w
  1284  015B  00A5               	movwf	___ftge@ff2+1
  1285  015C  0864               	movf	PID@pid+2,w
  1286  015D  00A6               	movwf	___ftge@ff2+2
  1287  015E  2551               	fcall	___ftge
  1288  015F  1C03               	btfss	3,0
  1289  0160  2968               	goto	l1324
  1290                           
  1291                           ;main.c: 139: {
  1292                           ;main.c: 140: pid = 0;
  1293  0161  3000               	movlw	0
  1294  0162  0020               	movlb	0	; select bank0
  1295  0163  00E2               	movwf	PID@pid
  1296  0164  3000               	movlw	0
  1297  0165  00E3               	movwf	PID@pid+1
  1298  0166  3000               	movlw	0
  1299  0167  00E4               	movwf	PID@pid+2
  1300  0168                     l1324:	
  1301                           
  1302                           ;main.c: 141: }
  1303                           ;main.c: 142: pid = (-255+((510)*((pid)/(511))));
  1304  0168  3000               	movlw	0
  1305  0169  0020               	movlb	0	; select bank0
  1306  016A  00C9               	movwf	___ftadd@f1
  1307  016B  307F               	movlw	127
  1308  016C  00CA               	movwf	___ftadd@f1+1
  1309  016D  30C3               	movlw	195
  1310  016E  00CB               	movwf	___ftadd@f1+2
  1311  016F  3000               	movlw	0
  1312  0170  00B9               	movwf	___ftmul@f1
  1313  0171  30FF               	movlw	255
  1314  0172  00BA               	movwf	___ftmul@f1+1
  1315  0173  3043               	movlw	67
  1316  0174  00BB               	movwf	___ftmul@f1+2
  1317  0175  3080               	movlw	128
  1318  0176  00A9               	movwf	___ftdiv@f2
  1319  0177  30FF               	movlw	255
  1320  0178  00AA               	movwf	___ftdiv@f2+1
  1321  0179  3043               	movlw	67
  1322  017A  00AB               	movwf	___ftdiv@f2+2
  1323  017B  0862               	movf	PID@pid,w
  1324  017C  00AC               	movwf	___ftdiv@f1
  1325  017D  0863               	movf	PID@pid+1,w
  1326  017E  00AD               	movwf	___ftdiv@f1+1
  1327  017F  0864               	movf	PID@pid+2,w
  1328  0180  00AE               	movwf	___ftdiv@f1+2
  1329  0181  2444               	fcall	___ftdiv
  1330  0182  0020               	movlb	0	; select bank0
  1331  0183  0829               	movf	?___ftdiv,w
  1332  0184  00BC               	movwf	___ftmul@f2
  1333  0185  082A               	movf	?___ftdiv+1,w
  1334  0186  00BD               	movwf	___ftmul@f2+1
  1335  0187  082B               	movf	?___ftdiv+2,w
  1336  0188  00BE               	movwf	___ftmul@f2+2
  1337  0189  2391               	fcall	___ftmul
  1338  018A  0020               	movlb	0	; select bank0
  1339  018B  0839               	movf	?___ftmul,w
  1340  018C  00CC               	movwf	___ftadd@f2
  1341  018D  083A               	movf	?___ftmul+1,w
  1342  018E  00CD               	movwf	___ftadd@f2+1
  1343  018F  083B               	movf	?___ftmul+2,w
  1344  0190  00CE               	movwf	___ftadd@f2+2
  1345  0191  21E5               	fcall	___ftadd
  1346  0192  0020               	movlb	0	; select bank0
  1347  0193  0849               	movf	?___ftadd,w
  1348  0194  00E2               	movwf	PID@pid
  1349  0195  084A               	movf	?___ftadd+1,w
  1350  0196  00E3               	movwf	PID@pid+1
  1351  0197  084B               	movf	?___ftadd+2,w
  1352  0198  00E4               	movwf	PID@pid+2
  1353                           
  1354                           ;main.c: 143: if(set < 600)
  1355  0199  0857               	movf	PID@set+1,w
  1356  019A  3A80               	xorlw	128
  1357  019B  00D8               	movwf	??_PID
  1358  019C  3082               	movlw	130
  1359  019D  0258               	subwf	??_PID,w
  1360  019E  1D03               	skipz
  1361  019F  29A2               	goto	u1605
  1362  01A0  3058               	movlw	88
  1363  01A1  0256               	subwf	PID@set,w
  1364  01A2                     u1605:	
  1365  01A2  1803               	skipnc
  1366  01A3  29BB               	goto	l82
  1367                           
  1368                           ;main.c: 144: {
  1369                           ;main.c: 145: if(pid > 0)
  1370  01A4  3000               	movlw	0
  1371  01A5  0020               	movlb	0	; select bank0
  1372  01A6  00A1               	movwf	___ftge@ff1
  1373  01A7  3000               	movlw	0
  1374  01A8  00A2               	movwf	___ftge@ff1+1
  1375  01A9  3000               	movlw	0
  1376  01AA  00A3               	movwf	___ftge@ff1+2
  1377  01AB  0862               	movf	PID@pid,w
  1378  01AC  00A4               	movwf	___ftge@ff2
  1379  01AD  0863               	movf	PID@pid+1,w
  1380  01AE  00A5               	movwf	___ftge@ff2+1
  1381  01AF  0864               	movf	PID@pid+2,w
  1382  01B0  00A6               	movwf	___ftge@ff2+2
  1383  01B1  2551               	fcall	___ftge
  1384  01B2  1803               	btfsc	3,0
  1385  01B3  29BB               	goto	l82
  1386                           
  1387                           ;main.c: 146: {
  1388                           ;main.c: 147: pid = 0;
  1389  01B4  3000               	movlw	0
  1390  01B5  0020               	movlb	0	; select bank0
  1391  01B6  00E2               	movwf	PID@pid
  1392  01B7  3000               	movlw	0
  1393  01B8  00E3               	movwf	PID@pid+1
  1394  01B9  3000               	movlw	0
  1395  01BA  00E4               	movwf	PID@pid+2
  1396  01BB                     l82:	
  1397                           
  1398                           ;main.c: 148: }
  1399                           ;main.c: 149: }
  1400                           ;main.c: 150: if(set > 600)
  1401  01BB  0020               	movlb	0	; select bank0
  1402  01BC  0857               	movf	PID@set+1,w
  1403  01BD  3A80               	xorlw	128
  1404  01BE  00D8               	movwf	??_PID
  1405  01BF  3082               	movlw	130
  1406  01C0  0258               	subwf	??_PID,w
  1407  01C1  1D03               	skipz
  1408  01C2  29C5               	goto	u1625
  1409  01C3  3059               	movlw	89
  1410  01C4  0256               	subwf	PID@set,w
  1411  01C5                     u1625:	
  1412  01C5  1C03               	skipc
  1413  01C6  29DE               	goto	l1336
  1414                           
  1415                           ;main.c: 151: {
  1416                           ;main.c: 152: if(pid < 0)
  1417  01C7  0020               	movlb	0	; select bank0
  1418  01C8  0862               	movf	PID@pid,w
  1419  01C9  00A1               	movwf	___ftge@ff1
  1420  01CA  0863               	movf	PID@pid+1,w
  1421  01CB  00A2               	movwf	___ftge@ff1+1
  1422  01CC  0864               	movf	PID@pid+2,w
  1423  01CD  00A3               	movwf	___ftge@ff1+2
  1424  01CE  3000               	movlw	0
  1425  01CF  00A4               	movwf	___ftge@ff2
  1426  01D0  3000               	movlw	0
  1427  01D1  00A5               	movwf	___ftge@ff2+1
  1428  01D2  3000               	movlw	0
  1429  01D3  00A6               	movwf	___ftge@ff2+2
  1430  01D4  2551               	fcall	___ftge
  1431  01D5  1803               	btfsc	3,0
  1432  01D6  29DE               	goto	l1336
  1433                           
  1434                           ;main.c: 153: {
  1435                           ;main.c: 154: pid = 0;
  1436  01D7  3000               	movlw	0
  1437  01D8  0020               	movlb	0	; select bank0
  1438  01D9  00E2               	movwf	PID@pid
  1439  01DA  3000               	movlw	0
  1440  01DB  00E3               	movwf	PID@pid+1
  1441  01DC  3000               	movlw	0
  1442  01DD  00E4               	movwf	PID@pid+2
  1443  01DE                     l1336:	
  1444                           
  1445                           ;main.c: 155: }
  1446                           ;main.c: 156: }
  1447                           ;main.c: 157: M_control((int)PID);
  1448  01DE  3061               	movlw	low _PID
  1449  01DF  0020               	movlb	0	; select bank0
  1450  01E0  00A4               	movwf	M_control@ctr
  1451  01E1  3000               	movlw	high _PID
  1452  01E2  00A5               	movwf	M_control@ctr+1
  1453  01E3  25C1               	fcall	_M_control
  1454  01E4  0008               	return
  1455  01E5                     __end_of_PID:	
  1456                           
  1457                           	psect	text3
  1458  0654                     __ptext3:	
  1459 ;; *************** function ___ftneg *****************
  1460 ;; Defined at:
  1461 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  f1              3    1[BANK0 ] float 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  3    1[BANK0 ] float 
  1468 ;; Registers used:
  1469 ;;		wreg
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1
  1475 ;;      Params:         0       3       0
  1476 ;;      Locals:         0       0       0
  1477 ;;      Temps:          0       0       0
  1478 ;;      Totals:         0       3       0
  1479 ;;Total ram usage:        3 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    2
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_PID
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function ___ftneg
  1491  0654                     ___ftneg:	
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in ___ftneg: [wreg]
  1495  0654  0020               	movlb	0	; select bank0
  1496  0655  0823               	movf	___ftneg@f1+2,w
  1497  0656  0422               	iorwf	___ftneg@f1+1,w
  1498  0657  0421               	iorwf	___ftneg@f1,w
  1499  0658  1903               	skipnz
  1500  0659  0008               	return
  1501  065A  3080               	movlw	128
  1502  065B  06A3               	xorwf	___ftneg@f1+2,f
  1503  065C  0008               	return
  1504  065D                     __end_of___ftneg:	
  1505                           
  1506                           	psect	text4
  1507  0391                     __ptext4:	
  1508 ;; *************** function ___ftmul *****************
  1509 ;; Defined at:
  1510 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  f1              3   25[BANK0 ] float 
  1513 ;;  f2              3   28[BANK0 ] float 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  f3_as_produc    3   36[BANK0 ] unsigned um
  1516 ;;  sign            1   40[BANK0 ] unsigned char 
  1517 ;;  cntr            1   39[BANK0 ] unsigned char 
  1518 ;;  exp             1   35[BANK0 ] unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  3   25[BANK0 ] float 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1
  1528 ;;      Params:         0       6       0
  1529 ;;      Locals:         0       6       0
  1530 ;;      Temps:          0       4       0
  1531 ;;      Totals:         0      16       0
  1532 ;;Total ram usage:       16 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    3
  1535 ;; This function calls:
  1536 ;;		___ftpack
  1537 ;; This function is called by:
  1538 ;;		_PID
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           
  1543                           ;psect for function ___ftmul
  1544  0391                     ___ftmul:	
  1545                           
  1546                           ;incstack = 0
  1547                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1548  0391  0020               	movlb	0	; select bank0
  1549  0392  0839               	movf	___ftmul@f1,w
  1550  0393  00BF               	movwf	??___ftmul
  1551  0394  083A               	movf	___ftmul@f1+1,w
  1552  0395  00C0               	movwf	??___ftmul+1
  1553  0396  083B               	movf	___ftmul@f1+2,w
  1554  0397  00C1               	movwf	??___ftmul+2
  1555  0398  1003               	clrc
  1556  0399  0D40               	rlf	??___ftmul+1,w
  1557  039A  0D41               	rlf	??___ftmul+2,w
  1558  039B  00C2               	movwf	??___ftmul+3
  1559  039C  0842               	movf	??___ftmul+3,w
  1560  039D  00C3               	movwf	___ftmul@exp
  1561  039E  0843               	movf	___ftmul@exp,w
  1562  039F  1D03               	btfss	3,2
  1563  03A0  2BA8               	goto	l1238
  1564  03A1  3000               	movlw	0
  1565  03A2  00B9               	movwf	?___ftmul
  1566  03A3  3000               	movlw	0
  1567  03A4  00BA               	movwf	?___ftmul+1
  1568  03A5  3000               	movlw	0
  1569  03A6  00BB               	movwf	?___ftmul+2
  1570  03A7  0008               	return
  1571  03A8                     l1238:	
  1572  03A8  083C               	movf	___ftmul@f2,w
  1573  03A9  00BF               	movwf	??___ftmul
  1574  03AA  083D               	movf	___ftmul@f2+1,w
  1575  03AB  00C0               	movwf	??___ftmul+1
  1576  03AC  083E               	movf	___ftmul@f2+2,w
  1577  03AD  00C1               	movwf	??___ftmul+2
  1578  03AE  1003               	clrc
  1579  03AF  0D40               	rlf	??___ftmul+1,w
  1580  03B0  0D41               	rlf	??___ftmul+2,w
  1581  03B1  00C2               	movwf	??___ftmul+3
  1582  03B2  0842               	movf	??___ftmul+3,w
  1583  03B3  00C8               	movwf	___ftmul@sign
  1584  03B4  0848               	movf	___ftmul@sign,w
  1585  03B5  1D03               	btfss	3,2
  1586  03B6  2BBE               	goto	l1244
  1587  03B7  3000               	movlw	0
  1588  03B8  00B9               	movwf	?___ftmul
  1589  03B9  3000               	movlw	0
  1590  03BA  00BA               	movwf	?___ftmul+1
  1591  03BB  3000               	movlw	0
  1592  03BC  00BB               	movwf	?___ftmul+2
  1593  03BD  0008               	return
  1594  03BE                     l1244:	
  1595  03BE  0848               	movf	___ftmul@sign,w
  1596  03BF  3E7B               	addlw	123
  1597  03C0  00BF               	movwf	??___ftmul
  1598  03C1  083F               	movf	??___ftmul,w
  1599  03C2  07C3               	addwf	___ftmul@exp,f
  1600  03C3  0839               	movf	___ftmul@f1,w
  1601  03C4  00BF               	movwf	??___ftmul
  1602  03C5  083A               	movf	___ftmul@f1+1,w
  1603  03C6  00C0               	movwf	??___ftmul+1
  1604  03C7  083B               	movf	___ftmul@f1+2,w
  1605  03C8  00C1               	movwf	??___ftmul+2
  1606  03C9  3010               	movlw	16
  1607  03CA                     u1475:	
  1608  03CA  36C1               	lsrf	??___ftmul+2,f
  1609  03CB  0CC0               	rrf	??___ftmul+1,f
  1610  03CC  0CBF               	rrf	??___ftmul,f
  1611  03CD  0B89               	decfsz	9,f
  1612  03CE  2BCA               	goto	u1475
  1613  03CF  083F               	movf	??___ftmul,w
  1614  03D0  00C2               	movwf	??___ftmul+3
  1615  03D1  0842               	movf	??___ftmul+3,w
  1616  03D2  00C8               	movwf	___ftmul@sign
  1617  03D3  083C               	movf	___ftmul@f2,w
  1618  03D4  00BF               	movwf	??___ftmul
  1619  03D5  083D               	movf	___ftmul@f2+1,w
  1620  03D6  00C0               	movwf	??___ftmul+1
  1621  03D7  083E               	movf	___ftmul@f2+2,w
  1622  03D8  00C1               	movwf	??___ftmul+2
  1623  03D9  3010               	movlw	16
  1624  03DA                     u1485:	
  1625  03DA  36C1               	lsrf	??___ftmul+2,f
  1626  03DB  0CC0               	rrf	??___ftmul+1,f
  1627  03DC  0CBF               	rrf	??___ftmul,f
  1628  03DD  0B89               	decfsz	9,f
  1629  03DE  2BDA               	goto	u1485
  1630  03DF  083F               	movf	??___ftmul,w
  1631  03E0  00C2               	movwf	??___ftmul+3
  1632  03E1  0842               	movf	??___ftmul+3,w
  1633  03E2  06C8               	xorwf	___ftmul@sign,f
  1634  03E3  3080               	movlw	128
  1635  03E4  00BF               	movwf	??___ftmul
  1636  03E5  083F               	movf	??___ftmul,w
  1637  03E6  05C8               	andwf	___ftmul@sign,f
  1638  03E7  17BA               	bsf	___ftmul@f1+1,7
  1639  03E8  17BD               	bsf	___ftmul@f2+1,7
  1640  03E9  30FF               	movlw	255
  1641  03EA  05BC               	andwf	___ftmul@f2,f
  1642  03EB  30FF               	movlw	255
  1643  03EC  05BD               	andwf	___ftmul@f2+1,f
  1644  03ED  3000               	movlw	0
  1645  03EE  05BE               	andwf	___ftmul@f2+2,f
  1646  03EF  3000               	movlw	0
  1647  03F0  00C4               	movwf	___ftmul@f3_as_product
  1648  03F1  3000               	movlw	0
  1649  03F2  00C5               	movwf	___ftmul@f3_as_product+1
  1650  03F3  3000               	movlw	0
  1651  03F4  00C6               	movwf	___ftmul@f3_as_product+2
  1652  03F5  3007               	movlw	7
  1653  03F6  00BF               	movwf	??___ftmul
  1654  03F7  083F               	movf	??___ftmul,w
  1655  03F8  00C7               	movwf	___ftmul@cntr
  1656  03F9                     l1256:	
  1657  03F9  1C39               	btfss	___ftmul@f1,0
  1658  03FA  2C01               	goto	l1260
  1659  03FB  083C               	movf	___ftmul@f2,w
  1660  03FC  07C4               	addwf	___ftmul@f3_as_product,f
  1661  03FD  083D               	movf	___ftmul@f2+1,w
  1662  03FE  3DC5               	addwfc	___ftmul@f3_as_product+1,f
  1663  03FF  083E               	movf	___ftmul@f2+2,w
  1664  0400  3DC6               	addwfc	___ftmul@f3_as_product+2,f
  1665  0401                     l1260:	
  1666  0401  3001               	movlw	1
  1667  0402                     u1505:	
  1668  0402  36BB               	lsrf	___ftmul@f1+2,f
  1669  0403  0CBA               	rrf	___ftmul@f1+1,f
  1670  0404  0CB9               	rrf	___ftmul@f1,f
  1671  0405  0B89               	decfsz	9,f
  1672  0406  2C02               	goto	u1505
  1673  0407  3001               	movlw	1
  1674  0408                     u1515:	
  1675  0408  35BC               	lslf	___ftmul@f2,f
  1676  0409  0DBD               	rlf	___ftmul@f2+1,f
  1677  040A  0DBE               	rlf	___ftmul@f2+2,f
  1678  040B  0B89               	decfsz	9,f
  1679  040C  2C08               	goto	u1515
  1680  040D  3001               	movlw	1
  1681  040E  02C7               	subwf	___ftmul@cntr,f
  1682  040F  1D03               	btfss	3,2
  1683  0410  2BF9               	goto	l1256
  1684  0411  3009               	movlw	9
  1685  0412  00BF               	movwf	??___ftmul
  1686  0413  083F               	movf	??___ftmul,w
  1687  0414  00C7               	movwf	___ftmul@cntr
  1688  0415                     l1268:	
  1689  0415  1C39               	btfss	___ftmul@f1,0
  1690  0416  2C1D               	goto	l1272
  1691  0417  083C               	movf	___ftmul@f2,w
  1692  0418  07C4               	addwf	___ftmul@f3_as_product,f
  1693  0419  083D               	movf	___ftmul@f2+1,w
  1694  041A  3DC5               	addwfc	___ftmul@f3_as_product+1,f
  1695  041B  083E               	movf	___ftmul@f2+2,w
  1696  041C  3DC6               	addwfc	___ftmul@f3_as_product+2,f
  1697  041D                     l1272:	
  1698  041D  3001               	movlw	1
  1699  041E                     u1545:	
  1700  041E  36BB               	lsrf	___ftmul@f1+2,f
  1701  041F  0CBA               	rrf	___ftmul@f1+1,f
  1702  0420  0CB9               	rrf	___ftmul@f1,f
  1703  0421  0B89               	decfsz	9,f
  1704  0422  2C1E               	goto	u1545
  1705  0423  3001               	movlw	1
  1706  0424                     u1555:	
  1707  0424  36C6               	lsrf	___ftmul@f3_as_product+2,f
  1708  0425  0CC5               	rrf	___ftmul@f3_as_product+1,f
  1709  0426  0CC4               	rrf	___ftmul@f3_as_product,f
  1710  0427  0B89               	decfsz	9,f
  1711  0428  2C24               	goto	u1555
  1712  0429  3001               	movlw	1
  1713  042A  02C7               	subwf	___ftmul@cntr,f
  1714  042B  1D03               	btfss	3,2
  1715  042C  2C15               	goto	l1268
  1716  042D  0844               	movf	___ftmul@f3_as_product,w
  1717  042E  00A1               	movwf	___ftpack@arg
  1718  042F  0845               	movf	___ftmul@f3_as_product+1,w
  1719  0430  00A2               	movwf	___ftpack@arg+1
  1720  0431  0846               	movf	___ftmul@f3_as_product+2,w
  1721  0432  00A3               	movwf	___ftpack@arg+2
  1722  0433  0843               	movf	___ftmul@exp,w
  1723  0434  00BF               	movwf	??___ftmul
  1724  0435  083F               	movf	??___ftmul,w
  1725  0436  00A4               	movwf	___ftpack@exp
  1726  0437  0848               	movf	___ftmul@sign,w
  1727  0438  00C0               	movwf	??___ftmul+1
  1728  0439  0840               	movf	??___ftmul+1,w
  1729  043A  00A5               	movwf	___ftpack@sign
  1730  043B  24EC               	fcall	___ftpack
  1731  043C  0020               	movlb	0	; select bank0
  1732  043D  0821               	movf	?___ftpack,w
  1733  043E  00B9               	movwf	?___ftmul
  1734  043F  0822               	movf	?___ftpack+1,w
  1735  0440  00BA               	movwf	?___ftmul+1
  1736  0441  0823               	movf	?___ftpack+2,w
  1737  0442  00BB               	movwf	?___ftmul+2
  1738  0443  0008               	return
  1739  0444                     __end_of___ftmul:	
  1740                           
  1741                           	psect	text5
  1742  0551                     __ptext5:	
  1743 ;; *************** function ___ftge *****************
  1744 ;; Defined at:
  1745 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  ff1             3    1[BANK0 ] float 
  1748 ;;  ff2             3    4[BANK0 ] float 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;		None               void
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1
  1760 ;;      Params:         0       6       0
  1761 ;;      Locals:         0       0       0
  1762 ;;      Temps:          0       3       0
  1763 ;;      Totals:         0       9       0
  1764 ;;Total ram usage:        9 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    2
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_PID
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function ___ftge
  1776  0551                     ___ftge:	
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1780  0551  0020               	movlb	0	; select bank0
  1781  0552  1FA3               	btfss	___ftge@ff1+2,7
  1782  0553  2D68               	goto	l1216
  1783  0554  0921               	comf	___ftge@ff1,w
  1784  0555  00A7               	movwf	??___ftge
  1785  0556  0922               	comf	___ftge@ff1+1,w
  1786  0557  00A8               	movwf	??___ftge+1
  1787  0558  0923               	comf	___ftge@ff1+2,w
  1788  0559  00A9               	movwf	??___ftge+2
  1789  055A  0AA7               	incf	??___ftge,f
  1790  055B  1903               	skipnz
  1791  055C  0AA8               	incf	??___ftge+1,f
  1792  055D  1903               	skipnz
  1793  055E  0AA9               	incf	??___ftge+2,f
  1794  055F  3000               	movlw	0
  1795  0560  0727               	addwf	??___ftge,w
  1796  0561  00A1               	movwf	___ftge@ff1
  1797  0562  3000               	movlw	0
  1798  0563  3D28               	addwfc	??___ftge+1,w
  1799  0564  00A2               	movwf	___ftge@ff1+1
  1800  0565  3080               	movlw	128
  1801  0566  3D29               	addwfc	??___ftge+2,w
  1802  0567  00A3               	movwf	___ftge@ff1+2
  1803  0568                     l1216:	
  1804  0568  1FA6               	btfss	___ftge@ff2+2,7
  1805  0569  2D7E               	goto	l1220
  1806  056A  0924               	comf	___ftge@ff2,w
  1807  056B  00A7               	movwf	??___ftge
  1808  056C  0925               	comf	___ftge@ff2+1,w
  1809  056D  00A8               	movwf	??___ftge+1
  1810  056E  0926               	comf	___ftge@ff2+2,w
  1811  056F  00A9               	movwf	??___ftge+2
  1812  0570  0AA7               	incf	??___ftge,f
  1813  0571  1903               	skipnz
  1814  0572  0AA8               	incf	??___ftge+1,f
  1815  0573  1903               	skipnz
  1816  0574  0AA9               	incf	??___ftge+2,f
  1817  0575  3000               	movlw	0
  1818  0576  0727               	addwf	??___ftge,w
  1819  0577  00A4               	movwf	___ftge@ff2
  1820  0578  3000               	movlw	0
  1821  0579  3D28               	addwfc	??___ftge+1,w
  1822  057A  00A5               	movwf	___ftge@ff2+1
  1823  057B  3080               	movlw	128
  1824  057C  3D29               	addwfc	??___ftge+2,w
  1825  057D  00A6               	movwf	___ftge@ff2+2
  1826  057E                     l1220:	
  1827  057E  3080               	movlw	128
  1828  057F  06A3               	xorwf	___ftge@ff1+2,f
  1829  0580  3080               	movlw	128
  1830  0581  06A6               	xorwf	___ftge@ff2+2,f
  1831  0582  0826               	movf	___ftge@ff2+2,w
  1832  0583  0223               	subwf	___ftge@ff1+2,w
  1833  0584  1D03               	skipz
  1834  0585  0008               	return
  1835  0586  0825               	movf	___ftge@ff2+1,w
  1836  0587  0222               	subwf	___ftge@ff1+1,w
  1837  0588  1D03               	skipz
  1838  0589  0008               	return
  1839  058A  0824               	movf	___ftge@ff2,w
  1840  058B  0221               	subwf	___ftge@ff1,w
  1841  058C  0008               	return
  1842  058D                     __end_of___ftge:	
  1843                           
  1844                           	psect	text6
  1845  0444                     __ptext6:	
  1846 ;; *************** function ___ftdiv *****************
  1847 ;; Defined at:
  1848 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  f2              3    9[BANK0 ] float 
  1851 ;;  f1              3   12[BANK0 ] float 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  f3              3   20[BANK0 ] float 
  1854 ;;  sign            1   24[BANK0 ] unsigned char 
  1855 ;;  exp             1   23[BANK0 ] unsigned char 
  1856 ;;  cntr            1   19[BANK0 ] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  3    9[BANK0 ] float 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0, pclath, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1
  1866 ;;      Params:         0       6       0
  1867 ;;      Locals:         0       6       0
  1868 ;;      Temps:          0       4       0
  1869 ;;      Totals:         0      16       0
  1870 ;;Total ram usage:       16 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    3
  1873 ;; This function calls:
  1874 ;;		___ftpack
  1875 ;; This function is called by:
  1876 ;;		_PID
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function ___ftdiv
  1882  0444                     ___ftdiv:	
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1886  0444  0020               	movlb	0	; select bank0
  1887  0445  082C               	movf	___ftdiv@f1,w
  1888  0446  00AF               	movwf	??___ftdiv
  1889  0447  082D               	movf	___ftdiv@f1+1,w
  1890  0448  00B0               	movwf	??___ftdiv+1
  1891  0449  082E               	movf	___ftdiv@f1+2,w
  1892  044A  00B1               	movwf	??___ftdiv+2
  1893  044B  1003               	clrc
  1894  044C  0D30               	rlf	??___ftdiv+1,w
  1895  044D  0D31               	rlf	??___ftdiv+2,w
  1896  044E  00B2               	movwf	??___ftdiv+3
  1897  044F  0832               	movf	??___ftdiv+3,w
  1898  0450  00B7               	movwf	___ftdiv@exp
  1899  0451  0837               	movf	___ftdiv@exp,w
  1900  0452  1D03               	btfss	3,2
  1901  0453  2C5B               	goto	l1176
  1902  0454  3000               	movlw	0
  1903  0455  00A9               	movwf	?___ftdiv
  1904  0456  3000               	movlw	0
  1905  0457  00AA               	movwf	?___ftdiv+1
  1906  0458  3000               	movlw	0
  1907  0459  00AB               	movwf	?___ftdiv+2
  1908  045A  0008               	return
  1909  045B                     l1176:	
  1910  045B  0829               	movf	___ftdiv@f2,w
  1911  045C  00AF               	movwf	??___ftdiv
  1912  045D  082A               	movf	___ftdiv@f2+1,w
  1913  045E  00B0               	movwf	??___ftdiv+1
  1914  045F  082B               	movf	___ftdiv@f2+2,w
  1915  0460  00B1               	movwf	??___ftdiv+2
  1916  0461  1003               	clrc
  1917  0462  0D30               	rlf	??___ftdiv+1,w
  1918  0463  0D31               	rlf	??___ftdiv+2,w
  1919  0464  00B2               	movwf	??___ftdiv+3
  1920  0465  0832               	movf	??___ftdiv+3,w
  1921  0466  00B8               	movwf	___ftdiv@sign
  1922  0467  0838               	movf	___ftdiv@sign,w
  1923  0468  1D03               	btfss	3,2
  1924  0469  2C71               	goto	l1182
  1925  046A  3000               	movlw	0
  1926  046B  00A9               	movwf	?___ftdiv
  1927  046C  3000               	movlw	0
  1928  046D  00AA               	movwf	?___ftdiv+1
  1929  046E  3000               	movlw	0
  1930  046F  00AB               	movwf	?___ftdiv+2
  1931  0470  0008               	return
  1932  0471                     l1182:	
  1933  0471  3000               	movlw	0
  1934  0472  00B4               	movwf	___ftdiv@f3
  1935  0473  3000               	movlw	0
  1936  0474  00B5               	movwf	___ftdiv@f3+1
  1937  0475  3000               	movlw	0
  1938  0476  00B6               	movwf	___ftdiv@f3+2
  1939  0477  3089               	movlw	137
  1940  0478  0738               	addwf	___ftdiv@sign,w
  1941  0479  00AF               	movwf	??___ftdiv
  1942  047A  082F               	movf	??___ftdiv,w
  1943  047B  02B7               	subwf	___ftdiv@exp,f
  1944  047C  082C               	movf	___ftdiv@f1,w
  1945  047D  00AF               	movwf	??___ftdiv
  1946  047E  082D               	movf	___ftdiv@f1+1,w
  1947  047F  00B0               	movwf	??___ftdiv+1
  1948  0480  082E               	movf	___ftdiv@f1+2,w
  1949  0481  00B1               	movwf	??___ftdiv+2
  1950  0482  3010               	movlw	16
  1951  0483                     u1365:	
  1952  0483  36B1               	lsrf	??___ftdiv+2,f
  1953  0484  0CB0               	rrf	??___ftdiv+1,f
  1954  0485  0CAF               	rrf	??___ftdiv,f
  1955  0486  0B89               	decfsz	9,f
  1956  0487  2C83               	goto	u1365
  1957  0488  082F               	movf	??___ftdiv,w
  1958  0489  00B2               	movwf	??___ftdiv+3
  1959  048A  0832               	movf	??___ftdiv+3,w
  1960  048B  00B8               	movwf	___ftdiv@sign
  1961  048C  0829               	movf	___ftdiv@f2,w
  1962  048D  00AF               	movwf	??___ftdiv
  1963  048E  082A               	movf	___ftdiv@f2+1,w
  1964  048F  00B0               	movwf	??___ftdiv+1
  1965  0490  082B               	movf	___ftdiv@f2+2,w
  1966  0491  00B1               	movwf	??___ftdiv+2
  1967  0492  3010               	movlw	16
  1968  0493                     u1375:	
  1969  0493  36B1               	lsrf	??___ftdiv+2,f
  1970  0494  0CB0               	rrf	??___ftdiv+1,f
  1971  0495  0CAF               	rrf	??___ftdiv,f
  1972  0496  0B89               	decfsz	9,f
  1973  0497  2C93               	goto	u1375
  1974  0498  082F               	movf	??___ftdiv,w
  1975  0499  00B2               	movwf	??___ftdiv+3
  1976  049A  0832               	movf	??___ftdiv+3,w
  1977  049B  06B8               	xorwf	___ftdiv@sign,f
  1978  049C  3080               	movlw	128
  1979  049D  00AF               	movwf	??___ftdiv
  1980  049E  082F               	movf	??___ftdiv,w
  1981  049F  05B8               	andwf	___ftdiv@sign,f
  1982  04A0  17AD               	bsf	___ftdiv@f1+1,7
  1983  04A1  30FF               	movlw	255
  1984  04A2  05AC               	andwf	___ftdiv@f1,f
  1985  04A3  30FF               	movlw	255
  1986  04A4  05AD               	andwf	___ftdiv@f1+1,f
  1987  04A5  3000               	movlw	0
  1988  04A6  05AE               	andwf	___ftdiv@f1+2,f
  1989  04A7  17AA               	bsf	___ftdiv@f2+1,7
  1990  04A8  30FF               	movlw	255
  1991  04A9  05A9               	andwf	___ftdiv@f2,f
  1992  04AA  30FF               	movlw	255
  1993  04AB  05AA               	andwf	___ftdiv@f2+1,f
  1994  04AC  3000               	movlw	0
  1995  04AD  05AB               	andwf	___ftdiv@f2+2,f
  1996  04AE  3018               	movlw	24
  1997  04AF  00AF               	movwf	??___ftdiv
  1998  04B0  082F               	movf	??___ftdiv,w
  1999  04B1  00B3               	movwf	___ftdiv@cntr
  2000  04B2                     l1196:	
  2001  04B2  3001               	movlw	1
  2002  04B3                     u1385:	
  2003  04B3  35B4               	lslf	___ftdiv@f3,f
  2004  04B4  0DB5               	rlf	___ftdiv@f3+1,f
  2005  04B5  0DB6               	rlf	___ftdiv@f3+2,f
  2006  04B6  0B89               	decfsz	9,f
  2007  04B7  2CB3               	goto	u1385
  2008  04B8  082B               	movf	___ftdiv@f2+2,w
  2009  04B9  022E               	subwf	___ftdiv@f1+2,w
  2010  04BA  1D03               	skipz
  2011  04BB  2CC2               	goto	u1395
  2012  04BC  082A               	movf	___ftdiv@f2+1,w
  2013  04BD  022D               	subwf	___ftdiv@f1+1,w
  2014  04BE  1D03               	skipz
  2015  04BF  2CC2               	goto	u1395
  2016  04C0  0829               	movf	___ftdiv@f2,w
  2017  04C1  022C               	subwf	___ftdiv@f1,w
  2018  04C2                     u1395:	
  2019  04C2  1C03               	skipc
  2020  04C3  2CCB               	goto	l1204
  2021  04C4  0829               	movf	___ftdiv@f2,w
  2022  04C5  02AC               	subwf	___ftdiv@f1,f
  2023  04C6  082A               	movf	___ftdiv@f2+1,w
  2024  04C7  3BAD               	subwfb	___ftdiv@f1+1,f
  2025  04C8  082B               	movf	___ftdiv@f2+2,w
  2026  04C9  3BAE               	subwfb	___ftdiv@f1+2,f
  2027  04CA  1434               	bsf	___ftdiv@f3,0
  2028  04CB                     l1204:	
  2029  04CB  3001               	movlw	1
  2030  04CC                     u1405:	
  2031  04CC  35AC               	lslf	___ftdiv@f1,f
  2032  04CD  0DAD               	rlf	___ftdiv@f1+1,f
  2033  04CE  0DAE               	rlf	___ftdiv@f1+2,f
  2034  04CF  0B89               	decfsz	9,f
  2035  04D0  2CCC               	goto	u1405
  2036  04D1  3001               	movlw	1
  2037  04D2  02B3               	subwf	___ftdiv@cntr,f
  2038  04D3  1D03               	btfss	3,2
  2039  04D4  2CB2               	goto	l1196
  2040  04D5  0834               	movf	___ftdiv@f3,w
  2041  04D6  00A1               	movwf	___ftpack@arg
  2042  04D7  0835               	movf	___ftdiv@f3+1,w
  2043  04D8  00A2               	movwf	___ftpack@arg+1
  2044  04D9  0836               	movf	___ftdiv@f3+2,w
  2045  04DA  00A3               	movwf	___ftpack@arg+2
  2046  04DB  0837               	movf	___ftdiv@exp,w
  2047  04DC  00AF               	movwf	??___ftdiv
  2048  04DD  082F               	movf	??___ftdiv,w
  2049  04DE  00A4               	movwf	___ftpack@exp
  2050  04DF  0838               	movf	___ftdiv@sign,w
  2051  04E0  00B0               	movwf	??___ftdiv+1
  2052  04E1  0830               	movf	??___ftdiv+1,w
  2053  04E2  00A5               	movwf	___ftpack@sign
  2054  04E3  24EC               	fcall	___ftpack
  2055  04E4  0020               	movlb	0	; select bank0
  2056  04E5  0821               	movf	?___ftpack,w
  2057  04E6  00A9               	movwf	?___ftdiv
  2058  04E7  0822               	movf	?___ftpack+1,w
  2059  04E8  00AA               	movwf	?___ftdiv+1
  2060  04E9  0823               	movf	?___ftpack+2,w
  2061  04EA  00AB               	movwf	?___ftdiv+2
  2062  04EB  0008               	return
  2063  04EC                     __end_of___ftdiv:	
  2064                           
  2065                           	psect	text7
  2066  01E5                     __ptext7:	
  2067 ;; *************** function ___ftadd *****************
  2068 ;; Defined at:
  2069 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  f1              3   41[BANK0 ] float 
  2072 ;;  f2              3   44[BANK0 ] float 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  exp1            1   53[BANK0 ] unsigned char 
  2075 ;;  exp2            1   52[BANK0 ] unsigned char 
  2076 ;;  sign            1   51[BANK0 ] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  3   41[BANK0 ] float 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, pclath, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1
  2086 ;;      Params:         0       6       0
  2087 ;;      Locals:         0       3       0
  2088 ;;      Temps:          0       4       0
  2089 ;;      Totals:         0      13       0
  2090 ;;Total ram usage:       13 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    3
  2093 ;; This function calls:
  2094 ;;		___ftpack
  2095 ;; This function is called by:
  2096 ;;		_PID
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function ___ftadd
  2102  01E5                     ___ftadd:	
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2106  01E5  0020               	movlb	0	; select bank0
  2107  01E6  0849               	movf	___ftadd@f1,w
  2108  01E7  00CF               	movwf	??___ftadd
  2109  01E8  084A               	movf	___ftadd@f1+1,w
  2110  01E9  00D0               	movwf	??___ftadd+1
  2111  01EA  084B               	movf	___ftadd@f1+2,w
  2112  01EB  00D1               	movwf	??___ftadd+2
  2113  01EC  1003               	clrc
  2114  01ED  0D50               	rlf	??___ftadd+1,w
  2115  01EE  0D51               	rlf	??___ftadd+2,w
  2116  01EF  00D2               	movwf	??___ftadd+3
  2117  01F0  0852               	movf	??___ftadd+3,w
  2118  01F1  00D5               	movwf	___ftadd@exp1
  2119  01F2  084C               	movf	___ftadd@f2,w
  2120  01F3  00CF               	movwf	??___ftadd
  2121  01F4  084D               	movf	___ftadd@f2+1,w
  2122  01F5  00D0               	movwf	??___ftadd+1
  2123  01F6  084E               	movf	___ftadd@f2+2,w
  2124  01F7  00D1               	movwf	??___ftadd+2
  2125  01F8  1003               	clrc
  2126  01F9  0D50               	rlf	??___ftadd+1,w
  2127  01FA  0D51               	rlf	??___ftadd+2,w
  2128  01FB  00D2               	movwf	??___ftadd+3
  2129  01FC  0852               	movf	??___ftadd+3,w
  2130  01FD  00D4               	movwf	___ftadd@exp2
  2131  01FE  0855               	movf	___ftadd@exp1,w
  2132  01FF  1903               	btfsc	3,2
  2133  0200  2A0D               	goto	l1106
  2134  0201  0854               	movf	___ftadd@exp2,w
  2135  0202  0255               	subwf	___ftadd@exp1,w
  2136  0203  1803               	skipnc
  2137  0204  2A14               	goto	l1110
  2138  0205  0355               	decf	___ftadd@exp1,w
  2139  0206  3AFF               	xorlw	255
  2140  0207  0754               	addwf	___ftadd@exp2,w
  2141  0208  00CF               	movwf	??___ftadd
  2142  0209  3019               	movlw	25
  2143  020A  024F               	subwf	??___ftadd,w
  2144  020B  1C03               	skipc
  2145  020C  2A14               	goto	l1110
  2146  020D                     l1106:	
  2147  020D  084C               	movf	___ftadd@f2,w
  2148  020E  00C9               	movwf	?___ftadd
  2149  020F  084D               	movf	___ftadd@f2+1,w
  2150  0210  00CA               	movwf	?___ftadd+1
  2151  0211  084E               	movf	___ftadd@f2+2,w
  2152  0212  00CB               	movwf	?___ftadd+2
  2153  0213  0008               	return
  2154  0214                     l1110:	
  2155  0214  0854               	movf	___ftadd@exp2,w
  2156  0215  1903               	btfsc	3,2
  2157  0216  0008               	return
  2158  0217  0855               	movf	___ftadd@exp1,w
  2159  0218  0254               	subwf	___ftadd@exp2,w
  2160  0219  1803               	skipnc
  2161  021A  2A23               	goto	l1116
  2162  021B  0354               	decf	___ftadd@exp2,w
  2163  021C  3AFF               	xorlw	255
  2164  021D  0755               	addwf	___ftadd@exp1,w
  2165  021E  00CF               	movwf	??___ftadd
  2166  021F  3019               	movlw	25
  2167  0220  024F               	subwf	??___ftadd,w
  2168  0221  1803               	btfsc	3,0
  2169  0222  0008               	return
  2170  0223                     l1116:	
  2171  0223  3006               	movlw	6
  2172  0224  00CF               	movwf	??___ftadd
  2173  0225  084F               	movf	??___ftadd,w
  2174  0226  00D3               	movwf	___ftadd@sign
  2175  0227  1BCB               	btfsc	___ftadd@f1+2,7
  2176  0228  17D3               	bsf	___ftadd@sign,7
  2177  0229  1BCE               	btfsc	___ftadd@f2+2,7
  2178  022A  1753               	bsf	___ftadd@sign,6
  2179  022B  17CA               	bsf	___ftadd@f1+1,7
  2180  022C  30FF               	movlw	255
  2181  022D  05C9               	andwf	___ftadd@f1,f
  2182  022E  30FF               	movlw	255
  2183  022F  05CA               	andwf	___ftadd@f1+1,f
  2184  0230  3000               	movlw	0
  2185  0231  05CB               	andwf	___ftadd@f1+2,f
  2186  0232  17CD               	bsf	___ftadd@f2+1,7
  2187  0233  30FF               	movlw	255
  2188  0234  05CC               	andwf	___ftadd@f2,f
  2189  0235  30FF               	movlw	255
  2190  0236  05CD               	andwf	___ftadd@f2+1,f
  2191  0237  3000               	movlw	0
  2192  0238  05CE               	andwf	___ftadd@f2+2,f
  2193  0239  0854               	movf	___ftadd@exp2,w
  2194  023A  0255               	subwf	___ftadd@exp1,w
  2195  023B  1803               	skipnc
  2196  023C  2A5F               	goto	l1138
  2197  023D                     l1128:	
  2198  023D  3001               	movlw	1
  2199  023E                     u1205:	
  2200  023E  35CC               	lslf	___ftadd@f2,f
  2201  023F  0DCD               	rlf	___ftadd@f2+1,f
  2202  0240  0DCE               	rlf	___ftadd@f2+2,f
  2203  0241  0B89               	decfsz	9,f
  2204  0242  2A3E               	goto	u1205
  2205  0243  3001               	movlw	1
  2206  0244  02D4               	subwf	___ftadd@exp2,f
  2207  0245  0854               	movf	___ftadd@exp2,w
  2208  0246  0655               	xorwf	___ftadd@exp1,w
  2209  0247  1903               	skipnz
  2210  0248  2A5A               	goto	l1136
  2211  0249  3001               	movlw	1
  2212  024A  02D3               	subwf	___ftadd@sign,f
  2213  024B  0853               	movf	___ftadd@sign,w
  2214  024C  3907               	andlw	7
  2215  024D  1903               	btfsc	3,2
  2216  024E  2A5A               	goto	l1136
  2217  024F  2A3D               	goto	l1128
  2218  0250                     l1134:	
  2219  0250  3001               	movlw	1
  2220  0251                     u1235:	
  2221  0251  36CB               	lsrf	___ftadd@f1+2,f
  2222  0252  0CCA               	rrf	___ftadd@f1+1,f
  2223  0253  0CC9               	rrf	___ftadd@f1,f
  2224  0254  0B89               	decfsz	9,f
  2225  0255  2A51               	goto	u1235
  2226  0256  3001               	movlw	1
  2227  0257  00CF               	movwf	??___ftadd
  2228  0258  084F               	movf	??___ftadd,w
  2229  0259  07D5               	addwf	___ftadd@exp1,f
  2230  025A                     l1136:	
  2231  025A  0855               	movf	___ftadd@exp1,w
  2232  025B  0654               	xorwf	___ftadd@exp2,w
  2233  025C  1903               	btfsc	3,2
  2234  025D  2A84               	goto	l378
  2235  025E  2A50               	goto	l1134
  2236  025F                     l1138:	
  2237  025F  0855               	movf	___ftadd@exp1,w
  2238  0260  0254               	subwf	___ftadd@exp2,w
  2239  0261  1803               	skipnc
  2240  0262  2A84               	goto	l378
  2241  0263                     l1140:	
  2242  0263  3001               	movlw	1
  2243  0264                     u1265:	
  2244  0264  35C9               	lslf	___ftadd@f1,f
  2245  0265  0DCA               	rlf	___ftadd@f1+1,f
  2246  0266  0DCB               	rlf	___ftadd@f1+2,f
  2247  0267  0B89               	decfsz	9,f
  2248  0268  2A64               	goto	u1265
  2249  0269  3001               	movlw	1
  2250  026A  02D5               	subwf	___ftadd@exp1,f
  2251  026B  0854               	movf	___ftadd@exp2,w
  2252  026C  0655               	xorwf	___ftadd@exp1,w
  2253  026D  1903               	skipnz
  2254  026E  2A80               	goto	l1148
  2255  026F  3001               	movlw	1
  2256  0270  02D3               	subwf	___ftadd@sign,f
  2257  0271  0853               	movf	___ftadd@sign,w
  2258  0272  3907               	andlw	7
  2259  0273  1903               	btfsc	3,2
  2260  0274  2A80               	goto	l1148
  2261  0275  2A63               	goto	l1140
  2262  0276                     l1146:	
  2263  0276  3001               	movlw	1
  2264  0277                     u1295:	
  2265  0277  36CE               	lsrf	___ftadd@f2+2,f
  2266  0278  0CCD               	rrf	___ftadd@f2+1,f
  2267  0279  0CCC               	rrf	___ftadd@f2,f
  2268  027A  0B89               	decfsz	9,f
  2269  027B  2A77               	goto	u1295
  2270  027C  3001               	movlw	1
  2271  027D  00CF               	movwf	??___ftadd
  2272  027E  084F               	movf	??___ftadd,w
  2273  027F  07D4               	addwf	___ftadd@exp2,f
  2274  0280                     l1148:	
  2275  0280  0855               	movf	___ftadd@exp1,w
  2276  0281  0654               	xorwf	___ftadd@exp2,w
  2277  0282  1D03               	skipz
  2278  0283  2A76               	goto	l1146
  2279  0284                     l378:	
  2280  0284  1FD3               	btfss	___ftadd@sign,7
  2281  0285  2A96               	goto	l1152
  2282  0286  30FF               	movlw	255
  2283  0287  06C9               	xorwf	___ftadd@f1,f
  2284  0288  30FF               	movlw	255
  2285  0289  06CA               	xorwf	___ftadd@f1+1,f
  2286  028A  30FF               	movlw	255
  2287  028B  06CB               	xorwf	___ftadd@f1+2,f
  2288  028C  3001               	movlw	1
  2289  028D  07C9               	addwf	___ftadd@f1,f
  2290  028E  3000               	movlw	0
  2291  028F  1803               	skipnc
  2292  0290  3001               	movlw	1
  2293  0291  07CA               	addwf	___ftadd@f1+1,f
  2294  0292  3000               	movlw	0
  2295  0293  1803               	skipnc
  2296  0294  3001               	movlw	1
  2297  0295  07CB               	addwf	___ftadd@f1+2,f
  2298  0296                     l1152:	
  2299  0296  1F53               	btfss	___ftadd@sign,6
  2300  0297  2AA8               	goto	l1156
  2301  0298  30FF               	movlw	255
  2302  0299  06CC               	xorwf	___ftadd@f2,f
  2303  029A  30FF               	movlw	255
  2304  029B  06CD               	xorwf	___ftadd@f2+1,f
  2305  029C  30FF               	movlw	255
  2306  029D  06CE               	xorwf	___ftadd@f2+2,f
  2307  029E  3001               	movlw	1
  2308  029F  07CC               	addwf	___ftadd@f2,f
  2309  02A0  3000               	movlw	0
  2310  02A1  1803               	skipnc
  2311  02A2  3001               	movlw	1
  2312  02A3  07CD               	addwf	___ftadd@f2+1,f
  2313  02A4  3000               	movlw	0
  2314  02A5  1803               	skipnc
  2315  02A6  3001               	movlw	1
  2316  02A7  07CE               	addwf	___ftadd@f2+2,f
  2317  02A8                     l1156:	
  2318  02A8  01D3               	clrf	___ftadd@sign
  2319  02A9  0849               	movf	___ftadd@f1,w
  2320  02AA  07CC               	addwf	___ftadd@f2,f
  2321  02AB  084A               	movf	___ftadd@f1+1,w
  2322  02AC  3DCD               	addwfc	___ftadd@f2+1,f
  2323  02AD  084B               	movf	___ftadd@f1+2,w
  2324  02AE  3DCE               	addwfc	___ftadd@f2+2,f
  2325  02AF  1FCE               	btfss	___ftadd@f2+2,7
  2326  02B0  2AC3               	goto	l1166
  2327  02B1  30FF               	movlw	255
  2328  02B2  06CC               	xorwf	___ftadd@f2,f
  2329  02B3  30FF               	movlw	255
  2330  02B4  06CD               	xorwf	___ftadd@f2+1,f
  2331  02B5  30FF               	movlw	255
  2332  02B6  06CE               	xorwf	___ftadd@f2+2,f
  2333  02B7  3001               	movlw	1
  2334  02B8  07CC               	addwf	___ftadd@f2,f
  2335  02B9  3000               	movlw	0
  2336  02BA  1803               	skipnc
  2337  02BB  3001               	movlw	1
  2338  02BC  07CD               	addwf	___ftadd@f2+1,f
  2339  02BD  3000               	movlw	0
  2340  02BE  1803               	skipnc
  2341  02BF  3001               	movlw	1
  2342  02C0  07CE               	addwf	___ftadd@f2+2,f
  2343  02C1  01D3               	clrf	___ftadd@sign
  2344  02C2  0AD3               	incf	___ftadd@sign,f
  2345  02C3                     l1166:	
  2346  02C3  084C               	movf	___ftadd@f2,w
  2347  02C4  00A1               	movwf	___ftpack@arg
  2348  02C5  084D               	movf	___ftadd@f2+1,w
  2349  02C6  00A2               	movwf	___ftpack@arg+1
  2350  02C7  084E               	movf	___ftadd@f2+2,w
  2351  02C8  00A3               	movwf	___ftpack@arg+2
  2352  02C9  0855               	movf	___ftadd@exp1,w
  2353  02CA  00CF               	movwf	??___ftadd
  2354  02CB  084F               	movf	??___ftadd,w
  2355  02CC  00A4               	movwf	___ftpack@exp
  2356  02CD  0853               	movf	___ftadd@sign,w
  2357  02CE  00D0               	movwf	??___ftadd+1
  2358  02CF  0850               	movf	??___ftadd+1,w
  2359  02D0  00A5               	movwf	___ftpack@sign
  2360  02D1  24EC               	fcall	___ftpack
  2361  02D2  0020               	movlb	0	; select bank0
  2362  02D3  0821               	movf	?___ftpack,w
  2363  02D4  00C9               	movwf	?___ftadd
  2364  02D5  0822               	movf	?___ftpack+1,w
  2365  02D6  00CA               	movwf	?___ftadd+1
  2366  02D7  0823               	movf	?___ftpack+2,w
  2367  02D8  00CB               	movwf	?___ftadd+2
  2368  02D9  0008               	return
  2369  02DA                     __end_of___ftadd:	
  2370                           
  2371                           	psect	text8
  2372  05F0                     __ptext8:	
  2373 ;; *************** function ___awtoft *****************
  2374 ;; Defined at:
  2375 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  c               2    9[BANK0 ] int 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  sign            1   14[BANK0 ] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  3    9[BANK0 ] float 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1
  2389 ;;      Params:         0       3       0
  2390 ;;      Locals:         0       1       0
  2391 ;;      Temps:          0       2       0
  2392 ;;      Totals:         0       6       0
  2393 ;;Total ram usage:        6 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    3
  2396 ;; This function calls:
  2397 ;;		___ftpack
  2398 ;; This function is called by:
  2399 ;;		_PID
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function ___awtoft
  2405  05F0                     ___awtoft:	
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2409  05F0  0020               	movlb	0	; select bank0
  2410  05F1  01AE               	clrf	___awtoft@sign
  2411  05F2  1FAA               	btfss	___awtoft@c+1,7
  2412  05F3  2DFB               	goto	l1096
  2413  05F4  09A9               	comf	___awtoft@c,f
  2414  05F5  09AA               	comf	___awtoft@c+1,f
  2415  05F6  0AA9               	incf	___awtoft@c,f
  2416  05F7  1903               	skipnz
  2417  05F8  0AAA               	incf	___awtoft@c+1,f
  2418  05F9  01AE               	clrf	___awtoft@sign
  2419  05FA  0AAE               	incf	___awtoft@sign,f
  2420  05FB                     l1096:	
  2421  05FB  0829               	movf	___awtoft@c,w
  2422  05FC  00A1               	movwf	___ftpack@arg
  2423  05FD  082A               	movf	___awtoft@c+1,w
  2424  05FE  00A2               	movwf	___ftpack@arg+1
  2425  05FF  01A3               	clrf	___ftpack@arg+2
  2426  0600  308E               	movlw	142
  2427  0601  00AC               	movwf	??___awtoft
  2428  0602  082C               	movf	??___awtoft,w
  2429  0603  00A4               	movwf	___ftpack@exp
  2430  0604  082E               	movf	___awtoft@sign,w
  2431  0605  00AD               	movwf	??___awtoft+1
  2432  0606  082D               	movf	??___awtoft+1,w
  2433  0607  00A5               	movwf	___ftpack@sign
  2434  0608  24EC               	fcall	___ftpack
  2435  0609  0020               	movlb	0	; select bank0
  2436  060A  0821               	movf	?___ftpack,w
  2437  060B  00A9               	movwf	?___awtoft
  2438  060C  0822               	movf	?___ftpack+1,w
  2439  060D  00AA               	movwf	?___awtoft+1
  2440  060E  0823               	movf	?___ftpack+2,w
  2441  060F  00AB               	movwf	?___awtoft+2
  2442  0610  0008               	return
  2443  0611                     __end_of___awtoft:	
  2444                           
  2445                           	psect	text9
  2446  04EC                     __ptext9:	
  2447 ;; *************** function ___ftpack *****************
  2448 ;; Defined at:
  2449 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  arg             3    1[BANK0 ] unsigned um
  2452 ;;  exp             1    4[BANK0 ] unsigned char 
  2453 ;;  sign            1    5[BANK0 ] unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  3    1[BANK0 ] float 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1
  2465 ;;      Params:         0       5       0
  2466 ;;      Locals:         0       0       0
  2467 ;;      Temps:          0       3       0
  2468 ;;      Totals:         0       8       0
  2469 ;;Total ram usage:        8 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    2
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		___awtoft
  2476 ;;		___ftadd
  2477 ;;		___ftdiv
  2478 ;;		___ftmul
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function ___ftpack
  2484  04EC                     ___ftpack:	
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2488  04EC  0020               	movlb	0	; select bank0
  2489  04ED  0824               	movf	___ftpack@exp,w
  2490  04EE  1903               	btfsc	3,2
  2491  04EF  2CF5               	goto	l1042
  2492  04F0  0823               	movf	___ftpack@arg+2,w
  2493  04F1  0422               	iorwf	___ftpack@arg+1,w
  2494  04F2  0421               	iorwf	___ftpack@arg,w
  2495  04F3  1D03               	skipz
  2496  04F4  2D06               	goto	l1048
  2497  04F5                     l1042:	
  2498  04F5  3000               	movlw	0
  2499  04F6  00A1               	movwf	?___ftpack
  2500  04F7  3000               	movlw	0
  2501  04F8  00A2               	movwf	?___ftpack+1
  2502  04F9  3000               	movlw	0
  2503  04FA  00A3               	movwf	?___ftpack+2
  2504  04FB  0008               	return
  2505  04FC                     l1046:	
  2506  04FC  3001               	movlw	1
  2507  04FD  00A6               	movwf	??___ftpack
  2508  04FE  0826               	movf	??___ftpack,w
  2509  04FF  07A4               	addwf	___ftpack@exp,f
  2510  0500  3001               	movlw	1
  2511  0501                     u975:	
  2512  0501  36A3               	lsrf	___ftpack@arg+2,f
  2513  0502  0CA2               	rrf	___ftpack@arg+1,f
  2514  0503  0CA1               	rrf	___ftpack@arg,f
  2515  0504  0B89               	decfsz	9,f
  2516  0505  2D01               	goto	u975
  2517  0506                     l1048:	
  2518  0506  30FE               	movlw	254
  2519  0507  0523               	andwf	___ftpack@arg+2,w
  2520  0508  1903               	btfsc	3,2
  2521  0509  2D1F               	goto	l347
  2522  050A  2CFC               	goto	l1046
  2523  050B                     l1050:	
  2524  050B  3001               	movlw	1
  2525  050C  00A6               	movwf	??___ftpack
  2526  050D  0826               	movf	??___ftpack,w
  2527  050E  07A4               	addwf	___ftpack@exp,f
  2528  050F  3001               	movlw	1
  2529  0510  07A1               	addwf	___ftpack@arg,f
  2530  0511  3000               	movlw	0
  2531  0512  1803               	skipnc
  2532  0513  3001               	movlw	1
  2533  0514  07A2               	addwf	___ftpack@arg+1,f
  2534  0515  3000               	movlw	0
  2535  0516  1803               	skipnc
  2536  0517  3001               	movlw	1
  2537  0518  07A3               	addwf	___ftpack@arg+2,f
  2538  0519  3001               	movlw	1
  2539  051A                     u995:	
  2540  051A  36A3               	lsrf	___ftpack@arg+2,f
  2541  051B  0CA2               	rrf	___ftpack@arg+1,f
  2542  051C  0CA1               	rrf	___ftpack@arg,f
  2543  051D  0B89               	decfsz	9,f
  2544  051E  2D1A               	goto	u995
  2545  051F                     l347:	
  2546  051F  30FF               	movlw	255
  2547  0520  0523               	andwf	___ftpack@arg+2,w
  2548  0521  1903               	btfsc	3,2
  2549  0522  2D2C               	goto	l1058
  2550  0523  2D0B               	goto	l1050
  2551  0524                     l1056:	
  2552  0524  3001               	movlw	1
  2553  0525  02A4               	subwf	___ftpack@exp,f
  2554  0526  3001               	movlw	1
  2555  0527                     u1015:	
  2556  0527  35A1               	lslf	___ftpack@arg,f
  2557  0528  0DA2               	rlf	___ftpack@arg+1,f
  2558  0529  0DA3               	rlf	___ftpack@arg+2,f
  2559  052A  0B89               	decfsz	9,f
  2560  052B  2D27               	goto	u1015
  2561  052C                     l1058:	
  2562  052C  1BA2               	btfsc	___ftpack@arg+1,7
  2563  052D  2D32               	goto	l354
  2564  052E  3002               	movlw	2
  2565  052F  0224               	subwf	___ftpack@exp,w
  2566  0530  1803               	skipnc
  2567  0531  2D24               	goto	l1056
  2568  0532                     l354:	
  2569  0532  1824               	btfsc	___ftpack@exp,0
  2570  0533  2D3A               	goto	l355
  2571  0534  30FF               	movlw	255
  2572  0535  05A1               	andwf	___ftpack@arg,f
  2573  0536  307F               	movlw	127
  2574  0537  05A2               	andwf	___ftpack@arg+1,f
  2575  0538  30FF               	movlw	255
  2576  0539  05A3               	andwf	___ftpack@arg+2,f
  2577  053A                     l355:	
  2578  053A  1003               	clrc
  2579  053B  0CA4               	rrf	___ftpack@exp,f
  2580  053C  0824               	movf	___ftpack@exp,w
  2581  053D  00A6               	movwf	??___ftpack
  2582  053E  01A7               	clrf	??___ftpack+1
  2583  053F  01A8               	clrf	??___ftpack+2
  2584  0540  3010               	movlw	16
  2585  0541                     u1055:	
  2586  0541  35A6               	lslf	??___ftpack,f
  2587  0542  0DA7               	rlf	??___ftpack+1,f
  2588  0543  0DA8               	rlf	??___ftpack+2,f
  2589  0544  0B89               	decfsz	9,f
  2590  0545  2D41               	goto	u1055
  2591  0546  0826               	movf	??___ftpack,w
  2592  0547  04A1               	iorwf	___ftpack@arg,f
  2593  0548  0827               	movf	??___ftpack+1,w
  2594  0549  04A2               	iorwf	___ftpack@arg+1,f
  2595  054A  0828               	movf	??___ftpack+2,w
  2596  054B  04A3               	iorwf	___ftpack@arg+2,f
  2597  054C  0825               	movf	___ftpack@sign,w
  2598  054D  1903               	btfsc	3,2
  2599  054E  0008               	return
  2600  054F  17A3               	bsf	___ftpack@arg+2,7
  2601  0550  0008               	return
  2602  0551                     __end_of___ftpack:	
  2603                           
  2604                           	psect	text10
  2605  05C1                     __ptext10:	
  2606 ;; *************** function _M_control *****************
  2607 ;; Defined at:
  2608 ;;		line 103 in file "main.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  ctr             2    4[BANK0 ] int 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1
  2622 ;;      Params:         0       2       0
  2623 ;;      Locals:         0       0       0
  2624 ;;      Temps:          0       1       0
  2625 ;;      Totals:         0       3       0
  2626 ;;Total ram usage:        3 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    3
  2629 ;; This function calls:
  2630 ;;		_PWM_set_duty
  2631 ;; This function is called by:
  2632 ;;		_PID
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _M_control
  2638  05C1                     _M_control:	
  2639                           
  2640                           ;main.c: 105: if (ctr == 0)
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _M_control: [wreg+status,2+status,0+pclath+cstack]
  2644  05C1  0020               	movlb	0	; select bank0
  2645  05C2  0824               	movf	M_control@ctr,w
  2646  05C3  0425               	iorwf	M_control@ctr+1,w
  2647  05C4  1D03               	btfss	3,2
  2648  05C5  2DCB               	goto	l1074
  2649                           
  2650                           ;main.c: 106: {
  2651                           ;main.c: 107: PWM_set_duty(ctr);
  2652  05C6  0825               	movf	M_control@ctr+1,w
  2653  05C7  00A2               	movwf	PWM_set_duty@duty+1
  2654  05C8  0824               	movf	M_control@ctr,w
  2655  05C9  00A1               	movwf	PWM_set_duty@duty
  2656  05CA  262C               	fcall	_PWM_set_duty
  2657  05CB                     l1074:	
  2658                           
  2659                           ;main.c: 108: }
  2660                           ;main.c: 109: if (ctr > 0)
  2661  05CB  0020               	movlb	0	; select bank0
  2662  05CC  0825               	movf	M_control@ctr+1,w
  2663  05CD  3A80               	xorlw	128
  2664  05CE  00A6               	movwf	??_M_control
  2665  05CF  3080               	movlw	128
  2666  05D0  0226               	subwf	??_M_control,w
  2667  05D1  1D03               	skipz
  2668  05D2  2DD5               	goto	u1085
  2669  05D3  3001               	movlw	1
  2670  05D4  0224               	subwf	M_control@ctr,w
  2671  05D5                     u1085:	
  2672  05D5  1C03               	skipc
  2673  05D6  2DDF               	goto	l1080
  2674                           
  2675                           ;main.c: 110: {
  2676                           ;main.c: 111: LATAbits.LATA0 = 1;
  2677  05D7  0022               	movlb	2	; select bank2
  2678  05D8  140C               	bsf	12,0	;volatile
  2679                           
  2680                           ;main.c: 112: PWM_set_duty(ctr);
  2681  05D9  0020               	movlb	0	; select bank0
  2682  05DA  0825               	movf	M_control@ctr+1,w
  2683  05DB  00A2               	movwf	PWM_set_duty@duty+1
  2684  05DC  0824               	movf	M_control@ctr,w
  2685  05DD  00A1               	movwf	PWM_set_duty@duty
  2686  05DE  262C               	fcall	_PWM_set_duty
  2687  05DF                     l1080:	
  2688                           
  2689                           ;main.c: 113: }
  2690                           ;main.c: 114: if (ctr < 0)
  2691  05DF  0020               	movlb	0	; select bank0
  2692  05E0  1FA5               	btfss	M_control@ctr+1,7
  2693  05E1  0008               	return
  2694                           
  2695                           ;main.c: 115: {
  2696                           ;main.c: 116: LATAbits.LATA0 = 0;
  2697  05E2  0022               	movlb	2	; select bank2
  2698  05E3  100C               	bcf	12,0	;volatile
  2699                           
  2700                           ;main.c: 117: ctr = ctr * -1;
  2701  05E4  0020               	movlb	0	; select bank0
  2702  05E5  09A4               	comf	M_control@ctr,f
  2703  05E6  09A5               	comf	M_control@ctr+1,f
  2704  05E7  0AA4               	incf	M_control@ctr,f
  2705  05E8  1903               	skipnz
  2706  05E9  0AA5               	incf	M_control@ctr+1,f
  2707                           
  2708                           ;main.c: 118: PWM_set_duty(ctr);
  2709  05EA  0825               	movf	M_control@ctr+1,w
  2710  05EB  00A2               	movwf	PWM_set_duty@duty+1
  2711  05EC  0824               	movf	M_control@ctr,w
  2712  05ED  00A1               	movwf	PWM_set_duty@duty
  2713  05EE  262C               	fcall	_PWM_set_duty
  2714  05EF  0008               	return
  2715  05F0                     __end_of_M_control:	
  2716                           
  2717                           	psect	text11
  2718  062C                     __ptext11:	
  2719 ;; *************** function _PWM_set_duty *****************
  2720 ;; Defined at:
  2721 ;;		line 64 in file "main.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  duty            2    1[BANK0 ] int 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2    1[BANK0 ] int 
  2728 ;; Registers used:
  2729 ;;		wreg
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1
  2735 ;;      Params:         0       2       0
  2736 ;;      Locals:         0       0       0
  2737 ;;      Temps:          0       1       0
  2738 ;;      Totals:         0       3       0
  2739 ;;Total ram usage:        3 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    2
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_M_control
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _PWM_set_duty
  2752  062C                     _PWM_set_duty:	
  2753                           
  2754                           ;main.c: 66: if(duty<1024)
  2755                           
  2756                           ;incstack = 0
  2757                           ; Regs used in _PWM_set_duty: [wreg]
  2758  062C  0020               	movlb	0	; select bank0
  2759  062D  0822               	movf	PWM_set_duty@duty+1,w
  2760  062E  3A80               	xorlw	128
  2761  062F  00A3               	movwf	??_PWM_set_duty
  2762  0630  3084               	movlw	132
  2763  0631  0223               	subwf	??_PWM_set_duty,w
  2764  0632  1D03               	skipz
  2765  0633  2E36               	goto	u945
  2766  0634  3000               	movlw	0
  2767  0635  0221               	subwf	PWM_set_duty@duty,w
  2768  0636                     u945:	
  2769  0636  1803               	skipnc
  2770  0637  0008               	return
  2771                           
  2772                           ;main.c: 67: {
  2773                           ;main.c: 70: CCPR1L = (0xFF & ((unsigned int)duty));
  2774  0638  0020               	movlb	0	; select bank0
  2775  0639  0821               	movf	PWM_set_duty@duty,w
  2776  063A  0025               	movlb	5	; select bank5
  2777  063B  0091               	movwf	17	;volatile
  2778  063C  0008               	return
  2779  063D                     __end_of_PWM_set_duty:	
  2780                           
  2781                           	psect	intentry
  2782  0004                     __pintentry:	
  2783 ;; *************** function _all_of_them *****************
  2784 ;; Defined at:
  2785 ;;		line 76 in file "main.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1
  2799 ;;      Params:         0       0       0
  2800 ;;      Locals:         0       0       0
  2801 ;;      Temps:          0       1       0
  2802 ;;      Totals:         0       1       0
  2803 ;;Total ram usage:        1 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    1
  2806 ;; This function calls:
  2807 ;;		___lwdiv
  2808 ;;		___wmul
  2809 ;; This function is called by:
  2810 ;;		Interrupt level 1
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814  0004                     _all_of_them:	
  2815                           
  2816                           ;incstack = 0
  2817  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2818                           
  2819                           ; Regs used in _all_of_them: [wreg+status,2+status,0+pclath+cstack]
  2820  0005  3180               	pagesel	$
  2821  0006  0020               	movlb	0	; select bank0
  2822  0007  087F               	movf	127,w
  2823  0008  00A0               	movwf	??_all_of_them
  2824                           
  2825                           ;main.c: 78: if (INTCONbits.IOCIF == 1 && IOCAFbits.IOCAF4 == 1)
  2826  0009  1C0B               	btfss	11,0	;volatile
  2827  000A  2817               	goto	i1l1390
  2828  000B  0027               	movlb	7	; select bank7
  2829  000C  1E13               	btfss	19,4	;volatile
  2830  000D  2817               	goto	i1l1390
  2831                           
  2832                           ;main.c: 79: {
  2833                           ;main.c: 80: INTCONbits.IOCIE = 0;
  2834  000E  118B               	bcf	11,3	;volatile
  2835                           
  2836                           ;main.c: 81: counter ++;
  2837  000F  3001               	movlw	1
  2838  0010  0021               	movlb	1	; select bank1
  2839  0011  07B6               	addwf	_counter^(0+128),f
  2840  0012  3000               	movlw	0
  2841  0013  3DB7               	addwfc	(_counter+1)^(0+128),f
  2842                           
  2843                           ;main.c: 82: IOCAFbits.IOCAF4 = 0;
  2844  0014  0027               	movlb	7	; select bank7
  2845  0015  1213               	bcf	19,4	;volatile
  2846                           
  2847                           ;main.c: 83: INTCONbits.IOCIE = 1;
  2848  0016  158B               	bsf	11,3	;volatile
  2849  0017                     i1l1390:	
  2850                           
  2851                           ;main.c: 84: }
  2852                           ;main.c: 85: if(PIR1bits.TMR1IF == 1)
  2853  0017  0020               	movlb	0	; select bank0
  2854  0018  1C11               	btfss	17,0	;volatile
  2855  0019  2844               	goto	i1l71
  2856                           
  2857                           ;main.c: 86: {
  2858                           ;main.c: 87: INTCONbits.IOCIE = 0;
  2859  001A  118B               	bcf	11,3	;volatile
  2860                           
  2861                           ;main.c: 88: T1CONbits.TMR1ON = 0;
  2862  001B  1018               	bcf	24,0	;volatile
  2863                           
  2864                           ;main.c: 89: rpm = (counter * 300)/gear;
  2865  001C  0021               	movlb	1	; select bank1
  2866  001D  082A               	movf	(_gear+1)^(0+128),w
  2867  001E  00F7               	movwf	___lwdiv@divisor+1
  2868  001F  0829               	movf	_gear^(0+128),w
  2869  0020  00F6               	movwf	___lwdiv@divisor
  2870  0021  0837               	movf	(_counter+1)^(0+128),w
  2871  0022  00F1               	movwf	___wmul@multiplier+1
  2872  0023  0836               	movf	_counter^(0+128),w
  2873  0024  00F0               	movwf	___wmul@multiplier
  2874  0025  302C               	movlw	44
  2875  0026  00F2               	movwf	___wmul@multiplicand
  2876  0027  3001               	movlw	1
  2877  0028  00F3               	movwf	___wmul@multiplicand+1
  2878  0029  2611               	fcall	___wmul
  2879  002A  0871               	movf	?___wmul+1,w
  2880  002B  00F9               	movwf	___lwdiv@dividend+1
  2881  002C  0870               	movf	?___wmul,w
  2882  002D  00F8               	movwf	___lwdiv@dividend
  2883  002E  258D               	fcall	___lwdiv
  2884  002F  0877               	movf	?___lwdiv+1,w
  2885  0030  0020               	movlb	0	; select bank0
  2886  0031  00EE               	movwf	_rpm+1
  2887  0032  0876               	movf	?___lwdiv,w
  2888  0033  00ED               	movwf	_rpm
  2889                           
  2890                           ;main.c: 90: counter = 0;
  2891  0034  0021               	movlb	1	; select bank1
  2892  0035  01B6               	clrf	_counter^(0+128)
  2893  0036  01B7               	clrf	(_counter+1)^(0+128)
  2894                           
  2895                           ;main.c: 91: if(LATAbits.LATA0 == 0)
  2896  0037  0022               	movlb	2	; select bank2
  2897  0038  180C               	btfsc	12,0	;volatile
  2898  0039  2840               	goto	i1l1402
  2899                           
  2900                           ;main.c: 92: {
  2901                           ;main.c: 93: rpm = rpm *-1;
  2902  003A  0020               	movlb	0	; select bank0
  2903  003B  09ED               	comf	_rpm,f
  2904  003C  09EE               	comf	_rpm+1,f
  2905  003D  0AED               	incf	_rpm,f
  2906  003E  1903               	skipnz
  2907  003F  0AEE               	incf	_rpm+1,f
  2908  0040                     i1l1402:	
  2909                           
  2910                           ;main.c: 94: }
  2911                           ;main.c: 95: INTCONbits.IOCIE = 1;
  2912  0040  158B               	bsf	11,3	;volatile
  2913                           
  2914                           ;main.c: 96: PIR1bits.TMR1IF = 0;
  2915  0041  0020               	movlb	0	; select bank0
  2916  0042  1011               	bcf	17,0	;volatile
  2917                           
  2918                           ;main.c: 97: T1CONbits.TMR1ON = 1;
  2919  0043  1418               	bsf	24,0	;volatile
  2920  0044                     i1l71:	
  2921  0044  0820               	movf	??_all_of_them,w
  2922  0045  00FF               	movwf	127
  2923  0046  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2924  0047  0009               	retfie
  2925  0048                     __end_of_all_of_them:	
  2926                           
  2927                           	psect	text13
  2928  0611                     __ptext13:	
  2929 ;; *************** function ___wmul *****************
  2930 ;; Defined at:
  2931 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  multiplier      2    0[COMMON] unsigned int 
  2934 ;;  multiplicand    2    2[COMMON] unsigned int 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  product         2    4[COMMON] unsigned int 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  2    0[COMMON] unsigned int 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1
  2946 ;;      Params:         4       0       0
  2947 ;;      Locals:         2       0       0
  2948 ;;      Temps:          0       0       0
  2949 ;;      Totals:         6       0       0
  2950 ;;Total ram usage:        6 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_all_of_them
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function ___wmul
  2961  0611                     ___wmul:	
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2965  0611  01F4               	clrf	___wmul@product
  2966  0612  01F5               	clrf	___wmul@product+1
  2967  0613                     i1l1340:	
  2968  0613  1C70               	btfss	___wmul@multiplier,0
  2969  0614  2E19               	goto	i1l186
  2970  0615  0872               	movf	___wmul@multiplicand,w
  2971  0616  07F4               	addwf	___wmul@product,f
  2972  0617  0873               	movf	___wmul@multiplicand+1,w
  2973  0618  3DF5               	addwfc	___wmul@product+1,f
  2974  0619                     i1l186:	
  2975  0619  3001               	movlw	1
  2976  061A                     u165_25:	
  2977  061A  35F2               	lslf	___wmul@multiplicand,f
  2978  061B  0DF3               	rlf	___wmul@multiplicand+1,f
  2979  061C  0B89               	decfsz	9,f
  2980  061D  2E1A               	goto	u165_25
  2981  061E  3001               	movlw	1
  2982  061F                     u166_25:	
  2983  061F  36F1               	lsrf	___wmul@multiplier+1,f
  2984  0620  0CF0               	rrf	___wmul@multiplier,f
  2985  0621  0B89               	decfsz	9,f
  2986  0622  2E1F               	goto	u166_25
  2987  0623  0870               	movf	___wmul@multiplier,w
  2988  0624  0471               	iorwf	___wmul@multiplier+1,w
  2989  0625  1D03               	btfss	3,2
  2990  0626  2E13               	goto	i1l1340
  2991  0627  0875               	movf	___wmul@product+1,w
  2992  0628  00F1               	movwf	?___wmul+1
  2993  0629  0874               	movf	___wmul@product,w
  2994  062A  00F0               	movwf	?___wmul
  2995  062B  0008               	return
  2996  062C                     __end_of___wmul:	
  2997                           
  2998                           	psect	text14
  2999  058D                     __ptext14:	
  3000 ;; *************** function ___lwdiv *****************
  3001 ;; Defined at:
  3002 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  divisor         2    6[COMMON] unsigned int 
  3005 ;;  dividend        2    8[COMMON] unsigned int 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  quotient        2   11[COMMON] unsigned int 
  3008 ;;  counter         1   13[COMMON] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  2    6[COMMON] unsigned int 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1
  3018 ;;      Params:         4       0       0
  3019 ;;      Locals:         3       0       0
  3020 ;;      Temps:          1       0       0
  3021 ;;      Totals:         8       0       0
  3022 ;;Total ram usage:        8 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_all_of_them
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function ___lwdiv
  3033  058D                     ___lwdiv:	
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3037  058D  01FB               	clrf	___lwdiv@quotient
  3038  058E  01FC               	clrf	___lwdiv@quotient+1
  3039  058F  0876               	movf	___lwdiv@divisor,w
  3040  0590  0477               	iorwf	___lwdiv@divisor+1,w
  3041  0591  1903               	btfsc	3,2
  3042  0592  2DBC               	goto	i1l1374
  3043  0593  01FD               	clrf	___lwdiv@counter
  3044  0594  0AFD               	incf	___lwdiv@counter,f
  3045  0595                     i1l1362:	
  3046  0595  1BF7               	btfsc	___lwdiv@divisor+1,7
  3047  0596  2DA1               	goto	i1l1364
  3048  0597  3001               	movlw	1
  3049  0598                     u169_25:	
  3050  0598  35F6               	lslf	___lwdiv@divisor,f
  3051  0599  0DF7               	rlf	___lwdiv@divisor+1,f
  3052  059A  0B89               	decfsz	9,f
  3053  059B  2D98               	goto	u169_25
  3054  059C  3001               	movlw	1
  3055  059D  00FA               	movwf	??___lwdiv
  3056  059E  087A               	movf	??___lwdiv,w
  3057  059F  07FD               	addwf	___lwdiv@counter,f
  3058  05A0  2D95               	goto	i1l1362
  3059  05A1                     i1l1364:	
  3060  05A1  3001               	movlw	1
  3061  05A2                     u171_25:	
  3062  05A2  35FB               	lslf	___lwdiv@quotient,f
  3063  05A3  0DFC               	rlf	___lwdiv@quotient+1,f
  3064  05A4  0B89               	decfsz	9,f
  3065  05A5  2DA2               	goto	u171_25
  3066  05A6  0877               	movf	___lwdiv@divisor+1,w
  3067  05A7  0279               	subwf	___lwdiv@dividend+1,w
  3068  05A8  1D03               	skipz
  3069  05A9  2DAC               	goto	u172_25
  3070  05AA  0876               	movf	___lwdiv@divisor,w
  3071  05AB  0278               	subwf	___lwdiv@dividend,w
  3072  05AC                     u172_25:	
  3073  05AC  1C03               	skipc
  3074  05AD  2DB3               	goto	i1l1370
  3075  05AE  0876               	movf	___lwdiv@divisor,w
  3076  05AF  02F8               	subwf	___lwdiv@dividend,f
  3077  05B0  0877               	movf	___lwdiv@divisor+1,w
  3078  05B1  3BF9               	subwfb	___lwdiv@dividend+1,f
  3079  05B2  147B               	bsf	___lwdiv@quotient,0
  3080  05B3                     i1l1370:	
  3081  05B3  3001               	movlw	1
  3082  05B4                     u173_25:	
  3083  05B4  36F7               	lsrf	___lwdiv@divisor+1,f
  3084  05B5  0CF6               	rrf	___lwdiv@divisor,f
  3085  05B6  0B89               	decfsz	9,f
  3086  05B7  2DB4               	goto	u173_25
  3087  05B8  3001               	movlw	1
  3088  05B9  02FD               	subwf	___lwdiv@counter,f
  3089  05BA  1D03               	btfss	3,2
  3090  05BB  2DA1               	goto	i1l1364
  3091  05BC                     i1l1374:	
  3092  05BC  087C               	movf	___lwdiv@quotient+1,w
  3093  05BD  00F7               	movwf	?___lwdiv+1
  3094  05BE  087B               	movf	___lwdiv@quotient,w
  3095  05BF  00F6               	movwf	?___lwdiv
  3096  05C0  0008               	return
  3097  05C1                     __end_of___lwdiv:	
  3098  007E                     btemp	set	126	;btemp
  3099  007E                     int$flags	set	126
  3100  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      79
    BANK1            32      8      24

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _all_of_them in COMMON

    _all_of_them->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_PID
    _PID->___ftadd
    ___ftmul->___ftdiv
    ___ftdiv->___ftpack
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _M_control->_PWM_set_duty

Critical Paths under _all_of_them in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _all_of_them in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13     9      4   11720
                                             69 BANK0      5     1      4
                                              0 BANK1      8     8      0
                                _PID
                           _PWM_Init
                       _PWM_set_duty
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID                                                 15    13      2   11280
                                             54 BANK0     15    13      2
                          _M_control
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              1 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2457
                                             25 BANK0     16    10      6
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     560
                                              1 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2093
                                              9 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3157
                                             41 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1851
                                              9 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1707
                                              1 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _M_control                                            3     1      2     464
                                              4 BANK0      3     1      2
                       _PWM_set_duty
 ---------------------------------------------------------------------------------
 (1) _PWM_set_duty                                         3     1      2     256
                                              1 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _all_of_them                                          1     1      0     466
                                              0 BANK0      1     1      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     268
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID
     _M_control
       _PWM_set_duty
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftdiv (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
   _PWM_Init
   _PWM_set_duty

 _all_of_them (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      75       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4A      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      8      18       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      75       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Jul 08 20:19:27 2018

            __CFG_CP$OFF 0000                       l82 01BB                       l91 02FB  
                     _kd 00A3                       _ki 00A0                       _kp 00A6  
    ___wmul@multiplicand 0072             ___ftadd@exp1 0055             ___ftadd@exp2 0054  
           ___ftadd@sign 0053                      l354 0532                      l355 053A  
                    l347 051F                      l378 0284                      _PR2 001B  
                    _PID 0061             __CFG_CPD$OFF 0000                      u945 0636  
                    u975 0501                      u995 051A                      _rpm 006D  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   ?_PID 0056             ___ftdiv@cntr 0033             ___ftdiv@sign 0038  
                   l1110 0214                     l1050 050B                     l1042 04F5  
                   l1106 020D                     l1140 0263                     l1116 0223  
                   l1204 04CB                     l1220 057E                     l1046 04FC  
                   l1134 0250                     l1080 05DF                     l1056 0524  
                   l1048 0506                     l1152 0296                     l1136 025A  
                   l1128 023D                     l1216 0568                     l1320 0151  
                   l1074 05CB                     l1058 052C                     l1146 0276  
                   l1138 025F                     l1156 02A8                     l1148 0280  
                   l1260 0401                     l1244 03BE                     l1324 0168  
                   l1166 02C3                     l1182 0471                     l1238 03A8  
                   l1096 05FB                     l1176 045B                     l1272 041D  
                   l1256 03F9                     l1336 01DE                     l1440 030B  
                   l1196 04B2                     l1268 0415                     l1462 034C  
                   l1454 0334                     l1448 0324                     l1476 0375  
                   l1468 035C                     u1015 0527                     u1205 023E  
                   u1055 0541                     u1235 0251                     u1085 05D5  
                   u1405 04CC                     u1265 0264                     u1505 0402  
                   u1515 0408                     u1365 0483                     u1605 01A2  
                   u1295 0277                     u1375 0493                     u1385 04B3  
                   u1545 041E                     u1625 01C5                     u1395 04C2  
                   u1555 0424                     u1475 03CA                     u1485 03DA  
                   u1805 0322                     u1815 0332                     u1825 034A  
                   u1835 035A                     u1845 0373                     u1855 0383  
                   u1795 0309                     i1l71 0044                     _WPUA 020C  
           __CFG_WRT$OFF 0000                     _gear 00A9                     _main 02DA  
           ___ftpack@arg 0021             ___ftpack@exp 0024                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0048  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000             ___ftmul@cntr 0047  
           ___ftmul@sign 0048                    ??_PID 0058            __CFG_PLLEN$ON 0000  
  __size_of_PWM_set_duty 0011                    ?_main 0065          __end_of___ftadd 02DA  
          __CFG_WDTE$OFF 0000          __end_of___ftdiv 04EC          __end_of___ftneg 065D  
        __end_of___ftmul 0444                    _T1CON 0018                    _T2CON 001C  
        __end_of___lwdiv 05C1                    i1l186 0619                    _TRISA 008C  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000            ___awtoft@sign 002E  
          ___ftpack@sign 0025                    main@x 00AB         __end_of_PWM_Init 0649  
                  status 0003                    wtemp0 007E     __size_of_all_of_them 0044  
           _PWM_set_duty 062C          __initialization 0049             __end_of_main 0391  
                 ??_main 0069                   PID@pid 0062                   PID@set 0056  
     __size_of_M_control 002F                   _CCPR1L 0291         __end_of___awtoft 0611  
                 _ANSELA 018C         __end_of___ftpack 0551                   i1l1402 0040  
                 i1l1340 0613                   i1l1370 05B3                   i1l1362 0595  
                 i1l1364 05A1                   i1l1374 05BC                   i1l1390 0017  
                 _INTCON 000B                   u171_25 05A2                   u172_25 05AC  
                 u173_25 05B4                   u165_25 061A                   u166_25 061F  
                 u169_25 0598                   _OSCCON 0099                   ___ftge 0551  
                 ___wmul 0611                ??___ftadd 004F           __CFG_STVREN$ON 0000  
              ??___ftdiv 002F                ??___ftneg 0024                ??___ftmul 003F  
              ??___lwdiv 007A    ___ftmul@f3_as_product 0044  __end_of__initialization 005E  
             ___ftadd@f1 0049               ___ftadd@f2 004C               ___ftge@ff1 0021  
             ___ftge@ff2 0024               ___ftdiv@f1 002C               ___ftdiv@f2 0029  
             ___ftdiv@f3 0034               ___ftneg@f1 0021               ___awtoft@c 0029  
             ___ftmul@f1 0039               ___ftmul@f2 003C           __pcstackCOMMON 0070  
           __pidataBANK1 0649        __end_of_M_control 05F0                ?_PWM_Init 0070  
         _OPTION_REGbits 0095               __pbssBANK0 006A               __pbssBANK1 00B3  
                PID@rpm2 005D               __pmaintext 02DA                  ?___ftge 0021  
                ?___wmul 0070               __pintentry 0004                  _CCP1CON 0293  
              ?___awtoft 0029                ?___ftpack 0021               ??_PWM_Init 0021  
                _PID$758 005A         PWM_set_duty@duty 0021          __size_of___ftge 003C  
                ___ftadd 01E5                  ___ftdiv 0444                  ___ftneg 0654  
        __size_of___wmul 001B                  ___ftmul 0391                  ___lwdiv 058D  
             ??___awtoft 002C               ??___ftpack 0026                  __ptext1 063D  
                __ptext2 0061                  __ptext3 0654                  __ptext4 0391  
                __ptext5 0551                  __ptext6 0444                  __ptext7 01E5  
                __ptext8 05F0                  __ptext9 04EC             __size_of_PID 0184  
              _T1CONbits 0018                  _counter 00B6                _IOCAFbits 0393  
              _IOCANbits 0392     end_of_initialization 005E                  init_ram 065D  
          ??_all_of_them 0020                  initloop 065E         __CFG_FOSC$INTOSC 0000  
            ___ftdiv@exp 0037              ___ftmul@exp 0043      __end_of_all_of_them 0048  
         __end_of___ftge 058D           __end_of___wmul 062C                _M_control 05C1  
      __size_of_PWM_Init 000C      start_initialization 0049              __end_of_PID 01E5  
            _accumulator 006A                 ??___ftge 0027                 ??___wmul 0074  
            __pdataBANK1 00A0               ?_M_control 0024        __size_of___awtoft 0021  
      __size_of___ftpack 0065                ___latbits 0000            __pcstackBANK0 0020  
          __pcstackBANK1 00AB                 PID@error 005F              _all_of_them 0004  
          ?_PWM_set_duty 0021         ___lwdiv@dividend 0078                 ?___ftadd 0049  
               ?___ftdiv 0029                 ?___ftneg 0021                 ?___ftmul 0039  
               ?___lwdiv 0076         ___lwdiv@quotient 007B                _lasterror 00B3  
         ___wmul@product 0074                 _LATAbits 010C                 _PIE1bits 0091  
         ??_PWM_set_duty 0023                 _PIR1bits 0011              ??_M_control 0026  
               _PWM_Init 063D        ___wmul@multiplier 0070                main@x_364 00AD  
              main@x_365 00AF                main@x_366 00B1               _APFCONbits 011D  
       __size_of___ftadd 00F5         __size_of___ftdiv 00A8         __size_of___ftneg 0009  
       __size_of___ftmul 00B3         __size_of___lwdiv 0034                 ___awtoft 05F0  
               ___ftpack 04EC          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
               __ptext10 05C1                 __ptext11 062C                 __ptext13 0611  
               __ptext14 058D            __size_of_main 00B7                 int$flags 007E  
               main@argc 0065                 main@argv 0067               _INTCONbits 000B  
   __end_of_PWM_set_duty 063D                 intlevel1 0000             ?_all_of_them 0070  
      __CFG_CLKOUTEN$OFF 0000             M_control@ctr 0024  
