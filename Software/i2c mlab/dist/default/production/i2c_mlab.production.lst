

Microchip Technology PIC PRO Macro Assembler V1.43 build -156212558 
                                                                                               Wed Jul 25 17:02:22 2018

Microchip Technology Omniscient Code Generator v1.43 (PRO mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	pa_nodes0,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.43
    20                           ; Generated 25/07/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F1822 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  010C                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0115                     	;# 
    97  0116                     	;# 
    98  0117                     	;# 
    99  0118                     	;# 
   100  0119                     	;# 
   101  011A                     	;# 
   102  011B                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  018C                     	;# 
   106  0191                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0194                     	;# 
   113  0195                     	;# 
   114  0196                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019C                     	;# 
   123  019D                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  020C                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0294                     	;# 
   147  0295                     	;# 
   148  0295                     	;# 
   149  0296                     	;# 
   150  0391                     	;# 
   151  0392                     	;# 
   152  0393                     	;# 
   153  039A                     	;# 
   154  039C                     	;# 
   155  039D                     	;# 
   156  039E                     	;# 
   157  039F                     	;# 
   158  0FE4                     	;# 
   159  0FE5                     	;# 
   160  0FE6                     	;# 
   161  0FE7                     	;# 
   162  0FE8                     	;# 
   163  0FE9                     	;# 
   164  0FEA                     	;# 
   165  0FEB                     	;# 
   166  0FED                     	;# 
   167  0FEE                     	;# 
   168  0FEF                     	;# 
   169                           
   170                           	psect	idataCOMMON
   171  0000                     __pidataCOMMON:	
   172                           
   173                           	psect	idataBANK0
   174  008D                     __pidataBANK0:	
   175                           
   176                           ;initializer for _I2C_Array
   177  008D  3448               	retlw	72
   178  008E  3461               	retlw	97
   179  008F  3463               	retlw	99
   180  0090  346B               	retlw	107
   181  0091  3461               	retlw	97
   182  0092  3464               	retlw	100
   183  0093  3461               	retlw	97
   184  0094  3479               	retlw	121
   185  0095  3420               	retlw	32
   186  0096  3450               	retlw	80
   187  0097  3472               	retlw	114
   188  0098  3469               	retlw	105
   189  0099  347A               	retlw	122
   190  009A  3465               	retlw	101
   191  009B  3420               	retlw	32
   192  009C  3432               	retlw	50
   193  009D  3430               	retlw	48
   194  009E  3431               	retlw	49
   195  009F  3438               	retlw	56
   196  00A0  3420               	retlw	32
   197  00A1  3452               	retlw	82
   198  00A2  346F               	retlw	111
   199  00A3  3462               	retlw	98
   200  00A4  346F               	retlw	111
   201  00A5  3474               	retlw	116
   202  00A6  3469               	retlw	105
   203  00A7  3463               	retlw	99
   204  00A8  3473               	retlw	115
   205  00A9  3420               	retlw	32
   206  00AA  343A               	retlw	58
   207  00AB  3429               	retlw	41
   208  00AC  3420               	retlw	32
   209  0018                     _T1CON	set	24
   210  000B                     _INTCON	set	11
   211  000B                     _INTCONbits	set	11
   212  0012                     _PIR2bits	set	18
   213  0011                     _PIR1bits	set	17
   214  0091                     _PIE1bits	set	145
   215  0092                     _PIE2bits	set	146
   216  0095                     _OPTION_REGbits	set	149
   217  008C                     _TRISA	set	140
   218  0099                     _OSCCON	set	153
   219  010C                     _LATAbits	set	268
   220  011D                     _APFCONbits	set	285
   221  018C                     _ANSELA	set	396
   222  0212                     _SSP1ADD	set	530
   223  0217                     _SSP1CON3bits	set	535
   224  0216                     _SSP1CON2bits	set	534
   225  0215                     _SSP1CON1	set	533
   226  0214                     _SSP1STAT	set	532
   227  020C                     _WPUA	set	524
   228  0215                     _SSP1CON1bits	set	533
   229  0211                     _SSP1BUF	set	529
   230  0214                     _SSP1STATbits	set	532
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  0051                     start_initialization:	
   236  0051                     __initialization:	
   237                           
   238                           ;initializer for _first
   239  0051  3001               	movlw	1
   240  0052  00F1               	movwf	__pdataCOMMON& (0+127)
   241                           
   242                           ; Initialize objects allocated to BANK0
   243  0053  308D               	movlw	low __pidataBANK0
   244  0054  0084               	movwf	4
   245  0055  3080               	movlw	(high __pidataBANK0)| (0+128)
   246  0056  0085               	movwf	5
   247  0057  3040               	movlw	low __pdataBANK0
   248  0058  0086               	movwf	6
   249  0059  3000               	movlw	high __pdataBANK0
   250  005A  0087               	movwf	7
   251  005B  3020               	movlw	32
   252  005C  20AD               	fcall	init_ram
   253  005D  3020               	movlw	low __pbssBANK0
   254                           
   255                           ; Clear objects allocated to COMMON
   256  005E  01F0               	clrf	__pbssCOMMON& (0+127)
   257                           
   258                           ; Clear objects allocated to BANK0
   259  005F  0084               	movwf	4
   260  0060  3000               	movlw	high __pbssBANK0
   261  0061  0085               	movwf	5
   262  0062  3020               	movlw	32
   263  0063  20B3               	fcall	clear_ram0
   264  0064                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  0064                     __end_of__initialization:	
   268  0064  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   269  0065  0020               	movlb	0
   270  0066  2867               	ljmp	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMMON
   273  0070                     __pbssCOMMON:	
   274  0070                     _index_i2c:	
   275  0070                     	ds	1
   276                           
   277                           	psect	dataCOMMON
   278  0071                     __pdataCOMMON:	
   279  0071                     _first:	
   280  0071                     	ds	1
   281                           
   282                           	psect	bssBANK0
   283  0020                     __pbssBANK0:	
   284  0020                     _i2c_buffer:	
   285  0020                     	ds	32
   286                           
   287                           	psect	dataBANK0
   288  0040                     __pdataBANK0:	
   289  0040                     _I2C_Array:	
   290  0040                     	ds	32
   291                           
   292                           	psect	inittext
   293  00AD                     init_ram:	
   294  00AD  00FE               	movwf	126
   295  00AE                     initloop:	
   296  00AE  0012               	moviw fsr0++
   297  00AF  001E               	movwi fsr1++
   298  00B0  0BFE               	decfsz	126,f
   299  00B1  28AE               	goto	initloop
   300  00B2  3400               	retlw	0
   301                           
   302                           	psect	clrtext
   303  00B3                     clear_ram0:	
   304                           ;	Called with FSR0 containing the base address, and
   305                           ;	WREG with the size to clear
   306                           
   307  00B3  0064               	clrwdt	;clear the watchdog before getting into this loop
   308  00B4                     clrloop0:	
   309  00B4  0180               	clrf	0	;clear RAM location pointed to by FSR
   310  00B5  3101               	addfsr 0,1
   311  00B6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   312  00B7  28B4               	goto	clrloop0	;have we reached the end yet?
   313  00B8  3400               	retlw	0	;all done for this memory range, return
   314                           
   315                           	psect	cstackCOMMON
   316  0000                     __pcstackCOMMON:	
   317  0000                     ?_isr:	
   318  0000                     ??_isr:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0000                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0000                     ??_main:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           	psect	maintext
   329  0067                     __pmaintext:	
   330                           ; 1 bytes @ 0x0
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 155 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2
   345 ;; Tracked objects:
   346 ;;		On entry : B1F/0
   347 ;;		On exit  : B1F/0
   348 ;;		Unchanged: B00/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1
   350 ;;      Params:         0       0       0
   351 ;;      Locals:         0       0       0
   352 ;;      Temps:          0       0       0
   353 ;;      Totals:         0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels required when called:    1
   356 ;; This function calls:
   357 ;;		Nothing
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           
   364                           ;psect for function _main
   365  0067                     _main:	
   366                           
   367                           ;main.c: 157: OSCCON = 0b11110000;
   368                           
   369                           ;incstack = 0
   370                           ; Regs used in _main: [wreg+status,2]
   371  0067  30F0               	movlw	240
   372  0068  0021               	movlb	1	; select bank1
   373  0069  0099               	movwf	25	;volatile
   374                           
   375                           ;main.c: 158: TRISA = 0b00011110;
   376  006A  301E               	movlw	30
   377  006B  008C               	movwf	12	;volatile
   378                           
   379                           ;main.c: 159: ANSELA = 0b00000000;
   380  006C  0023               	movlb	3	; select bank3
   381  006D  018C               	clrf	12	;volatile
   382                           
   383                           ;main.c: 160: WPUA = 0b00011110;
   384  006E  0024               	movlb	4	; select bank4
   385  006F  008C               	movwf	12	;volatile
   386                           
   387                           ;main.c: 161: OPTION_REGbits.nWPUEN = 0;
   388  0070  0021               	movlb	1	; select bank1
   389  0071  1395               	bcf	21,7	;volatile
   390                           
   391                           ;main.c: 162: APFCONbits.CCP1SEL = 1;
   392  0072  0022               	movlb	2	; select bank2
   393  0073  141D               	bsf	29,0	;volatile
   394                           
   395                           ;main.c: 163: LATAbits.LATA0 = 0;
   396  0074  100C               	bcf	12,0	;volatile
   397                           
   398                           ;main.c: 164: SSP1STAT = 0b10000000;
   399  0075  3080               	movlw	128
   400  0076  0024               	movlb	4	; select bank4
   401  0077  0094               	movwf	20	;volatile
   402                           
   403                           ;main.c: 165: SSP1CON1 = 0b00110110;
   404  0078  3036               	movlw	54
   405  0079  0095               	movwf	21	;volatile
   406                           
   407                           ;main.c: 166: SSP1CON2bits.SEN = 1;
   408  007A  1416               	bsf	22,0	;volatile
   409                           
   410                           ;main.c: 167: SSP1CON3bits.BOEN = 1;
   411  007B  1617               	bsf	23,4	;volatile
   412                           
   413                           ;main.c: 168: SSP1CON3bits.SDAHT = 1;
   414  007C  1597               	bsf	23,3	;volatile
   415                           
   416                           ;main.c: 169: SSP1CON3bits.SBCDE = 1;
   417  007D  1517               	bsf	23,2	;volatile
   418                           
   419                           ;main.c: 170: SSP1ADD = 0x24 << 1;
   420  007E  3048               	movlw	72
   421  007F  0092               	movwf	18	;volatile
   422                           
   423                           ;main.c: 171: PIR1bits.SSP1IF = 0;
   424  0080  0020               	movlb	0	; select bank0
   425  0081  1191               	bcf	17,3	;volatile
   426                           
   427                           ;main.c: 172: PIR2bits.BCL1IF = 0;
   428  0082  1192               	bcf	18,3	;volatile
   429                           
   430                           ;main.c: 173: PIE2bits.BCL1IE = 1;
   431  0083  0021               	movlb	1	; select bank1
   432  0084  1592               	bsf	18,3	;volatile
   433                           
   434                           ;main.c: 174: PIE1bits.SSP1IE = 1;
   435  0085  1591               	bsf	17,3	;volatile
   436                           
   437                           ;main.c: 175: INTCONbits.PEIE = 1;
   438  0086  170B               	bsf	11,6	;volatile
   439                           
   440                           ;main.c: 177: INTCON = 0b01001000;
   441  0087  008B               	movwf	11	;volatile
   442                           
   443                           ;main.c: 178: T1CON = 0b00110100;
   444  0088  3034               	movlw	52
   445  0089  0020               	movlb	0	; select bank0
   446  008A  0098               	movwf	24	;volatile
   447                           
   448                           ;main.c: 181: INTCONbits.GIE = 1;
   449  008B  178B               	bsf	11,7	;volatile
   450  008C                     l77:	
   451                           ;main.c: 184: while(1)
   452                           
   453                           
   454                           ;main.c: 185: {
   455  008C  288C               	goto	l77
   456  008D                     __end_of_main:	
   457                           
   458                           	psect	intentry
   459  0004                     __pintentry:	
   460 ;; *************** function _isr *****************
   461 ;; Defined at:
   462 ;;		line 88 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 1F/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1
   476 ;;      Params:         0       0       0
   477 ;;      Locals:         0       0       0
   478 ;;      Temps:          0       0       0
   479 ;;      Totals:         0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		Interrupt level 1
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489  0004                     _isr:	
   490                           
   491                           ;incstack = 0
   492  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   493                           
   494                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
   495  0005  3180               	pagesel	$
   496                           
   497                           ;main.c: 90: static unsigned char junk = 0;
   498                           ;main.c: 92: if (PIR1bits.SSP1IF)
   499  0006  0020               	movlb	0	; select bank0
   500  0007  1D91               	btfss	17,3	;volatile
   501  0008  2843               	goto	i1l599
   502                           
   503                           ;main.c: 93: {
   504                           ;main.c: 94: if (SSP1STATbits.R_nW)
   505  0009  0024               	movlb	4	; select bank4
   506  000A  1D14               	btfss	20,2	;volatile
   507  000B  2820               	goto	i1l565
   508                           
   509                           ;main.c: 95: {
   510                           ;main.c: 96: if (!SSP1STATbits.D_nA)
   511  000C  1A94               	btfsc	20,5	;volatile
   512  000D  2816               	goto	i1l557
   513                           
   514                           ;main.c: 97: {
   515                           ;main.c: 98: SSP1BUF = I2C_Array[index_i2c++];
   516  000E  0870               	movf	_index_i2c,w
   517  000F  3E40               	addlw	(low (_I2C_Array| 0))& (0+255)
   518  0010  0086               	movwf	6
   519  0011  0187               	clrf	7
   520  0012  0801               	movf	1,w
   521  0013  0091               	movwf	17	;volatile
   522  0014  0AF0               	incf	_index_i2c,f
   523                           
   524                           ;main.c: 99: SSP1CON1bits.CKP = 1;
   525  0015  1615               	bsf	21,4	;volatile
   526  0016                     i1l557:	
   527                           
   528                           ;main.c: 100: }
   529                           ;main.c: 101: if (SSP1STATbits.D_nA)
   530  0016  1E94               	btfss	20,5	;volatile
   531  0017  2820               	goto	i1l565
   532                           
   533                           ;main.c: 102: {
   534                           ;main.c: 103: SSP1BUF = I2C_Array[index_i2c++];
   535  0018  0870               	movf	_index_i2c,w
   536  0019  3E40               	addlw	(low (_I2C_Array| 0))& (0+255)
   537  001A  0086               	movwf	6
   538  001B  0187               	clrf	7
   539  001C  0801               	movf	1,w
   540  001D  0091               	movwf	17	;volatile
   541  001E  0AF0               	incf	_index_i2c,f
   542                           
   543                           ;main.c: 104: SSP1CON1bits.CKP = 1;
   544  001F  1615               	bsf	21,4	;volatile
   545  0020                     i1l565:	
   546                           
   547                           ;main.c: 105: }
   548                           ;main.c: 107: }
   549                           ;main.c: 108: if (!SSP1STATbits.R_nW)
   550  0020  1914               	btfsc	20,2	;volatile
   551  0021  2843               	goto	i1l599
   552                           
   553                           ;main.c: 109: {
   554                           ;main.c: 110: if (!SSP1STATbits.D_nA)
   555  0022  1A94               	btfsc	20,5	;volatile
   556  0023  2828               	goto	i1l575
   557                           
   558                           ;main.c: 111: {
   559                           ;main.c: 112: first = 1;
   560  0024  01F1               	clrf	_first
   561  0025  0AF1               	incf	_first,f
   562                           
   563                           ;main.c: 113: junk = SSP1BUF;
   564  0026  0811               	movf	17,w	;volatile
   565                           
   566                           ;main.c: 114: SSP1CON1bits.CKP = 1;
   567  0027  1615               	bsf	21,4	;volatile
   568  0028                     i1l575:	
   569                           
   570                           ;main.c: 115: }
   571                           ;main.c: 116: if (SSP1STATbits.D_nA)
   572  0028  1E94               	btfss	20,5	;volatile
   573  0029  2843               	goto	i1l599
   574                           
   575                           ;main.c: 117: {
   576                           ;main.c: 118: if (first)
   577  002A  0871               	movf	_first,w
   578  002B  1903               	btfsc	3,2
   579  002C  2831               	goto	i1l583
   580                           
   581                           ;main.c: 119: {
   582                           ;main.c: 120: index_i2c = SSP1BUF;
   583  002D  0811               	movf	17,w	;volatile
   584  002E  00F0               	movwf	_index_i2c
   585                           
   586                           ;main.c: 121: first = 0;
   587  002F  01F1               	clrf	_first
   588                           
   589                           ;main.c: 122: }
   590  0030  283E               	goto	i1l591
   591  0031                     i1l583:	
   592                           
   593                           ;main.c: 124: else
   594                           ;main.c: 125: {
   595                           ;main.c: 126: if (index_i2c < 32)
   596  0031  3020               	movlw	32
   597  0032  0270               	subwf	_index_i2c,w
   598  0033  1803               	skipnc
   599  0034  283D               	goto	i1l589
   600                           
   601                           ;main.c: 127: {
   602                           ;main.c: 128: I2C_Array[index_i2c++] = SSP1BUF;
   603  0035  0870               	movf	_index_i2c,w
   604  0036  3E40               	addlw	(low (_I2C_Array| 0))& (0+255)
   605  0037  0086               	movwf	6
   606  0038  0187               	clrf	7
   607  0039  0811               	movf	17,w	;volatile
   608  003A  0081               	movwf	1
   609  003B  0AF0               	incf	_index_i2c,f
   610                           
   611                           ;main.c: 129: }
   612  003C  283E               	goto	i1l591
   613  003D                     i1l589:	
   614                           
   615                           ;main.c: 130: else
   616                           ;main.c: 131: {
   617                           ;main.c: 132: junk = SSP1BUF;
   618  003D  0811               	movf	17,w	;volatile
   619  003E                     i1l591:	
   620                           
   621                           ;main.c: 133: }
   622                           ;main.c: 134: }
   623                           ;main.c: 135: if (SSP1CON1bits.WCOL)
   624  003E  1F95               	btfss	21,7	;volatile
   625  003F  2842               	goto	i1l597
   626                           
   627                           ;main.c: 136: {
   628                           ;main.c: 137: SSP1CON1bits.WCOL = 0;
   629  0040  1395               	bcf	21,7	;volatile
   630                           
   631                           ;main.c: 138: junk = SSP1BUF;
   632  0041  0811               	movf	17,w	;volatile
   633  0042                     i1l597:	
   634                           
   635                           ;main.c: 139: }
   636                           ;main.c: 140: SSP1CON1bits.CKP = 1;
   637  0042  1615               	bsf	21,4	;volatile
   638  0043                     i1l599:	
   639                           
   640                           ;main.c: 141: }
   641                           ;main.c: 142: }
   642                           ;main.c: 143: }
   643                           ;main.c: 144: if (PIR2bits.BCL1IF)
   644  0043  0020               	movlb	0	; select bank0
   645  0044  1D92               	btfss	18,3	;volatile
   646  0045  284C               	goto	i1l607
   647                           
   648                           ;main.c: 145: {
   649                           ;main.c: 146: junk = SSP1BUF;
   650  0046  0024               	movlb	4	; select bank4
   651  0047  0811               	movf	17,w	;volatile
   652                           
   653                           ;main.c: 147: PIR2bits.BCL1IF = 0;
   654  0048  0020               	movlb	0	; select bank0
   655  0049  1192               	bcf	18,3	;volatile
   656                           
   657                           ;main.c: 148: SSP1CON1bits.CKP = 1;
   658  004A  0024               	movlb	4	; select bank4
   659  004B  1615               	bsf	21,4	;volatile
   660  004C                     i1l607:	
   661                           
   662                           ;main.c: 149: }
   663                           ;main.c: 150: PIR1bits.SSP1IF = 0;
   664  004C  0020               	movlb	0	; select bank0
   665  004D  1191               	bcf	17,3	;volatile
   666  004E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   667  004F  0009               	retfie
   668  0050                     __end_of_isr:	
   669  007E                     btemp	set	126	;btemp
   670  007E                     int$flags	set	126
   671  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       2
    BANK0            80      0      64
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      0       2       2       14.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      42       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      42       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Jul 25 17:02:22 2018

            __CFG_CP$OFF 0000                       l77 008C             __CFG_CPD$OFF 0000  
                    _isr 0004             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     ?_isr 0000                     _WPUA 020C  
           __CFG_WRT$OFF 0000                     _main 0067                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0050            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ??_isr 0000            __CFG_PLLEN$ON 0000  
                  ?_main 0000            __CFG_WDTE$OFF 0000                    _T1CON 0018  
                  i1l607 004C                    i1l557 0016                    i1l565 0020  
                  i1l591 003E                    i1l583 0031                    i1l575 0028  
                  i1l597 0042                    i1l589 003D                    i1l599 0043  
                  _TRISA 008C            __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000  
                  _first 0071                    status 0003                    wtemp0 007E  
             _i2c_buffer 0020          __initialization 0051             __end_of_main 008D  
                 ??_main 0000                   _ANSELA 018C                   _INTCON 000B  
                 _OSCCON 0099           __CFG_STVREN$ON 0000             __pdataCOMMON 0071  
__end_of__initialization 0064           __pcstackCOMMON 0000             __pidataBANK0 008D  
         _OPTION_REGbits 0095               __pbssBANK0 0020               __pmaintext 0067  
             __pintentry 0004                  _SSP1ADD 0212                  _SSP1BUF 0211  
              _I2C_Array 0040             __size_of_isr 004C                  clrloop0 00B4  
   end_of_initialization 0064                  init_ram 00AD                  initloop 00AE  
       __CFG_FOSC$INTOSC 0000            __pidataCOMMON 0000      start_initialization 0051  
            __end_of_isr 0050              __pdataBANK0 0040              __pbssCOMMON 0070  
              ___latbits 0000                _index_i2c 0070                 _LATAbits 010C  
              clear_ram0 00B3                 _PIE1bits 0091                 _PIE2bits 0092  
               _PIR1bits 0011                 _PIR2bits 0012                 _SSP1CON1 0215  
               _SSP1STAT 0214               _APFCONbits 011D             _SSP1CON1bits 0215  
           _SSP1CON2bits 0216             _SSP1CON3bits 0217            __size_of_main 0026  
               int$flags 007E             _SSP1STATbits 0214               _INTCONbits 000B  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
