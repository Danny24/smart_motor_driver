

Microchip Technology PIC PRO Macro Assembler V1.43 build -156212558 
                                                                                               Mon Sep 03 19:35:31 2018

Microchip Technology Omniscient Code Generator v1.43 (PRO mode) build 201707250354
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.43
    16                           ; Generated 25/07/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F1840 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  008C                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0095                     	;# 
    79  0096                     	;# 
    80  0097                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  010C                     	;# 
    90  0111                     	;# 
    91  0112                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011A                     	;# 
    98  011B                     	;# 
    99  011D                     	;# 
   100  011D                     	;# 
   101  018C                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0194                     	;# 
   109  0195                     	;# 
   110  0196                     	;# 
   111  0197                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019C                     	;# 
   119  019C                     	;# 
   120  019D                     	;# 
   121  019E                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  0291                     	;# 
   140  0291                     	;# 
   141  0292                     	;# 
   142  0293                     	;# 
   143  0294                     	;# 
   144  0295                     	;# 
   145  0295                     	;# 
   146  0296                     	;# 
   147  0391                     	;# 
   148  0392                     	;# 
   149  0393                     	;# 
   150  039A                     	;# 
   151  039C                     	;# 
   152  039D                     	;# 
   153  039E                     	;# 
   154  039F                     	;# 
   155  0FE4                     	;# 
   156  0FE5                     	;# 
   157  0FE6                     	;# 
   158  0FE7                     	;# 
   159  0FE8                     	;# 
   160  0FE9                     	;# 
   161  0FEA                     	;# 
   162  0FEB                     	;# 
   163  0FED                     	;# 
   164  0FEE                     	;# 
   165  0FEF                     	;# 
   166                           
   167                           	psect	idataCOMMON
   168  0000                     __pidataCOMMON:	
   169  0018                     _T1CON	set	24
   170  000B                     _INTCON	set	11
   171  000B                     _INTCONbits	set	11
   172  0012                     _PIR2bits	set	18
   173  0011                     _PIR1bits	set	17
   174  0091                     _PIE1bits	set	145
   175  0092                     _PIE2bits	set	146
   176  0095                     _OPTION_REGbits	set	149
   177  008C                     _TRISA	set	140
   178  0099                     _OSCCON	set	153
   179  010C                     _LATAbits	set	268
   180  011D                     _APFCONbits	set	285
   181  018C                     _ANSELA	set	396
   182  0212                     _SSP1ADD	set	530
   183  0217                     _SSP1CON3bits	set	535
   184  0216                     _SSP1CON2bits	set	534
   185  0215                     _SSP1CON1	set	533
   186  0214                     _SSP1STAT	set	532
   187  020C                     _WPUA	set	524
   188  0215                     _SSP1CON1bits	set	533
   189  0211                     _SSP1BUF	set	529
   190  0214                     _SSP1STATbits	set	532
   191                           
   192                           ; #config settings
   193  0000                     
   194                           	psect	cinit
   195  0053                     start_initialization:	
   196  0053                     __initialization:	
   197                           
   198                           ;initializer for _first_i2c
   199  0053  3001               	movlw	1
   200  0054  00F1               	movwf	__pdataCOMMON& (0+127)
   201  0055  3020               	movlw	low __pbssBANK0
   202                           
   203                           ; Clear objects allocated to COMMON
   204  0056  01F0               	clrf	__pbssCOMMON& (0+127)
   205                           
   206                           ; Clear objects allocated to BANK0
   207  0057  0084               	movwf	4
   208  0058  3000               	movlw	high __pbssBANK0
   209  0059  0085               	movwf	5
   210  005A  302B               	movlw	43
   211  005B  3180  20DE  3180   	fcall	clear_ram0
   212  005E                     end_of_initialization:	
   213                           ;End of C runtime variable initialization code
   214                           
   215  005E                     __end_of__initialization:	
   216  005E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   217  005F  0020               	movlb	0
   218  0060  2861               	ljmp	_main	;jump to C main() function
   219  0061                     __pmaintext:	
   220                           ; 1 bytes @ 0x0
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 162 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0, pclath, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : B1F/0
   237 ;;		On exit  : B1F/0
   238 ;;		Unchanged: B00/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   240 ;;      Params:         0       0       0       0
   241 ;;      Locals:         0       0       0       0
   242 ;;      Temps:          0       0       0       0
   243 ;;      Totals:         0       0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels required when called:    2
   246 ;; This function calls:
   247 ;;		_init_I2C_buffer
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  0061                     _main:	
   256                           
   257                           ;main.c: 164: OSCCON = 0b11110000;
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   261  0061  30F0               	movlw	240
   262  0062  0021               	movlb	1	; select bank1
   263  0063  0099               	movwf	25	;volatile
   264                           
   265                           ;main.c: 165: init_I2C_buffer();
   266  0064  208D  3180         	fcall	_init_I2C_buffer
   267                           
   268                           ;main.c: 166: TRISA = 0b00011110;
   269  0066  301E               	movlw	30
   270  0067  0021               	movlb	1	; select bank1
   271  0068  008C               	movwf	12	;volatile
   272                           
   273                           ;main.c: 167: ANSELA = 0b00000000;
   274  0069  0023               	movlb	3	; select bank3
   275  006A  018C               	clrf	12	;volatile
   276                           
   277                           ;main.c: 168: WPUA = 0b00011110;
   278  006B  0024               	movlb	4	; select bank4
   279  006C  008C               	movwf	12	;volatile
   280                           
   281                           ;main.c: 169: OPTION_REGbits.nWPUEN = 0;
   282  006D  0021               	movlb	1	; select bank1
   283  006E  1395               	bcf	21,7	;volatile
   284                           
   285                           ;main.c: 170: APFCONbits.CCP1SEL = 1;
   286  006F  0022               	movlb	2	; select bank2
   287  0070  141D               	bsf	29,0	;volatile
   288                           
   289                           ;main.c: 171: LATAbits.LATA0 = 0;
   290  0071  100C               	bcf	12,0	;volatile
   291                           
   292                           ;main.c: 172: SSP1STAT = 0b10000000;
   293  0072  3080               	movlw	128
   294  0073  0024               	movlb	4	; select bank4
   295  0074  0094               	movwf	20	;volatile
   296                           
   297                           ;main.c: 173: SSP1CON1 = 0b00110110;
   298  0075  3036               	movlw	54
   299  0076  0095               	movwf	21	;volatile
   300                           
   301                           ;main.c: 174: SSP1CON2bits.SEN = 1;
   302  0077  1416               	bsf	22,0	;volatile
   303                           
   304                           ;main.c: 175: SSP1CON3bits.BOEN = 1;
   305  0078  1617               	bsf	23,4	;volatile
   306                           
   307                           ;main.c: 176: SSP1CON3bits.SDAHT = 1;
   308  0079  1597               	bsf	23,3	;volatile
   309                           
   310                           ;main.c: 177: SSP1CON3bits.SBCDE = 1;
   311  007A  1517               	bsf	23,2	;volatile
   312                           
   313                           ;main.c: 178: SSP1ADD = I2C_buffer.data.ADDRESS;
   314  007B  0020               	movlb	0	; select bank0
   315  007C  0821               	movf	_I2C_buffer+1,w	;volatile
   316  007D  0024               	movlb	4	; select bank4
   317  007E  0092               	movwf	18	;volatile
   318                           
   319                           ;main.c: 179: PIR1bits.SSP1IF = 0;
   320  007F  0020               	movlb	0	; select bank0
   321  0080  1191               	bcf	17,3	;volatile
   322                           
   323                           ;main.c: 180: PIR2bits.BCL1IF = 0;
   324  0081  1192               	bcf	18,3	;volatile
   325                           
   326                           ;main.c: 181: PIE2bits.BCL1IE = 1;
   327  0082  0021               	movlb	1	; select bank1
   328  0083  1592               	bsf	18,3	;volatile
   329                           
   330                           ;main.c: 182: PIE1bits.SSP1IE = 1;
   331  0084  1591               	bsf	17,3	;volatile
   332                           
   333                           ;main.c: 183: INTCONbits.PEIE = 1;
   334  0085  170B               	bsf	11,6	;volatile
   335                           
   336                           ;main.c: 185: INTCON = 0b01001000;
   337  0086  3048               	movlw	72
   338  0087  008B               	movwf	11	;volatile
   339                           
   340                           ;main.c: 186: T1CON = 0b00110100;
   341  0088  3034               	movlw	52
   342  0089  0020               	movlb	0	; select bank0
   343  008A  0098               	movwf	24	;volatile
   344                           
   345                           ;main.c: 189: INTCONbits.GIE = 1;
   346  008B  178B               	bsf	11,7	;volatile
   347  008C                     l80:	
   348                           ;main.c: 191: while(1)
   349                           
   350                           
   351                           ;main.c: 192: {
   352  008C  288C               	goto	l80
   353  008D                     __end_of_main:	
   354  008D                     __ptext1:	
   355 ;; *************** function _init_I2C_buffer *****************
   356 ;; Defined at:
   357 ;;		line 138 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2
   366 ;; Tracked objects:
   367 ;;		On entry : B1F/1
   368 ;;		On exit  : B1F/0
   369 ;;		Unchanged: B00/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   371 ;;      Params:         0       0       0       0
   372 ;;      Locals:         0       0       0       0
   373 ;;      Temps:          0       0       0       0
   374 ;;      Totals:         0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; Hardware stack levels required when called:    1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           
   386                           ;psect for function _init_I2C_buffer
   387  008D                     _init_I2C_buffer:	
   388                           
   389                           ;main.c: 140: I2C_buffer.data.ID = 0xF3;
   390                           
   391                           ;incstack = 0
   392                           ; Regs used in _init_I2C_buffer: [wreg+status,2]
   393  008D  30F3               	movlw	243
   394  008E  0020               	movlb	0	; select bank0
   395  008F  00A0               	movwf	_I2C_buffer	;volatile
   396                           
   397                           ;main.c: 141: I2C_buffer.data.ADDRESS = 0x24 << 1;
   398  0090  3048               	movlw	72
   399  0091  00A1               	movwf	_I2C_buffer+1	;volatile
   400                           
   401                           ;main.c: 142: I2C_buffer.data.START_STOP = 0;
   402  0092  01A2               	clrf	_I2C_buffer+2	;volatile
   403                           
   404                           ;main.c: 143: I2C_buffer.data.IOWPU = 1;
   405  0093  3001               	movlw	1
   406  0094  00A3               	movwf	_I2C_buffer+3	;volatile
   407                           
   408                           ;main.c: 144: I2C_buffer.data.MODE = 5;
   409  0095  3005               	movlw	5
   410  0096  00A4               	movwf	_I2C_buffer+4	;volatile
   411                           
   412                           ;main.c: 145: I2C_buffer.data.SAVE = 0;
   413  0097  01A5               	clrf	_I2C_buffer+5	;volatile
   414                           
   415                           ;main.c: 146: I2C_buffer.data.RESET = 0;
   416  0098  01A6               	clrf	_I2C_buffer+6	;volatile
   417                           
   418                           ;main.c: 147: I2C_buffer.data.GEAR_RATIO = 150;
   419  0099  3096               	movlw	150
   420  009A  00A7               	movwf	_I2C_buffer+7	;volatile
   421  009B  01A8               	clrf	_I2C_buffer+8	;volatile
   422                           
   423                           ;main.c: 148: I2C_buffer.data.DIAMETER = 42;
   424  009C  302A               	movlw	42
   425  009D  00A9               	movwf	_I2C_buffer+9	;volatile
   426  009E  01AA               	clrf	_I2C_buffer+10	;volatile
   427                           
   428                           ;main.c: 149: I2C_buffer.data.RPM = 1200;
   429  009F  3004               	movlw	4
   430  00A0  00AC               	movwf	_I2C_buffer+12	;volatile
   431  00A1  30B0               	movlw	176
   432  00A2  00AB               	movwf	_I2C_buffer+11	;volatile
   433                           
   434                           ;main.c: 150: I2C_buffer.data.SPEED = 1150;
   435  00A3  3004               	movlw	4
   436  00A4  00AE               	movwf	_I2C_buffer+14	;volatile
   437  00A5  307E               	movlw	126
   438  00A6  00AD               	movwf	_I2C_buffer+13	;volatile
   439                           
   440                           ;main.c: 151: I2C_buffer.data.DISTANCE = 5555;
   441  00A7  3000               	movlw	0
   442  00A8  00B2               	movwf	_I2C_buffer+18	;volatile
   443  00A9  00B1               	movwf	_I2C_buffer+17	;volatile
   444  00AA  3015               	movlw	21
   445  00AB  00B0               	movwf	_I2C_buffer+16	;volatile
   446  00AC  30B3               	movlw	179
   447  00AD  00AF               	movwf	_I2C_buffer+15	;volatile
   448                           
   449                           ;main.c: 152: I2C_buffer.data.RPM_PID_KP = 0.1;
   450  00AE  303D               	movlw	61
   451  00AF  00B6               	movwf	_I2C_buffer+22	;volatile
   452  00B0  30CC               	movlw	204
   453  00B1  00B5               	movwf	_I2C_buffer+21	;volatile
   454  00B2  00B4               	movwf	_I2C_buffer+20	;volatile
   455  00B3  30CD               	movlw	205
   456  00B4  00B3               	movwf	_I2C_buffer+19	;volatile
   457                           
   458                           ;main.c: 153: I2C_buffer.data.RPM_PID_KD = 0.01;
   459  00B5  303C               	movlw	60
   460  00B6  00BA               	movwf	_I2C_buffer+26	;volatile
   461  00B7  3023               	movlw	35
   462  00B8  00B9               	movwf	_I2C_buffer+25	;volatile
   463  00B9  30D7               	movlw	215
   464  00BA  00B8               	movwf	_I2C_buffer+24	;volatile
   465  00BB  300A               	movlw	10
   466  00BC  00B7               	movwf	_I2C_buffer+23	;volatile
   467                           
   468                           ;main.c: 154: I2C_buffer.data.RPM_PID_KI = 0.04;
   469  00BD  303D               	movlw	61
   470  00BE  00BE               	movwf	_I2C_buffer+30	;volatile
   471  00BF  3023               	movlw	35
   472  00C0  00BD               	movwf	_I2C_buffer+29	;volatile
   473  00C1  30D7               	movlw	215
   474  00C2  00BC               	movwf	_I2C_buffer+28	;volatile
   475  00C3  300A               	movlw	10
   476  00C4  00BB               	movwf	_I2C_buffer+27	;volatile
   477                           
   478                           ;main.c: 155: I2C_buffer.data.ATS_PID_KP = 0.15;
   479  00C5  303E               	movlw	62
   480  00C6  00C2               	movwf	_I2C_buffer+34	;volatile
   481  00C7  3019               	movlw	25
   482  00C8  00C1               	movwf	_I2C_buffer+33	;volatile
   483  00C9  3099               	movlw	153
   484  00CA  00C0               	movwf	_I2C_buffer+32	;volatile
   485  00CB  309A               	movlw	154
   486  00CC  00BF               	movwf	_I2C_buffer+31	;volatile
   487                           
   488                           ;main.c: 156: I2C_buffer.data.ATS_PID_KD = 0.08;
   489  00CD  303D               	movlw	61
   490  00CE  00C6               	movwf	_I2C_buffer+38	;volatile
   491  00CF  30A3               	movlw	163
   492  00D0  00C5               	movwf	_I2C_buffer+37	;volatile
   493  00D1  30D7               	movlw	215
   494  00D2  00C4               	movwf	_I2C_buffer+36	;volatile
   495  00D3  300A               	movlw	10
   496  00D4  00C3               	movwf	_I2C_buffer+35	;volatile
   497                           
   498                           ;main.c: 157: I2C_buffer.data.ATS_PID_KI = 0.03;
   499  00D5  303C               	movlw	60
   500  00D6  00CA               	movwf	_I2C_buffer+42	;volatile
   501  00D7  30F5               	movlw	245
   502  00D8  00C9               	movwf	_I2C_buffer+41	;volatile
   503  00D9  30C2               	movlw	194
   504  00DA  00C8               	movwf	_I2C_buffer+40	;volatile
   505  00DB  308F               	movlw	143
   506  00DC  00C7               	movwf	_I2C_buffer+39	;volatile
   507  00DD  0008               	return
   508  00DE                     __end_of_init_I2C_buffer:	
   509                           
   510                           	psect	bssCOMMON
   511  0070                     __pbssCOMMON:	
   512  0070                     _index_i2c:	
   513  0070                     	ds	1
   514                           
   515                           	psect	dataCOMMON
   516  0071                     __pdataCOMMON:	
   517  0071                     _first_i2c:	
   518  0071                     	ds	1
   519                           
   520                           	psect	bssBANK0
   521  0020                     __pbssBANK0:	
   522  0020                     _I2C_buffer:	
   523  0020                     	ds	43
   524                           
   525                           	psect	clrtext
   526  00DE                     clear_ram0:	
   527                           ;	Called with FSR0 containing the base address, and
   528                           ;	WREG with the size to clear
   529                           
   530  00DE  0064               	clrwdt	;clear the watchdog before getting into this loop
   531  00DF                     clrloop0:	
   532  00DF  0180               	clrf	0	;clear RAM location pointed to by FSR
   533  00E0  3101               	addfsr 0,1
   534  00E1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   535  00E2  28DF               	goto	clrloop0	;have we reached the end yet?
   536  00E3  3400               	retlw	0	;all done for this memory range, return
   537                           
   538                           	psect	cstackCOMMON
   539  0000                     __pcstackCOMMON:	
   540  0000                     ?_isr:	
   541  0000                     ??_isr:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0000                     ?_init_I2C_buffer:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0000                     ??_init_I2C_buffer:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0000                     ?_main:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0000                     ??_main:	
   554                           ; 1 bytes @ 0x0
   555                           
   556                           
   557                           	psect	intentry
   558  0004                     __pintentry:	
   559 ;; *************** function _isr *****************
   560 ;; Defined at:
   561 ;;		line 72 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 1F/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   575 ;;      Params:         0       0       0       0
   576 ;;      Locals:         0       0       0       0
   577 ;;      Temps:          0       0       0       0
   578 ;;      Totals:         0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		Interrupt level 1
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588  0004                     _isr:	
   589                           
   590                           ;incstack = 0
   591  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   592                           
   593                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
   594  0005  3180               	pagesel	$
   595                           
   596                           ;main.c: 74: static unsigned char junk = 0;
   597                           ;main.c: 76: if (PIR1bits.SSP1IF)
   598  0006  0020               	movlb	0	; select bank0
   599  0007  1D91               	btfss	17,3	;volatile
   600  0008  2845               	goto	i1l669
   601                           
   602                           ;main.c: 77: {
   603                           ;main.c: 78: if (SSP1STATbits.R_nW)
   604  0009  0024               	movlb	4	; select bank4
   605  000A  1D14               	btfss	20,2	;volatile
   606  000B  2820               	goto	i1l633
   607                           
   608                           ;main.c: 79: {
   609                           ;main.c: 80: if (!SSP1STATbits.D_nA)
   610  000C  1A94               	btfsc	20,5	;volatile
   611  000D  2816               	goto	i1l625
   612                           
   613                           ;main.c: 81: {
   614                           ;main.c: 82: SSP1BUF = I2C_buffer.byte[index_i2c++];
   615  000E  0870               	movf	_index_i2c,w
   616  000F  3E20               	addlw	(low (_I2C_buffer| 0))& (0+255)
   617  0010  0086               	movwf	6
   618  0011  0187               	clrf	7
   619  0012  0801               	movf	1,w
   620  0013  0091               	movwf	17	;volatile
   621  0014  0AF0               	incf	_index_i2c,f
   622                           
   623                           ;main.c: 83: SSP1CON1bits.CKP = 1;
   624  0015  1615               	bsf	21,4	;volatile
   625  0016                     i1l625:	
   626                           
   627                           ;main.c: 84: }
   628                           ;main.c: 85: if (SSP1STATbits.D_nA)
   629  0016  1E94               	btfss	20,5	;volatile
   630  0017  2820               	goto	i1l633
   631                           
   632                           ;main.c: 86: {
   633                           ;main.c: 87: SSP1BUF = I2C_buffer.byte[index_i2c++];
   634  0018  0870               	movf	_index_i2c,w
   635  0019  3E20               	addlw	(low (_I2C_buffer| 0))& (0+255)
   636  001A  0086               	movwf	6
   637  001B  0187               	clrf	7
   638  001C  0801               	movf	1,w
   639  001D  0091               	movwf	17	;volatile
   640  001E  0AF0               	incf	_index_i2c,f
   641                           
   642                           ;main.c: 88: SSP1CON1bits.CKP = 1;
   643  001F  1615               	bsf	21,4	;volatile
   644  0020                     i1l633:	
   645                           
   646                           ;main.c: 89: }
   647                           ;main.c: 91: }
   648                           ;main.c: 92: if (!SSP1STATbits.R_nW)
   649  0020  1914               	btfsc	20,2	;volatile
   650  0021  2843               	goto	i1l667
   651                           
   652                           ;main.c: 93: {
   653                           ;main.c: 94: if (!SSP1STATbits.D_nA)
   654  0022  1A94               	btfsc	20,5	;volatile
   655  0023  2828               	goto	i1l643
   656                           
   657                           ;main.c: 95: {
   658                           ;main.c: 96: first_i2c = 1;
   659  0024  01F1               	clrf	_first_i2c
   660  0025  0AF1               	incf	_first_i2c,f
   661                           
   662                           ;main.c: 97: junk = SSP1BUF;
   663  0026  0811               	movf	17,w	;volatile
   664                           
   665                           ;main.c: 98: SSP1CON1bits.CKP = 1;
   666  0027  1615               	bsf	21,4	;volatile
   667  0028                     i1l643:	
   668                           
   669                           ;main.c: 99: }
   670                           ;main.c: 100: if (SSP1STATbits.D_nA)
   671  0028  1E94               	btfss	20,5	;volatile
   672  0029  2843               	goto	i1l667
   673                           
   674                           ;main.c: 101: {
   675                           ;main.c: 102: if (first_i2c)
   676  002A  0871               	movf	_first_i2c,w
   677  002B  1903               	btfsc	3,2
   678  002C  2831               	goto	i1l651
   679                           
   680                           ;main.c: 103: {
   681                           ;main.c: 104: index_i2c = SSP1BUF;
   682  002D  0811               	movf	17,w	;volatile
   683  002E  00F0               	movwf	_index_i2c
   684                           
   685                           ;main.c: 105: first_i2c = 0;
   686  002F  01F1               	clrf	_first_i2c
   687                           
   688                           ;main.c: 106: }
   689  0030  283E               	goto	i1l659
   690  0031                     i1l651:	
   691                           
   692                           ;main.c: 108: else
   693                           ;main.c: 109: {
   694                           ;main.c: 110: if (index_i2c < RX_ELMNTS)
   695  0031  302B               	movlw	43
   696  0032  0270               	subwf	_index_i2c,w
   697  0033  1803               	skipnc
   698  0034  283D               	goto	i1l657
   699                           
   700                           ;main.c: 111: {
   701                           ;main.c: 112: I2C_buffer.byte[index_i2c++] = SSP1BUF;
   702  0035  0870               	movf	_index_i2c,w
   703  0036  3E20               	addlw	(low (_I2C_buffer| 0))& (0+255)
   704  0037  0086               	movwf	6
   705  0038  0187               	clrf	7
   706  0039  0811               	movf	17,w	;volatile
   707  003A  0081               	movwf	1
   708  003B  0AF0               	incf	_index_i2c,f
   709                           
   710                           ;main.c: 113: }
   711  003C  283E               	goto	i1l659
   712  003D                     i1l657:	
   713                           
   714                           ;main.c: 114: else
   715                           ;main.c: 115: {
   716                           ;main.c: 116: junk = SSP1BUF;
   717  003D  0811               	movf	17,w	;volatile
   718  003E                     i1l659:	
   719                           
   720                           ;main.c: 117: }
   721                           ;main.c: 118: }
   722                           ;main.c: 119: if (SSP1CON1bits.WCOL)
   723  003E  1F95               	btfss	21,7	;volatile
   724  003F  2842               	goto	i1l665
   725                           
   726                           ;main.c: 120: {
   727                           ;main.c: 121: SSP1CON1bits.WCOL = 0;
   728  0040  1395               	bcf	21,7	;volatile
   729                           
   730                           ;main.c: 122: junk = SSP1BUF;
   731  0041  0811               	movf	17,w	;volatile
   732  0042                     i1l665:	
   733                           
   734                           ;main.c: 123: }
   735                           ;main.c: 124: SSP1CON1bits.CKP = 1;
   736  0042  1615               	bsf	21,4	;volatile
   737  0043                     i1l667:	
   738                           
   739                           ;main.c: 125: }
   740                           ;main.c: 126: }
   741                           ;main.c: 127: PIR1bits.SSP1IF = 0;
   742  0043  0020               	movlb	0	; select bank0
   743  0044  1191               	bcf	17,3	;volatile
   744  0045                     i1l669:	
   745                           
   746                           ;main.c: 128: }
   747                           ;main.c: 129: if (PIR2bits.BCL1IF)
   748  0045  1D92               	btfss	18,3	;volatile
   749  0046  284F               	goto	i1l72
   750                           
   751                           ;main.c: 130: {
   752                           ;main.c: 131: junk = SSP1BUF;
   753  0047  0024               	movlb	4	; select bank4
   754  0048  0811               	movf	17,w	;volatile
   755                           
   756                           ;main.c: 132: PIR2bits.BCL1IF = 0;
   757  0049  0020               	movlb	0	; select bank0
   758  004A  1192               	bcf	18,3	;volatile
   759                           
   760                           ;main.c: 133: SSP1CON1bits.CKP = 1;
   761  004B  0024               	movlb	4	; select bank4
   762  004C  1615               	bsf	21,4	;volatile
   763                           
   764                           ;main.c: 134: PIR1bits.SSP1IF = 0;
   765  004D  0020               	movlb	0	; select bank0
   766  004E  1191               	bcf	17,3	;volatile
   767  004F                     i1l72:	
   768  004F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   769  0050  0009               	retfie
   770  0051                     __end_of_isr:	
   771  007E                     btemp	set	126	;btemp
   772  007E                     int$flags	set	126
   773  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       2
    BANK0            80      0      43
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                    _init_I2C_buffer
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_I2C_buffer

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      0       2       2       14.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      2D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Sep 03 19:35:31 2018

             __CFG_CP$OFF 0000                        l80 008C              __CFG_CPD$OFF 0000  
                     _isr 0004              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_LVP$OFF 0000                      ?_isr 0000                      i1l72 004F  
                    _WPUA 020C              __CFG_WRT$OFF 0000                      _main 0061  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 0051  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ??_isr 0000  
           __CFG_PLLEN$ON 0000                     ?_main 0000             __CFG_WDTE$OFF 0000  
                   _T1CON 0018                     i1l625 0016                     i1l633 0020  
                   i1l651 0031                     i1l643 0028                     i1l665 0042  
                   i1l657 003D                     i1l659 003E                     i1l667 0043  
                   i1l669 0045                     _TRISA 008C             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000                     status 0003                     wtemp0 007E  
         __initialization 0053              __end_of_main 008D                    ??_main 0000  
                  _ANSELA 018C                    _INTCON 000B                    _OSCCON 0099  
          __CFG_STVREN$ON 0000  __size_of_init_I2C_buffer 0051              __pdataCOMMON 0071  
 __end_of__initialization 005E            __pcstackCOMMON 0000            _OPTION_REGbits 0095  
              __pbssBANK0 0020                __pmaintext 0061                __pintentry 0004  
                 _SSP1ADD 0212                   _SSP1BUF 0211         ??_init_I2C_buffer 0000  
                 __ptext1 008D              __size_of_isr 004D                   clrloop0 00DF  
    end_of_initialization 005E          __CFG_FOSC$INTOSC 0000             __pidataCOMMON 0000  
     start_initialization 0053               __end_of_isr 0051           _init_I2C_buffer 008D  
             __pbssCOMMON 0070                 ___latbits 0001                 _first_i2c 0071  
               _index_i2c 0070                  _LATAbits 010C                 clear_ram0 00DE  
                _PIE1bits 0091                  _PIE2bits 0092                  _PIR1bits 0011  
                _PIR2bits 0012   __end_of_init_I2C_buffer 00DE                  _SSP1CON1 0215  
                _SSP1STAT 0214                _I2C_buffer 0020                _APFCONbits 011D  
            _SSP1CON1bits 0215              _SSP1CON2bits 0216              _SSP1CON3bits 0217  
           __size_of_main 002C          ?_init_I2C_buffer 0000                  int$flags 007E  
            _SSP1STATbits 0214                _INTCONbits 000B                  intlevel1 0000  
       __CFG_CLKOUTEN$OFF 0000  
